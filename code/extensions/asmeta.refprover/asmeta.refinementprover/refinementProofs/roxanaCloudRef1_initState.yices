(define-type Device(scalar device1 device2 device3 DeviceUNDEF))
(define-type State(scalar WAITING_FOR_MESSAGE EXECUTE_CLIENT_TESTS CHECKING_FOR_EXTRA_RESOURCES DISPLAYING_THE_MESSAGE StateUNDEF))
;; functions - state 0
(define state0::(-> (subtype (v::Device) (/= v DeviceUNDEF)) State))
(define extraResources0::(-> (subtype (v::Device) (/= v DeviceUNDEF)) bool))
(define messageArrived0::(-> (subtype (v::Device) (/= v DeviceUNDEF)) bool))
(define clientTestsAvailable0::(-> (subtype (v::Device) (/= v DeviceUNDEF)) bool))
;; initial state
(assert (and (= (state0 device1) WAITING_FOR_MESSAGE) (= (state0 device2) WAITING_FOR_MESSAGE) (= (state0 device3) WAITING_FOR_MESSAGE)))
(check)
;; sat
(define-type Key(scalar CANVAS TEXTSHADOW AUDIO FAIL_EX KeyUNDEF))
(define-type SubKey(scalar OGG MP3 SubKeyUNDEF))
(define-type MyBoolDom(scalar YES NO MyBoolDomUNDEF))
;; functions - state 0
(define stater0::(-> (subtype (v::Device) (/= v DeviceUNDEF)) State))
(define modernizrr0::(-> (subtype (v::Device) (/= v DeviceUNDEF)) (subtype (v::Key) (/= v KeyUNDEF)) MyBoolDom))
(define modernizrSubr0::(-> (subtype (v::Device) (/= v DeviceUNDEF)) (subtype (v::Key) (/= v KeyUNDEF)) (subtype (v::SubKey) (/= v SubKeyUNDEF)) MyBoolDom))
(define cookier0::(-> (subtype (v::Device) (/= v DeviceUNDEF)) (subtype (v::Key) (/= v KeyUNDEF)) MyBoolDom))
(define cookieSubr0::(-> (subtype (v::Device) (/= v DeviceUNDEF)) (subtype (v::Key) (/= v KeyUNDEF)) (subtype (v::SubKey) (/= v SubKeyUNDEF)) MyBoolDom))
(define keyParentalRelr0::(-> (subtype (v::Key) (/= v KeyUNDEF)) (subtype (v::SubKey) (/= v SubKeyUNDEF)) bool))
(define extraResourcesr0::(-> (subtype (v::Device) (/= v DeviceUNDEF)) bool))
(define messageArrivedr0::(-> (subtype (v::Device) (/= v DeviceUNDEF)) bool))
(define clientTestsAvailabler0::(-> (subtype (v::Device) (/= v DeviceUNDEF)) bool))
;; initial state
(assert (and (= (stater0 device1) WAITING_FOR_MESSAGE) (= (stater0 device2) WAITING_FOR_MESSAGE) (= (stater0 device3) WAITING_FOR_MESSAGE)))
(assert (and (= (modernizrr0 device1 CANVAS) MyBoolDomUNDEF) (= (modernizrr0 device1 TEXTSHADOW) MyBoolDomUNDEF) (= (modernizrr0 device1 AUDIO) MyBoolDomUNDEF) (= (modernizrr0 device1 FAIL_EX) MyBoolDomUNDEF) (= (modernizrr0 device2 CANVAS) YES) (= (modernizrr0 device2 TEXTSHADOW) NO) (= (modernizrr0 device2 AUDIO) YES) (= (modernizrr0 device2 FAIL_EX) MyBoolDomUNDEF) (= (modernizrr0 device3 CANVAS) MyBoolDomUNDEF) (= (modernizrr0 device3 TEXTSHADOW) MyBoolDomUNDEF) (= (modernizrr0 device3 AUDIO) MyBoolDomUNDEF) (= (modernizrr0 device3 FAIL_EX) MyBoolDomUNDEF)))
(assert (and (= (modernizrSubr0 device1 CANVAS OGG) MyBoolDomUNDEF) (= (modernizrSubr0 device1 CANVAS MP3) MyBoolDomUNDEF) (= (modernizrSubr0 device1 TEXTSHADOW OGG) MyBoolDomUNDEF) (= (modernizrSubr0 device1 TEXTSHADOW MP3) MyBoolDomUNDEF) (= (modernizrSubr0 device1 AUDIO OGG) MyBoolDomUNDEF) (= (modernizrSubr0 device1 AUDIO MP3) MyBoolDomUNDEF) (= (modernizrSubr0 device1 FAIL_EX OGG) MyBoolDomUNDEF) (= (modernizrSubr0 device1 FAIL_EX MP3) MyBoolDomUNDEF) (= (modernizrSubr0 device2 CANVAS OGG) MyBoolDomUNDEF) (= (modernizrSubr0 device2 CANVAS MP3) MyBoolDomUNDEF) (= (modernizrSubr0 device2 TEXTSHADOW OGG) MyBoolDomUNDEF) (= (modernizrSubr0 device2 TEXTSHADOW MP3) MyBoolDomUNDEF) (= (modernizrSubr0 device2 AUDIO OGG) NO) (= (modernizrSubr0 device2 AUDIO MP3) YES) (= (modernizrSubr0 device2 FAIL_EX OGG) MyBoolDomUNDEF) (= (modernizrSubr0 device2 FAIL_EX MP3) MyBoolDomUNDEF) (= (modernizrSubr0 device3 CANVAS OGG) MyBoolDomUNDEF) (= (modernizrSubr0 device3 CANVAS MP3) MyBoolDomUNDEF) (= (modernizrSubr0 device3 TEXTSHADOW OGG) MyBoolDomUNDEF) (= (modernizrSubr0 device3 TEXTSHADOW MP3) MyBoolDomUNDEF) (= (modernizrSubr0 device3 AUDIO OGG) MyBoolDomUNDEF) (= (modernizrSubr0 device3 AUDIO MP3) MyBoolDomUNDEF) (= (modernizrSubr0 device3 FAIL_EX OGG) MyBoolDomUNDEF) (= (modernizrSubr0 device3 FAIL_EX MP3) MyBoolDomUNDEF)))
;; derived functions definitions - state 0
(assert (and (= (keyParentalRelr0 CANVAS OGG) false) (= (keyParentalRelr0 CANVAS MP3) false) (= (keyParentalRelr0 TEXTSHADOW OGG) false) (= (keyParentalRelr0 TEXTSHADOW MP3) false) (= (keyParentalRelr0 AUDIO OGG) true) (= (keyParentalRelr0 AUDIO MP3) true) (= (keyParentalRelr0 FAIL_EX OGG) false) (= (keyParentalRelr0 FAIL_EX MP3) false)))
(check)
;; Initial state proof
(assert (not
			(and
				(= (state0 device1) (stater0 device1))
				(= (state0 device2) (stater0 device2))
				(= (state0 device3) (stater0 device3))
			)
		)
)
(check)
;; unsat
;; Initial states are conformant.