/*
 * This file was automatically generated by EvoSuite
 * Wed Jan 08 18:19:56 GMT 2025
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Pillbox_1_ATG_ESTest extends Pillbox_1_ATG_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Pillbox_1_ATG pillbox_1_ATG0 = new Pillbox_1_ATG();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(0, (int)pillbox_1_ATG0.get_drawerTimer());
      assertEquals(1, (int)pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(0, (int)pillbox_1_ATG0.get_systemTime());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertNotNull(pillbox_1_ATG0);
      
      pillbox_1_ATG0.set_openSwitch(true);
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(0, (int)pillbox_1_ATG0.get_drawerTimer());
      assertEquals(1, (int)pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(0, (int)pillbox_1_ATG0.get_systemTime());
      assertFalse(pillbox_1_ATG0.get_opened());
      
      pillbox_1_ATG0.step();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertTrue(pillbox_1_ATG0.get_opened());
      assertEquals(0, (int)pillbox_1_ATG0.get_drawerTimer());
      assertEquals(1, (int)pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertEquals(1, (int)pillbox_1_ATG0.get_systemTime());
      
      pillbox_1_ATG0.step();
      assertEquals(Pillbox_1.OutMessages.TAKE_PILL, pillbox_1_ATG0.get_outMess());
      assertEquals(Pillbox_1.LedLights.ON, pillbox_1_ATG0.get_redLed());
      assertEquals(1, (int)pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertTrue(pillbox_1_ATG0.get_opened());
      assertEquals(2, (int)pillbox_1_ATG0.get_systemTime());
      assertEquals(1, (int)pillbox_1_ATG0.get_time_consumption());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      
      pillbox_1_ATG0.set_openSwitch(false);
      assertEquals(Pillbox_1.OutMessages.TAKE_PILL, pillbox_1_ATG0.get_outMess());
      assertEquals(Pillbox_1.LedLights.ON, pillbox_1_ATG0.get_redLed());
      assertEquals(1, (int)pillbox_1_ATG0.get_drawerTimer());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertTrue(pillbox_1_ATG0.get_opened());
      assertEquals(2, (int)pillbox_1_ATG0.get_systemTime());
      assertEquals(1, (int)pillbox_1_ATG0.get_time_consumption());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      
      pillbox_1_ATG0.step();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(Pillbox_1.LedLights.BLINKING, pillbox_1_ATG0.get_redLed());
      assertEquals(1, (int)pillbox_1_ATG0.get_time_consumption());
      assertEquals(2, (int)pillbox_1_ATG0.get_drawerTimer());
      assertEquals(3, (int)pillbox_1_ATG0.get_systemTime());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.OutMessages.CLOSE_DRAWER_IN_10_MIN, pillbox_1_ATG0.get_outMess());
      
      pillbox_1_ATG0.step();
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_logMess());
      assertEquals(4, (int)pillbox_1_ATG0.get_systemTime());
      assertEquals(Pillbox_1.LedLights.BLINKING, pillbox_1_ATG0.get_redLed());
      assertEquals(1, (int)pillbox_1_ATG0.get_time_consumption());
      assertEquals(2, (int)pillbox_1_ATG0.get_drawerTimer());
      assertFalse(pillbox_1_ATG0.get_requestSatisfied());
      assertFalse(pillbox_1_ATG0.get_opened());
      assertEquals(Pillbox_1.OutMessages.CLOSE_DRAWER_IN_10_MIN, pillbox_1_ATG0.get_outMess());
      
      pillbox_1_ATG0.step();
      assertEquals(4, (int)pillbox_1_ATG0.get_drawerTimer());
      assertEquals(5, (int)pillbox_1_ATG0.get_systemTime());
      assertEquals(1, (int)pillbox_1_ATG0.get_time_consumption());
      assertEquals(Pillbox_1.LedLights.OFF, pillbox_1_ATG0.get_redLed());
      assertEquals(Pillbox_1.OutMessages.NONE, pillbox_1_ATG0.get_outMess());
      assertEquals(Pillbox_1.OutMessages.PILL_MISSED, pillbox_1_ATG0.get_logMess());
      assertTrue(pillbox_1_ATG0.get_requestSatisfied());
      assertFalse(pillbox_1_ATG0.get_opened());
  }

}
