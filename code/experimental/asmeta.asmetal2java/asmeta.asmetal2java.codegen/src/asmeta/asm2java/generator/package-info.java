/**
 * In the {@code generator} package there are all the generator classes of this
 * application, so we can find the abstract parent class
 * {@link AsmToJavaGenerator} that provides the {@code compileAndWrite(...)}
 * method that is redefined in all the specific generators for a more accurate
 * generation. Then we have the {@link JavaGenerator} class that allows you to
 * generate the classic translation of the asm specification to the java class,
 * the {@link JavaExeGenerator} class instead generates a class to interact with
 * the java class translated by the {@link JavaGenerator} via command line
 * application, while {@link JavaWindowGenerator} generates a class with the
 * graphical interface always to interact with the class generated by the
 * {@link JavaGenerator}. Different task instead for the
 * {@link JavaTestGenerator} class that generates a translated java class with
 * the aim of testing the asm specification via Evosuite, in fact the java class
 * is modified by removing the signature and making all the static fields
 * private, some controls are added via boolean variables to cover the rules.
 * Finally the {@link JavaAtgGenerator} class allows you to generate a wrapper
 * class to test the class generated by the {@code JavaTestGenerator} generator
 * as a abstract state machine, in fact it only exposes the {@code set()},
 * {@code step()} and {@code get()} methods, in this way it is possible to pass
 * this class to Eevosuite to generate junit test scenarios on the translated
 * java class, it is important to keep the instance of the class generated with
 * JavaTestGenerator private to hide it from the outside so Evosuite can't reach
 * and use it.
 */
package asmeta.asm2java.generator;

import asmeta.asm2java.generator.AsmToJavaGenerator;
import asmeta.asm2java.generator.JavaAtgGenerator;
import asmeta.asm2java.generator.JavaExeGenerator;
import asmeta.asm2java.generator.JavaGenerator;
import asmeta.asm2java.generator.JavaTestGenerator;
import asmeta.asm2java.generator.JavaWindowGenerator;
