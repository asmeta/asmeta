/*
 * generated by Xtext 2.32.0
 */
grammar InternalAsmetaL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.asmeta.xt.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.asmeta.xt.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.asmeta.xt.services.AsmetaLGrammarAccess;

}
@parser::members {
	private AsmetaLGrammarAccess grammarAccess;

	public void setGrammarAccess(AsmetaLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleAsm
entryRuleAsm
:
{ before(grammarAccess.getAsmRule()); }
	 ruleAsm
{ after(grammarAccess.getAsmRule()); } 
	 EOF 
;

// Rule Asm
ruleAsm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAsmAccess().getGroup()); }
		(rule__Asm__Group__0)?
		{ after(grammarAccess.getAsmAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeader
entryRuleHeader
:
{ before(grammarAccess.getHeaderRule()); }
	 ruleHeader
{ after(grammarAccess.getHeaderRule()); } 
	 EOF 
;

// Rule Header
ruleHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeaderAccess().getGroup()); }
		(rule__Header__Group__0)
		{ after(grammarAccess.getHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportClause
entryRuleImportClause
:
{ before(grammarAccess.getImportClauseRule()); }
	 ruleImportClause
{ after(grammarAccess.getImportClauseRule()); } 
	 EOF 
;

// Rule ImportClause
ruleImportClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportClauseAccess().getGroup()); }
		(rule__ImportClause__Group__0)
		{ after(grammarAccess.getImportClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleimportData
entryRuleimportData
:
{ before(grammarAccess.getImportDataRule()); }
	 ruleimportData
{ after(grammarAccess.getImportDataRule()); } 
	 EOF 
;

// Rule importData
ruleimportData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportDataAccess().getNameAssignment()); }
		(rule__ImportData__NameAssignment)
		{ after(grammarAccess.getImportDataAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExportClause
entryRuleExportClause
:
{ before(grammarAccess.getExportClauseRule()); }
	 ruleExportClause
{ after(grammarAccess.getExportClauseRule()); } 
	 EOF 
;

// Rule ExportClause
ruleExportClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExportClauseAccess().getGroup()); }
		(rule__ExportClause__Group__0)
		{ after(grammarAccess.getExportClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignature
entryRuleSignature
:
{ before(grammarAccess.getSignatureRule()); }
	 ruleSignature
{ after(grammarAccess.getSignatureRule()); } 
	 EOF 
;

// Rule Signature
ruleSignature 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignatureAccess().getGroup()); }
		(rule__Signature__Group__0)
		{ after(grammarAccess.getSignatureAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitialization
entryRuleInitialization
:
{ before(grammarAccess.getInitializationRule()); }
	 ruleInitialization
{ after(grammarAccess.getInitializationRule()); } 
	 EOF 
;

// Rule Initialization
ruleInitialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitializationAccess().getGroup()); }
		(rule__Initialization__Group__0)
		{ after(grammarAccess.getInitializationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainInitialization
entryRuleDomainInitialization
:
{ before(grammarAccess.getDomainInitializationRule()); }
	 ruleDomainInitialization
{ after(grammarAccess.getDomainInitializationRule()); } 
	 EOF 
;

// Rule DomainInitialization
ruleDomainInitialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainInitializationAccess().getGroup()); }
		(rule__DomainInitialization__Group__0)
		{ after(grammarAccess.getDomainInitializationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionInitialization
entryRuleFunctionInitialization
:
{ before(grammarAccess.getFunctionInitializationRule()); }
	 ruleFunctionInitialization
{ after(grammarAccess.getFunctionInitializationRule()); } 
	 EOF 
;

// Rule FunctionInitialization
ruleFunctionInitialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionInitializationAccess().getGroup()); }
		(rule__FunctionInitialization__Group__0)
		{ after(grammarAccess.getFunctionInitializationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAgentInitialization
entryRuleAgentInitialization
:
{ before(grammarAccess.getAgentInitializationRule()); }
	 ruleAgentInitialization
{ after(grammarAccess.getAgentInitializationRule()); } 
	 EOF 
;

// Rule AgentInitialization
ruleAgentInitialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAgentInitializationAccess().getGroup()); }
		(rule__AgentInitialization__Group__0)
		{ after(grammarAccess.getAgentInitializationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBody
entryRuleBody
:
{ before(grammarAccess.getBodyRule()); }
	 ruleBody
{ after(grammarAccess.getBodyRule()); } 
	 EOF 
;

// Rule Body
ruleBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBodyAccess().getGroup()); }
		(rule__Body__Group__0)
		{ after(grammarAccess.getBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainDefinition
entryRuleDomainDefinition
:
{ before(grammarAccess.getDomainDefinitionRule()); }
	 ruleDomainDefinition
{ after(grammarAccess.getDomainDefinitionRule()); } 
	 EOF 
;

// Rule DomainDefinition
ruleDomainDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getGroup()); }
		(rule__DomainDefinition__Group__0)
		{ after(grammarAccess.getDomainDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 ruleFunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
		(rule__FunctionDefinition__Group__0)
		{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleDeclaration
entryRuleRuleDeclaration
:
{ before(grammarAccess.getRuleDeclarationRule()); }
	 ruleRuleDeclaration
{ after(grammarAccess.getRuleDeclarationRule()); } 
	 EOF 
;

// Rule RuleDeclaration
ruleRuleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getAlternatives()); }
		(rule__RuleDeclaration__Alternatives)
		{ after(grammarAccess.getRuleDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMacroDeclaration
entryRuleMacroDeclaration
:
{ before(grammarAccess.getMacroDeclarationRule()); }
	 ruleMacroDeclaration
{ after(grammarAccess.getMacroDeclarationRule()); } 
	 EOF 
;

// Rule MacroDeclaration
ruleMacroDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMacroDeclarationAccess().getGroup()); }
		(rule__MacroDeclaration__Group__0)
		{ after(grammarAccess.getMacroDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurboDeclaration
entryRuleTurboDeclaration
:
{ before(grammarAccess.getTurboDeclarationRule()); }
	 ruleTurboDeclaration
{ after(grammarAccess.getTurboDeclarationRule()); } 
	 EOF 
;

// Rule TurboDeclaration
ruleTurboDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurboDeclarationAccess().getGroup()); }
		(rule__TurboDeclaration__Group__0)
		{ after(grammarAccess.getTurboDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
		(rule__Property__Alternatives)
		{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTemporalProperty
entryRuleTemporalProperty
:
{ before(grammarAccess.getTemporalPropertyRule()); }
	 ruleTemporalProperty
{ after(grammarAccess.getTemporalPropertyRule()); } 
	 EOF 
;

// Rule TemporalProperty
ruleTemporalProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTemporalPropertyAccess().getAlternatives()); }
		(rule__TemporalProperty__Alternatives)
		{ after(grammarAccess.getTemporalPropertyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvariant
entryRuleInvariant
:
{ before(grammarAccess.getInvariantRule()); }
	 ruleInvariant
{ after(grammarAccess.getInvariantRule()); } 
	 EOF 
;

// Rule Invariant
ruleInvariant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantAccess().getGroup()); }
		(rule__Invariant__Group__0)
		{ after(grammarAccess.getInvariantAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvariantElement
entryRuleInvariantElement
:
{ before(grammarAccess.getInvariantElementRule()); }
	 ruleInvariantElement
{ after(grammarAccess.getInvariantElementRule()); } 
	 EOF 
;

// Rule InvariantElement
ruleInvariantElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantElementAccess().getGroup()); }
		(rule__InvariantElement__Group__0)
		{ after(grammarAccess.getInvariantElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCtlSpec
entryRuleCtlSpec
:
{ before(grammarAccess.getCtlSpecRule()); }
	 ruleCtlSpec
{ after(grammarAccess.getCtlSpecRule()); } 
	 EOF 
;

// Rule CtlSpec
ruleCtlSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCtlSpecAccess().getGroup()); }
		(rule__CtlSpec__Group__0)
		{ after(grammarAccess.getCtlSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLtlSpec
entryRuleLtlSpec
:
{ before(grammarAccess.getLtlSpecRule()); }
	 ruleLtlSpec
{ after(grammarAccess.getLtlSpecRule()); } 
	 EOF 
;

// Rule LtlSpec
ruleLtlSpec 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLtlSpecAccess().getGroup()); }
		(rule__LtlSpec__Group__0)
		{ after(grammarAccess.getLtlSpecAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFairnessConstraint
entryRuleFairnessConstraint
:
{ before(grammarAccess.getFairnessConstraintRule()); }
	 ruleFairnessConstraint
{ after(grammarAccess.getFairnessConstraintRule()); } 
	 EOF 
;

// Rule FairnessConstraint
ruleFairnessConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFairnessConstraintAccess().getAlternatives()); }
		(rule__FairnessConstraint__Alternatives)
		{ after(grammarAccess.getFairnessConstraintAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJusticeConstraint
entryRuleJusticeConstraint
:
{ before(grammarAccess.getJusticeConstraintRule()); }
	 ruleJusticeConstraint
{ after(grammarAccess.getJusticeConstraintRule()); } 
	 EOF 
;

// Rule JusticeConstraint
ruleJusticeConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJusticeConstraintAccess().getGroup()); }
		(rule__JusticeConstraint__Group__0)
		{ after(grammarAccess.getJusticeConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompassionConstraint
entryRuleCompassionConstraint
:
{ before(grammarAccess.getCompassionConstraintRule()); }
	 ruleCompassionConstraint
{ after(grammarAccess.getCompassionConstraintRule()); } 
	 EOF 
;

// Rule CompassionConstraint
ruleCompassionConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompassionConstraintAccess().getGroup()); }
		(rule__CompassionConstraint__Group__0)
		{ after(grammarAccess.getCompassionConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInvariantConstraint
entryRuleInvariantConstraint
:
{ before(grammarAccess.getInvariantConstraintRule()); }
	 ruleInvariantConstraint
{ after(grammarAccess.getInvariantConstraintRule()); } 
	 EOF 
;

// Rule InvariantConstraint
ruleInvariantConstraint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInvariantConstraintAccess().getGroup()); }
		(rule__InvariantConstraint__Group__0)
		{ after(grammarAccess.getInvariantConstraintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomain
entryRuleDomain
:
{ before(grammarAccess.getDomainRule()); }
	 ruleDomain
{ after(grammarAccess.getDomainRule()); } 
	 EOF 
;

// Rule Domain
ruleDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainAccess().getAlternatives()); }
		(rule__Domain__Alternatives)
		{ after(grammarAccess.getDomainAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcreteDomain
entryRuleConcreteDomain
:
{ before(grammarAccess.getConcreteDomainRule()); }
	 ruleConcreteDomain
{ after(grammarAccess.getConcreteDomainRule()); } 
	 EOF 
;

// Rule ConcreteDomain
ruleConcreteDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcreteDomainAccess().getGroup()); }
		(rule__ConcreteDomain__Group__0)
		{ after(grammarAccess.getConcreteDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDomain
entryRuleTypeDomain
:
{ before(grammarAccess.getTypeDomainRule()); }
	 ruleTypeDomain
{ after(grammarAccess.getTypeDomainRule()); } 
	 EOF 
;

// Rule TypeDomain
ruleTypeDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDomainAccess().getAlternatives()); }
		(rule__TypeDomain__Alternatives)
		{ after(grammarAccess.getTypeDomainAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnyDomain
entryRuleAnyDomain
:
{ before(grammarAccess.getAnyDomainRule()); }
	 ruleAnyDomain
{ after(grammarAccess.getAnyDomainRule()); } 
	 EOF 
;

// Rule AnyDomain
ruleAnyDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnyDomainAccess().getGroup()); }
		(rule__AnyDomain__Group__0)
		{ after(grammarAccess.getAnyDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicTD
entryRuleBasicTD
:
{ before(grammarAccess.getBasicTDRule()); }
	 ruleBasicTD
{ after(grammarAccess.getBasicTDRule()); } 
	 EOF 
;

// Rule BasicTD
ruleBasicTD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicTDAccess().getGroup()); }
		(rule__BasicTD__Group__0)
		{ after(grammarAccess.getBasicTDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStandardDomain
entryRuleStandardDomain
:
{ before(grammarAccess.getStandardDomainRule()); }
	 ruleStandardDomain
{ after(grammarAccess.getStandardDomainRule()); } 
	 EOF 
;

// Rule StandardDomain
ruleStandardDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStandardDomainAccess().getAlternatives()); }
		(rule__StandardDomain__Alternatives)
		{ after(grammarAccess.getStandardDomainAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerDomain
entryRuleIntegerDomain
:
{ before(grammarAccess.getIntegerDomainRule()); }
	 ruleIntegerDomain
{ after(grammarAccess.getIntegerDomainRule()); } 
	 EOF 
;

// Rule IntegerDomain
ruleIntegerDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerDomainAccess().getNameAssignment()); }
		(rule__IntegerDomain__NameAssignment)
		{ after(grammarAccess.getIntegerDomainAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealDomain
entryRuleRealDomain
:
{ before(grammarAccess.getRealDomainRule()); }
	 ruleRealDomain
{ after(grammarAccess.getRealDomainRule()); } 
	 EOF 
;

// Rule RealDomain
ruleRealDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealDomainAccess().getNameAssignment()); }
		(rule__RealDomain__NameAssignment)
		{ after(grammarAccess.getRealDomainAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringDomain
entryRuleStringDomain
:
{ before(grammarAccess.getStringDomainRule()); }
	 ruleStringDomain
{ after(grammarAccess.getStringDomainRule()); } 
	 EOF 
;

// Rule StringDomain
ruleStringDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringDomainAccess().getNameAssignment()); }
		(rule__StringDomain__NameAssignment)
		{ after(grammarAccess.getStringDomainAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNaturalDomain
entryRuleNaturalDomain
:
{ before(grammarAccess.getNaturalDomainRule()); }
	 ruleNaturalDomain
{ after(grammarAccess.getNaturalDomainRule()); } 
	 EOF 
;

// Rule NaturalDomain
ruleNaturalDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNaturalDomainAccess().getNameAssignment()); }
		(rule__NaturalDomain__NameAssignment)
		{ after(grammarAccess.getNaturalDomainAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharDomain
entryRuleCharDomain
:
{ before(grammarAccess.getCharDomainRule()); }
	 ruleCharDomain
{ after(grammarAccess.getCharDomainRule()); } 
	 EOF 
;

// Rule CharDomain
ruleCharDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharDomainAccess().getNameAssignment()); }
		(rule__CharDomain__NameAssignment)
		{ after(grammarAccess.getCharDomainAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexDomain
entryRuleComplexDomain
:
{ before(grammarAccess.getComplexDomainRule()); }
	 ruleComplexDomain
{ after(grammarAccess.getComplexDomainRule()); } 
	 EOF 
;

// Rule ComplexDomain
ruleComplexDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexDomainAccess().getNameAssignment()); }
		(rule__ComplexDomain__NameAssignment)
		{ after(grammarAccess.getComplexDomainAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanDomain
entryRuleBooleanDomain
:
{ before(grammarAccess.getBooleanDomainRule()); }
	 ruleBooleanDomain
{ after(grammarAccess.getBooleanDomainRule()); } 
	 EOF 
;

// Rule BooleanDomain
ruleBooleanDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanDomainAccess().getNameAssignment()); }
		(rule__BooleanDomain__NameAssignment)
		{ after(grammarAccess.getBooleanDomainAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUndefDomain
entryRuleUndefDomain
:
{ before(grammarAccess.getUndefDomainRule()); }
	 ruleUndefDomain
{ after(grammarAccess.getUndefDomainRule()); } 
	 EOF 
;

// Rule UndefDomain
ruleUndefDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUndefDomainAccess().getNameAssignment()); }
		(rule__UndefDomain__NameAssignment)
		{ after(grammarAccess.getUndefDomainAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractTD
entryRuleAbstractTD
:
{ before(grammarAccess.getAbstractTDRule()); }
	 ruleAbstractTD
{ after(grammarAccess.getAbstractTDRule()); } 
	 EOF 
;

// Rule AbstractTD
ruleAbstractTD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractTDAccess().getAlternatives()); }
		(rule__AbstractTD__Alternatives)
		{ after(grammarAccess.getAbstractTDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGenericAbstractTD
entryRuleGenericAbstractTD
:
{ before(grammarAccess.getGenericAbstractTDRule()); }
	 ruleGenericAbstractTD
{ after(grammarAccess.getGenericAbstractTDRule()); } 
	 EOF 
;

// Rule GenericAbstractTD
ruleGenericAbstractTD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGenericAbstractTDAccess().getGroup()); }
		(rule__GenericAbstractTD__Group__0)
		{ after(grammarAccess.getGenericAbstractTDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAgentDomain
entryRuleAgentDomain
:
{ before(grammarAccess.getAgentDomainRule()); }
	 ruleAgentDomain
{ after(grammarAccess.getAgentDomainRule()); } 
	 EOF 
;

// Rule AgentDomain
ruleAgentDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAgentDomainAccess().getGroup()); }
		(rule__AgentDomain__Group__0)
		{ after(grammarAccess.getAgentDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReserveDomain
entryRuleReserveDomain
:
{ before(grammarAccess.getReserveDomainRule()); }
	 ruleReserveDomain
{ after(grammarAccess.getReserveDomainRule()); } 
	 EOF 
;

// Rule ReserveDomain
ruleReserveDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReserveDomainAccess().getGroup()); }
		(rule__ReserveDomain__Group__0)
		{ after(grammarAccess.getReserveDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumTD
entryRuleEnumTD
:
{ before(grammarAccess.getEnumTDRule()); }
	 ruleEnumTD
{ after(grammarAccess.getEnumTDRule()); } 
	 EOF 
;

// Rule EnumTD
ruleEnumTD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumTDAccess().getGroup()); }
		(rule__EnumTD__Group__0)
		{ after(grammarAccess.getEnumTDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumElement
entryRuleEnumElement
:
{ before(grammarAccess.getEnumElementRule()); }
	 ruleEnumElement
{ after(grammarAccess.getEnumElementRule()); } 
	 EOF 
;

// Rule EnumElement
ruleEnumElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumElementAccess().getSymbolAssignment()); }
		(rule__EnumElement__SymbolAssignment)
		{ after(grammarAccess.getEnumElementAccess().getSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructuredTD
entryRuleStructuredTD
:
{ before(grammarAccess.getStructuredTDRule()); }
	 ruleStructuredTD
{ after(grammarAccess.getStructuredTDRule()); } 
	 EOF 
;

// Rule StructuredTD
ruleStructuredTD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructuredTDAccess().getAlternatives()); }
		(rule__StructuredTD__Alternatives)
		{ after(grammarAccess.getStructuredTDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleDomain
entryRuleRuleDomain
:
{ before(grammarAccess.getRuleDomainRule()); }
	 ruleRuleDomain
{ after(grammarAccess.getRuleDomainRule()); } 
	 EOF 
;

// Rule RuleDomain
ruleRuleDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleDomainAccess().getGroup()); }
		(rule__RuleDomain__Group__0)
		{ after(grammarAccess.getRuleDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProductDomain
entryRuleProductDomain
:
{ before(grammarAccess.getProductDomainRule()); }
	 ruleProductDomain
{ after(grammarAccess.getProductDomainRule()); } 
	 EOF 
;

// Rule ProductDomain
ruleProductDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProductDomainAccess().getGroup()); }
		(rule__ProductDomain__Group__0)
		{ after(grammarAccess.getProductDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceDomain
entryRuleSequenceDomain
:
{ before(grammarAccess.getSequenceDomainRule()); }
	 ruleSequenceDomain
{ after(grammarAccess.getSequenceDomainRule()); } 
	 EOF 
;

// Rule SequenceDomain
ruleSequenceDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceDomainAccess().getGroup()); }
		(rule__SequenceDomain__Group__0)
		{ after(grammarAccess.getSequenceDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePowersetDomain
entryRulePowersetDomain
:
{ before(grammarAccess.getPowersetDomainRule()); }
	 rulePowersetDomain
{ after(grammarAccess.getPowersetDomainRule()); } 
	 EOF 
;

// Rule PowersetDomain
rulePowersetDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPowersetDomainAccess().getGroup()); }
		(rule__PowersetDomain__Group__0)
		{ after(grammarAccess.getPowersetDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBagDomain
entryRuleBagDomain
:
{ before(grammarAccess.getBagDomainRule()); }
	 ruleBagDomain
{ after(grammarAccess.getBagDomainRule()); } 
	 EOF 
;

// Rule BagDomain
ruleBagDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBagDomainAccess().getGroup()); }
		(rule__BagDomain__Group__0)
		{ after(grammarAccess.getBagDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapDomain
entryRuleMapDomain
:
{ before(grammarAccess.getMapDomainRule()); }
	 ruleMapDomain
{ after(grammarAccess.getMapDomainRule()); } 
	 EOF 
;

// Rule MapDomain
ruleMapDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapDomainAccess().getGroup()); }
		(rule__MapDomain__Group__0)
		{ after(grammarAccess.getMapDomainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulegetDomainByID
entryRulegetDomainByID
:
{ before(grammarAccess.getGetDomainByIDRule()); }
	 rulegetDomainByID
{ after(grammarAccess.getGetDomainByIDRule()); } 
	 EOF 
;

// Rule getDomainByID
rulegetDomainByID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGetDomainByIDAccess().getAlternatives()); }
		(rule__GetDomainByID__Alternatives)
		{ after(grammarAccess.getGetDomainByIDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getAlternatives()); }
		(rule__Function__Alternatives)
		{ after(grammarAccess.getFunctionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicFunction
entryRuleBasicFunction
:
{ before(grammarAccess.getBasicFunctionRule()); }
	 ruleBasicFunction
{ after(grammarAccess.getBasicFunctionRule()); } 
	 EOF 
;

// Rule BasicFunction
ruleBasicFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicFunctionAccess().getAlternatives()); }
		(rule__BasicFunction__Alternatives)
		{ after(grammarAccess.getBasicFunctionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDerivedFunction
entryRuleDerivedFunction
:
{ before(grammarAccess.getDerivedFunctionRule()); }
	 ruleDerivedFunction
{ after(grammarAccess.getDerivedFunctionRule()); } 
	 EOF 
;

// Rule DerivedFunction
ruleDerivedFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDerivedFunctionAccess().getGroup()); }
		(rule__DerivedFunction__Group__0)
		{ after(grammarAccess.getDerivedFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStaticFunction
entryRuleStaticFunction
:
{ before(grammarAccess.getStaticFunctionRule()); }
	 ruleStaticFunction
{ after(grammarAccess.getStaticFunctionRule()); } 
	 EOF 
;

// Rule StaticFunction
ruleStaticFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStaticFunctionAccess().getGroup()); }
		(rule__StaticFunction__Group__0)
		{ after(grammarAccess.getStaticFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDynamicFunction
entryRuleDynamicFunction
:
{ before(grammarAccess.getDynamicFunctionRule()); }
	 ruleDynamicFunction
{ after(grammarAccess.getDynamicFunctionRule()); } 
	 EOF 
;

// Rule DynamicFunction
ruleDynamicFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDynamicFunctionAccess().getAlternatives()); }
		(rule__DynamicFunction__Alternatives)
		{ after(grammarAccess.getDynamicFunctionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocalFunction
entryRuleLocalFunction
:
{ before(grammarAccess.getLocalFunctionRule()); }
	 ruleLocalFunction
{ after(grammarAccess.getLocalFunctionRule()); } 
	 EOF 
;

// Rule LocalFunction
ruleLocalFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalFunctionAccess().getGroup()); }
		(rule__LocalFunction__Group__0)
		{ after(grammarAccess.getLocalFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleControlledFunction
entryRuleControlledFunction
:
{ before(grammarAccess.getControlledFunctionRule()); }
	 ruleControlledFunction
{ after(grammarAccess.getControlledFunctionRule()); } 
	 EOF 
;

// Rule ControlledFunction
ruleControlledFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getControlledFunctionAccess().getGroup()); }
		(rule__ControlledFunction__Group__0)
		{ after(grammarAccess.getControlledFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSharedFunction
entryRuleSharedFunction
:
{ before(grammarAccess.getSharedFunctionRule()); }
	 ruleSharedFunction
{ after(grammarAccess.getSharedFunctionRule()); } 
	 EOF 
;

// Rule SharedFunction
ruleSharedFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSharedFunctionAccess().getGroup()); }
		(rule__SharedFunction__Group__0)
		{ after(grammarAccess.getSharedFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMonitoredFunction
entryRuleMonitoredFunction
:
{ before(grammarAccess.getMonitoredFunctionRule()); }
	 ruleMonitoredFunction
{ after(grammarAccess.getMonitoredFunctionRule()); } 
	 EOF 
;

// Rule MonitoredFunction
ruleMonitoredFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMonitoredFunctionAccess().getGroup()); }
		(rule__MonitoredFunction__Group__0)
		{ after(grammarAccess.getMonitoredFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutFunction
entryRuleOutFunction
:
{ before(grammarAccess.getOutFunctionRule()); }
	 ruleOutFunction
{ after(grammarAccess.getOutFunctionRule()); } 
	 EOF 
;

// Rule OutFunction
ruleOutFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutFunctionAccess().getGroup()); }
		(rule__OutFunction__Group__0)
		{ after(grammarAccess.getOutFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleextendedNameForFunction
entryRuleextendedNameForFunction
:
{ before(grammarAccess.getExtendedNameForFunctionRule()); }
	 ruleextendedNameForFunction
{ after(grammarAccess.getExtendedNameForFunctionRule()); } 
	 EOF 
;

// Rule extendedNameForFunction
ruleextendedNameForFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendedNameForFunctionAccess().getAlternatives()); }
		(rule__ExtendedNameForFunction__Alternatives)
		{ after(grammarAccess.getExtendedNameForFunctionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleextendedNameForAsm
entryRuleextendedNameForAsm
:
{ before(grammarAccess.getExtendedNameForAsmRule()); }
	 ruleextendedNameForAsm
{ after(grammarAccess.getExtendedNameForAsmRule()); } 
	 EOF 
;

// Rule extendedNameForAsm
ruleextendedNameForAsm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendedNameForAsmAccess().getAlternatives()); }
		(rule__ExtendedNameForAsm__Alternatives)
		{ after(grammarAccess.getExtendedNameForAsmAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleextendedName
entryRuleextendedName
:
{ before(grammarAccess.getExtendedNameRule()); }
	 ruleextendedName
{ after(grammarAccess.getExtendedNameRule()); } 
	 EOF 
;

// Rule extendedName
ruleextendedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendedNameAccess().getAlternatives()); }
		(rule__ExtendedName__Alternatives)
		{ after(grammarAccess.getExtendedNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getAlternatives()); }
		(rule__Term__Alternatives)
		{ after(grammarAccess.getTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDomainTerm
entryRuleDomainTerm
:
{ before(grammarAccess.getDomainTermRule()); }
	 ruleDomainTerm
{ after(grammarAccess.getDomainTermRule()); } 
	 EOF 
;

// Rule DomainTerm
ruleDomainTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainTermAccess().getGetDomainByIDParserRuleCall()); }
		rulegetDomainByID
		{ after(grammarAccess.getDomainTermAccess().getGetDomainByIDParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getImpliesIffExpressionParserRuleCall()); }
		ruleImpliesIffExpression
		{ after(grammarAccess.getExpressionAccess().getImpliesIffExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImpliesIffExpression
entryRuleImpliesIffExpression
:
{ before(grammarAccess.getImpliesIffExpressionRule()); }
	 ruleImpliesIffExpression
{ after(grammarAccess.getImpliesIffExpressionRule()); } 
	 EOF 
;

// Rule ImpliesIffExpression
ruleImpliesIffExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImpliesIffExpressionAccess().getGroup()); }
		(rule__ImpliesIffExpression__Group__0)
		{ after(grammarAccess.getImpliesIffExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXorOrExpression
entryRuleXorOrExpression
:
{ before(grammarAccess.getXorOrExpressionRule()); }
	 ruleXorOrExpression
{ after(grammarAccess.getXorOrExpressionRule()); } 
	 EOF 
;

// Rule XorOrExpression
ruleXorOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXorOrExpressionAccess().getGroup()); }
		(rule__XorOrExpression__Group__0)
		{ after(grammarAccess.getXorOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompareExpression
entryRuleCompareExpression
:
{ before(grammarAccess.getCompareExpressionRule()); }
	 ruleCompareExpression
{ after(grammarAccess.getCompareExpressionRule()); } 
	 EOF 
;

// Rule CompareExpression
ruleCompareExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareExpressionAccess().getGroup()); }
		(rule__CompareExpression__Group__0)
		{ after(grammarAccess.getCompareExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePowerExpression
entryRulePowerExpression
:
{ before(grammarAccess.getPowerExpressionRule()); }
	 rulePowerExpression
{ after(grammarAccess.getPowerExpressionRule()); } 
	 EOF 
;

// Rule PowerExpression
rulePowerExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPowerExpressionAccess().getGroup()); }
		(rule__PowerExpression__Group__0)
		{ after(grammarAccess.getPowerExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryOperation
entryRuleUnaryOperation
:
{ before(grammarAccess.getUnaryOperationRule()); }
	 ruleUnaryOperation
{ after(grammarAccess.getUnaryOperationRule()); } 
	 EOF 
;

// Rule UnaryOperation
ruleUnaryOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryOperationAccess().getAlternatives()); }
		(rule__UnaryOperation__Alternatives)
		{ after(grammarAccess.getUnaryOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression
:
{ before(grammarAccess.getParenthesizedExpressionRule()); }
	 ruleParenthesizedExpression
{ after(grammarAccess.getParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
		(rule__ParenthesizedExpression__Group__0)
		{ after(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebasicExpr
entryRulebasicExpr
:
{ before(grammarAccess.getBasicExprRule()); }
	 rulebasicExpr
{ after(grammarAccess.getBasicExprRule()); } 
	 EOF 
;

// Rule basicExpr
rulebasicExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicExprAccess().getAlternatives()); }
		(rule__BasicExpr__Alternatives)
		{ after(grammarAccess.getBasicExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicTerm
entryRuleBasicTerm
:
{ before(grammarAccess.getBasicTermRule()); }
	 ruleBasicTerm
{ after(grammarAccess.getBasicTermRule()); } 
	 EOF 
;

// Rule BasicTerm
ruleBasicTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicTermAccess().getAlternatives()); }
		(rule__BasicTerm__Alternatives)
		{ after(grammarAccess.getBasicTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionTerm
entryRuleFunctionTerm
:
{ before(grammarAccess.getFunctionTermRule()); }
	 ruleFunctionTerm
{ after(grammarAccess.getFunctionTermRule()); } 
	 EOF 
;

// Rule FunctionTerm
ruleFunctionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionTermAccess().getGroup()); }
		(rule__FunctionTerm__Group__0)
		{ after(grammarAccess.getFunctionTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocationTerm
entryRuleLocationTerm
:
{ before(grammarAccess.getLocationTermRule()); }
	 ruleLocationTerm
{ after(grammarAccess.getLocationTermRule()); } 
	 EOF 
;

// Rule LocationTerm
ruleLocationTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocationTermAccess().getGroup()); }
		(rule__LocationTerm__Group__0)
		{ after(grammarAccess.getLocationTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableTerm
entryRuleVariableTerm
:
{ before(grammarAccess.getVariableTermRule()); }
	 ruleVariableTerm
{ after(grammarAccess.getVariableTermRule()); } 
	 EOF 
;

// Rule VariableTerm
ruleVariableTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableTermAccess().getNameAssignment()); }
		(rule__VariableTerm__NameAssignment)
		{ after(grammarAccess.getVariableTermAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantTerm
entryRuleConstantTerm
:
{ before(grammarAccess.getConstantTermRule()); }
	 ruleConstantTerm
{ after(grammarAccess.getConstantTermRule()); } 
	 EOF 
;

// Rule ConstantTerm
ruleConstantTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantTermAccess().getAlternatives()); }
		(rule__ConstantTerm__Alternatives)
		{ after(grammarAccess.getConstantTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberTerm
entryRuleNumberTerm
:
{ before(grammarAccess.getNumberTermRule()); }
	 ruleNumberTerm
{ after(grammarAccess.getNumberTermRule()); } 
	 EOF 
;

// Rule NumberTerm
ruleNumberTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberTermAccess().getAlternatives()); }
		(rule__NumberTerm__Alternatives)
		{ after(grammarAccess.getNumberTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanTerm
entryRuleBooleanTerm
:
{ before(grammarAccess.getBooleanTermRule()); }
	 ruleBooleanTerm
{ after(grammarAccess.getBooleanTermRule()); } 
	 EOF 
;

// Rule BooleanTerm
ruleBooleanTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanTermAccess().getSymbolAssignment()); }
		(rule__BooleanTerm__SymbolAssignment)
		{ after(grammarAccess.getBooleanTermAccess().getSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUndefTerm
entryRuleUndefTerm
:
{ before(grammarAccess.getUndefTermRule()); }
	 ruleUndefTerm
{ after(grammarAccess.getUndefTermRule()); } 
	 EOF 
;

// Rule UndefTerm
ruleUndefTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUndefTermAccess().getSymbolAssignment()); }
		(rule__UndefTerm__SymbolAssignment)
		{ after(grammarAccess.getUndefTermAccess().getSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexTerm
entryRuleComplexTerm
:
{ before(grammarAccess.getComplexTermRule()); }
	 ruleComplexTerm
{ after(grammarAccess.getComplexTermRule()); } 
	 EOF 
;

// Rule ComplexTerm
ruleComplexTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexTermAccess().getSymbolAssignment()); }
		(rule__ComplexTerm__SymbolAssignment)
		{ after(grammarAccess.getComplexTermAccess().getSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNaturalTerm
entryRuleNaturalTerm
:
{ before(grammarAccess.getNaturalTermRule()); }
	 ruleNaturalTerm
{ after(grammarAccess.getNaturalTermRule()); } 
	 EOF 
;

// Rule NaturalTerm
ruleNaturalTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNaturalTermAccess().getSymbolAssignment()); }
		(rule__NaturalTerm__SymbolAssignment)
		{ after(grammarAccess.getNaturalTermAccess().getSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCharTerm
entryRuleCharTerm
:
{ before(grammarAccess.getCharTermRule()); }
	 ruleCharTerm
{ after(grammarAccess.getCharTermRule()); } 
	 EOF 
;

// Rule CharTerm
ruleCharTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCharTermAccess().getSymbolAssignment()); }
		(rule__CharTerm__SymbolAssignment)
		{ after(grammarAccess.getCharTermAccess().getSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringTerm
entryRuleStringTerm
:
{ before(grammarAccess.getStringTermRule()); }
	 ruleStringTerm
{ after(grammarAccess.getStringTermRule()); } 
	 EOF 
;

// Rule StringTerm
ruleStringTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringTermAccess().getSymbolAssignment()); }
		(rule__StringTerm__SymbolAssignment)
		{ after(grammarAccess.getStringTermAccess().getSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumTerm
entryRuleEnumTerm
:
{ before(grammarAccess.getEnumTermRule()); }
	 ruleEnumTerm
{ after(grammarAccess.getEnumTermRule()); } 
	 EOF 
;

// Rule EnumTerm
ruleEnumTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumTermAccess().getSymbolAssignment()); }
		(rule__EnumTerm__SymbolAssignment)
		{ after(grammarAccess.getEnumTermAccess().getSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealTerm
entryRuleRealTerm
:
{ before(grammarAccess.getRealTermRule()); }
	 ruleRealTerm
{ after(grammarAccess.getRealTermRule()); } 
	 EOF 
;

// Rule RealTerm
ruleRealTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealTermAccess().getSymbolAssignment()); }
		(rule__RealTerm__SymbolAssignment)
		{ after(grammarAccess.getRealTermAccess().getSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerTerm
entryRuleIntegerTerm
:
{ before(grammarAccess.getIntegerTermRule()); }
	 ruleIntegerTerm
{ after(grammarAccess.getIntegerTermRule()); } 
	 EOF 
;

// Rule IntegerTerm
ruleIntegerTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerTermAccess().getSymbolAssignment()); }
		(rule__IntegerTerm__SymbolAssignment)
		{ after(grammarAccess.getIntegerTermAccess().getSymbolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealNumberWithSign
entryRuleRealNumberWithSign
:
{ before(grammarAccess.getRealNumberWithSignRule()); }
	 ruleRealNumberWithSign
{ after(grammarAccess.getRealNumberWithSignRule()); } 
	 EOF 
;

// Rule RealNumberWithSign
ruleRealNumberWithSign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealNumberWithSignAccess().getGroup()); }
		(rule__RealNumberWithSign__Group__0)
		{ after(grammarAccess.getRealNumberWithSignAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberWithSign
entryRuleNumberWithSign
:
{ before(grammarAccess.getNumberWithSignRule()); }
	 ruleNumberWithSign
{ after(grammarAccess.getNumberWithSignRule()); } 
	 EOF 
;

// Rule NumberWithSign
ruleNumberWithSign 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberWithSignAccess().getGroup()); }
		(rule__NumberWithSign__Group__0)
		{ after(grammarAccess.getNumberWithSignAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtendedTerm
entryRuleExtendedTerm
:
{ before(grammarAccess.getExtendedTermRule()); }
	 ruleExtendedTerm
{ after(grammarAccess.getExtendedTermRule()); } 
	 EOF 
;

// Rule ExtendedTerm
ruleExtendedTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendedTermAccess().getAlternatives()); }
		(rule__ExtendedTerm__Alternatives)
		{ after(grammarAccess.getExtendedTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalTerm
entryRuleConditionalTerm
:
{ before(grammarAccess.getConditionalTermRule()); }
	 ruleConditionalTerm
{ after(grammarAccess.getConditionalTermRule()); } 
	 EOF 
;

// Rule ConditionalTerm
ruleConditionalTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalTermAccess().getGroup()); }
		(rule__ConditionalTerm__Group__0)
		{ after(grammarAccess.getConditionalTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseTerm
entryRuleCaseTerm
:
{ before(grammarAccess.getCaseTermRule()); }
	 ruleCaseTerm
{ after(grammarAccess.getCaseTermRule()); } 
	 EOF 
;

// Rule CaseTerm
ruleCaseTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseTermAccess().getGroup()); }
		(rule__CaseTerm__Group__0)
		{ after(grammarAccess.getCaseTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTupleTerm
entryRuleTupleTerm
:
{ before(grammarAccess.getTupleTermRule()); }
	 ruleTupleTerm
{ after(grammarAccess.getTupleTermRule()); } 
	 EOF 
;

// Rule TupleTerm
ruleTupleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTupleTermAccess().getGroup()); }
		(rule__TupleTerm__Group__0)
		{ after(grammarAccess.getTupleTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCollectionTerm
entryRuleCollectionTerm
:
{ before(grammarAccess.getCollectionTermRule()); }
	 ruleCollectionTerm
{ after(grammarAccess.getCollectionTermRule()); } 
	 EOF 
;

// Rule CollectionTerm
ruleCollectionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCollectionTermAccess().getAlternatives()); }
		(rule__CollectionTerm__Alternatives)
		{ after(grammarAccess.getCollectionTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceTerm
entryRuleSequenceTerm
:
{ before(grammarAccess.getSequenceTermRule()); }
	 ruleSequenceTerm
{ after(grammarAccess.getSequenceTermRule()); } 
	 EOF 
;

// Rule SequenceTerm
ruleSequenceTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceTermAccess().getGroup()); }
		(rule__SequenceTerm__Group__0)
		{ after(grammarAccess.getSequenceTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapTerm
entryRuleMapTerm
:
{ before(grammarAccess.getMapTermRule()); }
	 ruleMapTerm
{ after(grammarAccess.getMapTermRule()); } 
	 EOF 
;

// Rule MapTerm
ruleMapTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapTermAccess().getGroup()); }
		(rule__MapTerm__Group__0)
		{ after(grammarAccess.getMapTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetTerm
entryRuleSetTerm
:
{ before(grammarAccess.getSetTermRule()); }
	 ruleSetTerm
{ after(grammarAccess.getSetTermRule()); } 
	 EOF 
;

// Rule SetTerm
ruleSetTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetTermAccess().getGroup()); }
		(rule__SetTerm__Group__0)
		{ after(grammarAccess.getSetTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBagTerm
entryRuleBagTerm
:
{ before(grammarAccess.getBagTermRule()); }
	 ruleBagTerm
{ after(grammarAccess.getBagTermRule()); } 
	 EOF 
;

// Rule BagTerm
ruleBagTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBagTermAccess().getGroup()); }
		(rule__BagTerm__Group__0)
		{ after(grammarAccess.getBagTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableBindingTerm
entryRuleVariableBindingTerm
:
{ before(grammarAccess.getVariableBindingTermRule()); }
	 ruleVariableBindingTerm
{ after(grammarAccess.getVariableBindingTermRule()); } 
	 EOF 
;

// Rule VariableBindingTerm
ruleVariableBindingTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableBindingTermAccess().getAlternatives()); }
		(rule__VariableBindingTerm__Alternatives)
		{ after(grammarAccess.getVariableBindingTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFiniteQuantificationTerm
entryRuleFiniteQuantificationTerm
:
{ before(grammarAccess.getFiniteQuantificationTermRule()); }
	 ruleFiniteQuantificationTerm
{ after(grammarAccess.getFiniteQuantificationTermRule()); } 
	 EOF 
;

// Rule FiniteQuantificationTerm
ruleFiniteQuantificationTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFiniteQuantificationTermAccess().getAlternatives()); }
		(rule__FiniteQuantificationTerm__Alternatives)
		{ after(grammarAccess.getFiniteQuantificationTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistUniqueTerm
entryRuleExistUniqueTerm
:
{ before(grammarAccess.getExistUniqueTermRule()); }
	 ruleExistUniqueTerm
{ after(grammarAccess.getExistUniqueTermRule()); } 
	 EOF 
;

// Rule ExistUniqueTerm
ruleExistUniqueTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistUniqueTermAccess().getGroup()); }
		(rule__ExistUniqueTerm__Group__0)
		{ after(grammarAccess.getExistUniqueTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistTerm
entryRuleExistTerm
:
{ before(grammarAccess.getExistTermRule()); }
	 ruleExistTerm
{ after(grammarAccess.getExistTermRule()); } 
	 EOF 
;

// Rule ExistTerm
ruleExistTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistTermAccess().getGroup()); }
		(rule__ExistTerm__Group__0)
		{ after(grammarAccess.getExistTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForallTerm
entryRuleForallTerm
:
{ before(grammarAccess.getForallTermRule()); }
	 ruleForallTerm
{ after(grammarAccess.getForallTermRule()); } 
	 EOF 
;

// Rule ForallTerm
ruleForallTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForallTermAccess().getGroup()); }
		(rule__ForallTerm__Group__0)
		{ after(grammarAccess.getForallTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLetTerm
entryRuleLetTerm
:
{ before(grammarAccess.getLetTermRule()); }
	 ruleLetTerm
{ after(grammarAccess.getLetTermRule()); } 
	 EOF 
;

// Rule LetTerm
ruleLetTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLetTermAccess().getGroup()); }
		(rule__LetTerm__Group__0)
		{ after(grammarAccess.getLetTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComprehensionTerm
entryRuleComprehensionTerm
:
{ before(grammarAccess.getComprehensionTermRule()); }
	 ruleComprehensionTerm
{ after(grammarAccess.getComprehensionTermRule()); } 
	 EOF 
;

// Rule ComprehensionTerm
ruleComprehensionTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComprehensionTermAccess().getAlternatives()); }
		(rule__ComprehensionTerm__Alternatives)
		{ after(grammarAccess.getComprehensionTermAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetCT
entryRuleSetCT
:
{ before(grammarAccess.getSetCTRule()); }
	 ruleSetCT
{ after(grammarAccess.getSetCTRule()); } 
	 EOF 
;

// Rule SetCT
ruleSetCT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetCTAccess().getGroup()); }
		(rule__SetCT__Group__0)
		{ after(grammarAccess.getSetCTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapCT
entryRuleMapCT
:
{ before(grammarAccess.getMapCTRule()); }
	 ruleMapCT
{ after(grammarAccess.getMapCTRule()); } 
	 EOF 
;

// Rule MapCT
ruleMapCT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapCTAccess().getGroup()); }
		(rule__MapCT__Group__0)
		{ after(grammarAccess.getMapCTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSequenceCT
entryRuleSequenceCT
:
{ before(grammarAccess.getSequenceCTRule()); }
	 ruleSequenceCT
{ after(grammarAccess.getSequenceCTRule()); } 
	 EOF 
;

// Rule SequenceCT
ruleSequenceCT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSequenceCTAccess().getGroup()); }
		(rule__SequenceCT__Group__0)
		{ after(grammarAccess.getSequenceCTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBagCT
entryRuleBagCT
:
{ before(grammarAccess.getBagCTRule()); }
	 ruleBagCT
{ after(grammarAccess.getBagCTRule()); } 
	 EOF 
;

// Rule BagCT
ruleBagCT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBagCTAccess().getGroup()); }
		(rule__BagCT__Group__0)
		{ after(grammarAccess.getBagCTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRuleAsTerm
entryRuleRuleAsTerm
:
{ before(grammarAccess.getRuleAsTermRule()); }
	 ruleRuleAsTerm
{ after(grammarAccess.getRuleAsTermRule()); } 
	 EOF 
;

// Rule RuleAsTerm
ruleRuleAsTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAsTermAccess().getGroup()); }
		(rule__RuleAsTerm__Group__0)
		{ after(grammarAccess.getRuleAsTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getAlternatives()); }
		(rule__Rule__Alternatives)
		{ after(grammarAccess.getRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTermAsRule
entryRuleTermAsRule
:
{ before(grammarAccess.getTermAsRuleRule()); }
	 ruleTermAsRule
{ after(grammarAccess.getTermAsRuleRule()); } 
	 EOF 
;

// Rule TermAsRule
ruleTermAsRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAsRuleAccess().getGroup()); }
		(rule__TermAsRule__Group__0)
		{ after(grammarAccess.getTermAsRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicRule
entryRuleBasicRule
:
{ before(grammarAccess.getBasicRuleRule()); }
	 ruleBasicRule
{ after(grammarAccess.getBasicRuleRule()); } 
	 EOF 
;

// Rule BasicRule
ruleBasicRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicRuleAccess().getAlternatives()); }
		(rule__BasicRule__Alternatives)
		{ after(grammarAccess.getBasicRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSkipRule
entryRuleSkipRule
:
{ before(grammarAccess.getSkipRuleRule()); }
	 ruleSkipRule
{ after(grammarAccess.getSkipRuleRule()); } 
	 EOF 
;

// Rule SkipRule
ruleSkipRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSkipRuleAccess().getGroup()); }
		(rule__SkipRule__Group__0)
		{ after(grammarAccess.getSkipRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdateRule
entryRuleUpdateRule
:
{ before(grammarAccess.getUpdateRuleRule()); }
	 ruleUpdateRule
{ after(grammarAccess.getUpdateRuleRule()); } 
	 EOF 
;

// Rule UpdateRule
ruleUpdateRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateRuleAccess().getGroup()); }
		(rule__UpdateRule__Group__0)
		{ after(grammarAccess.getUpdateRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlockRule
entryRuleBlockRule
:
{ before(grammarAccess.getBlockRuleRule()); }
	 ruleBlockRule
{ after(grammarAccess.getBlockRuleRule()); } 
	 EOF 
;

// Rule BlockRule
ruleBlockRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockRuleAccess().getGroup()); }
		(rule__BlockRule__Group__0)
		{ after(grammarAccess.getBlockRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalRule
entryRuleConditionalRule
:
{ before(grammarAccess.getConditionalRuleRule()); }
	 ruleConditionalRule
{ after(grammarAccess.getConditionalRuleRule()); } 
	 EOF 
;

// Rule ConditionalRule
ruleConditionalRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalRuleAccess().getGroup()); }
		(rule__ConditionalRule__Group__0)
		{ after(grammarAccess.getConditionalRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChooseRule
entryRuleChooseRule
:
{ before(grammarAccess.getChooseRuleRule()); }
	 ruleChooseRule
{ after(grammarAccess.getChooseRuleRule()); } 
	 EOF 
;

// Rule ChooseRule
ruleChooseRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChooseRuleAccess().getGroup()); }
		(rule__ChooseRule__Group__0)
		{ after(grammarAccess.getChooseRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForallRule
entryRuleForallRule
:
{ before(grammarAccess.getForallRuleRule()); }
	 ruleForallRule
{ after(grammarAccess.getForallRuleRule()); } 
	 EOF 
;

// Rule ForallRule
ruleForallRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForallRuleAccess().getGroup()); }
		(rule__ForallRule__Group__0)
		{ after(grammarAccess.getForallRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLetRule
entryRuleLetRule
:
{ before(grammarAccess.getLetRuleRule()); }
	 ruleLetRule
{ after(grammarAccess.getLetRuleRule()); } 
	 EOF 
;

// Rule LetRule
ruleLetRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLetRuleAccess().getGroup()); }
		(rule__LetRule__Group__0)
		{ after(grammarAccess.getLetRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMacroCallRule
entryRuleMacroCallRule
:
{ before(grammarAccess.getMacroCallRuleRule()); }
	 ruleMacroCallRule
{ after(grammarAccess.getMacroCallRuleRule()); } 
	 EOF 
;

// Rule MacroCallRule
ruleMacroCallRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMacroCallRuleAccess().getGroup()); }
		(rule__MacroCallRule__Group__0)
		{ after(grammarAccess.getMacroCallRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtendRule
entryRuleExtendRule
:
{ before(grammarAccess.getExtendRuleRule()); }
	 ruleExtendRule
{ after(grammarAccess.getExtendRuleRule()); } 
	 EOF 
;

// Rule ExtendRule
ruleExtendRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendRuleAccess().getGroup()); }
		(rule__ExtendRule__Group__0)
		{ after(grammarAccess.getExtendRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurboRule
entryRuleTurboRule
:
{ before(grammarAccess.getTurboRuleRule()); }
	 ruleTurboRule
{ after(grammarAccess.getTurboRuleRule()); } 
	 EOF 
;

// Rule TurboRule
ruleTurboRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurboRuleAccess().getAlternatives()); }
		(rule__TurboRule__Alternatives)
		{ after(grammarAccess.getTurboRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSeqRule
entryRuleSeqRule
:
{ before(grammarAccess.getSeqRuleRule()); }
	 ruleSeqRule
{ after(grammarAccess.getSeqRuleRule()); } 
	 EOF 
;

// Rule SeqRule
ruleSeqRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSeqRuleAccess().getGroup()); }
		(rule__SeqRule__Group__0)
		{ after(grammarAccess.getSeqRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIterateRule
entryRuleIterateRule
:
{ before(grammarAccess.getIterateRuleRule()); }
	 ruleIterateRule
{ after(grammarAccess.getIterateRuleRule()); } 
	 EOF 
;

// Rule IterateRule
ruleIterateRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIterateRuleAccess().getGroup()); }
		(rule__IterateRule__Group__0)
		{ after(grammarAccess.getIterateRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurboCallRule
entryRuleTurboCallRule
:
{ before(grammarAccess.getTurboCallRuleRule()); }
	 ruleTurboCallRule
{ after(grammarAccess.getTurboCallRuleRule()); } 
	 EOF 
;

// Rule TurboCallRule
ruleTurboCallRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurboCallRuleAccess().getGroup()); }
		(rule__TurboCallRule__Group__0)
		{ after(grammarAccess.getTurboCallRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurboReturnRule
entryRuleTurboReturnRule
:
{ before(grammarAccess.getTurboReturnRuleRule()); }
	 ruleTurboReturnRule
{ after(grammarAccess.getTurboReturnRuleRule()); } 
	 EOF 
;

// Rule TurboReturnRule
ruleTurboReturnRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurboReturnRuleAccess().getGroup()); }
		(rule__TurboReturnRule__Group__0)
		{ after(grammarAccess.getTurboReturnRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurboLocalStateRule
entryRuleTurboLocalStateRule
:
{ before(grammarAccess.getTurboLocalStateRuleRule()); }
	 ruleTurboLocalStateRule
{ after(grammarAccess.getTurboLocalStateRuleRule()); } 
	 EOF 
;

// Rule TurboLocalStateRule
ruleTurboLocalStateRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurboLocalStateRuleAccess().getGroup()); }
		(rule__TurboLocalStateRule__Group__0)
		{ after(grammarAccess.getTurboLocalStateRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDerivedRule
entryRuleDerivedRule
:
{ before(grammarAccess.getDerivedRuleRule()); }
	 ruleDerivedRule
{ after(grammarAccess.getDerivedRuleRule()); } 
	 EOF 
;

// Rule DerivedRule
ruleDerivedRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDerivedRuleAccess().getAlternatives()); }
		(rule__DerivedRule__Alternatives)
		{ after(grammarAccess.getDerivedRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicDerivedRule
entryRuleBasicDerivedRule
:
{ before(grammarAccess.getBasicDerivedRuleRule()); }
	 ruleBasicDerivedRule
{ after(grammarAccess.getBasicDerivedRuleRule()); } 
	 EOF 
;

// Rule BasicDerivedRule
ruleBasicDerivedRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicDerivedRuleAccess().getCaseRuleParserRuleCall()); }
		ruleCaseRule
		{ after(grammarAccess.getBasicDerivedRuleAccess().getCaseRuleParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseRule
entryRuleCaseRule
:
{ before(grammarAccess.getCaseRuleRule()); }
	 ruleCaseRule
{ after(grammarAccess.getCaseRuleRule()); } 
	 EOF 
;

// Rule CaseRule
ruleCaseRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseRuleAccess().getGroup()); }
		(rule__CaseRule__Group__0)
		{ after(grammarAccess.getCaseRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTurboDerivedRule
entryRuleTurboDerivedRule
:
{ before(grammarAccess.getTurboDerivedRuleRule()); }
	 ruleTurboDerivedRule
{ after(grammarAccess.getTurboDerivedRuleRule()); } 
	 EOF 
;

// Rule TurboDerivedRule
ruleTurboDerivedRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTurboDerivedRuleAccess().getAlternatives()); }
		(rule__TurboDerivedRule__Alternatives)
		{ after(grammarAccess.getTurboDerivedRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRecursiveWhileRule
entryRuleRecursiveWhileRule
:
{ before(grammarAccess.getRecursiveWhileRuleRule()); }
	 ruleRecursiveWhileRule
{ after(grammarAccess.getRecursiveWhileRuleRule()); } 
	 EOF 
;

// Rule RecursiveWhileRule
ruleRecursiveWhileRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecursiveWhileRuleAccess().getGroup()); }
		(rule__RecursiveWhileRule__Group__0)
		{ after(grammarAccess.getRecursiveWhileRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIterativeWhileRule
entryRuleIterativeWhileRule
:
{ before(grammarAccess.getIterativeWhileRuleRule()); }
	 ruleIterativeWhileRule
{ after(grammarAccess.getIterativeWhileRuleRule()); } 
	 EOF 
;

// Rule IterativeWhileRule
ruleIterativeWhileRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIterativeWhileRuleAccess().getGroup()); }
		(rule__IterativeWhileRule__Group__0)
		{ after(grammarAccess.getIterativeWhileRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenameofDomain
entryRulenameofDomain
:
{ before(grammarAccess.getNameofDomainRule()); }
	 rulenameofDomain
{ after(grammarAccess.getNameofDomainRule()); } 
	 EOF 
;

// Rule nameofDomain
rulenameofDomain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameofDomainAccess().getNameAssignment()); }
		(rule__NameofDomain__NameAssignment)
		{ after(grammarAccess.getNameofDomainAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMOD_ID
entryRuleMOD_ID
:
{ before(grammarAccess.getMOD_IDRule()); }
	 ruleMOD_ID
{ after(grammarAccess.getMOD_IDRule()); } 
	 EOF 
;

// Rule MOD_ID
ruleMOD_ID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMOD_IDAccess().getGroup()); }
		(rule__MOD_ID__Group__0)
		{ after(grammarAccess.getMOD_IDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleID_VARIABLE
entryRuleID_VARIABLE
:
{ before(grammarAccess.getID_VARIABLERule()); }
	 ruleID_VARIABLE
{ after(grammarAccess.getID_VARIABLERule()); } 
	 EOF 
;

// Rule ID_VARIABLE
ruleID_VARIABLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getID_VARIABLEAccess().getGroup()); }
		(rule__ID_VARIABLE__Group__0)
		{ after(grammarAccess.getID_VARIABLEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__TypeAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsmAccess().getTypeAsmKeyword_1_0_0()); }
		'asm'
		{ after(grammarAccess.getAsmAccess().getTypeAsmKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAsmAccess().getTypeModuleKeyword_1_0_1()); }
		'module'
		{ after(grammarAccess.getAsmAccess().getTypeModuleKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__NameAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsmAccess().getNameExtendedNameForAsmParserRuleCall_2_0_0()); }
		ruleextendedNameForAsm
		{ after(grammarAccess.getAsmAccess().getNameExtendedNameForAsmParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAsmAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getAsmAccess().getNameSTRINGTerminalRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__ModuleNameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getModuleNameMOD_IDParserRuleCall_1_0_0()); }
		ruleMOD_ID
		{ after(grammarAccess.getImportClauseAccess().getModuleNameMOD_IDParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportClauseAccess().getModuleNameSTRINGTerminalRuleCall_1_0_1()); }
		RULE_STRING
		{ after(grammarAccess.getImportClauseAccess().getModuleNameSTRINGTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportClauseAccess().getGroup_1_0()); }
		(rule__ExportClause__Group_1_0__0)
		{ after(grammarAccess.getExportClauseAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getExportClauseAccess().getExportAllAssignment_1_1()); }
		(rule__ExportClause__ExportAllAssignment_1_1)
		{ after(grammarAccess.getExportClauseAccess().getExportAllAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInitialization__DomainNameAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInitializationAccess().getDomainNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAgentInitializationAccess().getDomainNameIDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAgentInitializationAccess().getDomainNameAgentKeyword_1_0_1()); }
		'Agent'
		{ after(grammarAccess.getAgentInitializationAccess().getDomainNameAgentKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getMacroDeclarationParserRuleCall_0()); }
		ruleMacroDeclaration
		{ after(grammarAccess.getRuleDeclarationAccess().getMacroDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleDeclarationAccess().getTurboDeclarationParserRuleCall_1()); }
		ruleTurboDeclaration
		{ after(grammarAccess.getRuleDeclarationAccess().getTurboDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getInvariantParserRuleCall_0()); }
		ruleInvariant
		{ after(grammarAccess.getPropertyAccess().getInvariantParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropertyAccess().getTemporalPropertyParserRuleCall_1()); }
		ruleTemporalProperty
		{ after(grammarAccess.getPropertyAccess().getTemporalPropertyParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemporalProperty__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemporalPropertyAccess().getCtlSpecParserRuleCall_0()); }
		ruleCtlSpec
		{ after(grammarAccess.getTemporalPropertyAccess().getCtlSpecParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTemporalPropertyAccess().getLtlSpecParserRuleCall_1()); }
		ruleLtlSpec
		{ after(grammarAccess.getTemporalPropertyAccess().getLtlSpecParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpec__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCtlSpecAccess().getCTLKeyword_0_0()); }
		'CTL'
		{ after(grammarAccess.getCtlSpecAccess().getCTLKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCtlSpecAccess().getCTLSPECKeyword_0_1()); }
		'CTLSPEC'
		{ after(grammarAccess.getCtlSpecAccess().getCTLSPECKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpec__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLtlSpecAccess().getLTLKeyword_0_0()); }
		'LTL'
		{ after(grammarAccess.getLtlSpecAccess().getLTLKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLtlSpecAccess().getLTLSPECKeyword_0_1()); }
		'LTLSPEC'
		{ after(grammarAccess.getLtlSpecAccess().getLTLSPECKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FairnessConstraint__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFairnessConstraintAccess().getJusticeConstraintParserRuleCall_0()); }
		ruleJusticeConstraint
		{ after(grammarAccess.getFairnessConstraintAccess().getJusticeConstraintParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFairnessConstraintAccess().getCompassionConstraintParserRuleCall_1()); }
		ruleCompassionConstraint
		{ after(grammarAccess.getFairnessConstraintAccess().getCompassionConstraintParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAccess().getConcreteDomainParserRuleCall_0()); }
		ruleConcreteDomain
		{ after(grammarAccess.getDomainAccess().getConcreteDomainParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDomainAccess().getTypeDomainParserRuleCall_1()); }
		ruleTypeDomain
		{ after(grammarAccess.getDomainAccess().getTypeDomainParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDomain__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDomainAccess().getAnyDomainParserRuleCall_0()); }
		ruleAnyDomain
		{ after(grammarAccess.getTypeDomainAccess().getAnyDomainParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDomainAccess().getStructuredTDParserRuleCall_1()); }
		ruleStructuredTD
		{ after(grammarAccess.getTypeDomainAccess().getStructuredTDParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDomainAccess().getEnumTDParserRuleCall_2()); }
		ruleEnumTD
		{ after(grammarAccess.getTypeDomainAccess().getEnumTDParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDomainAccess().getAbstractTDParserRuleCall_3()); }
		ruleAbstractTD
		{ after(grammarAccess.getTypeDomainAccess().getAbstractTDParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDomainAccess().getBasicTDParserRuleCall_4()); }
		ruleBasicTD
		{ after(grammarAccess.getTypeDomainAccess().getBasicTDParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicTD__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTDAccess().getNameAssignment_2_0()); }
		(rule__BasicTD__NameAssignment_2_0)
		{ after(grammarAccess.getBasicTDAccess().getNameAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTDAccess().getStandardDomainParserRuleCall_2_1()); }
		ruleStandardDomain
		{ after(grammarAccess.getBasicTDAccess().getStandardDomainParserRuleCall_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardDomain__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStandardDomainAccess().getIntegerDomainParserRuleCall_0()); }
		ruleIntegerDomain
		{ after(grammarAccess.getStandardDomainAccess().getIntegerDomainParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStandardDomainAccess().getRealDomainParserRuleCall_1()); }
		ruleRealDomain
		{ after(grammarAccess.getStandardDomainAccess().getRealDomainParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStandardDomainAccess().getStringDomainParserRuleCall_2()); }
		ruleStringDomain
		{ after(grammarAccess.getStandardDomainAccess().getStringDomainParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStandardDomainAccess().getNaturalDomainParserRuleCall_3()); }
		ruleNaturalDomain
		{ after(grammarAccess.getStandardDomainAccess().getNaturalDomainParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStandardDomainAccess().getCharDomainParserRuleCall_4()); }
		ruleCharDomain
		{ after(grammarAccess.getStandardDomainAccess().getCharDomainParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStandardDomainAccess().getComplexDomainParserRuleCall_5()); }
		ruleComplexDomain
		{ after(grammarAccess.getStandardDomainAccess().getComplexDomainParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStandardDomainAccess().getBooleanDomainParserRuleCall_6()); }
		ruleBooleanDomain
		{ after(grammarAccess.getStandardDomainAccess().getBooleanDomainParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getStandardDomainAccess().getUndefDomainParserRuleCall_7()); }
		ruleUndefDomain
		{ after(grammarAccess.getStandardDomainAccess().getUndefDomainParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractTD__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractTDAccess().getGenericAbstractTDParserRuleCall_0()); }
		ruleGenericAbstractTD
		{ after(grammarAccess.getAbstractTDAccess().getGenericAbstractTDParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTDAccess().getAgentDomainParserRuleCall_1()); }
		ruleAgentDomain
		{ after(grammarAccess.getAbstractTDAccess().getAgentDomainParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractTDAccess().getReserveDomainParserRuleCall_2()); }
		ruleReserveDomain
		{ after(grammarAccess.getAbstractTDAccess().getReserveDomainParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Alternatives_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTDAccess().getVerticalLineKeyword_6_0_0()); }
		'|'
		{ after(grammarAccess.getEnumTDAccess().getVerticalLineKeyword_6_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnumTDAccess().getCommaKeyword_6_0_1()); }
		','
		{ after(grammarAccess.getEnumTDAccess().getCommaKeyword_6_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTD__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredTDAccess().getRuleDomainParserRuleCall_0()); }
		ruleRuleDomain
		{ after(grammarAccess.getStructuredTDAccess().getRuleDomainParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStructuredTDAccess().getProductDomainParserRuleCall_1()); }
		ruleProductDomain
		{ after(grammarAccess.getStructuredTDAccess().getProductDomainParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStructuredTDAccess().getSequenceDomainParserRuleCall_2()); }
		ruleSequenceDomain
		{ after(grammarAccess.getStructuredTDAccess().getSequenceDomainParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStructuredTDAccess().getPowersetDomainParserRuleCall_3()); }
		rulePowersetDomain
		{ after(grammarAccess.getStructuredTDAccess().getPowersetDomainParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStructuredTDAccess().getBagDomainParserRuleCall_4()); }
		ruleBagDomain
		{ after(grammarAccess.getStructuredTDAccess().getBagDomainParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStructuredTDAccess().getMapDomainParserRuleCall_5()); }
		ruleMapDomain
		{ after(grammarAccess.getStructuredTDAccess().getMapDomainParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetDomainByID__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetDomainByIDAccess().getStructuredTDParserRuleCall_0()); }
		ruleStructuredTD
		{ after(grammarAccess.getGetDomainByIDAccess().getStructuredTDParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGetDomainByIDAccess().getNameofDomainParserRuleCall_1()); }
		rulenameofDomain
		{ after(grammarAccess.getGetDomainByIDAccess().getNameofDomainParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getGetDomainByIDAccess().getStandardDomainParserRuleCall_2()); }
		ruleStandardDomain
		{ after(grammarAccess.getGetDomainByIDAccess().getStandardDomainParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getGetDomainByIDAccess().getAbstractTDParserRuleCall_3()); }
		ruleAbstractTD
		{ after(grammarAccess.getGetDomainByIDAccess().getAbstractTDParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getGetDomainByIDAccess().getNameAssignment_4()); }
		(rule__GetDomainByID__NameAssignment_4)
		{ after(grammarAccess.getGetDomainByIDAccess().getNameAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getGetDomainByIDAccess().getNameAssignment_5()); }
		(rule__GetDomainByID__NameAssignment_5)
		{ after(grammarAccess.getGetDomainByIDAccess().getNameAssignment_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getBasicFunctionParserRuleCall_0()); }
		ruleBasicFunction
		{ after(grammarAccess.getFunctionAccess().getBasicFunctionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getDerivedFunctionParserRuleCall_1()); }
		ruleDerivedFunction
		{ after(grammarAccess.getFunctionAccess().getDerivedFunctionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicFunction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicFunctionAccess().getStaticFunctionParserRuleCall_0()); }
		ruleStaticFunction
		{ after(grammarAccess.getBasicFunctionAccess().getStaticFunctionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicFunctionAccess().getDynamicFunctionParserRuleCall_1()); }
		ruleDynamicFunction
		{ after(grammarAccess.getBasicFunctionAccess().getDynamicFunctionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DynamicFunction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDynamicFunctionAccess().getOutFunctionParserRuleCall_0()); }
		ruleOutFunction
		{ after(grammarAccess.getDynamicFunctionAccess().getOutFunctionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDynamicFunctionAccess().getMonitoredFunctionParserRuleCall_1()); }
		ruleMonitoredFunction
		{ after(grammarAccess.getDynamicFunctionAccess().getMonitoredFunctionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDynamicFunctionAccess().getSharedFunctionParserRuleCall_2()); }
		ruleSharedFunction
		{ after(grammarAccess.getDynamicFunctionAccess().getSharedFunctionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDynamicFunctionAccess().getControlledFunctionParserRuleCall_3()); }
		ruleControlledFunction
		{ after(grammarAccess.getDynamicFunctionAccess().getControlledFunctionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getDynamicFunctionAccess().getLocalFunctionParserRuleCall_4()); }
		ruleLocalFunction
		{ after(grammarAccess.getDynamicFunctionAccess().getLocalFunctionParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedNameForFunction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendedNameForFunctionAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getExtendedNameForFunctionAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameForFunctionAccess().getAndKeyword_1()); }
		'and'
		{ after(grammarAccess.getExtendedNameForFunctionAccess().getAndKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameForFunctionAccess().getOrKeyword_2()); }
		'or'
		{ after(grammarAccess.getExtendedNameForFunctionAccess().getOrKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameForFunctionAccess().getNotKeyword_3()); }
		'not'
		{ after(grammarAccess.getExtendedNameForFunctionAccess().getNotKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameForFunctionAccess().getXorKeyword_4()); }
		'xor'
		{ after(grammarAccess.getExtendedNameForFunctionAccess().getXorKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameForFunctionAccess().getModKeyword_5()); }
		'mod'
		{ after(grammarAccess.getExtendedNameForFunctionAccess().getModKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameForFunctionAccess().getIffKeyword_6()); }
		'iff'
		{ after(grammarAccess.getExtendedNameForFunctionAccess().getIffKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameForFunctionAccess().getImpliesKeyword_7()); }
		'implies'
		{ after(grammarAccess.getExtendedNameForFunctionAccess().getImpliesKeyword_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedNameForAsm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendedNameForAsmAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getExtendedNameForAsmAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameForAsmAccess().getENUM_IDTerminalRuleCall_1()); }
		RULE_ENUM_ID
		{ after(grammarAccess.getExtendedNameForAsmAccess().getENUM_IDTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameForAsmAccess().getWhileKeyword_2()); }
		'while'
		{ after(grammarAccess.getExtendedNameForAsmAccess().getWhileKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameForAsmAccess().getForKeyword_3()); }
		'for'
		{ after(grammarAccess.getExtendedNameForAsmAccess().getForKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameForAsmAccess().getMainKeyword_4()); }
		'main'
		{ after(grammarAccess.getExtendedNameForAsmAccess().getMainKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendedNameAccess().getRULE_IDTerminalRuleCall_0()); }
		RULE_RULE_ID
		{ after(grammarAccess.getExtendedNameAccess().getRULE_IDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getExtendedNameAccess().getIDTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedNameAccess().getENUM_IDTerminalRuleCall_2()); }
		RULE_ENUM_ID
		{ after(grammarAccess.getExtendedNameAccess().getENUM_IDTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getTermAccess().getExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getDomainTermParserRuleCall_1()); }
		ruleDomainTerm
		{ after(grammarAccess.getTermAccess().getDomainTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getExtendedTermParserRuleCall_2()); }
		ruleExtendedTerm
		{ after(grammarAccess.getTermAccess().getExtendedTermParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__OpAlternatives_1_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImpliesIffExpressionAccess().getOpImpliesKeyword_1_0_0_1_0_0()); }
		'implies'
		{ after(grammarAccess.getImpliesIffExpressionAccess().getOpImpliesKeyword_1_0_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImpliesIffExpressionAccess().getOpIffKeyword_1_0_0_1_0_1()); }
		'iff'
		{ after(grammarAccess.getImpliesIffExpressionAccess().getOpIffKeyword_1_0_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__OpAlternatives_1_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorOrExpressionAccess().getOpXorKeyword_1_0_0_1_0_0()); }
		'xor'
		{ after(grammarAccess.getXorOrExpressionAccess().getOpXorKeyword_1_0_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getXorOrExpressionAccess().getOpOrKeyword_1_0_0_1_0_1()); }
		'or'
		{ after(grammarAccess.getXorOrExpressionAccess().getOpOrKeyword_1_0_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAlternatives_1_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpEqualsSignKeyword_1_0_0_1_0_0()); }
		'='
		{ after(grammarAccess.getEqualityExpressionAccess().getOpEqualsSignKeyword_1_0_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_0_0_1_0_1()); }
		'!='
		{ after(grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_0_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__OpAlternatives_1_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareExpressionAccess().getOpGreaterThanSignKeyword_1_0_0_1_0_0()); }
		'>'
		{ after(grammarAccess.getCompareExpressionAccess().getOpGreaterThanSignKeyword_1_0_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareExpressionAccess().getOpLessThanSignKeyword_1_0_0_1_0_1()); }
		'<'
		{ after(grammarAccess.getCompareExpressionAccess().getOpLessThanSignKeyword_1_0_0_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompareExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_0_1_0_2()); }
		'>='
		{ after(grammarAccess.getCompareExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_0_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompareExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_0_1_0_3()); }
		'<='
		{ after(grammarAccess.getCompareExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_0_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAlternatives_1_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpPlusSignKeyword_1_0_0_1_0_0()); }
		'+'
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpPlusSignKeyword_1_0_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_0_0_1_0_1()); }
		'-'
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_0_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAlternatives_1_0_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_0_0_1_0_0()); }
		'*'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_0_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpSolidusKeyword_1_0_0_1_0_1()); }
		'/'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpSolidusKeyword_1_0_0_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpModKeyword_1_0_0_1_0_2()); }
		'mod'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpModKeyword_1_0_0_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperationAccess().getGroup_0()); }
		(rule__UnaryOperation__Group_0__0)
		{ after(grammarAccess.getUnaryOperationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperationAccess().getBasicExprParserRuleCall_1()); }
		rulebasicExpr
		{ after(grammarAccess.getUnaryOperationAccess().getBasicExprParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperationAccess().getParenthesizedExpressionParserRuleCall_2()); }
		ruleParenthesizedExpression
		{ after(grammarAccess.getUnaryOperationAccess().getParenthesizedExpressionParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__OpAlternatives_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperationAccess().getOpNotKeyword_0_0_0_0()); }
		'not'
		{ after(grammarAccess.getUnaryOperationAccess().getOpNotKeyword_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperationAccess().getOpPlusSignKeyword_0_0_0_1()); }
		'+'
		{ after(grammarAccess.getUnaryOperationAccess().getOpPlusSignKeyword_0_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperationAccess().getOpHyphenMinusKeyword_0_0_0_2()); }
		'-'
		{ after(grammarAccess.getUnaryOperationAccess().getOpHyphenMinusKeyword_0_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicExpr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicExprAccess().getBasicTermParserRuleCall_0()); }
		ruleBasicTerm
		{ after(grammarAccess.getBasicExprAccess().getBasicTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicExprAccess().getFiniteQuantificationTermParserRuleCall_1()); }
		ruleFiniteQuantificationTerm
		{ after(grammarAccess.getBasicExprAccess().getFiniteQuantificationTermParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTermAccess().getFunctionTermParserRuleCall_0()); }
		ruleFunctionTerm
		{ after(grammarAccess.getBasicTermAccess().getFunctionTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getConstantTermParserRuleCall_1()); }
		ruleConstantTerm
		{ after(grammarAccess.getBasicTermAccess().getConstantTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getVariableTermParserRuleCall_2()); }
		ruleVariableTerm
		{ after(grammarAccess.getBasicTermAccess().getVariableTermParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicTermAccess().getLocationTermParserRuleCall_3()); }
		ruleLocationTerm
		{ after(grammarAccess.getBasicTermAccess().getLocationTermParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantTermAccess().getNumberTermParserRuleCall_0()); }
		ruleNumberTerm
		{ after(grammarAccess.getConstantTermAccess().getNumberTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantTermAccess().getComplexTermParserRuleCall_1()); }
		ruleComplexTerm
		{ after(grammarAccess.getConstantTermAccess().getComplexTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantTermAccess().getNaturalTermParserRuleCall_2()); }
		ruleNaturalTerm
		{ after(grammarAccess.getConstantTermAccess().getNaturalTermParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantTermAccess().getCharTermParserRuleCall_3()); }
		ruleCharTerm
		{ after(grammarAccess.getConstantTermAccess().getCharTermParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getConstantTermAccess().getStringTermParserRuleCall_4()); }
		ruleStringTerm
		{ after(grammarAccess.getConstantTermAccess().getStringTermParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getConstantTermAccess().getBooleanTermParserRuleCall_5()); }
		ruleBooleanTerm
		{ after(grammarAccess.getConstantTermAccess().getBooleanTermParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getConstantTermAccess().getUndefTermParserRuleCall_6()); }
		ruleUndefTerm
		{ after(grammarAccess.getConstantTermAccess().getUndefTermParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getConstantTermAccess().getEnumTermParserRuleCall_7()); }
		ruleEnumTerm
		{ after(grammarAccess.getConstantTermAccess().getEnumTermParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberTermAccess().getIntegerTermParserRuleCall_0()); }
		ruleIntegerTerm
		{ after(grammarAccess.getNumberTermAccess().getIntegerTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberTermAccess().getRealTermParserRuleCall_1()); }
		ruleRealTerm
		{ after(grammarAccess.getNumberTermAccess().getRealTermParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTerm__SymbolAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanTermAccess().getSymbolTrueKeyword_0_0()); }
		'true'
		{ after(grammarAccess.getBooleanTermAccess().getSymbolTrueKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanTermAccess().getSymbolFalseKeyword_0_1()); }
		'false'
		{ after(grammarAccess.getBooleanTermAccess().getSymbolFalseKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__SymbolAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerTermAccess().getSymbolNUMBER_TOKENTerminalRuleCall_0_0()); }
		RULE_NUMBER_TOKEN
		{ after(grammarAccess.getIntegerTermAccess().getSymbolNUMBER_TOKENTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntegerTermAccess().getSymbolNumberWithSignParserRuleCall_0_1()); }
		ruleNumberWithSign
		{ after(grammarAccess.getIntegerTermAccess().getSymbolNumberWithSignParserRuleCall_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealNumberWithSign__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealNumberWithSignAccess().getPlusSignKeyword_0_0()); }
		'+'
		{ after(grammarAccess.getRealNumberWithSignAccess().getPlusSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRealNumberWithSignAccess().getHyphenMinusKeyword_0_1()); }
		'-'
		{ after(grammarAccess.getRealNumberWithSignAccess().getHyphenMinusKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberWithSign__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberWithSignAccess().getPlusSignKeyword_0_0()); }
		'+'
		{ after(grammarAccess.getNumberWithSignAccess().getPlusSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumberWithSignAccess().getHyphenMinusKeyword_0_1()); }
		'-'
		{ after(grammarAccess.getNumberWithSignAccess().getHyphenMinusKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendedTermAccess().getConditionalTermParserRuleCall_0()); }
		ruleConditionalTerm
		{ after(grammarAccess.getExtendedTermAccess().getConditionalTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedTermAccess().getCaseTermParserRuleCall_1()); }
		ruleCaseTerm
		{ after(grammarAccess.getExtendedTermAccess().getCaseTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedTermAccess().getTupleTermParserRuleCall_2()); }
		ruleTupleTerm
		{ after(grammarAccess.getExtendedTermAccess().getTupleTermParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedTermAccess().getVariableBindingTermParserRuleCall_3()); }
		ruleVariableBindingTerm
		{ after(grammarAccess.getExtendedTermAccess().getVariableBindingTermParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedTermAccess().getCollectionTermParserRuleCall_4()); }
		ruleCollectionTerm
		{ after(grammarAccess.getExtendedTermAccess().getCollectionTermParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getExtendedTermAccess().getRuleAsTermParserRuleCall_5()); }
		ruleRuleAsTerm
		{ after(grammarAccess.getExtendedTermAccess().getRuleAsTermParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CollectionTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCollectionTermAccess().getSequenceTermParserRuleCall_0()); }
		ruleSequenceTerm
		{ after(grammarAccess.getCollectionTermAccess().getSequenceTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTermAccess().getMapTermParserRuleCall_1()); }
		ruleMapTerm
		{ after(grammarAccess.getCollectionTermAccess().getMapTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTermAccess().getSetTermParserRuleCall_2()); }
		ruleSetTerm
		{ after(grammarAccess.getCollectionTermAccess().getSetTermParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getCollectionTermAccess().getBagTermParserRuleCall_3()); }
		ruleBagTerm
		{ after(grammarAccess.getCollectionTermAccess().getBagTermParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Alternatives_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		(
			{ before(grammarAccess.getSequenceTermAccess().getGroup_2_1_0()); }
			(rule__SequenceTerm__Group_2_1_0__0)
			{ after(grammarAccess.getSequenceTermAccess().getGroup_2_1_0()); }
		)
		(
			{ before(grammarAccess.getSequenceTermAccess().getGroup_2_1_0()); }
			(rule__SequenceTerm__Group_2_1_0__0)*
			{ after(grammarAccess.getSequenceTermAccess().getGroup_2_1_0()); }
		)
	)
	|
	(
		{ before(grammarAccess.getSequenceTermAccess().getGroup_2_1_1()); }
		(rule__SequenceTerm__Group_2_1_1__0)
		{ after(grammarAccess.getSequenceTermAccess().getGroup_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_0()); }
		'->'
		{ after(grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getMapTermAccess().getGroup_2_1()); }
		(rule__MapTerm__Group_2_1__0)
		{ after(grammarAccess.getMapTermAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Alternatives_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		(
			{ before(grammarAccess.getSetTermAccess().getGroup_2_1_0()); }
			(rule__SetTerm__Group_2_1_0__0)
			{ after(grammarAccess.getSetTermAccess().getGroup_2_1_0()); }
		)
		(
			{ before(grammarAccess.getSetTermAccess().getGroup_2_1_0()); }
			(rule__SetTerm__Group_2_1_0__0)*
			{ after(grammarAccess.getSetTermAccess().getGroup_2_1_0()); }
		)
	)
	|
	(
		{ before(grammarAccess.getSetTermAccess().getGroup_2_1_1()); }
		(rule__SetTerm__Group_2_1_1__0)
		{ after(grammarAccess.getSetTermAccess().getGroup_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Alternatives_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		(
			{ before(grammarAccess.getBagTermAccess().getGroup_2_1_0()); }
			(rule__BagTerm__Group_2_1_0__0)
			{ after(grammarAccess.getBagTermAccess().getGroup_2_1_0()); }
		)
		(
			{ before(grammarAccess.getBagTermAccess().getGroup_2_1_0()); }
			(rule__BagTerm__Group_2_1_0__0)*
			{ after(grammarAccess.getBagTermAccess().getGroup_2_1_0()); }
		)
	)
	|
	(
		{ before(grammarAccess.getBagTermAccess().getGroup_2_1_1()); }
		(rule__BagTerm__Group_2_1_1__0)
		{ after(grammarAccess.getBagTermAccess().getGroup_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableBindingTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableBindingTermAccess().getLetTermParserRuleCall_0()); }
		ruleLetTerm
		{ after(grammarAccess.getVariableBindingTermAccess().getLetTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableBindingTermAccess().getFiniteQuantificationTermParserRuleCall_1()); }
		ruleFiniteQuantificationTerm
		{ after(grammarAccess.getVariableBindingTermAccess().getFiniteQuantificationTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableBindingTermAccess().getComprehensionTermParserRuleCall_2()); }
		ruleComprehensionTerm
		{ after(grammarAccess.getVariableBindingTermAccess().getComprehensionTermParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FiniteQuantificationTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFiniteQuantificationTermAccess().getForallTermParserRuleCall_0()); }
		ruleForallTerm
		{ after(grammarAccess.getFiniteQuantificationTermAccess().getForallTermParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFiniteQuantificationTermAccess().getExistUniqueTermParserRuleCall_1()); }
		ruleExistUniqueTerm
		{ after(grammarAccess.getFiniteQuantificationTermAccess().getExistUniqueTermParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFiniteQuantificationTermAccess().getExistTermParserRuleCall_2()); }
		ruleExistTerm
		{ after(grammarAccess.getFiniteQuantificationTermAccess().getExistTermParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComprehensionTerm__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComprehensionTermAccess().getSetCTParserRuleCall_0()); }
		ruleSetCT
		{ after(grammarAccess.getComprehensionTermAccess().getSetCTParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComprehensionTermAccess().getMapCTParserRuleCall_1()); }
		ruleMapCT
		{ after(grammarAccess.getComprehensionTermAccess().getMapCTParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getComprehensionTermAccess().getSequenceCTParserRuleCall_2()); }
		ruleSequenceCT
		{ after(grammarAccess.getComprehensionTermAccess().getSequenceCTParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getComprehensionTermAccess().getBagCTParserRuleCall_3()); }
		ruleBagCT
		{ after(grammarAccess.getComprehensionTermAccess().getBagCTParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getUpdateRuleParserRuleCall_0()); }
		ruleUpdateRule
		{ after(grammarAccess.getRuleAccess().getUpdateRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getTurboReturnRuleParserRuleCall_1()); }
		ruleTurboReturnRule
		{ after(grammarAccess.getRuleAccess().getTurboReturnRuleParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getBasicRuleParserRuleCall_2()); }
		ruleBasicRule
		{ after(grammarAccess.getRuleAccess().getBasicRuleParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getTermAsRuleParserRuleCall_3()); }
		ruleTermAsRule
		{ after(grammarAccess.getRuleAccess().getTermAsRuleParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getTurboRuleParserRuleCall_4()); }
		ruleTurboRule
		{ after(grammarAccess.getRuleAccess().getTurboRuleParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getRuleAccess().getDerivedRuleParserRuleCall_5()); }
		ruleDerivedRule
		{ after(grammarAccess.getRuleAccess().getDerivedRuleParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__TermAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAsRuleAccess().getTermFunctionTermParserRuleCall_0_0_0()); }
		ruleFunctionTerm
		{ after(grammarAccess.getTermAsRuleAccess().getTermFunctionTermParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermAsRuleAccess().getTermVariableTermParserRuleCall_0_0_1()); }
		ruleVariableTerm
		{ after(grammarAccess.getTermAsRuleAccess().getTermVariableTermParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicRuleAccess().getSkipRuleParserRuleCall_0()); }
		ruleSkipRule
		{ after(grammarAccess.getBasicRuleAccess().getSkipRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicRuleAccess().getMacroCallRuleParserRuleCall_1()); }
		ruleMacroCallRule
		{ after(grammarAccess.getBasicRuleAccess().getMacroCallRuleParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicRuleAccess().getBlockRuleParserRuleCall_2()); }
		ruleBlockRule
		{ after(grammarAccess.getBasicRuleAccess().getBlockRuleParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicRuleAccess().getConditionalRuleParserRuleCall_3()); }
		ruleConditionalRule
		{ after(grammarAccess.getBasicRuleAccess().getConditionalRuleParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicRuleAccess().getChooseRuleParserRuleCall_4()); }
		ruleChooseRule
		{ after(grammarAccess.getBasicRuleAccess().getChooseRuleParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getBasicRuleAccess().getForallRuleParserRuleCall_5()); }
		ruleForallRule
		{ after(grammarAccess.getBasicRuleAccess().getForallRuleParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getBasicRuleAccess().getLetRuleParserRuleCall_6()); }
		ruleLetRule
		{ after(grammarAccess.getBasicRuleAccess().getLetRuleParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getBasicRuleAccess().getExtendRuleParserRuleCall_7()); }
		ruleExtendRule
		{ after(grammarAccess.getBasicRuleAccess().getExtendRuleParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateRule__LocationAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateRuleAccess().getLocationLocationTermParserRuleCall_0_0_0()); }
		ruleLocationTerm
		{ after(grammarAccess.getUpdateRuleAccess().getLocationLocationTermParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUpdateRuleAccess().getLocationVariableTermParserRuleCall_0_0_1()); }
		ruleVariableTerm
		{ after(grammarAccess.getUpdateRuleAccess().getLocationVariableTermParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboRuleAccess().getSeqRuleParserRuleCall_0()); }
		ruleSeqRule
		{ after(grammarAccess.getTurboRuleAccess().getSeqRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTurboRuleAccess().getIterateRuleParserRuleCall_1()); }
		ruleIterateRule
		{ after(grammarAccess.getTurboRuleAccess().getIterateRuleParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTurboRuleAccess().getTurboCallRuleParserRuleCall_2()); }
		ruleTurboCallRule
		{ after(grammarAccess.getTurboRuleAccess().getTurboCallRuleParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getTurboRuleAccess().getTurboLocalStateRuleParserRuleCall_3()); }
		ruleTurboLocalStateRule
		{ after(grammarAccess.getTurboRuleAccess().getTurboLocalStateRuleParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboReturnRule__LocationAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboReturnRuleAccess().getLocationFunctionTermParserRuleCall_0_0_0()); }
		ruleFunctionTerm
		{ after(grammarAccess.getTurboReturnRuleAccess().getLocationFunctionTermParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTurboReturnRuleAccess().getLocationVariableTermParserRuleCall_0_0_1()); }
		ruleVariableTerm
		{ after(grammarAccess.getTurboReturnRuleAccess().getLocationVariableTermParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedRuleAccess().getBasicDerivedRuleParserRuleCall_0()); }
		ruleBasicDerivedRule
		{ after(grammarAccess.getDerivedRuleAccess().getBasicDerivedRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDerivedRuleAccess().getTurboDerivedRuleParserRuleCall_1()); }
		ruleTurboDerivedRule
		{ after(grammarAccess.getDerivedRuleAccess().getTurboDerivedRuleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDerivedRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboDerivedRuleAccess().getRecursiveWhileRuleParserRuleCall_0()); }
		ruleRecursiveWhileRule
		{ after(grammarAccess.getTurboDerivedRuleAccess().getRecursiveWhileRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTurboDerivedRuleAccess().getIterativeWhileRuleParserRuleCall_1()); }
		ruleIterativeWhileRule
		{ after(grammarAccess.getTurboDerivedRuleAccess().getIterativeWhileRuleParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMOD_IDAccess().getAlternatives_0_0()); }
		(rule__MOD_ID__Alternatives_0_0)
		{ after(grammarAccess.getMOD_IDAccess().getAlternatives_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMOD_IDAccess().getFullStopFullStopSolidusKeyword_0_1()); }
		('../')*
		{ after(grammarAccess.getMOD_IDAccess().getFullStopFullStopSolidusKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMOD_IDAccess().getFullStopSolidusKeyword_0_2()); }
		('./')*
		{ after(grammarAccess.getMOD_IDAccess().getFullStopSolidusKeyword_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_0_0_0()); }
		RULE_ENUM_ID
		{ after(grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_0_0_1()); }
		RULE_ID
		{ after(grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_1_0_0()); }
		RULE_ENUM_ID
		{ after(grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_1_0_1()); }
		RULE_ID
		{ after(grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_2_0()); }
		RULE_ENUM_ID
		{ after(grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_2_1()); }
		RULE_ID
		{ after(grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Alternatives_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_3_1_0()); }
		RULE_ENUM_ID
		{ after(grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_3_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_3_1_1()); }
		RULE_ID
		{ after(grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_3_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getMOD_IDAccess().getAsmKeyword_3_1_2()); }
		'asm'
		{ after(grammarAccess.getMOD_IDAccess().getAsmKeyword_3_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ID_VARIABLE__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getID_VARIABLEAccess().getIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getID_VARIABLEAccess().getIDTerminalRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getID_VARIABLEAccess().getRuleKeyword_1_1()); }
		'rule'
		{ after(grammarAccess.getID_VARIABLEAccess().getRuleKeyword_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getID_VARIABLEAccess().getAgentKeyword_1_2()); }
		'agent'
		{ after(grammarAccess.getID_VARIABLEAccess().getAgentKeyword_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getID_VARIABLEAccess().getSeqKeyword_1_3()); }
		'seq'
		{ after(grammarAccess.getID_VARIABLEAccess().getSeqKeyword_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group__0__Impl
	rule__Asm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getIsAsynchrAssignment_0()); }
	(rule__Asm__IsAsynchrAssignment_0)?
	{ after(grammarAccess.getAsmAccess().getIsAsynchrAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group__1__Impl
	rule__Asm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getTypeAssignment_1()); }
	(rule__Asm__TypeAssignment_1)
	{ after(grammarAccess.getAsmAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group__2__Impl
	rule__Asm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getNameAssignment_2()); }
	(rule__Asm__NameAssignment_2)
	{ after(grammarAccess.getAsmAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group__3__Impl
	rule__Asm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getHeaderSectionAssignment_3()); }
	(rule__Asm__HeaderSectionAssignment_3)
	{ after(grammarAccess.getAsmAccess().getHeaderSectionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group__4__Impl
	rule__Asm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getBodySectionAssignment_4()); }
	(rule__Asm__BodySectionAssignment_4)
	{ after(grammarAccess.getAsmAccess().getBodySectionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group__5__Impl
	rule__Asm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getGroup_5()); }
	(rule__Asm__Group_5__0)?
	{ after(grammarAccess.getAsmAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getGroup_6()); }
	(rule__Asm__Group_6__0)?
	{ after(grammarAccess.getAsmAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Asm__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group_5__0__Impl
	rule__Asm__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getMainKeyword_5_0()); }
	'main'
	{ after(grammarAccess.getAsmAccess().getMainKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getMainruleAssignment_5_1()); }
	(rule__Asm__MainruleAssignment_5_1)
	{ after(grammarAccess.getAsmAccess().getMainruleAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Asm__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group_6__0__Impl
	rule__Asm__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getInitialStateAssignment_6_0()); }
	(rule__Asm__InitialStateAssignment_6_0)*
	{ after(grammarAccess.getAsmAccess().getInitialStateAssignment_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group_6__1__Impl
	rule__Asm__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getDefaultKeyword_6_1()); }
	'default'
	{ after(grammarAccess.getAsmAccess().getDefaultKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group_6__2__Impl
	rule__Asm__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getDefaultInitialStateAssignment_6_2()); }
	(rule__Asm__DefaultInitialStateAssignment_6_2)
	{ after(grammarAccess.getAsmAccess().getDefaultInitialStateAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Asm__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAsmAccess().getInitialStateAssignment_6_3()); }
	(rule__Asm__InitialStateAssignment_6_3)*
	{ after(grammarAccess.getAsmAccess().getInitialStateAssignment_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__0__Impl
	rule__Header__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getImportClauseAssignment_0()); }
	(rule__Header__ImportClauseAssignment_0)*
	{ after(grammarAccess.getHeaderAccess().getImportClauseAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__1__Impl
	rule__Header__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getExportClauseAssignment_1()); }
	(rule__Header__ExportClauseAssignment_1)?
	{ after(grammarAccess.getHeaderAccess().getExportClauseAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getSignatureAssignment_2()); }
	(rule__Header__SignatureAssignment_2)
	{ after(grammarAccess.getHeaderAccess().getSignatureAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group__0__Impl
	rule__ImportClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportClauseAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group__1__Impl
	rule__ImportClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getModuleNameAssignment_1()); }
	(rule__ImportClause__ModuleNameAssignment_1)
	{ after(grammarAccess.getImportClauseAccess().getModuleNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getGroup_2()); }
	(rule__ImportClause__Group_2__0)?
	{ after(grammarAccess.getImportClauseAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_2__0__Impl
	rule__ImportClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getImportClauseAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_2__1__Impl
	rule__ImportClause__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getImportedListAssignment_2_1()); }
	(rule__ImportClause__ImportedListAssignment_2_1)
	{ after(grammarAccess.getImportClauseAccess().getImportedListAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_2__2__Impl
	rule__ImportClause__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getGroup_2_2()); }
	(rule__ImportClause__Group_2_2__0)*
	{ after(grammarAccess.getImportClauseAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getImportClauseAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportClause__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_2_2__0__Impl
	rule__ImportClause__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getImportClauseAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportClause__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportClauseAccess().getImportedListAssignment_2_2_1()); }
	(rule__ImportClause__ImportedListAssignment_2_2_1)
	{ after(grammarAccess.getImportClauseAccess().getImportedListAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExportClause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportClause__Group__0__Impl
	rule__ExportClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportClauseAccess().getExportKeyword_0()); }
	'export'
	{ after(grammarAccess.getExportClauseAccess().getExportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportClauseAccess().getAlternatives_1()); }
	(rule__ExportClause__Alternatives_1)
	{ after(grammarAccess.getExportClauseAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExportClause__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportClause__Group_1_0__0__Impl
	rule__ExportClause__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportClauseAccess().getExportedListAssignment_1_0_0()); }
	(rule__ExportClause__ExportedListAssignment_1_0_0)
	{ after(grammarAccess.getExportClauseAccess().getExportedListAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportClause__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportClauseAccess().getGroup_1_0_1()); }
	(rule__ExportClause__Group_1_0_1__0)*
	{ after(grammarAccess.getExportClauseAccess().getGroup_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExportClause__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportClause__Group_1_0_1__0__Impl
	rule__ExportClause__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportClauseAccess().getCommaKeyword_1_0_1_0()); }
	','
	{ after(grammarAccess.getExportClauseAccess().getCommaKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExportClause__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExportClauseAccess().getExportedListAssignment_1_0_1_1()); }
	(rule__ExportClause__ExportedListAssignment_1_0_1_1)
	{ after(grammarAccess.getExportClauseAccess().getExportedListAssignment_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__0__Impl
	rule__Signature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getSignatureAction_0()); }
	()
	{ after(grammarAccess.getSignatureAccess().getSignatureAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__1__Impl
	rule__Signature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getSignatureKeyword_1()); }
	'signature'
	{ after(grammarAccess.getSignatureAccess().getSignatureKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__2__Impl
	rule__Signature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getSignatureAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__3__Impl
	rule__Signature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getDomainAssignment_3()); }
	(rule__Signature__DomainAssignment_3)*
	{ after(grammarAccess.getSignatureAccess().getDomainAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signature__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignatureAccess().getFunctionAssignment_4()); }
	(rule__Signature__FunctionAssignment_4)*
	{ after(grammarAccess.getSignatureAccess().getFunctionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initialization__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialization__Group__0__Impl
	rule__Initialization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializationAccess().getInitKeyword_0()); }
	'init'
	{ after(grammarAccess.getInitializationAccess().getInitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialization__Group__1__Impl
	rule__Initialization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializationAccess().getNameAssignment_1()); }
	(rule__Initialization__NameAssignment_1)
	{ after(grammarAccess.getInitializationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialization__Group__2__Impl
	rule__Initialization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializationAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getInitializationAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialization__Group__3__Impl
	rule__Initialization__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializationAccess().getDomainInitializationAssignment_3()); }
	(rule__Initialization__DomainInitializationAssignment_3)*
	{ after(grammarAccess.getInitializationAccess().getDomainInitializationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialization__Group__4__Impl
	rule__Initialization__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializationAccess().getFunctionInitializationAssignment_4()); }
	(rule__Initialization__FunctionInitializationAssignment_4)*
	{ after(grammarAccess.getInitializationAccess().getFunctionInitializationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initialization__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitializationAccess().getAgentInitializationAssignment_5()); }
	(rule__Initialization__AgentInitializationAssignment_5)*
	{ after(grammarAccess.getInitializationAccess().getAgentInitializationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainInitialization__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainInitialization__Group__0__Impl
	rule__DomainInitialization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInitialization__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainInitializationAccess().getDomainKeyword_0()); }
	'domain'
	{ after(grammarAccess.getDomainInitializationAccess().getDomainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInitialization__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainInitialization__Group__1__Impl
	rule__DomainInitialization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInitialization__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainInitializationAccess().getInitializedDomainAssignment_1()); }
	(rule__DomainInitialization__InitializedDomainAssignment_1)
	{ after(grammarAccess.getDomainInitializationAccess().getInitializedDomainAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInitialization__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainInitialization__Group__2__Impl
	rule__DomainInitialization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInitialization__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainInitializationAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getDomainInitializationAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInitialization__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainInitialization__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInitialization__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainInitializationAccess().getBodyAssignment_3()); }
	(rule__DomainInitialization__BodyAssignment_3)
	{ after(grammarAccess.getDomainInitializationAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionInitialization__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group__0__Impl
	rule__FunctionInitialization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionInitializationAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group__1__Impl
	rule__FunctionInitialization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getInizializedFunctionNameAssignment_1()); }
	(rule__FunctionInitialization__InizializedFunctionNameAssignment_1)
	{ after(grammarAccess.getFunctionInitializationAccess().getInizializedFunctionNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group__2__Impl
	rule__FunctionInitialization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getGroup_2()); }
	(rule__FunctionInitialization__Group_2__0)?
	{ after(grammarAccess.getFunctionInitializationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group__3__Impl
	rule__FunctionInitialization__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getFunctionInitializationAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getBodyAssignment_4()); }
	(rule__FunctionInitialization__BodyAssignment_4)
	{ after(grammarAccess.getFunctionInitializationAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionInitialization__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group_2__0__Impl
	rule__FunctionInitialization__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getFunctionInitializationAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group_2__1__Impl
	rule__FunctionInitialization__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getVariablesAssignment_2_1()); }
	(rule__FunctionInitialization__VariablesAssignment_2_1)
	{ after(grammarAccess.getFunctionInitializationAccess().getVariablesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group_2__2__Impl
	rule__FunctionInitialization__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getInKeyword_2_2()); }
	'in'
	{ after(grammarAccess.getFunctionInitializationAccess().getInKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group_2__3__Impl
	rule__FunctionInitialization__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getDomainAssignment_2_3()); }
	(rule__FunctionInitialization__DomainAssignment_2_3)
	{ after(grammarAccess.getFunctionInitializationAccess().getDomainAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group_2__4__Impl
	rule__FunctionInitialization__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getGroup_2_4()); }
	(rule__FunctionInitialization__Group_2_4__0)*
	{ after(grammarAccess.getFunctionInitializationAccess().getGroup_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getRightParenthesisKeyword_2_5()); }
	')'
	{ after(grammarAccess.getFunctionInitializationAccess().getRightParenthesisKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionInitialization__Group_2_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group_2_4__0__Impl
	rule__FunctionInitialization__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getCommaKeyword_2_4_0()); }
	','
	{ after(grammarAccess.getFunctionInitializationAccess().getCommaKeyword_2_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group_2_4__1__Impl
	rule__FunctionInitialization__Group_2_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getVariablesAssignment_2_4_1()); }
	(rule__FunctionInitialization__VariablesAssignment_2_4_1)
	{ after(grammarAccess.getFunctionInitializationAccess().getVariablesAssignment_2_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group_2_4__2__Impl
	rule__FunctionInitialization__Group_2_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getInKeyword_2_4_2()); }
	'in'
	{ after(grammarAccess.getFunctionInitializationAccess().getInKeyword_2_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionInitialization__Group_2_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__Group_2_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionInitializationAccess().getDomainAssignment_2_4_3()); }
	(rule__FunctionInitialization__DomainAssignment_2_4_3)
	{ after(grammarAccess.getFunctionInitializationAccess().getDomainAssignment_2_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AgentInitialization__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInitialization__Group__0__Impl
	rule__AgentInitialization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInitialization__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInitializationAccess().getAgentKeyword_0()); }
	'agent'
	{ after(grammarAccess.getAgentInitializationAccess().getAgentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInitialization__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInitialization__Group__1__Impl
	rule__AgentInitialization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInitialization__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInitializationAccess().getDomainNameAssignment_1()); }
	(rule__AgentInitialization__DomainNameAssignment_1)
	{ after(grammarAccess.getAgentInitializationAccess().getDomainNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInitialization__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInitialization__Group__2__Impl
	rule__AgentInitialization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInitialization__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInitializationAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getAgentInitializationAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInitialization__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentInitialization__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInitialization__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentInitializationAccess().getProgramAssignment_3()); }
	(rule__AgentInitialization__ProgramAssignment_3)
	{ after(grammarAccess.getAgentInitializationAccess().getProgramAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Body__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__0__Impl
	rule__Body__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getBodyAction_0()); }
	()
	{ after(grammarAccess.getBodyAccess().getBodyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__1__Impl
	rule__Body__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getDefinitionsKeyword_1()); }
	'definitions'
	{ after(grammarAccess.getBodyAccess().getDefinitionsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__2__Impl
	rule__Body__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getBodyAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__3__Impl
	rule__Body__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getDomainDefinitionAssignment_3()); }
	(rule__Body__DomainDefinitionAssignment_3)*
	{ after(grammarAccess.getBodyAccess().getDomainDefinitionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__4__Impl
	rule__Body__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getFunctionDefinitionAssignment_4()); }
	(rule__Body__FunctionDefinitionAssignment_4)*
	{ after(grammarAccess.getBodyAccess().getFunctionDefinitionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__5__Impl
	rule__Body__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getRuleDeclarationAssignment_5()); }
	(rule__Body__RuleDeclarationAssignment_5)*
	{ after(grammarAccess.getBodyAccess().getRuleDeclarationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__6__Impl
	rule__Body__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getInvariantConstraintAssignment_6()); }
	(rule__Body__InvariantConstraintAssignment_6)*
	{ after(grammarAccess.getBodyAccess().getInvariantConstraintAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__7__Impl
	rule__Body__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getFairnessConstraintAssignment_7()); }
	(rule__Body__FairnessConstraintAssignment_7)*
	{ after(grammarAccess.getBodyAccess().getFairnessConstraintAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Body__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBodyAccess().getPropertyAssignment_8()); }
	(rule__Body__PropertyAssignment_8)*
	{ after(grammarAccess.getBodyAccess().getPropertyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainDefinition__Group__0__Impl
	rule__DomainDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainDefinitionAccess().getDomainKeyword_0()); }
	'domain'
	{ after(grammarAccess.getDomainDefinitionAccess().getDomainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainDefinition__Group__1__Impl
	rule__DomainDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainDefinitionAccess().getDefinedDomainNameAssignment_1()); }
	(rule__DomainDefinition__DefinedDomainNameAssignment_1)
	{ after(grammarAccess.getDomainDefinitionAccess().getDefinedDomainNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainDefinition__Group__2__Impl
	rule__DomainDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainDefinitionAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getDomainDefinitionAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DomainDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDomainDefinitionAccess().getBodyAssignment_3()); }
	(rule__DomainDefinition__BodyAssignment_3)
	{ after(grammarAccess.getDomainDefinitionAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__0__Impl
	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__1__Impl
	rule__FunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getDefinedFunctionNameAssignment_1()); }
	(rule__FunctionDefinition__DefinedFunctionNameAssignment_1)
	{ after(grammarAccess.getFunctionDefinitionAccess().getDefinedFunctionNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__2__Impl
	rule__FunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_2()); }
	(rule__FunctionDefinition__Group_2__0)?
	{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__3__Impl
	rule__FunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getFunctionDefinitionAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getBodyAssignment_4()); }
	(rule__FunctionDefinition__BodyAssignment_4)
	{ after(grammarAccess.getFunctionDefinitionAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_2__0__Impl
	rule__FunctionDefinition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_2__1__Impl
	rule__FunctionDefinition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getVariablesAssignment_2_1()); }
	(rule__FunctionDefinition__VariablesAssignment_2_1)
	{ after(grammarAccess.getFunctionDefinitionAccess().getVariablesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_2__2__Impl
	rule__FunctionDefinition__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getInKeyword_2_2()); }
	'in'
	{ after(grammarAccess.getFunctionDefinitionAccess().getInKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_2__3__Impl
	rule__FunctionDefinition__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getDomainAssignment_2_3()); }
	(rule__FunctionDefinition__DomainAssignment_2_3)
	{ after(grammarAccess.getFunctionDefinitionAccess().getDomainAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_2__4__Impl
	rule__FunctionDefinition__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_2_4()); }
	(rule__FunctionDefinition__Group_2_4__0)*
	{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_2_5()); }
	')'
	{ after(grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_2_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_2_4__0__Impl
	rule__FunctionDefinition__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_2_4_0()); }
	','
	{ after(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_2_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_2_4__1__Impl
	rule__FunctionDefinition__Group_2_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getVariablesAssignment_2_4_1()); }
	(rule__FunctionDefinition__VariablesAssignment_2_4_1)
	{ after(grammarAccess.getFunctionDefinitionAccess().getVariablesAssignment_2_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_2_4__2__Impl
	rule__FunctionDefinition__Group_2_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getInKeyword_2_4_2()); }
	'in'
	{ after(grammarAccess.getFunctionDefinitionAccess().getInKeyword_2_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionDefinition__Group_2_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_2_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionDefinitionAccess().getDomainAssignment_2_4_3()); }
	(rule__FunctionDefinition__DomainAssignment_2_4_3)
	{ after(grammarAccess.getFunctionDefinitionAccess().getDomainAssignment_2_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MacroDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group__0__Impl
	rule__MacroDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getMacroKeyword_0()); }
	('macro')?
	{ after(grammarAccess.getMacroDeclarationAccess().getMacroKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group__1__Impl
	rule__MacroDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getRuleKeyword_1()); }
	'rule'
	{ after(grammarAccess.getMacroDeclarationAccess().getRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group__2__Impl
	rule__MacroDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getNameAssignment_2()); }
	(rule__MacroDeclaration__NameAssignment_2)
	{ after(grammarAccess.getMacroDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group__3__Impl
	rule__MacroDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getGroup_3()); }
	(rule__MacroDeclaration__Group_3__0)?
	{ after(grammarAccess.getMacroDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group__4__Impl
	rule__MacroDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getGroup_4()); }
	(rule__MacroDeclaration__Group_4__0)?
	{ after(grammarAccess.getMacroDeclarationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group__5__Impl
	rule__MacroDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getEqualsSignKeyword_5()); }
	'='
	{ after(grammarAccess.getMacroDeclarationAccess().getEqualsSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getRuleBodyAssignment_6()); }
	(rule__MacroDeclaration__RuleBodyAssignment_6)
	{ after(grammarAccess.getMacroDeclarationAccess().getRuleBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MacroDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group_3__0__Impl
	rule__MacroDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getMacroDeclarationAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group_3__1__Impl
	rule__MacroDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getVariablesAssignment_3_1()); }
	(rule__MacroDeclaration__VariablesAssignment_3_1)
	{ after(grammarAccess.getMacroDeclarationAccess().getVariablesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group_3__2__Impl
	rule__MacroDeclaration__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getInKeyword_3_2()); }
	'in'
	{ after(grammarAccess.getMacroDeclarationAccess().getInKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group_3__3__Impl
	rule__MacroDeclaration__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getDomainAssignment_3_3()); }
	(rule__MacroDeclaration__DomainAssignment_3_3)
	{ after(grammarAccess.getMacroDeclarationAccess().getDomainAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group_3__4__Impl
	rule__MacroDeclaration__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getGroup_3_4()); }
	(rule__MacroDeclaration__Group_3_4__0)*
	{ after(grammarAccess.getMacroDeclarationAccess().getGroup_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getRightParenthesisKeyword_3_5()); }
	')'
	{ after(grammarAccess.getMacroDeclarationAccess().getRightParenthesisKeyword_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MacroDeclaration__Group_3_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group_3_4__0__Impl
	rule__MacroDeclaration__Group_3_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getCommaKeyword_3_4_0()); }
	','
	{ after(grammarAccess.getMacroDeclarationAccess().getCommaKeyword_3_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group_3_4__1__Impl
	rule__MacroDeclaration__Group_3_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getVariablesAssignment_3_4_1()); }
	(rule__MacroDeclaration__VariablesAssignment_3_4_1)
	{ after(grammarAccess.getMacroDeclarationAccess().getVariablesAssignment_3_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group_3_4__2__Impl
	rule__MacroDeclaration__Group_3_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getInKeyword_3_4_2()); }
	'in'
	{ after(grammarAccess.getMacroDeclarationAccess().getInKeyword_3_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group_3_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_3_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getDomainAssignment_3_4_3()); }
	(rule__MacroDeclaration__DomainAssignment_3_4_3)
	{ after(grammarAccess.getMacroDeclarationAccess().getDomainAssignment_3_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MacroDeclaration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group_4__0__Impl
	rule__MacroDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getInKeyword_4_0()); }
	'in'
	{ after(grammarAccess.getMacroDeclarationAccess().getInKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroDeclarationAccess().getReturnedDomainAssignment_4_1()); }
	(rule__MacroDeclaration__ReturnedDomainAssignment_4_1)
	{ after(grammarAccess.getMacroDeclarationAccess().getReturnedDomainAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurboDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group__0__Impl
	rule__TurboDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getTurboKeyword_0()); }
	'turbo'
	{ after(grammarAccess.getTurboDeclarationAccess().getTurboKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group__1__Impl
	rule__TurboDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getRuleKeyword_1()); }
	'rule'
	{ after(grammarAccess.getTurboDeclarationAccess().getRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group__2__Impl
	rule__TurboDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getNameAssignment_2()); }
	(rule__TurboDeclaration__NameAssignment_2)
	{ after(grammarAccess.getTurboDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group__3__Impl
	rule__TurboDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getGroup_3()); }
	(rule__TurboDeclaration__Group_3__0)?
	{ after(grammarAccess.getTurboDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group__4__Impl
	rule__TurboDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getGroup_4()); }
	(rule__TurboDeclaration__Group_4__0)?
	{ after(grammarAccess.getTurboDeclarationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group__5__Impl
	rule__TurboDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getEqualsSignKeyword_5()); }
	'='
	{ after(grammarAccess.getTurboDeclarationAccess().getEqualsSignKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getRuleBodyAssignment_6()); }
	(rule__TurboDeclaration__RuleBodyAssignment_6)
	{ after(grammarAccess.getTurboDeclarationAccess().getRuleBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurboDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group_3__0__Impl
	rule__TurboDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getTurboDeclarationAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group_3__1__Impl
	rule__TurboDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getVariablesAssignment_3_1()); }
	(rule__TurboDeclaration__VariablesAssignment_3_1)
	{ after(grammarAccess.getTurboDeclarationAccess().getVariablesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group_3__2__Impl
	rule__TurboDeclaration__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getInKeyword_3_2()); }
	'in'
	{ after(grammarAccess.getTurboDeclarationAccess().getInKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group_3__3__Impl
	rule__TurboDeclaration__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getDomainAssignment_3_3()); }
	(rule__TurboDeclaration__DomainAssignment_3_3)
	{ after(grammarAccess.getTurboDeclarationAccess().getDomainAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group_3__4__Impl
	rule__TurboDeclaration__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getGroup_3_4()); }
	(rule__TurboDeclaration__Group_3_4__0)*
	{ after(grammarAccess.getTurboDeclarationAccess().getGroup_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getRightParenthesisKeyword_3_5()); }
	')'
	{ after(grammarAccess.getTurboDeclarationAccess().getRightParenthesisKeyword_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurboDeclaration__Group_3_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group_3_4__0__Impl
	rule__TurboDeclaration__Group_3_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getCommaKeyword_3_4_0()); }
	','
	{ after(grammarAccess.getTurboDeclarationAccess().getCommaKeyword_3_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group_3_4__1__Impl
	rule__TurboDeclaration__Group_3_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getVariablesAssignment_3_4_1()); }
	(rule__TurboDeclaration__VariablesAssignment_3_4_1)
	{ after(grammarAccess.getTurboDeclarationAccess().getVariablesAssignment_3_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group_3_4__2__Impl
	rule__TurboDeclaration__Group_3_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getInKeyword_3_4_2()); }
	'in'
	{ after(grammarAccess.getTurboDeclarationAccess().getInKeyword_3_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group_3_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_3_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getDomainAssignment_3_4_3()); }
	(rule__TurboDeclaration__DomainAssignment_3_4_3)
	{ after(grammarAccess.getTurboDeclarationAccess().getDomainAssignment_3_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurboDeclaration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group_4__0__Impl
	rule__TurboDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getInKeyword_4_0()); }
	'in'
	{ after(grammarAccess.getTurboDeclarationAccess().getInKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboDeclarationAccess().getReturnedDomainAssignment_4_1()); }
	(rule__TurboDeclaration__ReturnedDomainAssignment_4_1)
	{ after(grammarAccess.getTurboDeclarationAccess().getReturnedDomainAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Invariant__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__0__Impl
	rule__Invariant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getInvariantKeyword_0()); }
	'invariant'
	{ after(grammarAccess.getInvariantAccess().getInvariantKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__1__Impl
	rule__Invariant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getNameAssignment_1()); }
	(rule__Invariant__NameAssignment_1)?
	{ after(grammarAccess.getInvariantAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__2__Impl
	rule__Invariant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getOverKeyword_2()); }
	'over'
	{ after(grammarAccess.getInvariantAccess().getOverKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__3__Impl
	rule__Invariant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getInvar_listAssignment_3()); }
	(rule__Invariant__Invar_listAssignment_3)
	{ after(grammarAccess.getInvariantAccess().getInvar_listAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__4__Impl
	rule__Invariant__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getGroup_4()); }
	(rule__Invariant__Group_4__0)*
	{ after(grammarAccess.getInvariantAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__5__Impl
	rule__Invariant__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getInvariantAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getBodyAssignment_6()); }
	(rule__Invariant__BodyAssignment_6)
	{ after(grammarAccess.getInvariantAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Invariant__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group_4__0__Impl
	rule__Invariant__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getInvariantAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Invariant__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantAccess().getInvar_listAssignment_4_1()); }
	(rule__Invariant__Invar_listAssignment_4_1)
	{ after(grammarAccess.getInvariantAccess().getInvar_listAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InvariantElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantElement__Group__0__Impl
	rule__InvariantElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantElementAccess().getConstrainedNameAssignment_0()); }
	(rule__InvariantElement__ConstrainedNameAssignment_0)
	{ after(grammarAccess.getInvariantElementAccess().getConstrainedNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantElementAccess().getGroup_1()); }
	(rule__InvariantElement__Group_1__0)?
	{ after(grammarAccess.getInvariantElementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InvariantElement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantElement__Group_1__0__Impl
	rule__InvariantElement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantElement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantElementAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getInvariantElementAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantElement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantElement__Group_1__1__Impl
	rule__InvariantElement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantElement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantElementAccess().getDomainListAssignment_1_1()); }
	(rule__InvariantElement__DomainListAssignment_1_1)?
	{ after(grammarAccess.getInvariantElementAccess().getDomainListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantElement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantElement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantElement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantElementAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getInvariantElementAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CtlSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CtlSpec__Group__0__Impl
	rule__CtlSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCtlSpecAccess().getAlternatives_0()); }
	(rule__CtlSpec__Alternatives_0)
	{ after(grammarAccess.getCtlSpecAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CtlSpec__Group__1__Impl
	rule__CtlSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCtlSpecAccess().getGroup_1()); }
	(rule__CtlSpec__Group_1__0)?
	{ after(grammarAccess.getCtlSpecAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CtlSpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCtlSpecAccess().getBodyAssignment_2()); }
	(rule__CtlSpec__BodyAssignment_2)
	{ after(grammarAccess.getCtlSpecAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CtlSpec__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CtlSpec__Group_1__0__Impl
	rule__CtlSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpec__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCtlSpecAccess().getNameAssignment_1_0()); }
	(rule__CtlSpec__NameAssignment_1_0)
	{ after(grammarAccess.getCtlSpecAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpec__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CtlSpec__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpec__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCtlSpecAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getCtlSpecAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LtlSpec__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LtlSpec__Group__0__Impl
	rule__LtlSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpec__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLtlSpecAccess().getAlternatives_0()); }
	(rule__LtlSpec__Alternatives_0)
	{ after(grammarAccess.getLtlSpecAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpec__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LtlSpec__Group__1__Impl
	rule__LtlSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpec__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLtlSpecAccess().getGroup_1()); }
	(rule__LtlSpec__Group_1__0)?
	{ after(grammarAccess.getLtlSpecAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpec__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LtlSpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpec__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLtlSpecAccess().getBodyAssignment_2()); }
	(rule__LtlSpec__BodyAssignment_2)
	{ after(grammarAccess.getLtlSpecAccess().getBodyAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LtlSpec__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LtlSpec__Group_1__0__Impl
	rule__LtlSpec__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpec__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLtlSpecAccess().getNameAssignment_1_0()); }
	(rule__LtlSpec__NameAssignment_1_0)
	{ after(grammarAccess.getLtlSpecAccess().getNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpec__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LtlSpec__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpec__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLtlSpecAccess().getColonKeyword_1_1()); }
	':'
	{ after(grammarAccess.getLtlSpecAccess().getColonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JusticeConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JusticeConstraint__Group__0__Impl
	rule__JusticeConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JusticeConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJusticeConstraintAccess().getJUSTICEKeyword_0()); }
	'JUSTICE'
	{ after(grammarAccess.getJusticeConstraintAccess().getJUSTICEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JusticeConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JusticeConstraint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JusticeConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJusticeConstraintAccess().getBodyAssignment_1()); }
	(rule__JusticeConstraint__BodyAssignment_1)
	{ after(grammarAccess.getJusticeConstraintAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompassionConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompassionConstraint__Group__0__Impl
	rule__CompassionConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompassionConstraintAccess().getCOMPASSIONKeyword_0()); }
	'COMPASSION'
	{ after(grammarAccess.getCompassionConstraintAccess().getCOMPASSIONKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompassionConstraint__Group__1__Impl
	rule__CompassionConstraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompassionConstraintAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCompassionConstraintAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompassionConstraint__Group__2__Impl
	rule__CompassionConstraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompassionConstraintAccess().getPAssignment_2()); }
	(rule__CompassionConstraint__PAssignment_2)
	{ after(grammarAccess.getCompassionConstraintAccess().getPAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompassionConstraint__Group__3__Impl
	rule__CompassionConstraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompassionConstraintAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getCompassionConstraintAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompassionConstraint__Group__4__Impl
	rule__CompassionConstraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompassionConstraintAccess().getQAssignment_4()); }
	(rule__CompassionConstraint__QAssignment_4)
	{ after(grammarAccess.getCompassionConstraintAccess().getQAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompassionConstraint__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompassionConstraintAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getCompassionConstraintAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InvariantConstraint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantConstraint__Group__0__Impl
	rule__InvariantConstraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantConstraintAccess().getINVARKeyword_0()); }
	'INVAR'
	{ after(grammarAccess.getInvariantConstraintAccess().getINVARKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InvariantConstraint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInvariantConstraintAccess().getBodyAssignment_1()); }
	(rule__InvariantConstraint__BodyAssignment_1)
	{ after(grammarAccess.getInvariantConstraintAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConcreteDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteDomain__Group__0__Impl
	rule__ConcreteDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteDomainAccess().getDynamicAssignment_0()); }
	(rule__ConcreteDomain__DynamicAssignment_0)?
	{ after(grammarAccess.getConcreteDomainAccess().getDynamicAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteDomain__Group__1__Impl
	rule__ConcreteDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteDomainAccess().getDomainKeyword_1()); }
	'domain'
	{ after(grammarAccess.getConcreteDomainAccess().getDomainKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteDomain__Group__2__Impl
	rule__ConcreteDomain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteDomainAccess().getNameAssignment_2()); }
	(rule__ConcreteDomain__NameAssignment_2)
	{ after(grammarAccess.getConcreteDomainAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteDomain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteDomain__Group__3__Impl
	rule__ConcreteDomain__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteDomain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteDomainAccess().getSubsetofKeyword_3()); }
	'subsetof'
	{ after(grammarAccess.getConcreteDomainAccess().getSubsetofKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteDomain__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConcreteDomain__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteDomain__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcreteDomainAccess().getTypeDomainAssignment_4()); }
	(rule__ConcreteDomain__TypeDomainAssignment_4)
	{ after(grammarAccess.getConcreteDomainAccess().getTypeDomainAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnyDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyDomain__Group__0__Impl
	rule__AnyDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyDomainAccess().getAnydomainKeyword_0()); }
	'anydomain'
	{ after(grammarAccess.getAnyDomainAccess().getAnydomainKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyDomain__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyDomainAccess().getNameAssignment_1()); }
	(rule__AnyDomain__NameAssignment_1)
	{ after(grammarAccess.getAnyDomainAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BasicTD__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicTD__Group__0__Impl
	rule__BasicTD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicTD__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicTDAccess().getBasicKeyword_0()); }
	'basic'
	{ after(grammarAccess.getBasicTDAccess().getBasicKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicTD__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicTD__Group__1__Impl
	rule__BasicTD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicTD__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicTDAccess().getDomainKeyword_1()); }
	'domain'
	{ after(grammarAccess.getBasicTDAccess().getDomainKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicTD__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BasicTD__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicTD__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBasicTDAccess().getAlternatives_2()); }
	(rule__BasicTD__Alternatives_2)
	{ after(grammarAccess.getBasicTDAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GenericAbstractTD__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAbstractTD__Group__0__Impl
	rule__GenericAbstractTD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAbstractTD__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAbstractTDAccess().getDynamicAssignment_0()); }
	(rule__GenericAbstractTD__DynamicAssignment_0)?
	{ after(grammarAccess.getGenericAbstractTDAccess().getDynamicAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAbstractTD__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAbstractTD__Group__1__Impl
	rule__GenericAbstractTD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAbstractTD__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAbstractTDAccess().getAbstractKeyword_1()); }
	'abstract'
	{ after(grammarAccess.getGenericAbstractTDAccess().getAbstractKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAbstractTD__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAbstractTD__Group__2__Impl
	rule__GenericAbstractTD__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAbstractTD__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAbstractTDAccess().getDomainKeyword_2()); }
	'domain'
	{ after(grammarAccess.getGenericAbstractTDAccess().getDomainKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAbstractTD__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GenericAbstractTD__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAbstractTD__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGenericAbstractTDAccess().getNameAssignment_3()); }
	(rule__GenericAbstractTD__NameAssignment_3)
	{ after(grammarAccess.getGenericAbstractTDAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AgentDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentDomain__Group__0__Impl
	rule__AgentDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentDomainAccess().getDynamicAssignment_0()); }
	(rule__AgentDomain__DynamicAssignment_0)?
	{ after(grammarAccess.getAgentDomainAccess().getDynamicAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentDomain__Group__1__Impl
	rule__AgentDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentDomainAccess().getAbstractKeyword_1()); }
	'abstract'
	{ after(grammarAccess.getAgentDomainAccess().getAbstractKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentDomain__Group__2__Impl
	rule__AgentDomain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentDomainAccess().getDomainKeyword_2()); }
	'domain'
	{ after(grammarAccess.getAgentDomainAccess().getDomainKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentDomain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AgentDomain__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentDomain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAgentDomainAccess().getNameAssignment_3()); }
	(rule__AgentDomain__NameAssignment_3)
	{ after(grammarAccess.getAgentDomainAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReserveDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReserveDomain__Group__0__Impl
	rule__ReserveDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReserveDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReserveDomainAccess().getDynamicAssignment_0()); }
	(rule__ReserveDomain__DynamicAssignment_0)?
	{ after(grammarAccess.getReserveDomainAccess().getDynamicAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReserveDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReserveDomain__Group__1__Impl
	rule__ReserveDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReserveDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReserveDomainAccess().getAbstractKeyword_1()); }
	'abstract'
	{ after(grammarAccess.getReserveDomainAccess().getAbstractKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReserveDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReserveDomain__Group__2__Impl
	rule__ReserveDomain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReserveDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReserveDomainAccess().getDomainKeyword_2()); }
	'domain'
	{ after(grammarAccess.getReserveDomainAccess().getDomainKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReserveDomain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReserveDomain__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReserveDomain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReserveDomainAccess().getNameAssignment_3()); }
	(rule__ReserveDomain__NameAssignment_3)
	{ after(grammarAccess.getReserveDomainAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTD__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTD__Group__0__Impl
	rule__EnumTD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTDAccess().getEnumKeyword_0()); }
	'enum'
	{ after(grammarAccess.getEnumTDAccess().getEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTD__Group__1__Impl
	rule__EnumTD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTDAccess().getDomainKeyword_1()); }
	'domain'
	{ after(grammarAccess.getEnumTDAccess().getDomainKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTD__Group__2__Impl
	rule__EnumTD__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTDAccess().getNameAssignment_2()); }
	(rule__EnumTD__NameAssignment_2)
	{ after(grammarAccess.getEnumTDAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTD__Group__3__Impl
	rule__EnumTD__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTDAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getEnumTDAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTD__Group__4__Impl
	rule__EnumTD__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTDAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getEnumTDAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTD__Group__5__Impl
	rule__EnumTD__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTDAccess().getElementAssignment_5()); }
	(rule__EnumTD__ElementAssignment_5)
	{ after(grammarAccess.getEnumTDAccess().getElementAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTD__Group__6__Impl
	rule__EnumTD__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTDAccess().getGroup_6()); }
	(rule__EnumTD__Group_6__0)*
	{ after(grammarAccess.getEnumTDAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTD__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTDAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getEnumTDAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTD__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTD__Group_6__0__Impl
	rule__EnumTD__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTDAccess().getAlternatives_6_0()); }
	(rule__EnumTD__Alternatives_6_0)
	{ after(grammarAccess.getEnumTDAccess().getAlternatives_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTD__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTDAccess().getElementAssignment_6_1()); }
	(rule__EnumTD__ElementAssignment_6_1)
	{ after(grammarAccess.getEnumTDAccess().getElementAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDomain__Group__0__Impl
	rule__RuleDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDomainAccess().getRuleDomainAction_0()); }
	()
	{ after(grammarAccess.getRuleDomainAccess().getRuleDomainAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDomain__Group__1__Impl
	rule__RuleDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDomainAccess().getNameAssignment_1()); }
	(rule__RuleDomain__NameAssignment_1)
	{ after(grammarAccess.getRuleDomainAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDomain__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDomainAccess().getGroup_2()); }
	(rule__RuleDomain__Group_2__0)?
	{ after(grammarAccess.getRuleDomainAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDomain__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDomain__Group_2__0__Impl
	rule__RuleDomain__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDomainAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getRuleDomainAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDomain__Group_2__1__Impl
	rule__RuleDomain__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDomainAccess().getDomainsAssignment_2_1()); }
	(rule__RuleDomain__DomainsAssignment_2_1)
	{ after(grammarAccess.getRuleDomainAccess().getDomainsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDomain__Group_2__2__Impl
	rule__RuleDomain__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDomainAccess().getGroup_2_2()); }
	(rule__RuleDomain__Group_2_2__0)*
	{ after(grammarAccess.getRuleDomainAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDomain__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDomainAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getRuleDomainAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleDomain__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDomain__Group_2_2__0__Impl
	rule__RuleDomain__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDomainAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getRuleDomainAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleDomain__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleDomainAccess().getDomainsAssignment_2_2_1()); }
	(rule__RuleDomain__DomainsAssignment_2_2_1)
	{ after(grammarAccess.getRuleDomainAccess().getDomainsAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProductDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductDomain__Group__0__Impl
	rule__ProductDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductDomainAccess().getNameAssignment_0()); }
	(rule__ProductDomain__NameAssignment_0)
	{ after(grammarAccess.getProductDomainAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductDomain__Group__1__Impl
	rule__ProductDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductDomainAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getProductDomainAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductDomain__Group__2__Impl
	rule__ProductDomain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductDomainAccess().getDomainsAssignment_2()); }
	(rule__ProductDomain__DomainsAssignment_2)
	{ after(grammarAccess.getProductDomainAccess().getDomainsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductDomain__Group__3__Impl
	rule__ProductDomain__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProductDomainAccess().getGroup_3()); }
		(rule__ProductDomain__Group_3__0)
		{ after(grammarAccess.getProductDomainAccess().getGroup_3()); }
	)
	(
		{ before(grammarAccess.getProductDomainAccess().getGroup_3()); }
		(rule__ProductDomain__Group_3__0)*
		{ after(grammarAccess.getProductDomainAccess().getGroup_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductDomain__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductDomainAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getProductDomainAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProductDomain__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductDomain__Group_3__0__Impl
	rule__ProductDomain__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductDomainAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getProductDomainAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProductDomain__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProductDomainAccess().getDomainsAssignment_3_1()); }
	(rule__ProductDomain__DomainsAssignment_3_1)
	{ after(grammarAccess.getProductDomainAccess().getDomainsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceDomain__Group__0__Impl
	rule__SequenceDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceDomainAccess().getNameAssignment_0()); }
	(rule__SequenceDomain__NameAssignment_0)
	{ after(grammarAccess.getSequenceDomainAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceDomain__Group__1__Impl
	rule__SequenceDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceDomainAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSequenceDomainAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceDomain__Group__2__Impl
	rule__SequenceDomain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceDomainAccess().getDomainAssignment_2()); }
	(rule__SequenceDomain__DomainAssignment_2)
	{ after(grammarAccess.getSequenceDomainAccess().getDomainAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDomain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceDomain__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDomain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceDomainAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSequenceDomainAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PowersetDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowersetDomain__Group__0__Impl
	rule__PowersetDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowersetDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowersetDomainAccess().getNameAssignment_0()); }
	(rule__PowersetDomain__NameAssignment_0)
	{ after(grammarAccess.getPowersetDomainAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowersetDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowersetDomain__Group__1__Impl
	rule__PowersetDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PowersetDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowersetDomainAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPowersetDomainAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowersetDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowersetDomain__Group__2__Impl
	rule__PowersetDomain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PowersetDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowersetDomainAccess().getBaseDomainAssignment_2()); }
	(rule__PowersetDomain__BaseDomainAssignment_2)
	{ after(grammarAccess.getPowersetDomainAccess().getBaseDomainAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowersetDomain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowersetDomain__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowersetDomain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowersetDomainAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getPowersetDomainAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagDomain__Group__0__Impl
	rule__BagDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagDomainAccess().getNameAssignment_0()); }
	(rule__BagDomain__NameAssignment_0)
	{ after(grammarAccess.getBagDomainAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagDomain__Group__1__Impl
	rule__BagDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagDomainAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getBagDomainAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagDomain__Group__2__Impl
	rule__BagDomain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagDomainAccess().getDomainAssignment_2()); }
	(rule__BagDomain__DomainAssignment_2)
	{ after(grammarAccess.getBagDomainAccess().getDomainAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagDomain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagDomain__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagDomain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagDomainAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getBagDomainAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapDomain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDomain__Group__0__Impl
	rule__MapDomain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDomainAccess().getNameAssignment_0()); }
	(rule__MapDomain__NameAssignment_0)
	{ after(grammarAccess.getMapDomainAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDomain__Group__1__Impl
	rule__MapDomain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDomainAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMapDomainAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDomain__Group__2__Impl
	rule__MapDomain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDomainAccess().getSourceDomainAssignment_2()); }
	(rule__MapDomain__SourceDomainAssignment_2)
	{ after(grammarAccess.getMapDomainAccess().getSourceDomainAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDomain__Group__3__Impl
	rule__MapDomain__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDomainAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getMapDomainAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDomain__Group__4__Impl
	rule__MapDomain__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDomainAccess().getTargetDomainAssignment_4()); }
	(rule__MapDomain__TargetDomainAssignment_4)
	{ after(grammarAccess.getMapDomainAccess().getTargetDomainAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDomain__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDomainAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getMapDomainAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DerivedFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedFunction__Group__0__Impl
	rule__DerivedFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedFunctionAccess().getDerivedKeyword_0()); }
	'derived'
	{ after(grammarAccess.getDerivedFunctionAccess().getDerivedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedFunction__Group__1__Impl
	rule__DerivedFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedFunctionAccess().getNameAssignment_1()); }
	(rule__DerivedFunction__NameAssignment_1)
	{ after(grammarAccess.getDerivedFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedFunction__Group__2__Impl
	rule__DerivedFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedFunctionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getDerivedFunctionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedFunction__Group__3__Impl
	rule__DerivedFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedFunctionAccess().getGroup_3()); }
	(rule__DerivedFunction__Group_3__0)?
	{ after(grammarAccess.getDerivedFunctionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedFunction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedFunctionAccess().getCodomainAssignment_4()); }
	(rule__DerivedFunction__CodomainAssignment_4)
	{ after(grammarAccess.getDerivedFunctionAccess().getCodomainAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DerivedFunction__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedFunction__Group_3__0__Impl
	rule__DerivedFunction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedFunctionAccess().getDomainAssignment_3_0()); }
	(rule__DerivedFunction__DomainAssignment_3_0)
	{ after(grammarAccess.getDerivedFunctionAccess().getDomainAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DerivedFunction__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDerivedFunctionAccess().getHyphenMinusGreaterThanSignKeyword_3_1()); }
	'->'
	{ after(grammarAccess.getDerivedFunctionAccess().getHyphenMinusGreaterThanSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StaticFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticFunction__Group__0__Impl
	rule__StaticFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticFunctionAccess().getStaticKeyword_0()); }
	'static'
	{ after(grammarAccess.getStaticFunctionAccess().getStaticKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticFunction__Group__1__Impl
	rule__StaticFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticFunctionAccess().getNameAssignment_1()); }
	(rule__StaticFunction__NameAssignment_1)
	{ after(grammarAccess.getStaticFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticFunction__Group__2__Impl
	rule__StaticFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticFunctionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getStaticFunctionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticFunction__Group__3__Impl
	rule__StaticFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticFunctionAccess().getGroup_3()); }
	(rule__StaticFunction__Group_3__0)?
	{ after(grammarAccess.getStaticFunctionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticFunction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticFunctionAccess().getCodomainAssignment_4()); }
	(rule__StaticFunction__CodomainAssignment_4)
	{ after(grammarAccess.getStaticFunctionAccess().getCodomainAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StaticFunction__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticFunction__Group_3__0__Impl
	rule__StaticFunction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticFunctionAccess().getDomainAssignment_3_0()); }
	(rule__StaticFunction__DomainAssignment_3_0)
	{ after(grammarAccess.getStaticFunctionAccess().getDomainAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticFunction__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticFunctionAccess().getHyphenMinusGreaterThanSignKeyword_3_1()); }
	'->'
	{ after(grammarAccess.getStaticFunctionAccess().getHyphenMinusGreaterThanSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunction__Group__0__Impl
	rule__LocalFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionAccess().getDynamicAssignment_0()); }
	(rule__LocalFunction__DynamicAssignment_0)?
	{ after(grammarAccess.getLocalFunctionAccess().getDynamicAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunction__Group__1__Impl
	rule__LocalFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionAccess().getLocalKeyword_1()); }
	'local'
	{ after(grammarAccess.getLocalFunctionAccess().getLocalKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunction__Group__2__Impl
	rule__LocalFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionAccess().getNameAssignment_2()); }
	(rule__LocalFunction__NameAssignment_2)
	{ after(grammarAccess.getLocalFunctionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunction__Group__3__Impl
	rule__LocalFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getLocalFunctionAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunction__Group__4__Impl
	rule__LocalFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionAccess().getGroup_4()); }
	(rule__LocalFunction__Group_4__0)?
	{ after(grammarAccess.getLocalFunctionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionAccess().getCodomainAssignment_5()); }
	(rule__LocalFunction__CodomainAssignment_5)
	{ after(grammarAccess.getLocalFunctionAccess().getCodomainAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalFunction__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunction__Group_4__0__Impl
	rule__LocalFunction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionAccess().getDomainAssignment_4_0()); }
	(rule__LocalFunction__DomainAssignment_4_0)
	{ after(grammarAccess.getLocalFunctionAccess().getDomainAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalFunction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
	'->'
	{ after(grammarAccess.getLocalFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ControlledFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ControlledFunction__Group__0__Impl
	rule__ControlledFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControlledFunctionAccess().getDynamicAssignment_0()); }
	(rule__ControlledFunction__DynamicAssignment_0)?
	{ after(grammarAccess.getControlledFunctionAccess().getDynamicAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ControlledFunction__Group__1__Impl
	rule__ControlledFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControlledFunctionAccess().getControlledKeyword_1()); }
	'controlled'
	{ after(grammarAccess.getControlledFunctionAccess().getControlledKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ControlledFunction__Group__2__Impl
	rule__ControlledFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControlledFunctionAccess().getNameAssignment_2()); }
	(rule__ControlledFunction__NameAssignment_2)
	{ after(grammarAccess.getControlledFunctionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ControlledFunction__Group__3__Impl
	rule__ControlledFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControlledFunctionAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getControlledFunctionAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ControlledFunction__Group__4__Impl
	rule__ControlledFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControlledFunctionAccess().getGroup_4()); }
	(rule__ControlledFunction__Group_4__0)?
	{ after(grammarAccess.getControlledFunctionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ControlledFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControlledFunctionAccess().getCodomainAssignment_5()); }
	(rule__ControlledFunction__CodomainAssignment_5)
	{ after(grammarAccess.getControlledFunctionAccess().getCodomainAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ControlledFunction__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ControlledFunction__Group_4__0__Impl
	rule__ControlledFunction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControlledFunctionAccess().getDomainAssignment_4_0()); }
	(rule__ControlledFunction__DomainAssignment_4_0)
	{ after(grammarAccess.getControlledFunctionAccess().getDomainAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ControlledFunction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getControlledFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
	'->'
	{ after(grammarAccess.getControlledFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SharedFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SharedFunction__Group__0__Impl
	rule__SharedFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSharedFunctionAccess().getDynamicAssignment_0()); }
	(rule__SharedFunction__DynamicAssignment_0)?
	{ after(grammarAccess.getSharedFunctionAccess().getDynamicAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SharedFunction__Group__1__Impl
	rule__SharedFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSharedFunctionAccess().getSharedKeyword_1()); }
	'shared'
	{ after(grammarAccess.getSharedFunctionAccess().getSharedKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SharedFunction__Group__2__Impl
	rule__SharedFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSharedFunctionAccess().getNameAssignment_2()); }
	(rule__SharedFunction__NameAssignment_2)
	{ after(grammarAccess.getSharedFunctionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SharedFunction__Group__3__Impl
	rule__SharedFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSharedFunctionAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getSharedFunctionAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SharedFunction__Group__4__Impl
	rule__SharedFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSharedFunctionAccess().getGroup_4()); }
	(rule__SharedFunction__Group_4__0)?
	{ after(grammarAccess.getSharedFunctionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SharedFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSharedFunctionAccess().getCodomainAssignment_5()); }
	(rule__SharedFunction__CodomainAssignment_5)
	{ after(grammarAccess.getSharedFunctionAccess().getCodomainAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SharedFunction__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SharedFunction__Group_4__0__Impl
	rule__SharedFunction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSharedFunctionAccess().getDomainAssignment_4_0()); }
	(rule__SharedFunction__DomainAssignment_4_0)
	{ after(grammarAccess.getSharedFunctionAccess().getDomainAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SharedFunction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSharedFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
	'->'
	{ after(grammarAccess.getSharedFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MonitoredFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoredFunction__Group__0__Impl
	rule__MonitoredFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoredFunctionAccess().getDynamicAssignment_0()); }
	(rule__MonitoredFunction__DynamicAssignment_0)?
	{ after(grammarAccess.getMonitoredFunctionAccess().getDynamicAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoredFunction__Group__1__Impl
	rule__MonitoredFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoredFunctionAccess().getMonitoredKeyword_1()); }
	'monitored'
	{ after(grammarAccess.getMonitoredFunctionAccess().getMonitoredKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoredFunction__Group__2__Impl
	rule__MonitoredFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoredFunctionAccess().getNameAssignment_2()); }
	(rule__MonitoredFunction__NameAssignment_2)
	{ after(grammarAccess.getMonitoredFunctionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoredFunction__Group__3__Impl
	rule__MonitoredFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoredFunctionAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getMonitoredFunctionAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoredFunction__Group__4__Impl
	rule__MonitoredFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoredFunctionAccess().getGroup_4()); }
	(rule__MonitoredFunction__Group_4__0)?
	{ after(grammarAccess.getMonitoredFunctionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoredFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoredFunctionAccess().getCodomainAssignment_5()); }
	(rule__MonitoredFunction__CodomainAssignment_5)
	{ after(grammarAccess.getMonitoredFunctionAccess().getCodomainAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MonitoredFunction__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoredFunction__Group_4__0__Impl
	rule__MonitoredFunction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoredFunctionAccess().getDomainAssignment_4_0()); }
	(rule__MonitoredFunction__DomainAssignment_4_0)
	{ after(grammarAccess.getMonitoredFunctionAccess().getDomainAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoredFunction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoredFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
	'->'
	{ after(grammarAccess.getMonitoredFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutFunction__Group__0__Impl
	rule__OutFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutFunctionAccess().getDynamicAssignment_0()); }
	(rule__OutFunction__DynamicAssignment_0)?
	{ after(grammarAccess.getOutFunctionAccess().getDynamicAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutFunction__Group__1__Impl
	rule__OutFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutFunctionAccess().getOutKeyword_1()); }
	'out'
	{ after(grammarAccess.getOutFunctionAccess().getOutKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutFunction__Group__2__Impl
	rule__OutFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutFunctionAccess().getNameAssignment_2()); }
	(rule__OutFunction__NameAssignment_2)
	{ after(grammarAccess.getOutFunctionAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutFunction__Group__3__Impl
	rule__OutFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutFunctionAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getOutFunctionAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutFunction__Group__4__Impl
	rule__OutFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutFunctionAccess().getGroup_4()); }
	(rule__OutFunction__Group_4__0)?
	{ after(grammarAccess.getOutFunctionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutFunctionAccess().getCodomainAssignment_5()); }
	(rule__OutFunction__CodomainAssignment_5)
	{ after(grammarAccess.getOutFunctionAccess().getCodomainAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutFunction__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutFunction__Group_4__0__Impl
	rule__OutFunction__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutFunctionAccess().getDomainAssignment_4_0()); }
	(rule__OutFunction__DomainAssignment_4_0)
	{ after(grammarAccess.getOutFunctionAccess().getDomainAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutFunction__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
	'->'
	{ after(grammarAccess.getOutFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesIffExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesIffExpression__Group__0__Impl
	rule__ImpliesIffExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesIffExpressionAccess().getXorOrExpressionParserRuleCall_0()); }
	ruleXorOrExpression
	{ after(grammarAccess.getImpliesIffExpressionAccess().getXorOrExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesIffExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesIffExpressionAccess().getGroup_1()); }
	(rule__ImpliesIffExpression__Group_1__0)*
	{ after(grammarAccess.getImpliesIffExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesIffExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesIffExpression__Group_1__0__Impl
	rule__ImpliesIffExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesIffExpressionAccess().getGroup_1_0()); }
	(rule__ImpliesIffExpression__Group_1_0__0)
	{ after(grammarAccess.getImpliesIffExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesIffExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesIffExpressionAccess().getRightAssignment_1_1()); }
	(rule__ImpliesIffExpression__RightAssignment_1_1)
	{ after(grammarAccess.getImpliesIffExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesIffExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesIffExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesIffExpressionAccess().getGroup_1_0_0()); }
	(rule__ImpliesIffExpression__Group_1_0_0__0)
	{ after(grammarAccess.getImpliesIffExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesIffExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesIffExpression__Group_1_0_0__0__Impl
	rule__ImpliesIffExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesIffExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getImpliesIffExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImpliesIffExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImpliesIffExpressionAccess().getOpAssignment_1_0_0_1()); }
	(rule__ImpliesIffExpression__OpAssignment_1_0_0_1)
	{ after(grammarAccess.getImpliesIffExpressionAccess().getOpAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorOrExpression__Group__0__Impl
	rule__XorOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getXorOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorOrExpressionAccess().getGroup_1()); }
	(rule__XorOrExpression__Group_1__0)*
	{ after(grammarAccess.getXorOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorOrExpression__Group_1__0__Impl
	rule__XorOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorOrExpressionAccess().getGroup_1_0()); }
	(rule__XorOrExpression__Group_1_0__0)
	{ after(grammarAccess.getXorOrExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorOrExpressionAccess().getRightAssignment_1_1()); }
	(rule__XorOrExpression__RightAssignment_1_1)
	{ after(grammarAccess.getXorOrExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorOrExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorOrExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorOrExpressionAccess().getGroup_1_0_0()); }
	(rule__XorOrExpression__Group_1_0_0__0)
	{ after(grammarAccess.getXorOrExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorOrExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorOrExpression__Group_1_0_0__0__Impl
	rule__XorOrExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorOrExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getXorOrExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorOrExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorOrExpressionAccess().getOpAssignment_1_0_0_1()); }
	(rule__XorOrExpression__OpAssignment_1_0_0_1)
	{ after(grammarAccess.getXorOrExpressionAccess().getOpAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
	{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
	(rule__AndExpression__Group_1_0__0)
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
	(rule__AndExpression__RightAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
	(rule__AndExpression__Group_1_0_0__0)
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1_0_0__0__Impl
	rule__AndExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOpAssignment_1_0_0_1()); }
	(rule__AndExpression__OpAssignment_1_0_0_1)
	{ after(grammarAccess.getAndExpressionAccess().getOpAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getCompareExpressionParserRuleCall_0()); }
	ruleCompareExpression
	{ after(grammarAccess.getEqualityExpressionAccess().getCompareExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
	(rule__EqualityExpression__Group_1__0)*
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1_0()); }
	(rule__EqualityExpression__Group_1_0__0)
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_1()); }
	(rule__EqualityExpression__RightAssignment_1_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1_0_0()); }
	(rule__EqualityExpression__Group_1_0_0__0)
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1_0_0__0__Impl
	rule__EqualityExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_0_0_1()); }
	(rule__EqualityExpression__OpAssignment_1_0_0_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getOpAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExpression__Group__0__Impl
	rule__CompareExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
	{ after(grammarAccess.getCompareExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpressionAccess().getGroup_1()); }
	(rule__CompareExpression__Group_1__0)*
	{ after(grammarAccess.getCompareExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExpression__Group_1__0__Impl
	rule__CompareExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpressionAccess().getGroup_1_0()); }
	(rule__CompareExpression__Group_1_0__0)
	{ after(grammarAccess.getCompareExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpressionAccess().getRightAssignment_1_1()); }
	(rule__CompareExpression__RightAssignment_1_1)
	{ after(grammarAccess.getCompareExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpressionAccess().getGroup_1_0_0()); }
	(rule__CompareExpression__Group_1_0_0__0)
	{ after(grammarAccess.getCompareExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExpression__Group_1_0_0__0__Impl
	rule__CompareExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getCompareExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpressionAccess().getOpAssignment_1_0_0_1()); }
	(rule__CompareExpression__OpAssignment_1_0_0_1)
	{ after(grammarAccess.getCompareExpressionAccess().getOpAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
	{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpression__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
	(rule__AdditiveExpression__Group_1_0__0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_1()); }
	(rule__AdditiveExpression__RightAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0()); }
	(rule__AdditiveExpression__Group_1_0_0__0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1_0_0__0__Impl
	rule__AdditiveExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getAdditiveExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_0_0_1()); }
	(rule__AdditiveExpression__OpAssignment_1_0_0_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOpAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getPowerExpressionParserRuleCall_0()); }
	rulePowerExpression
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getPowerExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
	(rule__MultiplicativeExpression__Group_1_0__0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_1()); }
	(rule__MultiplicativeExpression__RightAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0()); }
	(rule__MultiplicativeExpression__Group_1_0_0__0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1_0_0__0__Impl
	rule__MultiplicativeExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_0_0_1()); }
	(rule__MultiplicativeExpression__OpAssignment_1_0_0_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group__0__Impl
	rule__PowerExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getUnaryOperationParserRuleCall_0()); }
	ruleUnaryOperation
	{ after(grammarAccess.getPowerExpressionAccess().getUnaryOperationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getGroup_1()); }
	(rule__PowerExpression__Group_1__0)*
	{ after(grammarAccess.getPowerExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group_1__0__Impl
	rule__PowerExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getGroup_1_0()); }
	(rule__PowerExpression__Group_1_0__0)
	{ after(grammarAccess.getPowerExpressionAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getRightAssignment_1_1()); }
	(rule__PowerExpression__RightAssignment_1_1)
	{ after(grammarAccess.getPowerExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getGroup_1_0_0()); }
	(rule__PowerExpression__Group_1_0_0__0)
	{ after(grammarAccess.getPowerExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group_1_0_0__0__Impl
	rule__PowerExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPowerExpressionAccess().getBinaryOperationLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getOpAssignment_1_0_0_1()); }
	(rule__PowerExpression__OpAssignment_1_0_0_1)
	{ after(grammarAccess.getPowerExpressionAccess().getOpAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryOperation__Group_0__0__Impl
	rule__UnaryOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryOperationAccess().getOpAssignment_0_0()); }
	(rule__UnaryOperation__OpAssignment_0_0)
	{ after(grammarAccess.getUnaryOperationAccess().getOpAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryOperation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryOperationAccess().getOperandAssignment_0_1()); }
	(rule__UnaryOperation__OperandAssignment_0_1)
	{ after(grammarAccess.getUnaryOperationAccess().getOperandAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedExpression__Group__0__Impl
	rule__ParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedExpression__Group__1__Impl
	rule__ParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
	{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionTerm__Group__0__Impl
	rule__FunctionTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTermAccess().getGroup_0()); }
	(rule__FunctionTerm__Group_0__0)?
	{ after(grammarAccess.getFunctionTermAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionTerm__Group__1__Impl
	rule__FunctionTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTermAccess().getFunctionNameAssignment_1()); }
	(rule__FunctionTerm__FunctionNameAssignment_1)
	{ after(grammarAccess.getFunctionTermAccess().getFunctionNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTermAccess().getArgumentsAssignment_2()); }
	(rule__FunctionTerm__ArgumentsAssignment_2)?
	{ after(grammarAccess.getFunctionTermAccess().getArgumentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTerm__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionTerm__Group_0__0__Impl
	rule__FunctionTerm__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTermAccess().getAgentAssignment_0_0()); }
	(rule__FunctionTerm__AgentAssignment_0_0)
	{ after(grammarAccess.getFunctionTermAccess().getAgentAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionTerm__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionTermAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getFunctionTermAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocationTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocationTerm__Group__0__Impl
	rule__LocationTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationTermAccess().getGroup_0()); }
	(rule__LocationTerm__Group_0__0)?
	{ after(grammarAccess.getLocationTermAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocationTerm__Group__1__Impl
	rule__LocationTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationTermAccess().getFunctionNameAssignment_1()); }
	(rule__LocationTerm__FunctionNameAssignment_1)
	{ after(grammarAccess.getLocationTermAccess().getFunctionNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocationTerm__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationTermAccess().getArgumentsAssignment_2()); }
	(rule__LocationTerm__ArgumentsAssignment_2)?
	{ after(grammarAccess.getLocationTermAccess().getArgumentsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocationTerm__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocationTerm__Group_0__0__Impl
	rule__LocationTerm__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationTermAccess().getAgentAssignment_0_0()); }
	(rule__LocationTerm__AgentAssignment_0_0)
	{ after(grammarAccess.getLocationTermAccess().getAgentAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocationTerm__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocationTermAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getLocationTermAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RealNumberWithSign__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealNumberWithSign__Group__0__Impl
	rule__RealNumberWithSign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealNumberWithSign__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealNumberWithSignAccess().getAlternatives_0()); }
	(rule__RealNumberWithSign__Alternatives_0)?
	{ after(grammarAccess.getRealNumberWithSignAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealNumberWithSign__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealNumberWithSign__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealNumberWithSign__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealNumberWithSignAccess().getREAL_NUMBERTerminalRuleCall_1()); }
	RULE_REAL_NUMBER
	{ after(grammarAccess.getRealNumberWithSignAccess().getREAL_NUMBERTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberWithSign__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberWithSign__Group__0__Impl
	rule__NumberWithSign__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberWithSign__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberWithSignAccess().getAlternatives_0()); }
	(rule__NumberWithSign__Alternatives_0)?
	{ after(grammarAccess.getNumberWithSignAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberWithSign__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberWithSign__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberWithSign__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberWithSignAccess().getNUMBER_TOKENTerminalRuleCall_1()); }
	RULE_NUMBER_TOKEN
	{ after(grammarAccess.getNumberWithSignAccess().getNUMBER_TOKENTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__0__Impl
	rule__ConditionalTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditionalTermAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__1__Impl
	rule__ConditionalTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getGuardAssignment_1()); }
	(rule__ConditionalTerm__GuardAssignment_1)
	{ after(grammarAccess.getConditionalTermAccess().getGuardAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__2__Impl
	rule__ConditionalTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getConditionalTermAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__3__Impl
	rule__ConditionalTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getThenTermAssignment_3()); }
	(rule__ConditionalTerm__ThenTermAssignment_3)
	{ after(grammarAccess.getConditionalTermAccess().getThenTermAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__4__Impl
	rule__ConditionalTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getGroup_4()); }
	(rule__ConditionalTerm__Group_4__0)?
	{ after(grammarAccess.getConditionalTermAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getEndifKeyword_5()); }
	'endif'
	{ after(grammarAccess.getConditionalTermAccess().getEndifKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalTerm__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group_4__0__Impl
	rule__ConditionalTerm__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getElseKeyword_4_0()); }
	'else'
	{ after(grammarAccess.getConditionalTermAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalTerm__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalTermAccess().getElseTermAssignment_4_1()); }
	(rule__ConditionalTerm__ElseTermAssignment_4_1)
	{ after(grammarAccess.getConditionalTermAccess().getElseTermAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group__0__Impl
	rule__CaseTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getSwitchKeyword_0()); }
	'switch'
	{ after(grammarAccess.getCaseTermAccess().getSwitchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group__1__Impl
	rule__CaseTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getComparedTermAssignment_1()); }
	(rule__CaseTerm__ComparedTermAssignment_1)
	{ after(grammarAccess.getCaseTermAccess().getComparedTermAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group__2__Impl
	rule__CaseTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCaseTermAccess().getGroup_2()); }
		(rule__CaseTerm__Group_2__0)
		{ after(grammarAccess.getCaseTermAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getCaseTermAccess().getGroup_2()); }
		(rule__CaseTerm__Group_2__0)*
		{ after(grammarAccess.getCaseTermAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group__3__Impl
	rule__CaseTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getGroup_3()); }
	(rule__CaseTerm__Group_3__0)?
	{ after(grammarAccess.getCaseTermAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getEndswitchKeyword_4()); }
	'endswitch'
	{ after(grammarAccess.getCaseTermAccess().getEndswitchKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseTerm__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group_2__0__Impl
	rule__CaseTerm__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getCaseKeyword_2_0()); }
	'case'
	{ after(grammarAccess.getCaseTermAccess().getCaseKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group_2__1__Impl
	rule__CaseTerm__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getComparingTermAssignment_2_1()); }
	(rule__CaseTerm__ComparingTermAssignment_2_1)
	{ after(grammarAccess.getCaseTermAccess().getComparingTermAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group_2__2__Impl
	rule__CaseTerm__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getColonKeyword_2_2()); }
	':'
	{ after(grammarAccess.getCaseTermAccess().getColonKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getResultTermsAssignment_2_3()); }
	(rule__CaseTerm__ResultTermsAssignment_2_3)
	{ after(grammarAccess.getCaseTermAccess().getResultTermsAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseTerm__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group_3__0__Impl
	rule__CaseTerm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getOtherwiseKeyword_3_0()); }
	'otherwise'
	{ after(grammarAccess.getCaseTermAccess().getOtherwiseKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseTerm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseTermAccess().getOtherwiseTermAssignment_3_1()); }
	(rule__CaseTerm__OtherwiseTermAssignment_3_1)
	{ after(grammarAccess.getCaseTermAccess().getOtherwiseTermAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group__0__Impl
	rule__TupleTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTermAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getTupleTermAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group__1__Impl
	rule__TupleTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTermAccess().getTermsAssignment_1()); }
	(rule__TupleTerm__TermsAssignment_1)
	{ after(grammarAccess.getTupleTermAccess().getTermsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group__2__Impl
	rule__TupleTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTermAccess().getGroup_2()); }
	(rule__TupleTerm__Group_2__0)*
	{ after(grammarAccess.getTupleTermAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTermAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTupleTermAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TupleTerm__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group_2__0__Impl
	rule__TupleTerm__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTermAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getTupleTermAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TupleTerm__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTupleTermAccess().getTermsAssignment_2_1()); }
	(rule__TupleTerm__TermsAssignment_2_1)
	{ after(grammarAccess.getTupleTermAccess().getTermsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group__0__Impl
	rule__SequenceTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getSequenceTermAction_0()); }
	()
	{ after(grammarAccess.getSequenceTermAccess().getSequenceTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group__1__Impl
	rule__SequenceTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getSequenceTermAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group__2__Impl
	rule__SequenceTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getGroup_2()); }
	(rule__SequenceTerm__Group_2__0)?
	{ after(grammarAccess.getSequenceTermAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getSequenceTermAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceTerm__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group_2__0__Impl
	rule__SequenceTerm__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getStart_termAssignment_2_0()); }
	(rule__SequenceTerm__Start_termAssignment_2_0)
	{ after(grammarAccess.getSequenceTermAccess().getStart_termAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getAlternatives_2_1()); }
	(rule__SequenceTerm__Alternatives_2_1)?
	{ after(grammarAccess.getSequenceTermAccess().getAlternatives_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceTerm__Group_2_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group_2_1_0__0__Impl
	rule__SequenceTerm__Group_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getCommaKeyword_2_1_0_0()); }
	','
	{ after(grammarAccess.getSequenceTermAccess().getCommaKeyword_2_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group_2_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getOther_termsAssignment_2_1_0_1()); }
	(rule__SequenceTerm__Other_termsAssignment_2_1_0_1)
	{ after(grammarAccess.getSequenceTermAccess().getOther_termsAssignment_2_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceTerm__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group_2_1_1__0__Impl
	rule__SequenceTerm__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getColonKeyword_2_1_1_0()); }
	(':')
	{ after(grammarAccess.getSequenceTermAccess().getColonKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group_2_1_1__1__Impl
	rule__SequenceTerm__Group_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getEnd_termAssignment_2_1_1_1()); }
	(rule__SequenceTerm__End_termAssignment_2_1_1_1)
	{ after(grammarAccess.getSequenceTermAccess().getEnd_termAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group_2_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getGroup_2_1_1_2()); }
	(rule__SequenceTerm__Group_2_1_1_2__0)?
	{ after(grammarAccess.getSequenceTermAccess().getGroup_2_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceTerm__Group_2_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group_2_1_1_2__0__Impl
	rule__SequenceTerm__Group_2_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getCommaKeyword_2_1_1_2_0()); }
	','
	{ after(grammarAccess.getSequenceTermAccess().getCommaKeyword_2_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceTerm__Group_2_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Group_2_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceTermAccess().getStepAssignment_2_1_1_2_1()); }
	(rule__SequenceTerm__StepAssignment_2_1_1_2_1)
	{ after(grammarAccess.getSequenceTermAccess().getStepAssignment_2_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group__0__Impl
	rule__MapTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getMapTermAction_0()); }
	()
	{ after(grammarAccess.getMapTermAccess().getMapTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group__1__Impl
	rule__MapTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getMapTermAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group__2__Impl
	rule__MapTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getAlternatives_2()); }
	(rule__MapTerm__Alternatives_2)
	{ after(grammarAccess.getMapTermAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getMapTermAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapTerm__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_2_1__0__Impl
	rule__MapTerm__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getTermAssignment_2_1_0()); }
	(rule__MapTerm__TermAssignment_2_1_0)
	{ after(grammarAccess.getMapTermAccess().getTermAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_2_1__1__Impl
	rule__MapTerm__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_1_1()); }
	'->'
	{ after(grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_2_1__2__Impl
	rule__MapTerm__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getTermAssignment_2_1_2()); }
	(rule__MapTerm__TermAssignment_2_1_2)
	{ after(grammarAccess.getMapTermAccess().getTermAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getGroup_2_1_3()); }
	(rule__MapTerm__Group_2_1_3__0)*
	{ after(grammarAccess.getMapTermAccess().getGroup_2_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapTerm__Group_2_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_2_1_3__0__Impl
	rule__MapTerm__Group_2_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getCommaKeyword_2_1_3_0()); }
	','
	{ after(grammarAccess.getMapTermAccess().getCommaKeyword_2_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_2_1_3__1__Impl
	rule__MapTerm__Group_2_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getTermAssignment_2_1_3_1()); }
	(rule__MapTerm__TermAssignment_2_1_3_1)
	{ after(grammarAccess.getMapTermAccess().getTermAssignment_2_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_2_1_3__2__Impl
	rule__MapTerm__Group_2_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_1_3_2()); }
	'->'
	{ after(grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_1_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapTerm__Group_2_1_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__Group_2_1_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapTermAccess().getTermAssignment_2_1_3_3()); }
	(rule__MapTerm__TermAssignment_2_1_3_3)
	{ after(grammarAccess.getMapTermAccess().getTermAssignment_2_1_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group__0__Impl
	rule__SetTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getSetTermAction_0()); }
	()
	{ after(grammarAccess.getSetTermAccess().getSetTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group__1__Impl
	rule__SetTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSetTermAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group__2__Impl
	rule__SetTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getGroup_2()); }
	(rule__SetTerm__Group_2__0)?
	{ after(grammarAccess.getSetTermAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getSetTermAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetTerm__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_2__0__Impl
	rule__SetTerm__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getStart_termAssignment_2_0()); }
	(rule__SetTerm__Start_termAssignment_2_0)
	{ after(grammarAccess.getSetTermAccess().getStart_termAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getAlternatives_2_1()); }
	(rule__SetTerm__Alternatives_2_1)?
	{ after(grammarAccess.getSetTermAccess().getAlternatives_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetTerm__Group_2_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_2_1_0__0__Impl
	rule__SetTerm__Group_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getCommaKeyword_2_1_0_0()); }
	','
	{ after(grammarAccess.getSetTermAccess().getCommaKeyword_2_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_2_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getOther_termsAssignment_2_1_0_1()); }
	(rule__SetTerm__Other_termsAssignment_2_1_0_1)
	{ after(grammarAccess.getSetTermAccess().getOther_termsAssignment_2_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetTerm__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_2_1_1__0__Impl
	rule__SetTerm__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getColonKeyword_2_1_1_0()); }
	(':')
	{ after(grammarAccess.getSetTermAccess().getColonKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_2_1_1__1__Impl
	rule__SetTerm__Group_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getEnd_termAssignment_2_1_1_1()); }
	(rule__SetTerm__End_termAssignment_2_1_1_1)
	{ after(grammarAccess.getSetTermAccess().getEnd_termAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_2_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getGroup_2_1_1_2()); }
	(rule__SetTerm__Group_2_1_1_2__0)?
	{ after(grammarAccess.getSetTermAccess().getGroup_2_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetTerm__Group_2_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_2_1_1_2__0__Impl
	rule__SetTerm__Group_2_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getCommaKeyword_2_1_1_2_0()); }
	','
	{ after(grammarAccess.getSetTermAccess().getCommaKeyword_2_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetTerm__Group_2_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Group_2_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetTermAccess().getStepAssignment_2_1_1_2_1()); }
	(rule__SetTerm__StepAssignment_2_1_1_2_1)
	{ after(grammarAccess.getSetTermAccess().getStepAssignment_2_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group__0__Impl
	rule__BagTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getBagTermAction_0()); }
	()
	{ after(grammarAccess.getBagTermAccess().getBagTermAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group__1__Impl
	rule__BagTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getLessThanSignKeyword_1()); }
	'<'
	{ after(grammarAccess.getBagTermAccess().getLessThanSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group__2__Impl
	rule__BagTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getGroup_2()); }
	(rule__BagTerm__Group_2__0)?
	{ after(grammarAccess.getBagTermAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getGreaterThanSignKeyword_3()); }
	'>'
	{ after(grammarAccess.getBagTermAccess().getGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagTerm__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_2__0__Impl
	rule__BagTerm__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getStart_termAssignment_2_0()); }
	(rule__BagTerm__Start_termAssignment_2_0)
	{ after(grammarAccess.getBagTermAccess().getStart_termAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getAlternatives_2_1()); }
	(rule__BagTerm__Alternatives_2_1)?
	{ after(grammarAccess.getBagTermAccess().getAlternatives_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagTerm__Group_2_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_2_1_0__0__Impl
	rule__BagTerm__Group_2_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getCommaKeyword_2_1_0_0()); }
	','
	{ after(grammarAccess.getBagTermAccess().getCommaKeyword_2_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_2_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getOther_termsAssignment_2_1_0_1()); }
	(rule__BagTerm__Other_termsAssignment_2_1_0_1)
	{ after(grammarAccess.getBagTermAccess().getOther_termsAssignment_2_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagTerm__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_2_1_1__0__Impl
	rule__BagTerm__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getColonKeyword_2_1_1_0()); }
	(':')
	{ after(grammarAccess.getBagTermAccess().getColonKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_2_1_1__1__Impl
	rule__BagTerm__Group_2_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getEnd_termAssignment_2_1_1_1()); }
	(rule__BagTerm__End_termAssignment_2_1_1_1)
	{ after(grammarAccess.getBagTermAccess().getEnd_termAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_2_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getGroup_2_1_1_2()); }
	(rule__BagTerm__Group_2_1_1_2__0)?
	{ after(grammarAccess.getBagTermAccess().getGroup_2_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagTerm__Group_2_1_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_2_1_1_2__0__Impl
	rule__BagTerm__Group_2_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2_1_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getCommaKeyword_2_1_1_2_0()); }
	','
	{ after(grammarAccess.getBagTermAccess().getCommaKeyword_2_1_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2_1_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagTerm__Group_2_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Group_2_1_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagTermAccess().getStepAssignment_2_1_1_2_1()); }
	(rule__BagTerm__StepAssignment_2_1_1_2_1)
	{ after(grammarAccess.getBagTermAccess().getStepAssignment_2_1_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistUniqueTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group__0__Impl
	rule__ExistUniqueTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExistUniqueTermAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group__1__Impl
	rule__ExistUniqueTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getExistKeyword_1()); }
	'exist'
	{ after(grammarAccess.getExistUniqueTermAccess().getExistKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group__2__Impl
	rule__ExistUniqueTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getUniqueKeyword_2()); }
	'unique'
	{ after(grammarAccess.getExistUniqueTermAccess().getUniqueKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group__3__Impl
	rule__ExistUniqueTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getVariableAssignment_3()); }
	(rule__ExistUniqueTerm__VariableAssignment_3)
	{ after(grammarAccess.getExistUniqueTermAccess().getVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group__4__Impl
	rule__ExistUniqueTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getInKeyword_4()); }
	'in'
	{ after(grammarAccess.getExistUniqueTermAccess().getInKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group__5__Impl
	rule__ExistUniqueTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getRangesAssignment_5()); }
	(rule__ExistUniqueTerm__RangesAssignment_5)
	{ after(grammarAccess.getExistUniqueTermAccess().getRangesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group__6__Impl
	rule__ExistUniqueTerm__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getGroup_6()); }
	(rule__ExistUniqueTerm__Group_6__0)*
	{ after(grammarAccess.getExistUniqueTermAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group__7__Impl
	rule__ExistUniqueTerm__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getGroup_7()); }
	(rule__ExistUniqueTerm__Group_7__0)?
	{ after(grammarAccess.getExistUniqueTermAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getExistUniqueTermAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistUniqueTerm__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group_6__0__Impl
	rule__ExistUniqueTerm__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getExistUniqueTermAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group_6__1__Impl
	rule__ExistUniqueTerm__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getVariableAssignment_6_1()); }
	(rule__ExistUniqueTerm__VariableAssignment_6_1)
	{ after(grammarAccess.getExistUniqueTermAccess().getVariableAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group_6__2__Impl
	rule__ExistUniqueTerm__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getInKeyword_6_2()); }
	'in'
	{ after(grammarAccess.getExistUniqueTermAccess().getInKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getRangesAssignment_6_3()); }
	(rule__ExistUniqueTerm__RangesAssignment_6_3)
	{ after(grammarAccess.getExistUniqueTermAccess().getRangesAssignment_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistUniqueTerm__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group_7__0__Impl
	rule__ExistUniqueTerm__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getWithKeyword_7_0()); }
	'with'
	{ after(grammarAccess.getExistUniqueTermAccess().getWithKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistUniqueTerm__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistUniqueTermAccess().getGuardAssignment_7_1()); }
	(rule__ExistUniqueTerm__GuardAssignment_7_1)
	{ after(grammarAccess.getExistUniqueTermAccess().getGuardAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group__0__Impl
	rule__ExistTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getExistTermAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group__1__Impl
	rule__ExistTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getExistKeyword_1()); }
	'exist'
	{ after(grammarAccess.getExistTermAccess().getExistKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group__2__Impl
	rule__ExistTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getVariableAssignment_2()); }
	(rule__ExistTerm__VariableAssignment_2)
	{ after(grammarAccess.getExistTermAccess().getVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group__3__Impl
	rule__ExistTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getInKeyword_3()); }
	'in'
	{ after(grammarAccess.getExistTermAccess().getInKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group__4__Impl
	rule__ExistTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getRangesAssignment_4()); }
	(rule__ExistTerm__RangesAssignment_4)
	{ after(grammarAccess.getExistTermAccess().getRangesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group__5__Impl
	rule__ExistTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getGroup_5()); }
	(rule__ExistTerm__Group_5__0)*
	{ after(grammarAccess.getExistTermAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group__6__Impl
	rule__ExistTerm__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getGroup_6()); }
	(rule__ExistTerm__Group_6__0)?
	{ after(grammarAccess.getExistTermAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getExistTermAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistTerm__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group_5__0__Impl
	rule__ExistTerm__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getExistTermAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group_5__1__Impl
	rule__ExistTerm__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getVariableAssignment_5_1()); }
	(rule__ExistTerm__VariableAssignment_5_1)
	{ after(grammarAccess.getExistTermAccess().getVariableAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group_5__2__Impl
	rule__ExistTerm__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getInKeyword_5_2()); }
	'in'
	{ after(grammarAccess.getExistTermAccess().getInKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getRangesAssignment_5_3()); }
	(rule__ExistTerm__RangesAssignment_5_3)
	{ after(grammarAccess.getExistTermAccess().getRangesAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExistTerm__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group_6__0__Impl
	rule__ExistTerm__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getWithKeyword_6_0()); }
	'with'
	{ after(grammarAccess.getExistTermAccess().getWithKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExistTerm__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistTermAccess().getGuardAssignment_6_1()); }
	(rule__ExistTerm__GuardAssignment_6_1)
	{ after(grammarAccess.getExistTermAccess().getGuardAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForallTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group__0__Impl
	rule__ForallTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getForallTermAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group__1__Impl
	rule__ForallTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getForallKeyword_1()); }
	'forall'
	{ after(grammarAccess.getForallTermAccess().getForallKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group__2__Impl
	rule__ForallTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getVariableAssignment_2()); }
	(rule__ForallTerm__VariableAssignment_2)
	{ after(grammarAccess.getForallTermAccess().getVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group__3__Impl
	rule__ForallTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getInKeyword_3()); }
	'in'
	{ after(grammarAccess.getForallTermAccess().getInKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group__4__Impl
	rule__ForallTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getRangesAssignment_4()); }
	(rule__ForallTerm__RangesAssignment_4)
	{ after(grammarAccess.getForallTermAccess().getRangesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group__5__Impl
	rule__ForallTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getGroup_5()); }
	(rule__ForallTerm__Group_5__0)*
	{ after(grammarAccess.getForallTermAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group__6__Impl
	rule__ForallTerm__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getGroup_6()); }
	(rule__ForallTerm__Group_6__0)?
	{ after(grammarAccess.getForallTermAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getForallTermAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForallTerm__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group_5__0__Impl
	rule__ForallTerm__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getForallTermAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group_5__1__Impl
	rule__ForallTerm__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getVariableAssignment_5_1()); }
	(rule__ForallTerm__VariableAssignment_5_1)
	{ after(grammarAccess.getForallTermAccess().getVariableAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group_5__2__Impl
	rule__ForallTerm__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getInKeyword_5_2()); }
	'in'
	{ after(grammarAccess.getForallTermAccess().getInKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getRangesAssignment_5_3()); }
	(rule__ForallTerm__RangesAssignment_5_3)
	{ after(grammarAccess.getForallTermAccess().getRangesAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForallTerm__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group_6__0__Impl
	rule__ForallTerm__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getWithKeyword_6_0()); }
	'with'
	{ after(grammarAccess.getForallTermAccess().getWithKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallTerm__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallTermAccess().getGuardAssignment_6_1()); }
	(rule__ForallTerm__GuardAssignment_6_1)
	{ after(grammarAccess.getForallTermAccess().getGuardAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__0__Impl
	rule__LetTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getLetKeyword_0()); }
	'let'
	{ after(grammarAccess.getLetTermAccess().getLetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__1__Impl
	rule__LetTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getLetTermAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__2__Impl
	rule__LetTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getVariableAssignment_2()); }
	(rule__LetTerm__VariableAssignment_2)
	{ after(grammarAccess.getLetTermAccess().getVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__3__Impl
	rule__LetTerm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getLetTermAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__4__Impl
	rule__LetTerm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getAssignmentTermAssignment_4()); }
	(rule__LetTerm__AssignmentTermAssignment_4)
	{ after(grammarAccess.getLetTermAccess().getAssignmentTermAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__5__Impl
	rule__LetTerm__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getGroup_5()); }
	(rule__LetTerm__Group_5__0)*
	{ after(grammarAccess.getLetTermAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__6__Impl
	rule__LetTerm__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getLetTermAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__7__Impl
	rule__LetTerm__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getInKeyword_7()); }
	'in'
	{ after(grammarAccess.getLetTermAccess().getInKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__8__Impl
	rule__LetTerm__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getBodyAssignment_8()); }
	(rule__LetTerm__BodyAssignment_8)
	{ after(grammarAccess.getLetTermAccess().getBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getEndletKeyword_9()); }
	'endlet'
	{ after(grammarAccess.getLetTermAccess().getEndletKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetTerm__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group_5__0__Impl
	rule__LetTerm__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getLetTermAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group_5__1__Impl
	rule__LetTerm__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getVariableAssignment_5_1()); }
	(rule__LetTerm__VariableAssignment_5_1)
	{ after(grammarAccess.getLetTermAccess().getVariableAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group_5__2__Impl
	rule__LetTerm__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getEqualsSignKeyword_5_2()); }
	'='
	{ after(grammarAccess.getLetTermAccess().getEqualsSignKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetTerm__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetTermAccess().getAssignmentTermAssignment_5_3()); }
	(rule__LetTerm__AssignmentTermAssignment_5_3)
	{ after(grammarAccess.getLetTermAccess().getAssignmentTermAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetCT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group__0__Impl
	rule__SetCT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getSetCTAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group__1__Impl
	rule__SetCT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getVariableAssignment_1()); }
	(rule__SetCT__VariableAssignment_1)
	{ after(grammarAccess.getSetCTAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group__2__Impl
	rule__SetCT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getSetCTAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group__3__Impl
	rule__SetCT__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getRangesAssignment_3()); }
	(rule__SetCT__RangesAssignment_3)
	{ after(grammarAccess.getSetCTAccess().getRangesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group__4__Impl
	rule__SetCT__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getGroup_4()); }
	(rule__SetCT__Group_4__0)*
	{ after(grammarAccess.getSetCTAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group__5__Impl
	rule__SetCT__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getGroup_5()); }
	(rule__SetCT__Group_5__0)?
	{ after(grammarAccess.getSetCTAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group__6__Impl
	rule__SetCT__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getSetCTAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group__7__Impl
	rule__SetCT__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getTermAssignment_7()); }
	(rule__SetCT__TermAssignment_7)
	{ after(grammarAccess.getSetCTAccess().getTermAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getSetCTAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetCT__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group_4__0__Impl
	rule__SetCT__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getSetCTAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group_4__1__Impl
	rule__SetCT__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getVariableAssignment_4_1()); }
	(rule__SetCT__VariableAssignment_4_1)
	{ after(grammarAccess.getSetCTAccess().getVariableAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group_4__2__Impl
	rule__SetCT__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getInKeyword_4_2()); }
	'in'
	{ after(grammarAccess.getSetCTAccess().getInKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getRangesAssignment_4_3()); }
	(rule__SetCT__RangesAssignment_4_3)
	{ after(grammarAccess.getSetCTAccess().getRangesAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetCT__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group_5__0__Impl
	rule__SetCT__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getVerticalLineKeyword_5_0()); }
	'|'
	{ after(grammarAccess.getSetCTAccess().getVerticalLineKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetCT__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetCTAccess().getGuardAssignment_5_1()); }
	(rule__SetCT__GuardAssignment_5_1)
	{ after(grammarAccess.getSetCTAccess().getGuardAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapCT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group__0__Impl
	rule__MapCT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getMapCTAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group__1__Impl
	rule__MapCT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getVariableAssignment_1()); }
	(rule__MapCT__VariableAssignment_1)
	{ after(grammarAccess.getMapCTAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group__2__Impl
	rule__MapCT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getMapCTAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group__3__Impl
	rule__MapCT__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getRangesAssignment_3()); }
	(rule__MapCT__RangesAssignment_3)
	{ after(grammarAccess.getMapCTAccess().getRangesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group__4__Impl
	rule__MapCT__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getGroup_4()); }
	(rule__MapCT__Group_4__0)*
	{ after(grammarAccess.getMapCTAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group__5__Impl
	rule__MapCT__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getGroup_5()); }
	(rule__MapCT__Group_5__0)?
	{ after(grammarAccess.getMapCTAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group__6__Impl
	rule__MapCT__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getMapCTAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group__7__Impl
	rule__MapCT__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getTermAssignment_7()); }
	(rule__MapCT__TermAssignment_7)
	{ after(grammarAccess.getMapCTAccess().getTermAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getMapCTAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapCT__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group_4__0__Impl
	rule__MapCT__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getMapCTAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group_4__1__Impl
	rule__MapCT__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getVariableAssignment_4_1()); }
	(rule__MapCT__VariableAssignment_4_1)
	{ after(grammarAccess.getMapCTAccess().getVariableAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group_4__2__Impl
	rule__MapCT__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getInKeyword_4_2()); }
	'in'
	{ after(grammarAccess.getMapCTAccess().getInKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getRangesAssignment_4_3()); }
	(rule__MapCT__RangesAssignment_4_3)
	{ after(grammarAccess.getMapCTAccess().getRangesAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapCT__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group_5__0__Impl
	rule__MapCT__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getVerticalLineKeyword_5_0()); }
	'|'
	{ after(grammarAccess.getMapCTAccess().getVerticalLineKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapCT__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapCTAccess().getGuardAssignment_5_1()); }
	(rule__MapCT__GuardAssignment_5_1)
	{ after(grammarAccess.getMapCTAccess().getGuardAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceCT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group__0__Impl
	rule__SequenceCT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getSequenceCTAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group__1__Impl
	rule__SequenceCT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getVariableAssignment_1()); }
	(rule__SequenceCT__VariableAssignment_1)
	{ after(grammarAccess.getSequenceCTAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group__2__Impl
	rule__SequenceCT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getSequenceCTAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group__3__Impl
	rule__SequenceCT__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getRangesAssignment_3()); }
	(rule__SequenceCT__RangesAssignment_3)
	{ after(grammarAccess.getSequenceCTAccess().getRangesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group__4__Impl
	rule__SequenceCT__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getGroup_4()); }
	(rule__SequenceCT__Group_4__0)*
	{ after(grammarAccess.getSequenceCTAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group__5__Impl
	rule__SequenceCT__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getGroup_5()); }
	(rule__SequenceCT__Group_5__0)?
	{ after(grammarAccess.getSequenceCTAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group__6__Impl
	rule__SequenceCT__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getSequenceCTAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group__7__Impl
	rule__SequenceCT__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getTermAssignment_7()); }
	(rule__SequenceCT__TermAssignment_7)
	{ after(grammarAccess.getSequenceCTAccess().getTermAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getRightSquareBracketKeyword_8()); }
	']'
	{ after(grammarAccess.getSequenceCTAccess().getRightSquareBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceCT__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group_4__0__Impl
	rule__SequenceCT__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getSequenceCTAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group_4__1__Impl
	rule__SequenceCT__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getVariableAssignment_4_1()); }
	(rule__SequenceCT__VariableAssignment_4_1)
	{ after(grammarAccess.getSequenceCTAccess().getVariableAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group_4__2__Impl
	rule__SequenceCT__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getInKeyword_4_2()); }
	'in'
	{ after(grammarAccess.getSequenceCTAccess().getInKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getRangesAssignment_4_3()); }
	(rule__SequenceCT__RangesAssignment_4_3)
	{ after(grammarAccess.getSequenceCTAccess().getRangesAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceCT__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group_5__0__Impl
	rule__SequenceCT__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getVerticalLineKeyword_5_0()); }
	'|'
	{ after(grammarAccess.getSequenceCTAccess().getVerticalLineKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SequenceCT__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSequenceCTAccess().getGuardAssignment_5_1()); }
	(rule__SequenceCT__GuardAssignment_5_1)
	{ after(grammarAccess.getSequenceCTAccess().getGuardAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagCT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group__0__Impl
	rule__BagCT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getLessThanSignKeyword_0()); }
	'<'
	{ after(grammarAccess.getBagCTAccess().getLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group__1__Impl
	rule__BagCT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getVariableAssignment_1()); }
	(rule__BagCT__VariableAssignment_1)
	{ after(grammarAccess.getBagCTAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group__2__Impl
	rule__BagCT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getBagCTAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group__3__Impl
	rule__BagCT__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getRangesAssignment_3()); }
	(rule__BagCT__RangesAssignment_3)
	{ after(grammarAccess.getBagCTAccess().getRangesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group__4__Impl
	rule__BagCT__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getGroup_4()); }
	(rule__BagCT__Group_4__0)*
	{ after(grammarAccess.getBagCTAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group__5__Impl
	rule__BagCT__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getGroup_5()); }
	(rule__BagCT__Group_5__0)?
	{ after(grammarAccess.getBagCTAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group__6__Impl
	rule__BagCT__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getColonKeyword_6()); }
	':'
	{ after(grammarAccess.getBagCTAccess().getColonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group__7__Impl
	rule__BagCT__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getTermAssignment_7()); }
	(rule__BagCT__TermAssignment_7)
	{ after(grammarAccess.getBagCTAccess().getTermAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getGreaterThanSignKeyword_8()); }
	'>'
	{ after(grammarAccess.getBagCTAccess().getGreaterThanSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagCT__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group_4__0__Impl
	rule__BagCT__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getBagCTAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group_4__1__Impl
	rule__BagCT__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getVariableAssignment_4_1()); }
	(rule__BagCT__VariableAssignment_4_1)
	{ after(grammarAccess.getBagCTAccess().getVariableAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group_4__2__Impl
	rule__BagCT__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getInKeyword_4_2()); }
	'in'
	{ after(grammarAccess.getBagCTAccess().getInKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getRangesAssignment_4_3()); }
	(rule__BagCT__RangesAssignment_4_3)
	{ after(grammarAccess.getBagCTAccess().getRangesAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BagCT__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group_5__0__Impl
	rule__BagCT__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getVerticalLineKeyword_5_0()); }
	'|'
	{ after(grammarAccess.getBagCTAccess().getVerticalLineKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BagCT__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBagCTAccess().getGuardAssignment_5_1()); }
	(rule__BagCT__GuardAssignment_5_1)
	{ after(grammarAccess.getBagCTAccess().getGuardAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleAsTerm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group__0__Impl
	rule__RuleAsTerm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getLessThanSignLessThanSignKeyword_0()); }
	'<<'
	{ after(grammarAccess.getRuleAsTermAccess().getLessThanSignLessThanSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group__1__Impl
	rule__RuleAsTerm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getNameAssignment_1()); }
	(rule__RuleAsTerm__NameAssignment_1)
	{ after(grammarAccess.getRuleAsTermAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group__2__Impl
	rule__RuleAsTerm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getGroup_2()); }
	(rule__RuleAsTerm__Group_2__0)?
	{ after(grammarAccess.getRuleAsTermAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getGreaterThanSignGreaterThanSignKeyword_3()); }
	'>>'
	{ after(grammarAccess.getRuleAsTermAccess().getGreaterThanSignGreaterThanSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleAsTerm__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group_2__0__Impl
	rule__RuleAsTerm__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getRuleAsTermAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group_2__1__Impl
	rule__RuleAsTerm__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getDomainsAssignment_2_1()); }
	(rule__RuleAsTerm__DomainsAssignment_2_1)
	{ after(grammarAccess.getRuleAsTermAccess().getDomainsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group_2__2__Impl
	rule__RuleAsTerm__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getGroup_2_2()); }
	(rule__RuleAsTerm__Group_2_2__0)*
	{ after(grammarAccess.getRuleAsTermAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getRuleAsTermAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RuleAsTerm__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group_2_2__0__Impl
	rule__RuleAsTerm__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getCommaKeyword_2_2_0()); }
	','
	{ after(grammarAccess.getRuleAsTermAccess().getCommaKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RuleAsTerm__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAsTermAccess().getDomainsAssignment_2_2_1()); }
	(rule__RuleAsTerm__DomainsAssignment_2_2_1)
	{ after(grammarAccess.getRuleAsTermAccess().getDomainsAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TermAsRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermAsRule__Group__0__Impl
	rule__TermAsRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAsRuleAccess().getTermAssignment_0()); }
	(rule__TermAsRule__TermAssignment_0)
	{ after(grammarAccess.getTermAsRuleAccess().getTermAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermAsRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAsRuleAccess().getGroup_1()); }
	(rule__TermAsRule__Group_1__0)?
	{ after(grammarAccess.getTermAsRuleAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TermAsRule__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermAsRule__Group_1__0__Impl
	rule__TermAsRule__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAsRuleAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getTermAsRuleAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermAsRule__Group_1__1__Impl
	rule__TermAsRule__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAsRuleAccess().getParametersAssignment_1_1()); }
	(rule__TermAsRule__ParametersAssignment_1_1)
	{ after(grammarAccess.getTermAsRuleAccess().getParametersAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermAsRule__Group_1__2__Impl
	rule__TermAsRule__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAsRuleAccess().getGroup_1_2()); }
	(rule__TermAsRule__Group_1_2__0)*
	{ after(grammarAccess.getTermAsRuleAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermAsRule__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAsRuleAccess().getRightSquareBracketKeyword_1_3()); }
	']'
	{ after(grammarAccess.getTermAsRuleAccess().getRightSquareBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TermAsRule__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermAsRule__Group_1_2__0__Impl
	rule__TermAsRule__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAsRuleAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getTermAsRuleAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TermAsRule__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAsRuleAccess().getParametersAssignment_1_2_1()); }
	(rule__TermAsRule__ParametersAssignment_1_2_1)
	{ after(grammarAccess.getTermAsRuleAccess().getParametersAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SkipRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipRule__Group__0__Impl
	rule__SkipRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipRuleAccess().getSkipRuleAction_0()); }
	()
	{ after(grammarAccess.getSkipRuleAccess().getSkipRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SkipRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SkipRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSkipRuleAccess().getSkipKeyword_1()); }
	'skip'
	{ after(grammarAccess.getSkipRuleAccess().getSkipKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateRule__Group__0__Impl
	rule__UpdateRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateRuleAccess().getLocationAssignment_0()); }
	(rule__UpdateRule__LocationAssignment_0)
	{ after(grammarAccess.getUpdateRuleAccess().getLocationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateRule__Group__1__Impl
	rule__UpdateRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateRuleAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getUpdateRuleAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UpdateRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateRuleAccess().getUpdatingTermAssignment_2()); }
	(rule__UpdateRule__UpdatingTermAssignment_2)
	{ after(grammarAccess.getUpdateRuleAccess().getUpdatingTermAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockRule__Group__0__Impl
	rule__BlockRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockRuleAccess().getParKeyword_0()); }
	'par'
	{ after(grammarAccess.getBlockRuleAccess().getParKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockRule__Group__1__Impl
	rule__BlockRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockRuleAccess().getRulesAssignment_1()); }
	(rule__BlockRule__RulesAssignment_1)
	{ after(grammarAccess.getBlockRuleAccess().getRulesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockRule__Group__2__Impl
	rule__BlockRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getBlockRuleAccess().getRulesAssignment_2()); }
		(rule__BlockRule__RulesAssignment_2)
		{ after(grammarAccess.getBlockRuleAccess().getRulesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getBlockRuleAccess().getRulesAssignment_2()); }
		(rule__BlockRule__RulesAssignment_2)*
		{ after(grammarAccess.getBlockRuleAccess().getRulesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockRuleAccess().getEndparKeyword_3()); }
	'endpar'
	{ after(grammarAccess.getBlockRuleAccess().getEndparKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRule__Group__0__Impl
	rule__ConditionalRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRuleAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditionalRuleAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRule__Group__1__Impl
	rule__ConditionalRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRuleAccess().getGuardAssignment_1()); }
	(rule__ConditionalRule__GuardAssignment_1)
	{ after(grammarAccess.getConditionalRuleAccess().getGuardAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRule__Group__2__Impl
	rule__ConditionalRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRuleAccess().getThenKeyword_2()); }
	'then'
	{ after(grammarAccess.getConditionalRuleAccess().getThenKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRule__Group__3__Impl
	rule__ConditionalRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRuleAccess().getThenRuleAssignment_3()); }
	(rule__ConditionalRule__ThenRuleAssignment_3)
	{ after(grammarAccess.getConditionalRuleAccess().getThenRuleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRule__Group__4__Impl
	rule__ConditionalRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRuleAccess().getGroup_4()); }
	(rule__ConditionalRule__Group_4__0)?
	{ after(grammarAccess.getConditionalRuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRuleAccess().getEndifKeyword_5()); }
	'endif'
	{ after(grammarAccess.getConditionalRuleAccess().getEndifKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalRule__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRule__Group_4__0__Impl
	rule__ConditionalRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRuleAccess().getElseKeyword_4_0()); }
	'else'
	{ after(grammarAccess.getConditionalRuleAccess().getElseKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalRule__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalRuleAccess().getElseRuleAssignment_4_1()); }
	(rule__ConditionalRule__ElseRuleAssignment_4_1)
	{ after(grammarAccess.getConditionalRuleAccess().getElseRuleAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChooseRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group__0__Impl
	rule__ChooseRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getChooseKeyword_0()); }
	'choose'
	{ after(grammarAccess.getChooseRuleAccess().getChooseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group__1__Impl
	rule__ChooseRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getVariableAssignment_1()); }
	(rule__ChooseRule__VariableAssignment_1)
	{ after(grammarAccess.getChooseRuleAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group__2__Impl
	rule__ChooseRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getChooseRuleAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group__3__Impl
	rule__ChooseRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getRangesAssignment_3()); }
	(rule__ChooseRule__RangesAssignment_3)
	{ after(grammarAccess.getChooseRuleAccess().getRangesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group__4__Impl
	rule__ChooseRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getGroup_4()); }
	(rule__ChooseRule__Group_4__0)*
	{ after(grammarAccess.getChooseRuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group__5__Impl
	rule__ChooseRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getWithKeyword_5()); }
	'with'
	{ after(grammarAccess.getChooseRuleAccess().getWithKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group__6__Impl
	rule__ChooseRule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getGuardAssignment_6()); }
	(rule__ChooseRule__GuardAssignment_6)
	{ after(grammarAccess.getChooseRuleAccess().getGuardAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group__7__Impl
	rule__ChooseRule__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getDoKeyword_7()); }
	'do'
	{ after(grammarAccess.getChooseRuleAccess().getDoKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group__8__Impl
	rule__ChooseRule__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getDoRuleAssignment_8()); }
	(rule__ChooseRule__DoRuleAssignment_8)
	{ after(grammarAccess.getChooseRuleAccess().getDoRuleAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getGroup_9()); }
	(rule__ChooseRule__Group_9__0)?
	{ after(grammarAccess.getChooseRuleAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChooseRule__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group_4__0__Impl
	rule__ChooseRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getChooseRuleAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group_4__1__Impl
	rule__ChooseRule__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getVariableAssignment_4_1()); }
	(rule__ChooseRule__VariableAssignment_4_1)
	{ after(grammarAccess.getChooseRuleAccess().getVariableAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group_4__2__Impl
	rule__ChooseRule__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getInKeyword_4_2()); }
	'in'
	{ after(grammarAccess.getChooseRuleAccess().getInKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getRangesAssignment_4_3()); }
	(rule__ChooseRule__RangesAssignment_4_3)
	{ after(grammarAccess.getChooseRuleAccess().getRangesAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChooseRule__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group_9__0__Impl
	rule__ChooseRule__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getIfnoneKeyword_9_0()); }
	'ifnone'
	{ after(grammarAccess.getChooseRuleAccess().getIfnoneKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChooseRule__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseRuleAccess().getIfnoneAssignment_9_1()); }
	(rule__ChooseRule__IfnoneAssignment_9_1)
	{ after(grammarAccess.getChooseRuleAccess().getIfnoneAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForallRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group__0__Impl
	rule__ForallRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getForallKeyword_0()); }
	'forall'
	{ after(grammarAccess.getForallRuleAccess().getForallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group__1__Impl
	rule__ForallRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getVariableAssignment_1()); }
	(rule__ForallRule__VariableAssignment_1)
	{ after(grammarAccess.getForallRuleAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group__2__Impl
	rule__ForallRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getForallRuleAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group__3__Impl
	rule__ForallRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getRangesAssignment_3()); }
	(rule__ForallRule__RangesAssignment_3)
	{ after(grammarAccess.getForallRuleAccess().getRangesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group__4__Impl
	rule__ForallRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getGroup_4()); }
	(rule__ForallRule__Group_4__0)*
	{ after(grammarAccess.getForallRuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group__5__Impl
	rule__ForallRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getGroup_5()); }
	(rule__ForallRule__Group_5__0)?
	{ after(grammarAccess.getForallRuleAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group__6__Impl
	rule__ForallRule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getDoKeyword_6()); }
	'do'
	{ after(grammarAccess.getForallRuleAccess().getDoKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getDoRuleAssignment_7()); }
	(rule__ForallRule__DoRuleAssignment_7)
	{ after(grammarAccess.getForallRuleAccess().getDoRuleAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForallRule__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group_4__0__Impl
	rule__ForallRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getForallRuleAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group_4__1__Impl
	rule__ForallRule__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getVariableAssignment_4_1()); }
	(rule__ForallRule__VariableAssignment_4_1)
	{ after(grammarAccess.getForallRuleAccess().getVariableAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group_4__2__Impl
	rule__ForallRule__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getInKeyword_4_2()); }
	'in'
	{ after(grammarAccess.getForallRuleAccess().getInKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getRangesAssignment_4_3()); }
	(rule__ForallRule__RangesAssignment_4_3)
	{ after(grammarAccess.getForallRuleAccess().getRangesAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForallRule__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group_5__0__Impl
	rule__ForallRule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getWithKeyword_5_0()); }
	'with'
	{ after(grammarAccess.getForallRuleAccess().getWithKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForallRule__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForallRuleAccess().getGuardAssignment_5_1()); }
	(rule__ForallRule__GuardAssignment_5_1)
	{ after(grammarAccess.getForallRuleAccess().getGuardAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group__0__Impl
	rule__LetRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getLetKeyword_0()); }
	'let'
	{ after(grammarAccess.getLetRuleAccess().getLetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group__1__Impl
	rule__LetRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getLetRuleAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group__2__Impl
	rule__LetRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getVariableAssignment_2()); }
	(rule__LetRule__VariableAssignment_2)
	{ after(grammarAccess.getLetRuleAccess().getVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group__3__Impl
	rule__LetRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getLetRuleAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group__4__Impl
	rule__LetRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getInitExpressionAssignment_4()); }
	(rule__LetRule__InitExpressionAssignment_4)
	{ after(grammarAccess.getLetRuleAccess().getInitExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group__5__Impl
	rule__LetRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getGroup_5()); }
	(rule__LetRule__Group_5__0)*
	{ after(grammarAccess.getLetRuleAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group__6__Impl
	rule__LetRule__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getLetRuleAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group__7__Impl
	rule__LetRule__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getInKeyword_7()); }
	'in'
	{ after(grammarAccess.getLetRuleAccess().getInKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group__8__Impl
	rule__LetRule__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getInRuleAssignment_8()); }
	(rule__LetRule__InRuleAssignment_8)
	{ after(grammarAccess.getLetRuleAccess().getInRuleAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getEndletKeyword_9()); }
	'endlet'
	{ after(grammarAccess.getLetRuleAccess().getEndletKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LetRule__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group_5__0__Impl
	rule__LetRule__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getLetRuleAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group_5__1__Impl
	rule__LetRule__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getVariableAssignment_5_1()); }
	(rule__LetRule__VariableAssignment_5_1)
	{ after(grammarAccess.getLetRuleAccess().getVariableAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group_5__2__Impl
	rule__LetRule__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getEqualsSignKeyword_5_2()); }
	'='
	{ after(grammarAccess.getLetRuleAccess().getEqualsSignKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LetRule__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetRuleAccess().getInitExpressionAssignment_5_3()); }
	(rule__LetRule__InitExpressionAssignment_5_3)
	{ after(grammarAccess.getLetRuleAccess().getInitExpressionAssignment_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MacroCallRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroCallRule__Group__0__Impl
	rule__MacroCallRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroCallRuleAccess().getNameAssignment_0()); }
	(rule__MacroCallRule__NameAssignment_0)
	{ after(grammarAccess.getMacroCallRuleAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroCallRule__Group__1__Impl
	rule__MacroCallRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroCallRuleAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getMacroCallRuleAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroCallRule__Group__2__Impl
	rule__MacroCallRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroCallRuleAccess().getGroup_2()); }
	(rule__MacroCallRule__Group_2__0)?
	{ after(grammarAccess.getMacroCallRuleAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroCallRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroCallRuleAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getMacroCallRuleAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MacroCallRule__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroCallRule__Group_2__0__Impl
	rule__MacroCallRule__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroCallRuleAccess().getParametersAssignment_2_0()); }
	(rule__MacroCallRule__ParametersAssignment_2_0)
	{ after(grammarAccess.getMacroCallRuleAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroCallRule__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroCallRuleAccess().getGroup_2_1()); }
	(rule__MacroCallRule__Group_2_1__0)*
	{ after(grammarAccess.getMacroCallRuleAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MacroCallRule__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroCallRule__Group_2_1__0__Impl
	rule__MacroCallRule__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroCallRuleAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getMacroCallRuleAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MacroCallRule__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMacroCallRuleAccess().getParametersAssignment_2_1_1()); }
	(rule__MacroCallRule__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getMacroCallRuleAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendRule__Group__0__Impl
	rule__ExtendRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendRuleAccess().getExtendKeyword_0()); }
	'extend'
	{ after(grammarAccess.getExtendRuleAccess().getExtendKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendRule__Group__1__Impl
	rule__ExtendRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendRuleAccess().getExtendedDomainAssignment_1()); }
	(rule__ExtendRule__ExtendedDomainAssignment_1)
	{ after(grammarAccess.getExtendRuleAccess().getExtendedDomainAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendRule__Group__2__Impl
	rule__ExtendRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendRuleAccess().getWithKeyword_2()); }
	'with'
	{ after(grammarAccess.getExtendRuleAccess().getWithKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendRule__Group__3__Impl
	rule__ExtendRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendRuleAccess().getBoundVarAssignment_3()); }
	(rule__ExtendRule__BoundVarAssignment_3)
	{ after(grammarAccess.getExtendRuleAccess().getBoundVarAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendRule__Group__4__Impl
	rule__ExtendRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendRuleAccess().getGroup_4()); }
	(rule__ExtendRule__Group_4__0)*
	{ after(grammarAccess.getExtendRuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendRule__Group__5__Impl
	rule__ExtendRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendRuleAccess().getDoKeyword_5()); }
	'do'
	{ after(grammarAccess.getExtendRuleAccess().getDoKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendRule__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendRuleAccess().getDoRuleAssignment_6()); }
	(rule__ExtendRule__DoRuleAssignment_6)
	{ after(grammarAccess.getExtendRuleAccess().getDoRuleAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendRule__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendRule__Group_4__0__Impl
	rule__ExtendRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendRuleAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getExtendRuleAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendRule__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendRuleAccess().getBoundVarAssignment_4_1()); }
	(rule__ExtendRule__BoundVarAssignment_4_1)
	{ after(grammarAccess.getExtendRuleAccess().getBoundVarAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SeqRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SeqRule__Group__0__Impl
	rule__SeqRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SeqRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSeqRuleAccess().getSeqKeyword_0()); }
	'seq'
	{ after(grammarAccess.getSeqRuleAccess().getSeqKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeqRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SeqRule__Group__1__Impl
	rule__SeqRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SeqRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSeqRuleAccess().getRulesAssignment_1()); }
	(rule__SeqRule__RulesAssignment_1)
	{ after(grammarAccess.getSeqRuleAccess().getRulesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeqRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SeqRule__Group__2__Impl
	rule__SeqRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SeqRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSeqRuleAccess().getRulesAssignment_2()); }
		(rule__SeqRule__RulesAssignment_2)
		{ after(grammarAccess.getSeqRuleAccess().getRulesAssignment_2()); }
	)
	(
		{ before(grammarAccess.getSeqRuleAccess().getRulesAssignment_2()); }
		(rule__SeqRule__RulesAssignment_2)*
		{ after(grammarAccess.getSeqRuleAccess().getRulesAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeqRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SeqRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SeqRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSeqRuleAccess().getEndseqKeyword_3()); }
	'endseq'
	{ after(grammarAccess.getSeqRuleAccess().getEndseqKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IterateRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateRule__Group__0__Impl
	rule__IterateRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateRuleAccess().getIterateKeyword_0()); }
	'iterate'
	{ after(grammarAccess.getIterateRuleAccess().getIterateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateRule__Group__1__Impl
	rule__IterateRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateRuleAccess().getRuleAssignment_1()); }
	(rule__IterateRule__RuleAssignment_1)
	{ after(grammarAccess.getIterateRuleAccess().getRuleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterateRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterateRuleAccess().getEnditerateKeyword_2()); }
	'enditerate'
	{ after(grammarAccess.getIterateRuleAccess().getEnditerateKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurboCallRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboCallRule__Group__0__Impl
	rule__TurboCallRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboCallRuleAccess().getCalledRuleNameAssignment_0()); }
	(rule__TurboCallRule__CalledRuleNameAssignment_0)
	{ after(grammarAccess.getTurboCallRuleAccess().getCalledRuleNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboCallRule__Group__1__Impl
	rule__TurboCallRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboCallRuleAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getTurboCallRuleAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboCallRule__Group__2__Impl
	rule__TurboCallRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboCallRuleAccess().getGroup_2()); }
	(rule__TurboCallRule__Group_2__0)?
	{ after(grammarAccess.getTurboCallRuleAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboCallRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboCallRuleAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getTurboCallRuleAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurboCallRule__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboCallRule__Group_2__0__Impl
	rule__TurboCallRule__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboCallRuleAccess().getParametersAssignment_2_0()); }
	(rule__TurboCallRule__ParametersAssignment_2_0)
	{ after(grammarAccess.getTurboCallRuleAccess().getParametersAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboCallRule__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboCallRuleAccess().getGroup_2_1()); }
	(rule__TurboCallRule__Group_2_1__0)*
	{ after(grammarAccess.getTurboCallRuleAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurboCallRule__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboCallRule__Group_2_1__0__Impl
	rule__TurboCallRule__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboCallRuleAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getTurboCallRuleAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboCallRule__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboCallRuleAccess().getParametersAssignment_2_1_1()); }
	(rule__TurboCallRule__ParametersAssignment_2_1_1)
	{ after(grammarAccess.getTurboCallRuleAccess().getParametersAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurboReturnRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboReturnRule__Group__0__Impl
	rule__TurboReturnRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboReturnRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboReturnRuleAccess().getLocationAssignment_0()); }
	(rule__TurboReturnRule__LocationAssignment_0)
	{ after(grammarAccess.getTurboReturnRuleAccess().getLocationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboReturnRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboReturnRule__Group__1__Impl
	rule__TurboReturnRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboReturnRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboReturnRuleAccess().getLessThanSignHyphenMinusKeyword_1()); }
	'<-'
	{ after(grammarAccess.getTurboReturnRuleAccess().getLessThanSignHyphenMinusKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboReturnRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboReturnRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboReturnRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboReturnRuleAccess().getUpdateRuleAssignment_2()); }
	(rule__TurboReturnRule__UpdateRuleAssignment_2)
	{ after(grammarAccess.getTurboReturnRuleAccess().getUpdateRuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurboLocalStateRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboLocalStateRule__Group__0__Impl
	rule__TurboLocalStateRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionAssignment_0()); }
	(rule__TurboLocalStateRule__LocalFunctionAssignment_0)
	{ after(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboLocalStateRule__Group__1__Impl
	rule__TurboLocalStateRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboLocalStateRuleAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getTurboLocalStateRuleAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboLocalStateRule__Group__2__Impl
	rule__TurboLocalStateRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboLocalStateRuleAccess().getInitAssignment_2()); }
	(rule__TurboLocalStateRule__InitAssignment_2)
	{ after(grammarAccess.getTurboLocalStateRuleAccess().getInitAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboLocalStateRule__Group__3__Impl
	rule__TurboLocalStateRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboLocalStateRuleAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getTurboLocalStateRuleAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboLocalStateRule__Group__4__Impl
	rule__TurboLocalStateRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboLocalStateRuleAccess().getGroup_4()); }
	(rule__TurboLocalStateRule__Group_4__0)*
	{ after(grammarAccess.getTurboLocalStateRuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboLocalStateRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboLocalStateRuleAccess().getBodyAssignment_5()); }
	(rule__TurboLocalStateRule__BodyAssignment_5)
	{ after(grammarAccess.getTurboLocalStateRuleAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TurboLocalStateRule__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboLocalStateRule__Group_4__0__Impl
	rule__TurboLocalStateRule__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionAssignment_4_0()); }
	(rule__TurboLocalStateRule__LocalFunctionAssignment_4_0)
	{ after(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboLocalStateRule__Group_4__1__Impl
	rule__TurboLocalStateRule__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboLocalStateRuleAccess().getLeftSquareBracketKeyword_4_1()); }
	'['
	{ after(grammarAccess.getTurboLocalStateRuleAccess().getLeftSquareBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboLocalStateRule__Group_4__2__Impl
	rule__TurboLocalStateRule__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboLocalStateRuleAccess().getInitAssignment_4_2()); }
	(rule__TurboLocalStateRule__InitAssignment_4_2)
	{ after(grammarAccess.getTurboLocalStateRuleAccess().getInitAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TurboLocalStateRule__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTurboLocalStateRuleAccess().getRightSquareBracketKeyword_4_3()); }
	']'
	{ after(grammarAccess.getTurboLocalStateRuleAccess().getRightSquareBracketKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseRule__Group__0__Impl
	rule__CaseRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseRuleAccess().getSwitchKeyword_0()); }
	'switch'
	{ after(grammarAccess.getCaseRuleAccess().getSwitchKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseRule__Group__1__Impl
	rule__CaseRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseRuleAccess().getTermAssignment_1()); }
	(rule__CaseRule__TermAssignment_1)
	{ after(grammarAccess.getCaseRuleAccess().getTermAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseRule__Group__2__Impl
	rule__CaseRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getCaseRuleAccess().getGroup_2()); }
		(rule__CaseRule__Group_2__0)
		{ after(grammarAccess.getCaseRuleAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getCaseRuleAccess().getGroup_2()); }
		(rule__CaseRule__Group_2__0)*
		{ after(grammarAccess.getCaseRuleAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseRule__Group__3__Impl
	rule__CaseRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseRuleAccess().getGroup_3()); }
	(rule__CaseRule__Group_3__0)?
	{ after(grammarAccess.getCaseRuleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseRuleAccess().getEndswitchKeyword_4()); }
	'endswitch'
	{ after(grammarAccess.getCaseRuleAccess().getEndswitchKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseRule__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseRule__Group_2__0__Impl
	rule__CaseRule__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseRuleAccess().getCaseKeyword_2_0()); }
	'case'
	{ after(grammarAccess.getCaseRuleAccess().getCaseKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseRule__Group_2__1__Impl
	rule__CaseRule__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseRuleAccess().getCaseTermAssignment_2_1()); }
	(rule__CaseRule__CaseTermAssignment_2_1)
	{ after(grammarAccess.getCaseRuleAccess().getCaseTermAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseRule__Group_2__2__Impl
	rule__CaseRule__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseRuleAccess().getColonKeyword_2_2()); }
	':'
	{ after(grammarAccess.getCaseRuleAccess().getColonKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseRule__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseRuleAccess().getCaseBranchAssignment_2_3()); }
	(rule__CaseRule__CaseBranchAssignment_2_3)
	{ after(grammarAccess.getCaseRuleAccess().getCaseBranchAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseRule__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseRule__Group_3__0__Impl
	rule__CaseRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseRuleAccess().getOtherwiseKeyword_3_0()); }
	'otherwise'
	{ after(grammarAccess.getCaseRuleAccess().getOtherwiseKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseRule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseRuleAccess().getOtherwiseBranchAssignment_3_1()); }
	(rule__CaseRule__OtherwiseBranchAssignment_3_1)
	{ after(grammarAccess.getCaseRuleAccess().getOtherwiseBranchAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RecursiveWhileRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecursiveWhileRule__Group__0__Impl
	rule__RecursiveWhileRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecursiveWhileRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecursiveWhileRuleAccess().getWhilerecKeyword_0()); }
	'whilerec'
	{ after(grammarAccess.getRecursiveWhileRuleAccess().getWhilerecKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecursiveWhileRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecursiveWhileRule__Group__1__Impl
	rule__RecursiveWhileRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecursiveWhileRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecursiveWhileRuleAccess().getGuardAssignment_1()); }
	(rule__RecursiveWhileRule__GuardAssignment_1)
	{ after(grammarAccess.getRecursiveWhileRuleAccess().getGuardAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecursiveWhileRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecursiveWhileRule__Group__2__Impl
	rule__RecursiveWhileRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecursiveWhileRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecursiveWhileRuleAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getRecursiveWhileRuleAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecursiveWhileRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RecursiveWhileRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecursiveWhileRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecursiveWhileRuleAccess().getRuleAssignment_3()); }
	(rule__RecursiveWhileRule__RuleAssignment_3)
	{ after(grammarAccess.getRecursiveWhileRuleAccess().getRuleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IterativeWhileRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterativeWhileRule__Group__0__Impl
	rule__IterativeWhileRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterativeWhileRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterativeWhileRuleAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getIterativeWhileRuleAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterativeWhileRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterativeWhileRule__Group__1__Impl
	rule__IterativeWhileRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterativeWhileRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterativeWhileRuleAccess().getGuardAssignment_1()); }
	(rule__IterativeWhileRule__GuardAssignment_1)
	{ after(grammarAccess.getIterativeWhileRuleAccess().getGuardAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterativeWhileRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterativeWhileRule__Group__2__Impl
	rule__IterativeWhileRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IterativeWhileRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterativeWhileRuleAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getIterativeWhileRuleAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterativeWhileRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IterativeWhileRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterativeWhileRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIterativeWhileRuleAccess().getRuleAssignment_3()); }
	(rule__IterativeWhileRule__RuleAssignment_3)
	{ after(grammarAccess.getIterativeWhileRuleAccess().getRuleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MOD_ID__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MOD_ID__Group__0__Impl
	rule__MOD_ID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMOD_IDAccess().getAlternatives_0()); }
	(rule__MOD_ID__Alternatives_0)?
	{ after(grammarAccess.getMOD_IDAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MOD_ID__Group__1__Impl
	rule__MOD_ID__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMOD_IDAccess().getGroup_1()); }
	(rule__MOD_ID__Group_1__0)*
	{ after(grammarAccess.getMOD_IDAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MOD_ID__Group__2__Impl
	rule__MOD_ID__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMOD_IDAccess().getAlternatives_2()); }
	(rule__MOD_ID__Alternatives_2)
	{ after(grammarAccess.getMOD_IDAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MOD_ID__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMOD_IDAccess().getGroup_3()); }
	(rule__MOD_ID__Group_3__0)?
	{ after(grammarAccess.getMOD_IDAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MOD_ID__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MOD_ID__Group_1__0__Impl
	rule__MOD_ID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMOD_IDAccess().getAlternatives_1_0()); }
	(rule__MOD_ID__Alternatives_1_0)
	{ after(grammarAccess.getMOD_IDAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MOD_ID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMOD_IDAccess().getSolidusKeyword_1_1()); }
	'/'
	{ after(grammarAccess.getMOD_IDAccess().getSolidusKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MOD_ID__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MOD_ID__Group_3__0__Impl
	rule__MOD_ID__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMOD_IDAccess().getFullStopKeyword_3_0()); }
	'.'
	{ after(grammarAccess.getMOD_IDAccess().getFullStopKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MOD_ID__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MOD_ID__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMOD_IDAccess().getAlternatives_3_1()); }
	(rule__MOD_ID__Alternatives_3_1)
	{ after(grammarAccess.getMOD_IDAccess().getAlternatives_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ID_VARIABLE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ID_VARIABLE__Group__0__Impl
	rule__ID_VARIABLE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ID_VARIABLE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getID_VARIABLEAccess().getDollarSignKeyword_0()); }
	'$'
	{ after(grammarAccess.getID_VARIABLEAccess().getDollarSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ID_VARIABLE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ID_VARIABLE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ID_VARIABLE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getID_VARIABLEAccess().getAlternatives_1()); }
	(rule__ID_VARIABLE__Alternatives_1)
	{ after(grammarAccess.getID_VARIABLEAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Asm__IsAsynchrAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsmAccess().getIsAsynchrAsyncrKeyword_0_0()); }
		(
			{ before(grammarAccess.getAsmAccess().getIsAsynchrAsyncrKeyword_0_0()); }
			'asyncr'
			{ after(grammarAccess.getAsmAccess().getIsAsynchrAsyncrKeyword_0_0()); }
		)
		{ after(grammarAccess.getAsmAccess().getIsAsynchrAsyncrKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsmAccess().getTypeAlternatives_1_0()); }
		(rule__Asm__TypeAlternatives_1_0)
		{ after(grammarAccess.getAsmAccess().getTypeAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsmAccess().getNameAlternatives_2_0()); }
		(rule__Asm__NameAlternatives_2_0)
		{ after(grammarAccess.getAsmAccess().getNameAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__HeaderSectionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsmAccess().getHeaderSectionHeaderParserRuleCall_3_0()); }
		ruleHeader
		{ after(grammarAccess.getAsmAccess().getHeaderSectionHeaderParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__BodySectionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsmAccess().getBodySectionBodyParserRuleCall_4_0()); }
		ruleBody
		{ after(grammarAccess.getAsmAccess().getBodySectionBodyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__MainruleAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsmAccess().getMainruleMacroDeclarationParserRuleCall_5_1_0()); }
		ruleMacroDeclaration
		{ after(grammarAccess.getAsmAccess().getMainruleMacroDeclarationParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__InitialStateAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsmAccess().getInitialStateInitializationParserRuleCall_6_0_0()); }
		ruleInitialization
		{ after(grammarAccess.getAsmAccess().getInitialStateInitializationParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__DefaultInitialStateAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsmAccess().getDefaultInitialStateInitializationParserRuleCall_6_2_0()); }
		ruleInitialization
		{ after(grammarAccess.getAsmAccess().getDefaultInitialStateInitializationParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Asm__InitialStateAssignment_6_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAsmAccess().getInitialStateInitializationParserRuleCall_6_3_0()); }
		ruleInitialization
		{ after(grammarAccess.getAsmAccess().getInitialStateInitializationParserRuleCall_6_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__ImportClauseAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderAccess().getImportClauseImportClauseParserRuleCall_0_0()); }
		ruleImportClause
		{ after(grammarAccess.getHeaderAccess().getImportClauseImportClauseParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__ExportClauseAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderAccess().getExportClauseExportClauseParserRuleCall_1_0()); }
		ruleExportClause
		{ after(grammarAccess.getHeaderAccess().getExportClauseExportClauseParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__SignatureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderAccess().getSignatureSignatureParserRuleCall_2_0()); }
		ruleSignature
		{ after(grammarAccess.getHeaderAccess().getSignatureSignatureParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__ModuleNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getModuleNameAlternatives_1_0()); }
		(rule__ImportClause__ModuleNameAlternatives_1_0)
		{ after(grammarAccess.getImportClauseAccess().getModuleNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__ImportedListAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getImportedListImportDataParserRuleCall_2_1_0()); }
		ruleimportData
		{ after(grammarAccess.getImportClauseAccess().getImportedListImportDataParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportClause__ImportedListAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportClauseAccess().getImportedListImportDataParserRuleCall_2_2_1_0()); }
		ruleimportData
		{ after(grammarAccess.getImportClauseAccess().getImportedListImportDataParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportData__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDataAccess().getNameExtendedNameParserRuleCall_0()); }
		ruleextendedName
		{ after(grammarAccess.getImportDataAccess().getNameExtendedNameParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__ExportedListAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportClauseAccess().getExportedListExtendedNameParserRuleCall_1_0_0_0()); }
		ruleextendedName
		{ after(grammarAccess.getExportClauseAccess().getExportedListExtendedNameParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__ExportedListAssignment_1_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportClauseAccess().getExportedListExtendedNameParserRuleCall_1_0_1_1_0()); }
		ruleextendedName
		{ after(grammarAccess.getExportClauseAccess().getExportedListExtendedNameParserRuleCall_1_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExportClause__ExportAllAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExportClauseAccess().getExportAllAsteriskKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getExportClauseAccess().getExportAllAsteriskKeyword_1_1_0()); }
			'*'
			{ after(grammarAccess.getExportClauseAccess().getExportAllAsteriskKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getExportClauseAccess().getExportAllAsteriskKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__DomainAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getDomainDomainParserRuleCall_3_0()); }
		ruleDomain
		{ after(grammarAccess.getSignatureAccess().getDomainDomainParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__FunctionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignatureAccess().getFunctionFunctionParserRuleCall_4_0()); }
		ruleFunction
		{ after(grammarAccess.getSignatureAccess().getFunctionFunctionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializationAccess().getNameExtendedNameParserRuleCall_1_0()); }
		ruleextendedName
		{ after(grammarAccess.getInitializationAccess().getNameExtendedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__DomainInitializationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializationAccess().getDomainInitializationDomainInitializationParserRuleCall_3_0()); }
		ruleDomainInitialization
		{ after(grammarAccess.getInitializationAccess().getDomainInitializationDomainInitializationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__FunctionInitializationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializationAccess().getFunctionInitializationFunctionInitializationParserRuleCall_4_0()); }
		ruleFunctionInitialization
		{ after(grammarAccess.getInitializationAccess().getFunctionInitializationFunctionInitializationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initialization__AgentInitializationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitializationAccess().getAgentInitializationAgentInitializationParserRuleCall_5_0()); }
		ruleAgentInitialization
		{ after(grammarAccess.getInitializationAccess().getAgentInitializationAgentInitializationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInitialization__InitializedDomainAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainInitializationAccess().getInitializedDomainIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDomainInitializationAccess().getInitializedDomainIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainInitialization__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainInitializationAccess().getBodyTermParserRuleCall_3_0()); }
		ruleTerm
		{ after(grammarAccess.getDomainInitializationAccess().getBodyTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__InizializedFunctionNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionInitializationAccess().getInizializedFunctionNameExtendedNameForFunctionParserRuleCall_1_0()); }
		ruleextendedNameForFunction
		{ after(grammarAccess.getFunctionInitializationAccess().getInizializedFunctionNameExtendedNameForFunctionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__VariablesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionInitializationAccess().getVariablesID_VARIABLEParserRuleCall_2_1_0()); }
		ruleID_VARIABLE
		{ after(grammarAccess.getFunctionInitializationAccess().getVariablesID_VARIABLEParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__DomainAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionInitializationAccess().getDomainGetDomainByIDParserRuleCall_2_3_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getFunctionInitializationAccess().getDomainGetDomainByIDParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__VariablesAssignment_2_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionInitializationAccess().getVariablesID_VARIABLEParserRuleCall_2_4_1_0()); }
		ruleID_VARIABLE
		{ after(grammarAccess.getFunctionInitializationAccess().getVariablesID_VARIABLEParserRuleCall_2_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__DomainAssignment_2_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionInitializationAccess().getDomainGetDomainByIDParserRuleCall_2_4_3_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getFunctionInitializationAccess().getDomainGetDomainByIDParserRuleCall_2_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionInitialization__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionInitializationAccess().getBodyTermParserRuleCall_4_0()); }
		ruleTerm
		{ after(grammarAccess.getFunctionInitializationAccess().getBodyTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInitialization__DomainNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInitializationAccess().getDomainNameAlternatives_1_0()); }
		(rule__AgentInitialization__DomainNameAlternatives_1_0)
		{ after(grammarAccess.getAgentInitializationAccess().getDomainNameAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentInitialization__ProgramAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentInitializationAccess().getProgramMacroCallRuleParserRuleCall_3_0()); }
		ruleMacroCallRule
		{ after(grammarAccess.getAgentInitializationAccess().getProgramMacroCallRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__DomainDefinitionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getDomainDefinitionDomainDefinitionParserRuleCall_3_0()); }
		ruleDomainDefinition
		{ after(grammarAccess.getBodyAccess().getDomainDefinitionDomainDefinitionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__FunctionDefinitionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getFunctionDefinitionFunctionDefinitionParserRuleCall_4_0()); }
		ruleFunctionDefinition
		{ after(grammarAccess.getBodyAccess().getFunctionDefinitionFunctionDefinitionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__RuleDeclarationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getRuleDeclarationRuleDeclarationParserRuleCall_5_0()); }
		ruleRuleDeclaration
		{ after(grammarAccess.getBodyAccess().getRuleDeclarationRuleDeclarationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__InvariantConstraintAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getInvariantConstraintInvariantConstraintParserRuleCall_6_0()); }
		ruleInvariantConstraint
		{ after(grammarAccess.getBodyAccess().getInvariantConstraintInvariantConstraintParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__FairnessConstraintAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getFairnessConstraintFairnessConstraintParserRuleCall_7_0()); }
		ruleFairnessConstraint
		{ after(grammarAccess.getBodyAccess().getFairnessConstraintFairnessConstraintParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Body__PropertyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBodyAccess().getPropertyPropertyParserRuleCall_8_0()); }
		ruleProperty
		{ after(grammarAccess.getBodyAccess().getPropertyPropertyParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__DefinedDomainNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getDefinedDomainNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDomainDefinitionAccess().getDefinedDomainNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainDefinition__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainDefinitionAccess().getBodyTermParserRuleCall_3_0()); }
		ruleTerm
		{ after(grammarAccess.getDomainDefinitionAccess().getBodyTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__DefinedFunctionNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getDefinedFunctionNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionDefinitionAccess().getDefinedFunctionNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__VariablesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getVariablesID_VARIABLEParserRuleCall_2_1_0()); }
		ruleID_VARIABLE
		{ after(grammarAccess.getFunctionDefinitionAccess().getVariablesID_VARIABLEParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__DomainAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getDomainGetDomainByIDParserRuleCall_2_3_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getFunctionDefinitionAccess().getDomainGetDomainByIDParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__VariablesAssignment_2_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getVariablesID_VARIABLEParserRuleCall_2_4_1_0()); }
		ruleID_VARIABLE
		{ after(grammarAccess.getFunctionDefinitionAccess().getVariablesID_VARIABLEParserRuleCall_2_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__DomainAssignment_2_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getDomainGetDomainByIDParserRuleCall_2_4_3_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getFunctionDefinitionAccess().getDomainGetDomainByIDParserRuleCall_2_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionDefinitionAccess().getBodyTermParserRuleCall_4_0()); }
		ruleTerm
		{ after(grammarAccess.getFunctionDefinitionAccess().getBodyTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroDeclarationAccess().getNameRULE_IDTerminalRuleCall_2_0()); }
		RULE_RULE_ID
		{ after(grammarAccess.getMacroDeclarationAccess().getNameRULE_IDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__VariablesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_1_0()); }
		ruleID_VARIABLE
		{ after(grammarAccess.getMacroDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__DomainAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_3_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getMacroDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__VariablesAssignment_3_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_4_1_0()); }
		ruleID_VARIABLE
		{ after(grammarAccess.getMacroDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__DomainAssignment_3_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_4_3_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getMacroDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__ReturnedDomainAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroDeclarationAccess().getReturnedDomainGetDomainByIDParserRuleCall_4_1_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getMacroDeclarationAccess().getReturnedDomainGetDomainByIDParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroDeclaration__RuleBodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroDeclarationAccess().getRuleBodyRuleParserRuleCall_6_0()); }
		ruleRule
		{ after(grammarAccess.getMacroDeclarationAccess().getRuleBodyRuleParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboDeclarationAccess().getNameRULE_IDTerminalRuleCall_2_0()); }
		RULE_RULE_ID
		{ after(grammarAccess.getTurboDeclarationAccess().getNameRULE_IDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__VariablesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_1_0()); }
		ruleID_VARIABLE
		{ after(grammarAccess.getTurboDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__DomainAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_3_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getTurboDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__VariablesAssignment_3_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_4_1_0()); }
		ruleID_VARIABLE
		{ after(grammarAccess.getTurboDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__DomainAssignment_3_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_4_3_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getTurboDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__ReturnedDomainAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboDeclarationAccess().getReturnedDomainGetDomainByIDParserRuleCall_4_1_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getTurboDeclarationAccess().getReturnedDomainGetDomainByIDParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboDeclaration__RuleBodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboDeclarationAccess().getRuleBodyRuleParserRuleCall_6_0()); }
		ruleRule
		{ after(grammarAccess.getTurboDeclarationAccess().getRuleBodyRuleParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInvariantAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Invar_listAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantAccess().getInvar_listInvariantElementParserRuleCall_3_0()); }
		ruleInvariantElement
		{ after(grammarAccess.getInvariantAccess().getInvar_listInvariantElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__Invar_listAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantAccess().getInvar_listInvariantElementParserRuleCall_4_1_0()); }
		ruleInvariantElement
		{ after(grammarAccess.getInvariantAccess().getInvar_listInvariantElementParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariant__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantAccess().getBodyTermParserRuleCall_6_0()); }
		ruleTerm
		{ after(grammarAccess.getInvariantAccess().getBodyTermParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantElement__ConstrainedNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantElementAccess().getConstrainedNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getInvariantElementAccess().getConstrainedNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantElement__DomainListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantElementAccess().getDomainListGetDomainByIDParserRuleCall_1_1_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getInvariantElementAccess().getDomainListGetDomainByIDParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpec__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCtlSpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCtlSpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CtlSpec__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCtlSpecAccess().getBodyTermParserRuleCall_2_0()); }
		ruleTerm
		{ after(grammarAccess.getCtlSpecAccess().getBodyTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpec__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLtlSpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLtlSpecAccess().getNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LtlSpec__BodyAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLtlSpecAccess().getBodyTermParserRuleCall_2_0()); }
		ruleTerm
		{ after(grammarAccess.getLtlSpecAccess().getBodyTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JusticeConstraint__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJusticeConstraintAccess().getBodyTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getJusticeConstraintAccess().getBodyTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__PAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompassionConstraintAccess().getPTermParserRuleCall_2_0()); }
		ruleTerm
		{ after(grammarAccess.getCompassionConstraintAccess().getPTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompassionConstraint__QAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompassionConstraintAccess().getQTermParserRuleCall_4_0()); }
		ruleTerm
		{ after(grammarAccess.getCompassionConstraintAccess().getQTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InvariantConstraint__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInvariantConstraintAccess().getBodyTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getInvariantConstraintAccess().getBodyTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteDomain__DynamicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteDomainAccess().getDynamicDynamicKeyword_0_0()); }
		(
			{ before(grammarAccess.getConcreteDomainAccess().getDynamicDynamicKeyword_0_0()); }
			'dynamic'
			{ after(grammarAccess.getConcreteDomainAccess().getDynamicDynamicKeyword_0_0()); }
		)
		{ after(grammarAccess.getConcreteDomainAccess().getDynamicDynamicKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteDomain__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteDomainAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getConcreteDomainAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcreteDomain__TypeDomainAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcreteDomainAccess().getTypeDomainGetDomainByIDParserRuleCall_4_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getConcreteDomainAccess().getTypeDomainGetDomainByIDParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyDomain__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnyDomainAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAnyDomainAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicTD__NameAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicTDAccess().getNameIDTerminalRuleCall_2_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBasicTDAccess().getNameIDTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerDomain__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerDomainAccess().getNameIntegerKeyword_0()); }
		(
			{ before(grammarAccess.getIntegerDomainAccess().getNameIntegerKeyword_0()); }
			'Integer'
			{ after(grammarAccess.getIntegerDomainAccess().getNameIntegerKeyword_0()); }
		)
		{ after(grammarAccess.getIntegerDomainAccess().getNameIntegerKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealDomain__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealDomainAccess().getNameRealKeyword_0()); }
		(
			{ before(grammarAccess.getRealDomainAccess().getNameRealKeyword_0()); }
			'Real'
			{ after(grammarAccess.getRealDomainAccess().getNameRealKeyword_0()); }
		)
		{ after(grammarAccess.getRealDomainAccess().getNameRealKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringDomain__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringDomainAccess().getNameStringKeyword_0()); }
		(
			{ before(grammarAccess.getStringDomainAccess().getNameStringKeyword_0()); }
			'String'
			{ after(grammarAccess.getStringDomainAccess().getNameStringKeyword_0()); }
		)
		{ after(grammarAccess.getStringDomainAccess().getNameStringKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalDomain__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNaturalDomainAccess().getNameNaturalKeyword_0()); }
		(
			{ before(grammarAccess.getNaturalDomainAccess().getNameNaturalKeyword_0()); }
			'Natural'
			{ after(grammarAccess.getNaturalDomainAccess().getNameNaturalKeyword_0()); }
		)
		{ after(grammarAccess.getNaturalDomainAccess().getNameNaturalKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharDomain__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharDomainAccess().getNameCharKeyword_0()); }
		(
			{ before(grammarAccess.getCharDomainAccess().getNameCharKeyword_0()); }
			'Char'
			{ after(grammarAccess.getCharDomainAccess().getNameCharKeyword_0()); }
		)
		{ after(grammarAccess.getCharDomainAccess().getNameCharKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexDomain__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexDomainAccess().getNameComplexKeyword_0()); }
		(
			{ before(grammarAccess.getComplexDomainAccess().getNameComplexKeyword_0()); }
			'Complex'
			{ after(grammarAccess.getComplexDomainAccess().getNameComplexKeyword_0()); }
		)
		{ after(grammarAccess.getComplexDomainAccess().getNameComplexKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanDomain__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanDomainAccess().getNameBooleanKeyword_0()); }
		(
			{ before(grammarAccess.getBooleanDomainAccess().getNameBooleanKeyword_0()); }
			'Boolean'
			{ after(grammarAccess.getBooleanDomainAccess().getNameBooleanKeyword_0()); }
		)
		{ after(grammarAccess.getBooleanDomainAccess().getNameBooleanKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefDomain__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUndefDomainAccess().getNameUndefKeyword_0()); }
		(
			{ before(grammarAccess.getUndefDomainAccess().getNameUndefKeyword_0()); }
			'Undef'
			{ after(grammarAccess.getUndefDomainAccess().getNameUndefKeyword_0()); }
		)
		{ after(grammarAccess.getUndefDomainAccess().getNameUndefKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAbstractTD__DynamicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenericAbstractTDAccess().getDynamicDynamicKeyword_0_0()); }
		(
			{ before(grammarAccess.getGenericAbstractTDAccess().getDynamicDynamicKeyword_0_0()); }
			'dynamic'
			{ after(grammarAccess.getGenericAbstractTDAccess().getDynamicDynamicKeyword_0_0()); }
		)
		{ after(grammarAccess.getGenericAbstractTDAccess().getDynamicDynamicKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericAbstractTD__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGenericAbstractTDAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getGenericAbstractTDAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentDomain__DynamicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentDomainAccess().getDynamicDynamicKeyword_0_0()); }
		(
			{ before(grammarAccess.getAgentDomainAccess().getDynamicDynamicKeyword_0_0()); }
			'dynamic'
			{ after(grammarAccess.getAgentDomainAccess().getDynamicDynamicKeyword_0_0()); }
		)
		{ after(grammarAccess.getAgentDomainAccess().getDynamicDynamicKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AgentDomain__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAgentDomainAccess().getNameAgentKeyword_3_0()); }
		(
			{ before(grammarAccess.getAgentDomainAccess().getNameAgentKeyword_3_0()); }
			'Agent'
			{ after(grammarAccess.getAgentDomainAccess().getNameAgentKeyword_3_0()); }
		)
		{ after(grammarAccess.getAgentDomainAccess().getNameAgentKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReserveDomain__DynamicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReserveDomainAccess().getDynamicDynamicKeyword_0_0()); }
		(
			{ before(grammarAccess.getReserveDomainAccess().getDynamicDynamicKeyword_0_0()); }
			'dynamic'
			{ after(grammarAccess.getReserveDomainAccess().getDynamicDynamicKeyword_0_0()); }
		)
		{ after(grammarAccess.getReserveDomainAccess().getDynamicDynamicKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReserveDomain__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReserveDomainAccess().getNameReserveKeyword_3_0()); }
		(
			{ before(grammarAccess.getReserveDomainAccess().getNameReserveKeyword_3_0()); }
			'Reserve'
			{ after(grammarAccess.getReserveDomainAccess().getNameReserveKeyword_3_0()); }
		)
		{ after(grammarAccess.getReserveDomainAccess().getNameReserveKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTDAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumTDAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__ElementAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTDAccess().getElementEnumElementParserRuleCall_5_0()); }
		ruleEnumElement
		{ after(grammarAccess.getEnumTDAccess().getElementEnumElementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTD__ElementAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTDAccess().getElementEnumElementParserRuleCall_6_1_0()); }
		ruleEnumElement
		{ after(grammarAccess.getEnumTDAccess().getElementEnumElementParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumElement__SymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumElementAccess().getSymbolENUM_IDTerminalRuleCall_0()); }
		RULE_ENUM_ID
		{ after(grammarAccess.getEnumElementAccess().getSymbolENUM_IDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDomainAccess().getNameRuleKeyword_1_0()); }
		(
			{ before(grammarAccess.getRuleDomainAccess().getNameRuleKeyword_1_0()); }
			'Rule'
			{ after(grammarAccess.getRuleDomainAccess().getNameRuleKeyword_1_0()); }
		)
		{ after(grammarAccess.getRuleDomainAccess().getNameRuleKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__DomainsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_1_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getRuleDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleDomain__DomainsAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_2_1_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getRuleDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductDomainAccess().getNameProdKeyword_0_0()); }
		(
			{ before(grammarAccess.getProductDomainAccess().getNameProdKeyword_0_0()); }
			'Prod'
			{ after(grammarAccess.getProductDomainAccess().getNameProdKeyword_0_0()); }
		)
		{ after(grammarAccess.getProductDomainAccess().getNameProdKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__DomainsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getProductDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProductDomain__DomainsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProductDomainAccess().getDomainsGetDomainByIDParserRuleCall_3_1_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getProductDomainAccess().getDomainsGetDomainByIDParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDomain__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceDomainAccess().getNameSeqKeyword_0_0()); }
		(
			{ before(grammarAccess.getSequenceDomainAccess().getNameSeqKeyword_0_0()); }
			'Seq'
			{ after(grammarAccess.getSequenceDomainAccess().getNameSeqKeyword_0_0()); }
		)
		{ after(grammarAccess.getSequenceDomainAccess().getNameSeqKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceDomain__DomainAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceDomainAccess().getDomainGetDomainByIDParserRuleCall_2_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getSequenceDomainAccess().getDomainGetDomainByIDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowersetDomain__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowersetDomainAccess().getNamePowersetKeyword_0_0()); }
		(
			{ before(grammarAccess.getPowersetDomainAccess().getNamePowersetKeyword_0_0()); }
			'Powerset'
			{ after(grammarAccess.getPowersetDomainAccess().getNamePowersetKeyword_0_0()); }
		)
		{ after(grammarAccess.getPowersetDomainAccess().getNamePowersetKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowersetDomain__BaseDomainAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowersetDomainAccess().getBaseDomainGetDomainByIDParserRuleCall_2_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getPowersetDomainAccess().getBaseDomainGetDomainByIDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagDomain__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagDomainAccess().getNameBagKeyword_0_0()); }
		(
			{ before(grammarAccess.getBagDomainAccess().getNameBagKeyword_0_0()); }
			'Bag'
			{ after(grammarAccess.getBagDomainAccess().getNameBagKeyword_0_0()); }
		)
		{ after(grammarAccess.getBagDomainAccess().getNameBagKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagDomain__DomainAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagDomainAccess().getDomainGetDomainByIDParserRuleCall_2_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getBagDomainAccess().getDomainGetDomainByIDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapDomainAccess().getNameMapKeyword_0_0()); }
		(
			{ before(grammarAccess.getMapDomainAccess().getNameMapKeyword_0_0()); }
			'Map'
			{ after(grammarAccess.getMapDomainAccess().getNameMapKeyword_0_0()); }
		)
		{ after(grammarAccess.getMapDomainAccess().getNameMapKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__SourceDomainAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapDomainAccess().getSourceDomainGetDomainByIDParserRuleCall_2_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getMapDomainAccess().getSourceDomainGetDomainByIDParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDomain__TargetDomainAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapDomainAccess().getTargetDomainGetDomainByIDParserRuleCall_4_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getMapDomainAccess().getTargetDomainGetDomainByIDParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetDomainByID__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetDomainByIDAccess().getNameAgentKeyword_4_0()); }
		(
			{ before(grammarAccess.getGetDomainByIDAccess().getNameAgentKeyword_4_0()); }
			'Agent'
			{ after(grammarAccess.getGetDomainByIDAccess().getNameAgentKeyword_4_0()); }
		)
		{ after(grammarAccess.getGetDomainByIDAccess().getNameAgentKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GetDomainByID__NameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetDomainByIDAccess().getNameReserveKeyword_5_0()); }
		(
			{ before(grammarAccess.getGetDomainByIDAccess().getNameReserveKeyword_5_0()); }
			'Reserve'
			{ after(grammarAccess.getGetDomainByIDAccess().getNameReserveKeyword_5_0()); }
		)
		{ after(grammarAccess.getGetDomainByIDAccess().getNameReserveKeyword_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDerivedFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__DomainAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getDerivedFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DerivedFunction__CodomainAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDerivedFunctionAccess().getCodomainGetDomainByIDParserRuleCall_4_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getDerivedFunctionAccess().getCodomainGetDomainByIDParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaticFunctionAccess().getNameExtendedNameForFunctionParserRuleCall_1_0()); }
		ruleextendedNameForFunction
		{ after(grammarAccess.getStaticFunctionAccess().getNameExtendedNameForFunctionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__DomainAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaticFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getStaticFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticFunction__CodomainAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaticFunctionAccess().getCodomainGetDomainByIDParserRuleCall_4_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getStaticFunctionAccess().getCodomainGetDomainByIDParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__DynamicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalFunctionAccess().getDynamicDynamicKeyword_0_0()); }
		(
			{ before(grammarAccess.getLocalFunctionAccess().getDynamicDynamicKeyword_0_0()); }
			'dynamic'
			{ after(grammarAccess.getLocalFunctionAccess().getDynamicDynamicKeyword_0_0()); }
		)
		{ after(grammarAccess.getLocalFunctionAccess().getDynamicDynamicKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalFunctionAccess().getNameExtendedNameParserRuleCall_2_0()); }
		ruleextendedName
		{ after(grammarAccess.getLocalFunctionAccess().getNameExtendedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__DomainAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getLocalFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalFunction__CodomainAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getLocalFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__DynamicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControlledFunctionAccess().getDynamicDynamicKeyword_0_0()); }
		(
			{ before(grammarAccess.getControlledFunctionAccess().getDynamicDynamicKeyword_0_0()); }
			'dynamic'
			{ after(grammarAccess.getControlledFunctionAccess().getDynamicDynamicKeyword_0_0()); }
		)
		{ after(grammarAccess.getControlledFunctionAccess().getDynamicDynamicKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControlledFunctionAccess().getNameExtendedNameParserRuleCall_2_0()); }
		ruleextendedName
		{ after(grammarAccess.getControlledFunctionAccess().getNameExtendedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__DomainAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControlledFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getControlledFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ControlledFunction__CodomainAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getControlledFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getControlledFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__DynamicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSharedFunctionAccess().getDynamicDynamicKeyword_0_0()); }
		(
			{ before(grammarAccess.getSharedFunctionAccess().getDynamicDynamicKeyword_0_0()); }
			'dynamic'
			{ after(grammarAccess.getSharedFunctionAccess().getDynamicDynamicKeyword_0_0()); }
		)
		{ after(grammarAccess.getSharedFunctionAccess().getDynamicDynamicKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSharedFunctionAccess().getNameExtendedNameParserRuleCall_2_0()); }
		ruleextendedName
		{ after(grammarAccess.getSharedFunctionAccess().getNameExtendedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__DomainAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSharedFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getSharedFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SharedFunction__CodomainAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSharedFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getSharedFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__DynamicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitoredFunctionAccess().getDynamicDynamicKeyword_0_0()); }
		(
			{ before(grammarAccess.getMonitoredFunctionAccess().getDynamicDynamicKeyword_0_0()); }
			'dynamic'
			{ after(grammarAccess.getMonitoredFunctionAccess().getDynamicDynamicKeyword_0_0()); }
		)
		{ after(grammarAccess.getMonitoredFunctionAccess().getDynamicDynamicKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitoredFunctionAccess().getNameExtendedNameParserRuleCall_2_0()); }
		ruleextendedName
		{ after(grammarAccess.getMonitoredFunctionAccess().getNameExtendedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__DomainAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitoredFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getMonitoredFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoredFunction__CodomainAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitoredFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getMonitoredFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__DynamicAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutFunctionAccess().getDynamicDynamicKeyword_0_0()); }
		(
			{ before(grammarAccess.getOutFunctionAccess().getDynamicDynamicKeyword_0_0()); }
			'dynamic'
			{ after(grammarAccess.getOutFunctionAccess().getDynamicDynamicKeyword_0_0()); }
		)
		{ after(grammarAccess.getOutFunctionAccess().getDynamicDynamicKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutFunctionAccess().getNameExtendedNameParserRuleCall_2_0()); }
		ruleextendedName
		{ after(grammarAccess.getOutFunctionAccess().getNameExtendedNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__DomainAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getOutFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutFunction__CodomainAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getOutFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__OpAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImpliesIffExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
		(rule__ImpliesIffExpression__OpAlternatives_1_0_0_1_0)
		{ after(grammarAccess.getImpliesIffExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesIffExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImpliesIffExpressionAccess().getRightXorOrExpressionParserRuleCall_1_1_0()); }
		ruleXorOrExpression
		{ after(grammarAccess.getImpliesIffExpressionAccess().getRightXorOrExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__OpAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorOrExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
		(rule__XorOrExpression__OpAlternatives_1_0_0_1_0)
		{ after(grammarAccess.getXorOrExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorOrExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
		ruleAndExpression
		{ after(grammarAccess.getXorOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OpAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_0_0_1_0()); }
		(
			{ before(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_0_0_1_0()); }
			'and'
			{ after(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_0_0_1_0()); }
		)
		{ after(grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_1_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OpAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
		(rule__EqualityExpression__OpAlternatives_1_0_0_1_0)
		{ after(grammarAccess.getEqualityExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_0()); }
		ruleCompareExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__OpAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
		(rule__CompareExpression__OpAlternatives_1_0_0_1_0)
		{ after(grammarAccess.getCompareExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_1_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getCompareExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OpAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
		(rule__AdditiveExpression__OpAlternatives_1_0_0_1_0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OpAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
		(rule__MultiplicativeExpression__OpAlternatives_1_0_0_1_0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOpAlternatives_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightPowerExpressionParserRuleCall_1_1_0()); }
		rulePowerExpression
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightPowerExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__OpAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowerExpressionAccess().getOpCircumflexAccentKeyword_1_0_0_1_0()); }
		(
			{ before(grammarAccess.getPowerExpressionAccess().getOpCircumflexAccentKeyword_1_0_0_1_0()); }
			'^'
			{ after(grammarAccess.getPowerExpressionAccess().getOpCircumflexAccentKeyword_1_0_0_1_0()); }
		)
		{ after(grammarAccess.getPowerExpressionAccess().getOpCircumflexAccentKeyword_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowerExpressionAccess().getRightUnaryOperationParserRuleCall_1_1_0()); }
		ruleUnaryOperation
		{ after(grammarAccess.getPowerExpressionAccess().getRightUnaryOperationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__OpAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperationAccess().getOpAlternatives_0_0_0()); }
		(rule__UnaryOperation__OpAlternatives_0_0_0)
		{ after(grammarAccess.getUnaryOperationAccess().getOpAlternatives_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__OperandAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperationAccess().getOperandUnaryOperationParserRuleCall_0_1_0()); }
		ruleUnaryOperation
		{ after(grammarAccess.getUnaryOperationAccess().getOperandUnaryOperationParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__AgentAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTermAccess().getAgentExtendedNameParserRuleCall_0_0_0()); }
		ruleextendedName
		{ after(grammarAccess.getFunctionTermAccess().getAgentExtendedNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__FunctionNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTermAccess().getFunctionNameExtendedNameForFunctionParserRuleCall_1_0()); }
		ruleextendedNameForFunction
		{ after(grammarAccess.getFunctionTermAccess().getFunctionNameExtendedNameForFunctionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTerm__ArgumentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionTermAccess().getArgumentsTupleTermParserRuleCall_2_0()); }
		ruleTupleTerm
		{ after(grammarAccess.getFunctionTermAccess().getArgumentsTupleTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__AgentAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationTermAccess().getAgentExtendedNameParserRuleCall_0_0_0()); }
		ruleextendedName
		{ after(grammarAccess.getLocationTermAccess().getAgentExtendedNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__FunctionNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationTermAccess().getFunctionNameExtendedNameForFunctionParserRuleCall_1_0()); }
		ruleextendedNameForFunction
		{ after(grammarAccess.getLocationTermAccess().getFunctionNameExtendedNameForFunctionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocationTerm__ArgumentsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocationTermAccess().getArgumentsTupleTermParserRuleCall_2_0()); }
		ruleTupleTerm
		{ after(grammarAccess.getLocationTermAccess().getArgumentsTupleTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableTerm__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableTermAccess().getNameID_VARIABLEParserRuleCall_0()); }
		ruleID_VARIABLE
		{ after(grammarAccess.getVariableTermAccess().getNameID_VARIABLEParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTerm__SymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanTermAccess().getSymbolAlternatives_0()); }
		(rule__BooleanTerm__SymbolAlternatives_0)
		{ after(grammarAccess.getBooleanTermAccess().getSymbolAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefTerm__SymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUndefTermAccess().getSymbolUndefKeyword_0()); }
		(
			{ before(grammarAccess.getUndefTermAccess().getSymbolUndefKeyword_0()); }
			'undef'
			{ after(grammarAccess.getUndefTermAccess().getSymbolUndefKeyword_0()); }
		)
		{ after(grammarAccess.getUndefTermAccess().getSymbolUndefKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTerm__SymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComplexTermAccess().getSymbolCOMPLEX_NUMBERTerminalRuleCall_0()); }
		RULE_COMPLEX_NUMBER
		{ after(grammarAccess.getComplexTermAccess().getSymbolCOMPLEX_NUMBERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalTerm__SymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNaturalTermAccess().getSymbolNATNUMBERTerminalRuleCall_0()); }
		RULE_NATNUMBER
		{ after(grammarAccess.getNaturalTermAccess().getSymbolNATNUMBERTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CharTerm__SymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCharTermAccess().getSymbolCHAR_LITERALTerminalRuleCall_0()); }
		RULE_CHAR_LITERAL
		{ after(grammarAccess.getCharTermAccess().getSymbolCHAR_LITERALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTerm__SymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringTermAccess().getSymbolSTRING_LITERALTerminalRuleCall_0()); }
		RULE_STRING_LITERAL
		{ after(grammarAccess.getStringTermAccess().getSymbolSTRING_LITERALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTerm__SymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTermAccess().getSymbolENUM_IDTerminalRuleCall_0()); }
		RULE_ENUM_ID
		{ after(grammarAccess.getEnumTermAccess().getSymbolENUM_IDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTerm__SymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealTermAccess().getSymbolRealNumberWithSignParserRuleCall_0()); }
		ruleRealNumberWithSign
		{ after(grammarAccess.getRealTermAccess().getSymbolRealNumberWithSignParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTerm__SymbolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerTermAccess().getSymbolAlternatives_0()); }
		(rule__IntegerTerm__SymbolAlternatives_0)
		{ after(grammarAccess.getIntegerTermAccess().getSymbolAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__GuardAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalTermAccess().getGuardTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getConditionalTermAccess().getGuardTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__ThenTermAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalTermAccess().getThenTermTermParserRuleCall_3_0()); }
		ruleTerm
		{ after(grammarAccess.getConditionalTermAccess().getThenTermTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalTerm__ElseTermAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalTermAccess().getElseTermTermParserRuleCall_4_1_0()); }
		ruleTerm
		{ after(grammarAccess.getConditionalTermAccess().getElseTermTermParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__ComparedTermAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseTermAccess().getComparedTermTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getCaseTermAccess().getComparedTermTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__ComparingTermAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseTermAccess().getComparingTermTermParserRuleCall_2_1_0()); }
		ruleTerm
		{ after(grammarAccess.getCaseTermAccess().getComparingTermTermParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__ResultTermsAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseTermAccess().getResultTermsTermParserRuleCall_2_3_0()); }
		ruleTerm
		{ after(grammarAccess.getCaseTermAccess().getResultTermsTermParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseTerm__OtherwiseTermAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseTermAccess().getOtherwiseTermTermParserRuleCall_3_1_0()); }
		ruleTerm
		{ after(grammarAccess.getCaseTermAccess().getOtherwiseTermTermParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__TermsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTermAccess().getTermsTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getTupleTermAccess().getTermsTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TupleTerm__TermsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTupleTermAccess().getTermsTermParserRuleCall_2_1_0()); }
		ruleTerm
		{ after(grammarAccess.getTupleTermAccess().getTermsTermParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Start_termAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceTermAccess().getStart_termTermParserRuleCall_2_0_0()); }
		ruleTerm
		{ after(grammarAccess.getSequenceTermAccess().getStart_termTermParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__Other_termsAssignment_2_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceTermAccess().getOther_termsTermParserRuleCall_2_1_0_1_0()); }
		ruleTerm
		{ after(grammarAccess.getSequenceTermAccess().getOther_termsTermParserRuleCall_2_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__End_termAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceTermAccess().getEnd_termTermParserRuleCall_2_1_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getSequenceTermAccess().getEnd_termTermParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceTerm__StepAssignment_2_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0()); }
		ruleConstantTerm
		{ after(grammarAccess.getSequenceTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__TermAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_0_0()); }
		ruleTerm
		{ after(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__TermAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_2_0()); }
		ruleTerm
		{ after(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__TermAssignment_2_1_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_3_1_0()); }
		ruleTerm
		{ after(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapTerm__TermAssignment_2_1_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_3_3_0()); }
		ruleTerm
		{ after(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Start_termAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetTermAccess().getStart_termTermParserRuleCall_2_0_0()); }
		ruleTerm
		{ after(grammarAccess.getSetTermAccess().getStart_termTermParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__Other_termsAssignment_2_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetTermAccess().getOther_termsTermParserRuleCall_2_1_0_1_0()); }
		ruleTerm
		{ after(grammarAccess.getSetTermAccess().getOther_termsTermParserRuleCall_2_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__End_termAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetTermAccess().getEnd_termTermParserRuleCall_2_1_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getSetTermAccess().getEnd_termTermParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetTerm__StepAssignment_2_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0()); }
		ruleConstantTerm
		{ after(grammarAccess.getSetTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Start_termAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagTermAccess().getStart_termBasicTermParserRuleCall_2_0_0()); }
		ruleBasicTerm
		{ after(grammarAccess.getBagTermAccess().getStart_termBasicTermParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__Other_termsAssignment_2_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagTermAccess().getOther_termsBasicTermParserRuleCall_2_1_0_1_0()); }
		ruleBasicTerm
		{ after(grammarAccess.getBagTermAccess().getOther_termsBasicTermParserRuleCall_2_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__End_termAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagTermAccess().getEnd_termConstantTermParserRuleCall_2_1_1_1_0()); }
		ruleConstantTerm
		{ after(grammarAccess.getBagTermAccess().getEnd_termConstantTermParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagTerm__StepAssignment_2_1_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0()); }
		ruleConstantTerm
		{ after(grammarAccess.getBagTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__VariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistUniqueTermAccess().getVariableVariableTermParserRuleCall_3_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getExistUniqueTermAccess().getVariableVariableTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__RangesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistUniqueTermAccess().getRangesTermParserRuleCall_5_0()); }
		ruleTerm
		{ after(grammarAccess.getExistUniqueTermAccess().getRangesTermParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__VariableAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistUniqueTermAccess().getVariableVariableTermParserRuleCall_6_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getExistUniqueTermAccess().getVariableVariableTermParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__RangesAssignment_6_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistUniqueTermAccess().getRangesTermParserRuleCall_6_3_0()); }
		ruleTerm
		{ after(grammarAccess.getExistUniqueTermAccess().getRangesTermParserRuleCall_6_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistUniqueTerm__GuardAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistUniqueTermAccess().getGuardTermParserRuleCall_7_1_0()); }
		ruleTerm
		{ after(grammarAccess.getExistUniqueTermAccess().getGuardTermParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__VariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistTermAccess().getVariableVariableTermParserRuleCall_2_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getExistTermAccess().getVariableVariableTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__RangesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistTermAccess().getRangesTermParserRuleCall_4_0()); }
		ruleTerm
		{ after(grammarAccess.getExistTermAccess().getRangesTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__VariableAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistTermAccess().getVariableVariableTermParserRuleCall_5_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getExistTermAccess().getVariableVariableTermParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__RangesAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistTermAccess().getRangesTermParserRuleCall_5_3_0()); }
		ruleTerm
		{ after(grammarAccess.getExistTermAccess().getRangesTermParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExistTerm__GuardAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistTermAccess().getGuardTermParserRuleCall_6_1_0()); }
		ruleTerm
		{ after(grammarAccess.getExistTermAccess().getGuardTermParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__VariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForallTermAccess().getVariableVariableTermParserRuleCall_2_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getForallTermAccess().getVariableVariableTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__RangesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForallTermAccess().getRangesTermParserRuleCall_4_0()); }
		ruleTerm
		{ after(grammarAccess.getForallTermAccess().getRangesTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__VariableAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForallTermAccess().getVariableVariableTermParserRuleCall_5_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getForallTermAccess().getVariableVariableTermParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__RangesAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForallTermAccess().getRangesTermParserRuleCall_5_3_0()); }
		ruleTerm
		{ after(grammarAccess.getForallTermAccess().getRangesTermParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallTerm__GuardAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForallTermAccess().getGuardTermParserRuleCall_6_1_0()); }
		ruleTerm
		{ after(grammarAccess.getForallTermAccess().getGuardTermParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__VariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetTermAccess().getVariableVariableTermParserRuleCall_2_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getLetTermAccess().getVariableVariableTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__AssignmentTermAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetTermAccess().getAssignmentTermTermParserRuleCall_4_0()); }
		ruleTerm
		{ after(grammarAccess.getLetTermAccess().getAssignmentTermTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__VariableAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetTermAccess().getVariableVariableTermParserRuleCall_5_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getLetTermAccess().getVariableVariableTermParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__AssignmentTermAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetTermAccess().getAssignmentTermTermParserRuleCall_5_3_0()); }
		ruleTerm
		{ after(grammarAccess.getLetTermAccess().getAssignmentTermTermParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetTerm__BodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetTermAccess().getBodyTermParserRuleCall_8_0()); }
		ruleTerm
		{ after(grammarAccess.getLetTermAccess().getBodyTermParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetCTAccess().getVariableVariableTermParserRuleCall_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getSetCTAccess().getVariableVariableTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__RangesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetCTAccess().getRangesTermParserRuleCall_3_0()); }
		ruleTerm
		{ after(grammarAccess.getSetCTAccess().getRangesTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__VariableAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetCTAccess().getVariableVariableTermParserRuleCall_4_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getSetCTAccess().getVariableVariableTermParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__RangesAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetCTAccess().getRangesTermParserRuleCall_4_3_0()); }
		ruleTerm
		{ after(grammarAccess.getSetCTAccess().getRangesTermParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__GuardAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetCTAccess().getGuardTermParserRuleCall_5_1_0()); }
		ruleTerm
		{ after(grammarAccess.getSetCTAccess().getGuardTermParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetCT__TermAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetCTAccess().getTermTermParserRuleCall_7_0()); }
		ruleTerm
		{ after(grammarAccess.getSetCTAccess().getTermTermParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapCTAccess().getVariableVariableTermParserRuleCall_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getMapCTAccess().getVariableVariableTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__RangesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapCTAccess().getRangesTermParserRuleCall_3_0()); }
		ruleTerm
		{ after(grammarAccess.getMapCTAccess().getRangesTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__VariableAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapCTAccess().getVariableVariableTermParserRuleCall_4_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getMapCTAccess().getVariableVariableTermParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__RangesAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapCTAccess().getRangesTermParserRuleCall_4_3_0()); }
		ruleTerm
		{ after(grammarAccess.getMapCTAccess().getRangesTermParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__GuardAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapCTAccess().getGuardTermParserRuleCall_5_1_0()); }
		ruleTerm
		{ after(grammarAccess.getMapCTAccess().getGuardTermParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapCT__TermAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapCTAccess().getTermTermParserRuleCall_7_0()); }
		ruleTerm
		{ after(grammarAccess.getMapCTAccess().getTermTermParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceCTAccess().getVariableVariableTermParserRuleCall_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getSequenceCTAccess().getVariableVariableTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__RangesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceCTAccess().getRangesTermParserRuleCall_3_0()); }
		ruleTerm
		{ after(grammarAccess.getSequenceCTAccess().getRangesTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__VariableAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceCTAccess().getVariableVariableTermParserRuleCall_4_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getSequenceCTAccess().getVariableVariableTermParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__RangesAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceCTAccess().getRangesTermParserRuleCall_4_3_0()); }
		ruleTerm
		{ after(grammarAccess.getSequenceCTAccess().getRangesTermParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__GuardAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceCTAccess().getGuardTermParserRuleCall_5_1_0()); }
		ruleTerm
		{ after(grammarAccess.getSequenceCTAccess().getGuardTermParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceCT__TermAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSequenceCTAccess().getTermTermParserRuleCall_7_0()); }
		ruleTerm
		{ after(grammarAccess.getSequenceCTAccess().getTermTermParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagCTAccess().getVariableVariableTermParserRuleCall_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getBagCTAccess().getVariableVariableTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__RangesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagCTAccess().getRangesTermParserRuleCall_3_0()); }
		ruleTerm
		{ after(grammarAccess.getBagCTAccess().getRangesTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__VariableAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagCTAccess().getVariableVariableTermParserRuleCall_4_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getBagCTAccess().getVariableVariableTermParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__RangesAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagCTAccess().getRangesTermParserRuleCall_4_3_0()); }
		ruleTerm
		{ after(grammarAccess.getBagCTAccess().getRangesTermParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__GuardAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagCTAccess().getGuardTermParserRuleCall_5_1_0()); }
		ruleTerm
		{ after(grammarAccess.getBagCTAccess().getGuardTermParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BagCT__TermAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBagCTAccess().getTermTermParserRuleCall_7_0()); }
		ruleTerm
		{ after(grammarAccess.getBagCTAccess().getTermTermParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAsTermAccess().getNameExtendedNameParserRuleCall_1_0()); }
		ruleextendedName
		{ after(grammarAccess.getRuleAsTermAccess().getNameExtendedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__DomainsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAsTermAccess().getDomainsGetDomainByIDParserRuleCall_2_1_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getRuleAsTermAccess().getDomainsGetDomainByIDParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RuleAsTerm__DomainsAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAsTermAccess().getDomainsGetDomainByIDParserRuleCall_2_2_1_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getRuleAsTermAccess().getDomainsGetDomainByIDParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__TermAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAsRuleAccess().getTermAlternatives_0_0()); }
		(rule__TermAsRule__TermAlternatives_0_0)
		{ after(grammarAccess.getTermAsRuleAccess().getTermAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__ParametersAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAsRuleAccess().getParametersTermParserRuleCall_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getTermAsRuleAccess().getParametersTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TermAsRule__ParametersAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAsRuleAccess().getParametersTermParserRuleCall_1_2_1_0()); }
		ruleTerm
		{ after(grammarAccess.getTermAsRuleAccess().getParametersTermParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateRule__LocationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateRuleAccess().getLocationAlternatives_0_0()); }
		(rule__UpdateRule__LocationAlternatives_0_0)
		{ after(grammarAccess.getUpdateRuleAccess().getLocationAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateRule__UpdatingTermAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateRuleAccess().getUpdatingTermTermParserRuleCall_2_0()); }
		ruleTerm
		{ after(grammarAccess.getUpdateRuleAccess().getUpdatingTermTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockRule__RulesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockRuleAccess().getRulesRuleParserRuleCall_1_0()); }
		ruleRule
		{ after(grammarAccess.getBlockRuleAccess().getRulesRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockRule__RulesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockRuleAccess().getRulesRuleParserRuleCall_2_0()); }
		ruleRule
		{ after(grammarAccess.getBlockRuleAccess().getRulesRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__GuardAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalRuleAccess().getGuardTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getConditionalRuleAccess().getGuardTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__ThenRuleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalRuleAccess().getThenRuleRuleParserRuleCall_3_0()); }
		ruleRule
		{ after(grammarAccess.getConditionalRuleAccess().getThenRuleRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalRule__ElseRuleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalRuleAccess().getElseRuleRuleParserRuleCall_4_1_0()); }
		ruleRule
		{ after(grammarAccess.getConditionalRuleAccess().getElseRuleRuleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChooseRuleAccess().getVariableVariableTermParserRuleCall_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getChooseRuleAccess().getVariableVariableTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__RangesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChooseRuleAccess().getRangesTermParserRuleCall_3_0()); }
		ruleTerm
		{ after(grammarAccess.getChooseRuleAccess().getRangesTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__VariableAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChooseRuleAccess().getVariableVariableTermParserRuleCall_4_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getChooseRuleAccess().getVariableVariableTermParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__RangesAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChooseRuleAccess().getRangesTermParserRuleCall_4_3_0()); }
		ruleTerm
		{ after(grammarAccess.getChooseRuleAccess().getRangesTermParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__GuardAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChooseRuleAccess().getGuardTermParserRuleCall_6_0()); }
		ruleTerm
		{ after(grammarAccess.getChooseRuleAccess().getGuardTermParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__DoRuleAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChooseRuleAccess().getDoRuleRuleParserRuleCall_8_0()); }
		ruleRule
		{ after(grammarAccess.getChooseRuleAccess().getDoRuleRuleParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChooseRule__IfnoneAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChooseRuleAccess().getIfnoneRuleParserRuleCall_9_1_0()); }
		ruleRule
		{ after(grammarAccess.getChooseRuleAccess().getIfnoneRuleParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForallRuleAccess().getVariableVariableTermParserRuleCall_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getForallRuleAccess().getVariableVariableTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__RangesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForallRuleAccess().getRangesTermParserRuleCall_3_0()); }
		ruleTerm
		{ after(grammarAccess.getForallRuleAccess().getRangesTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__VariableAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForallRuleAccess().getVariableVariableTermParserRuleCall_4_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getForallRuleAccess().getVariableVariableTermParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__RangesAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForallRuleAccess().getRangesTermParserRuleCall_4_3_0()); }
		ruleTerm
		{ after(grammarAccess.getForallRuleAccess().getRangesTermParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__GuardAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForallRuleAccess().getGuardTermParserRuleCall_5_1_0()); }
		ruleTerm
		{ after(grammarAccess.getForallRuleAccess().getGuardTermParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForallRule__DoRuleAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForallRuleAccess().getDoRuleRuleParserRuleCall_7_0()); }
		ruleRule
		{ after(grammarAccess.getForallRuleAccess().getDoRuleRuleParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__VariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetRuleAccess().getVariableVariableTermParserRuleCall_2_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getLetRuleAccess().getVariableVariableTermParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__InitExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetRuleAccess().getInitExpressionTermParserRuleCall_4_0()); }
		ruleTerm
		{ after(grammarAccess.getLetRuleAccess().getInitExpressionTermParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__VariableAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetRuleAccess().getVariableVariableTermParserRuleCall_5_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getLetRuleAccess().getVariableVariableTermParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__InitExpressionAssignment_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetRuleAccess().getInitExpressionTermParserRuleCall_5_3_0()); }
		ruleTerm
		{ after(grammarAccess.getLetRuleAccess().getInitExpressionTermParserRuleCall_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LetRule__InRuleAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetRuleAccess().getInRuleRuleParserRuleCall_8_0()); }
		ruleRule
		{ after(grammarAccess.getLetRuleAccess().getInRuleRuleParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroCallRuleAccess().getNameExtendedNameParserRuleCall_0_0()); }
		ruleextendedName
		{ after(grammarAccess.getMacroCallRuleAccess().getNameExtendedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroCallRuleAccess().getParametersTermParserRuleCall_2_0_0()); }
		ruleTerm
		{ after(grammarAccess.getMacroCallRuleAccess().getParametersTermParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroCallRule__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMacroCallRuleAccess().getParametersTermParserRuleCall_2_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getMacroCallRuleAccess().getParametersTermParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__ExtendedDomainAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendRuleAccess().getExtendedDomainGetDomainByIDParserRuleCall_1_0()); }
		rulegetDomainByID
		{ after(grammarAccess.getExtendRuleAccess().getExtendedDomainGetDomainByIDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__BoundVarAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendRuleAccess().getBoundVarVariableTermParserRuleCall_3_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getExtendRuleAccess().getBoundVarVariableTermParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__BoundVarAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendRuleAccess().getBoundVarVariableTermParserRuleCall_4_1_0()); }
		ruleVariableTerm
		{ after(grammarAccess.getExtendRuleAccess().getBoundVarVariableTermParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendRule__DoRuleAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendRuleAccess().getDoRuleRuleParserRuleCall_6_0()); }
		ruleRule
		{ after(grammarAccess.getExtendRuleAccess().getDoRuleRuleParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeqRule__RulesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSeqRuleAccess().getRulesRuleParserRuleCall_1_0()); }
		ruleRule
		{ after(grammarAccess.getSeqRuleAccess().getRulesRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SeqRule__RulesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSeqRuleAccess().getRulesRuleParserRuleCall_2_0()); }
		ruleRule
		{ after(grammarAccess.getSeqRuleAccess().getRulesRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterateRule__RuleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterateRuleAccess().getRuleRuleParserRuleCall_1_0()); }
		ruleRule
		{ after(grammarAccess.getIterateRuleAccess().getRuleRuleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__CalledRuleNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboCallRuleAccess().getCalledRuleNameRULE_IDTerminalRuleCall_0_0()); }
		RULE_RULE_ID
		{ after(grammarAccess.getTurboCallRuleAccess().getCalledRuleNameRULE_IDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__ParametersAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboCallRuleAccess().getParametersTermParserRuleCall_2_0_0()); }
		ruleTerm
		{ after(grammarAccess.getTurboCallRuleAccess().getParametersTermParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboCallRule__ParametersAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboCallRuleAccess().getParametersTermParserRuleCall_2_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getTurboCallRuleAccess().getParametersTermParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboReturnRule__LocationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboReturnRuleAccess().getLocationAlternatives_0_0()); }
		(rule__TurboReturnRule__LocationAlternatives_0_0)
		{ after(grammarAccess.getTurboReturnRuleAccess().getLocationAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboReturnRule__UpdateRuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboReturnRuleAccess().getUpdateRuleTurboCallRuleParserRuleCall_2_0()); }
		ruleTurboCallRule
		{ after(grammarAccess.getTurboReturnRuleAccess().getUpdateRuleTurboCallRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__LocalFunctionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionLocalFunctionParserRuleCall_0_0()); }
		ruleLocalFunction
		{ after(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionLocalFunctionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__InitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboLocalStateRuleAccess().getInitRuleParserRuleCall_2_0()); }
		ruleRule
		{ after(grammarAccess.getTurboLocalStateRuleAccess().getInitRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__LocalFunctionAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionLocalFunctionParserRuleCall_4_0_0()); }
		ruleLocalFunction
		{ after(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionLocalFunctionParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__InitAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboLocalStateRuleAccess().getInitRuleParserRuleCall_4_2_0()); }
		ruleRule
		{ after(grammarAccess.getTurboLocalStateRuleAccess().getInitRuleParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TurboLocalStateRule__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTurboLocalStateRuleAccess().getBodyRuleParserRuleCall_5_0()); }
		ruleRule
		{ after(grammarAccess.getTurboLocalStateRuleAccess().getBodyRuleParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__TermAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseRuleAccess().getTermTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getCaseRuleAccess().getTermTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__CaseTermAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseRuleAccess().getCaseTermTermParserRuleCall_2_1_0()); }
		ruleTerm
		{ after(grammarAccess.getCaseRuleAccess().getCaseTermTermParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__CaseBranchAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseRuleAccess().getCaseBranchRuleParserRuleCall_2_3_0()); }
		ruleRule
		{ after(grammarAccess.getCaseRuleAccess().getCaseBranchRuleParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseRule__OtherwiseBranchAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseRuleAccess().getOtherwiseBranchRuleParserRuleCall_3_1_0()); }
		ruleRule
		{ after(grammarAccess.getCaseRuleAccess().getOtherwiseBranchRuleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecursiveWhileRule__GuardAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecursiveWhileRuleAccess().getGuardTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getRecursiveWhileRuleAccess().getGuardTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RecursiveWhileRule__RuleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecursiveWhileRuleAccess().getRuleRuleParserRuleCall_3_0()); }
		ruleRule
		{ after(grammarAccess.getRecursiveWhileRuleAccess().getRuleRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterativeWhileRule__GuardAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterativeWhileRuleAccess().getGuardTermParserRuleCall_1_0()); }
		ruleTerm
		{ after(grammarAccess.getIterativeWhileRuleAccess().getGuardTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterativeWhileRule__RuleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterativeWhileRuleAccess().getRuleRuleParserRuleCall_3_0()); }
		ruleRule
		{ after(grammarAccess.getIterativeWhileRuleAccess().getRuleRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NameofDomain__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameofDomainAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getNameofDomainAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

fragment RULE_DIGIT : '0'..'9';

RULE_NUMBER_TOKEN : RULE_DIGIT+;

RULE_NATNUMBER : RULE_NUMBER_TOKEN 'n';

RULE_REAL_NUMBER : RULE_NUMBER_TOKEN '.' RULE_NUMBER_TOKEN;

fragment RULE_MAIUSC_ID : 'A'..'Z';

fragment RULE_MIN_ID : 'a'..'z';

fragment RULE_ACCENT_CHR : ('\u00E0'|'\u00E8'|'\u00E9'|'\u00F2'|'\u00EC'|'\u00F9'|'\u00C3');

RULE_ENUM_ID : '^'? RULE_MAIUSC_ID RULE_MAIUSC_ID (RULE_MAIUSC_ID|RULE_DIGIT|'_')*;

fragment RULE_SPECIAL_CHAR : ('!'|'.'|','|':'|'-'|'+'|'$'|'%'|'('|')'|'['|']'|'='|'?'|'^'|'_'|';'|'\u00A8'|'@'|'>'|'<'|'|'|'\\'|'/');

RULE_RULE_ID : 'r_' (RULE_MAIUSC_ID|RULE_MIN_ID|RULE_DIGIT|'_')*;

RULE_ID : '^'? (RULE_MAIUSC_ID|RULE_MIN_ID|'_') (RULE_MAIUSC_ID|RULE_MIN_ID|RULE_DIGIT|'_')*;

RULE_CHAR_LITERAL : '\'' (RULE_MAIUSC_ID|RULE_MIN_ID|RULE_DIGIT|RULE_SPECIAL_CHAR|RULE_ACCENT_CHR)? '\'';

RULE_STRING_LITERAL : '"' (RULE_MAIUSC_ID|RULE_MIN_ID|RULE_DIGIT|RULE_WS|'\''|RULE_SPECIAL_CHAR|RULE_ACCENT_CHR)* '"';

RULE_STRING : '"' ~('"')* '"';

RULE_COMPLEX_NUMBER : RULE_IMMAGINARY_NUMBER;

fragment RULE_IMMAGINARY_NUMBER : 'i' RULE_DIGIT+ ('.' RULE_DIGIT+)?;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'* '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
