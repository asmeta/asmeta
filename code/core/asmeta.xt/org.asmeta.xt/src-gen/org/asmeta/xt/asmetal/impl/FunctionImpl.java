/**
 * generated by Xtext 2.32.0
 */
package org.asmeta.xt.asmetal.impl;

import org.asmeta.xt.asmetal.AsmetalPackage;
import org.asmeta.xt.asmetal.Domain;
import org.asmeta.xt.asmetal.Function;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Function</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.asmeta.xt.asmetal.impl.FunctionImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.asmeta.xt.asmetal.impl.FunctionImpl#getDomain <em>Domain</em>}</li>
 *   <li>{@link org.asmeta.xt.asmetal.impl.FunctionImpl#getCodomain <em>Codomain</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FunctionImpl extends MinimalEObjectImpl.Container implements Function
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getDomain() <em>Domain</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomain()
   * @generated
   * @ordered
   */
  protected Domain domain;

  /**
   * The cached value of the '{@link #getCodomain() <em>Codomain</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCodomain()
   * @generated
   * @ordered
   */
  protected Domain codomain;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FunctionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AsmetalPackage.Literals.FUNCTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AsmetalPackage.FUNCTION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Domain getDomain()
  {
    return domain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDomain(Domain newDomain, NotificationChain msgs)
  {
    Domain oldDomain = domain;
    domain = newDomain;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AsmetalPackage.FUNCTION__DOMAIN, oldDomain, newDomain);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDomain(Domain newDomain)
  {
    if (newDomain != domain)
    {
      NotificationChain msgs = null;
      if (domain != null)
        msgs = ((InternalEObject)domain).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AsmetalPackage.FUNCTION__DOMAIN, null, msgs);
      if (newDomain != null)
        msgs = ((InternalEObject)newDomain).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AsmetalPackage.FUNCTION__DOMAIN, null, msgs);
      msgs = basicSetDomain(newDomain, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AsmetalPackage.FUNCTION__DOMAIN, newDomain, newDomain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Domain getCodomain()
  {
    return codomain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCodomain(Domain newCodomain, NotificationChain msgs)
  {
    Domain oldCodomain = codomain;
    codomain = newCodomain;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AsmetalPackage.FUNCTION__CODOMAIN, oldCodomain, newCodomain);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCodomain(Domain newCodomain)
  {
    if (newCodomain != codomain)
    {
      NotificationChain msgs = null;
      if (codomain != null)
        msgs = ((InternalEObject)codomain).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AsmetalPackage.FUNCTION__CODOMAIN, null, msgs);
      if (newCodomain != null)
        msgs = ((InternalEObject)newCodomain).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AsmetalPackage.FUNCTION__CODOMAIN, null, msgs);
      msgs = basicSetCodomain(newCodomain, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AsmetalPackage.FUNCTION__CODOMAIN, newCodomain, newCodomain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AsmetalPackage.FUNCTION__DOMAIN:
        return basicSetDomain(null, msgs);
      case AsmetalPackage.FUNCTION__CODOMAIN:
        return basicSetCodomain(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AsmetalPackage.FUNCTION__NAME:
        return getName();
      case AsmetalPackage.FUNCTION__DOMAIN:
        return getDomain();
      case AsmetalPackage.FUNCTION__CODOMAIN:
        return getCodomain();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AsmetalPackage.FUNCTION__NAME:
        setName((String)newValue);
        return;
      case AsmetalPackage.FUNCTION__DOMAIN:
        setDomain((Domain)newValue);
        return;
      case AsmetalPackage.FUNCTION__CODOMAIN:
        setCodomain((Domain)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AsmetalPackage.FUNCTION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case AsmetalPackage.FUNCTION__DOMAIN:
        setDomain((Domain)null);
        return;
      case AsmetalPackage.FUNCTION__CODOMAIN:
        setCodomain((Domain)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AsmetalPackage.FUNCTION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case AsmetalPackage.FUNCTION__DOMAIN:
        return domain != null;
      case AsmetalPackage.FUNCTION__CODOMAIN:
        return codomain != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

  public Integer getArity()
  {
  	return org.asmeta.xt.validation.utility.Utility.calculateFunctionArity(this);
  }
  
  public org.asmeta.xt.asmetal.Signature getSignature()
  {
  	return (org.asmeta.xt.asmetal.Signature) this.eContainer;
  }
  
  public org.asmeta.xt.asmetal.FunctionDefinition getDefinition() {
  	org.asmeta.xt.asmetal.FunctionDefinition fDec = org.asmeta.xt.validation.utility.Utility.function_declarations_map.get(this);
	  
	if (fDec != null) 
		return fDec;
  	
  	org.asmeta.xt.asmetal.FunctionInitialization fInit = org.asmeta.xt.validation.utility.Utility.function_initialization_map.get(this);
  	
  	if (fInit != null) {  	
  		
  		fDec = org.asmeta.xt.validation.utility.Utility.function_init_to_def.get(fInit);
  		if (fDec != null) 
  			return fDec;
  		
  		fDec = org.asmeta.xt.asmetal.AsmetalFactory.eINSTANCE.createFunctionDefinition();
  		fDec.setBody(fInit.getBody());
  		fDec.setDefinedFunctionName(fInit.getInizializedFunctionName());
  		org.asmeta.xt.validation.utility.Utility.function_init_to_def.put(fInit, fDec);
  		// TODO: Completare con altre informazioni
  		return fDec;
  		
  	}
  	
  	return null;  
  }
} //FunctionImpl
