/**
 * generated by Xtext 2.32.0
 */
package org.asmeta.xt.asmetal.impl;

import org.asmeta.xt.asmetal.AsmetalPackage;
import org.asmeta.xt.asmetal.BasicTerm;
import org.asmeta.xt.asmetal.TurboCallRule;
import org.asmeta.xt.asmetal.TurboReturnRule;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Turbo Return Rule</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.asmeta.xt.asmetal.impl.TurboReturnRuleImpl#getLocation <em>Location</em>}</li>
 *   <li>{@link org.asmeta.xt.asmetal.impl.TurboReturnRuleImpl#getUpdateRule <em>Update Rule</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TurboReturnRuleImpl extends RuleImpl implements TurboReturnRule
{
  /**
   * The cached value of the '{@link #getLocation() <em>Location</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLocation()
   * @generated
   * @ordered
   */
  protected BasicTerm location;

  /**
   * The cached value of the '{@link #getUpdateRule() <em>Update Rule</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUpdateRule()
   * @generated
   * @ordered
   */
  protected TurboCallRule updateRule;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TurboReturnRuleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AsmetalPackage.Literals.TURBO_RETURN_RULE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BasicTerm getLocation()
  {
    return location;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLocation(BasicTerm newLocation, NotificationChain msgs)
  {
    BasicTerm oldLocation = location;
    location = newLocation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AsmetalPackage.TURBO_RETURN_RULE__LOCATION, oldLocation, newLocation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLocation(BasicTerm newLocation)
  {
    if (newLocation != location)
    {
      NotificationChain msgs = null;
      if (location != null)
        msgs = ((InternalEObject)location).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AsmetalPackage.TURBO_RETURN_RULE__LOCATION, null, msgs);
      if (newLocation != null)
        msgs = ((InternalEObject)newLocation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AsmetalPackage.TURBO_RETURN_RULE__LOCATION, null, msgs);
      msgs = basicSetLocation(newLocation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AsmetalPackage.TURBO_RETURN_RULE__LOCATION, newLocation, newLocation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TurboCallRule getUpdateRule()
  {
    return updateRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUpdateRule(TurboCallRule newUpdateRule, NotificationChain msgs)
  {
    TurboCallRule oldUpdateRule = updateRule;
    updateRule = newUpdateRule;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, AsmetalPackage.TURBO_RETURN_RULE__UPDATE_RULE, oldUpdateRule, newUpdateRule);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setUpdateRule(TurboCallRule newUpdateRule)
  {
    if (newUpdateRule != updateRule)
    {
      NotificationChain msgs = null;
      if (updateRule != null)
        msgs = ((InternalEObject)updateRule).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - AsmetalPackage.TURBO_RETURN_RULE__UPDATE_RULE, null, msgs);
      if (newUpdateRule != null)
        msgs = ((InternalEObject)newUpdateRule).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - AsmetalPackage.TURBO_RETURN_RULE__UPDATE_RULE, null, msgs);
      msgs = basicSetUpdateRule(newUpdateRule, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AsmetalPackage.TURBO_RETURN_RULE__UPDATE_RULE, newUpdateRule, newUpdateRule));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AsmetalPackage.TURBO_RETURN_RULE__LOCATION:
        return basicSetLocation(null, msgs);
      case AsmetalPackage.TURBO_RETURN_RULE__UPDATE_RULE:
        return basicSetUpdateRule(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AsmetalPackage.TURBO_RETURN_RULE__LOCATION:
        return getLocation();
      case AsmetalPackage.TURBO_RETURN_RULE__UPDATE_RULE:
        return getUpdateRule();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AsmetalPackage.TURBO_RETURN_RULE__LOCATION:
        setLocation((BasicTerm)newValue);
        return;
      case AsmetalPackage.TURBO_RETURN_RULE__UPDATE_RULE:
        setUpdateRule((TurboCallRule)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AsmetalPackage.TURBO_RETURN_RULE__LOCATION:
        setLocation((BasicTerm)null);
        return;
      case AsmetalPackage.TURBO_RETURN_RULE__UPDATE_RULE:
        setUpdateRule((TurboCallRule)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AsmetalPackage.TURBO_RETURN_RULE__LOCATION:
        return location != null;
      case AsmetalPackage.TURBO_RETURN_RULE__UPDATE_RULE:
        return updateRule != null;
    }
    return super.eIsSet(featureID);
  }

} //TurboReturnRuleImpl
