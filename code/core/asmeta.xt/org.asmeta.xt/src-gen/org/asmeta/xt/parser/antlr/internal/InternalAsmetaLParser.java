package org.asmeta.xt.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.asmeta.xt.services.AsmetaLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalAsmetaLParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_RULE_ID", "RULE_ENUM_ID", "RULE_COMPLEX_NUMBER", "RULE_NATNUMBER", "RULE_CHAR_LITERAL", "RULE_STRING_LITERAL", "RULE_NUMBER_TOKEN", "RULE_REAL_NUMBER", "RULE_MAIUSC_ID", "RULE_PATH_SEP", "RULE_DIGIT", "RULE_MIN_ID", "RULE_ACCENT_CHR", "RULE_SPECIAL_CHAR", "RULE_WS", "RULE_IMMAGINARY_NUMBER", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "'asyncr'", "'asm'", "'module'", "'main'", "'default'", "'import'", "'('", "','", "')'", "'export'", "'*'", "'signature'", "':'", "'init'", "'domain'", "'='", "'function'", "'in'", "'agent'", "'Agent'", "'definitions'", "'macro'", "'rule'", "'turbo'", "'invariant'", "'over'", "'CTL'", "'CTLSPEC'", "'LTL'", "'LTLSPEC'", "'JUSTICE'", "'COMPASSION'", "'INVAR'", "'dynamic'", "'subsetof'", "'anydomain'", "'basic'", "'Integer'", "'Real'", "'String'", "'Natural'", "'Char'", "'Complex'", "'Boolean'", "'Undef'", "'abstract'", "'Reserve'", "'enum'", "'{'", "'|'", "'}'", "'Rule'", "'Prod'", "'Seq'", "'Powerset'", "'Bag'", "'Map'", "'derived'", "'->'", "'static'", "'local'", "'controlled'", "'shared'", "'monitored'", "'out'", "'and'", "'or'", "'not'", "'xor'", "'mod'", "'iff'", "'implies'", "'while'", "'for'", "'!='", "'>'", "'<'", "'>='", "'<='", "'+'", "'-'", "'/'", "'^'", "'.'", "'true'", "'false'", "'undef'", "'if'", "'then'", "'else'", "'endif'", "'switch'", "'case'", "'otherwise'", "'endswitch'", "'['", "']'", "'exist'", "'unique'", "'with'", "'forall'", "'let'", "'endlet'", "'<<'", "'>>'", "'skip'", "':='", "'par'", "'endpar'", "'choose'", "'do'", "'ifnone'", "'extend'", "'seq'", "'endseq'", "'iterate'", "'enditerate'", "'<-'", "'whilerec'", "'..'", "'$'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__50=50;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int RULE_REAL_NUMBER=13;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=5;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_DIGIT=16;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=22;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int RULE_RULE_ID=6;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int RULE_SPECIAL_CHAR=19;
    public static final int RULE_ENUM_ID=7;
    public static final int RULE_MIN_ID=17;
    public static final int RULE_PATH_SEP=15;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_MAIUSC_ID=14;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_NATNUMBER=9;
    public static final int RULE_IMMAGINARY_NUMBER=21;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int RULE_NUMBER_TOKEN=12;
    public static final int RULE_ACCENT_CHR=18;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=4;
    public static final int RULE_STRING_LITERAL=11;
    public static final int RULE_SL_COMMENT=23;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=20;
    public static final int RULE_COMPLEX_NUMBER=8;
    public static final int RULE_CHAR_LITERAL=10;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalAsmetaLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalAsmetaLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalAsmetaLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalAsmetaL.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private AsmetaLGrammarAccess grammarAccess;

        public InternalAsmetaLParser(TokenStream input, AsmetaLGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Asm";
       	}

       	@Override
       	protected AsmetaLGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleAsm"
    // InternalAsmetaL.g:70:1: entryRuleAsm returns [EObject current=null] : iv_ruleAsm= ruleAsm EOF ;
    public final EObject entryRuleAsm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAsm = null;


        try {
            // InternalAsmetaL.g:70:44: (iv_ruleAsm= ruleAsm EOF )
            // InternalAsmetaL.g:71:2: iv_ruleAsm= ruleAsm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAsmRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAsm=ruleAsm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAsm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAsm"


    // $ANTLR start "ruleAsm"
    // InternalAsmetaL.g:77:1: ruleAsm returns [EObject current=null] : ( ( (lv_isAsynchr_0_0= 'asyncr' ) )? ( ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) ) ) ( ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) ) ) ( (lv_headerSection_3_0= ruleHeader ) ) ( (lv_bodySection_4_0= ruleBody ) ) (otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) ) )? ( ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )* )? )? ;
    public final EObject ruleAsm() throws RecognitionException {
        EObject current = null;

        Token lv_isAsynchr_0_0=null;
        Token lv_type_1_1=null;
        Token lv_type_1_2=null;
        Token lv_name_2_2=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_name_2_1 = null;

        EObject lv_headerSection_3_0 = null;

        EObject lv_bodySection_4_0 = null;

        EObject lv_mainrule_6_0 = null;

        EObject lv_initialState_7_0 = null;

        EObject lv_defaultInitialState_9_0 = null;

        EObject lv_initialState_10_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:83:2: ( ( ( (lv_isAsynchr_0_0= 'asyncr' ) )? ( ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) ) ) ( ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) ) ) ( (lv_headerSection_3_0= ruleHeader ) ) ( (lv_bodySection_4_0= ruleBody ) ) (otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) ) )? ( ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )* )? )? )
            // InternalAsmetaL.g:84:2: ( ( (lv_isAsynchr_0_0= 'asyncr' ) )? ( ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) ) ) ( ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) ) ) ( (lv_headerSection_3_0= ruleHeader ) ) ( (lv_bodySection_4_0= ruleBody ) ) (otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) ) )? ( ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )* )? )?
            {
            // InternalAsmetaL.g:84:2: ( ( (lv_isAsynchr_0_0= 'asyncr' ) )? ( ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) ) ) ( ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) ) ) ( (lv_headerSection_3_0= ruleHeader ) ) ( (lv_bodySection_4_0= ruleBody ) ) (otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) ) )? ( ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )* )? )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( ((LA8_0>=24 && LA8_0<=26)) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalAsmetaL.g:85:3: ( (lv_isAsynchr_0_0= 'asyncr' ) )? ( ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) ) ) ( ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) ) ) ( (lv_headerSection_3_0= ruleHeader ) ) ( (lv_bodySection_4_0= ruleBody ) ) (otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) ) )? ( ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )* )?
                    {
                    // InternalAsmetaL.g:85:3: ( (lv_isAsynchr_0_0= 'asyncr' ) )?
                    int alt1=2;
                    int LA1_0 = input.LA(1);

                    if ( (LA1_0==24) ) {
                        alt1=1;
                    }
                    switch (alt1) {
                        case 1 :
                            // InternalAsmetaL.g:86:4: (lv_isAsynchr_0_0= 'asyncr' )
                            {
                            // InternalAsmetaL.g:86:4: (lv_isAsynchr_0_0= 'asyncr' )
                            // InternalAsmetaL.g:87:5: lv_isAsynchr_0_0= 'asyncr'
                            {
                            lv_isAsynchr_0_0=(Token)match(input,24,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(lv_isAsynchr_0_0, grammarAccess.getAsmAccess().getIsAsynchrAsyncrKeyword_0_0());
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getAsmRule());
                              					}
                              					setWithLastConsumed(current, "isAsynchr", lv_isAsynchr_0_0 != null, "asyncr");
                              				
                            }

                            }


                            }
                            break;

                    }

                    // InternalAsmetaL.g:99:3: ( ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) ) )
                    // InternalAsmetaL.g:100:4: ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) )
                    {
                    // InternalAsmetaL.g:100:4: ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) )
                    // InternalAsmetaL.g:101:5: (lv_type_1_1= 'asm' | lv_type_1_2= 'module' )
                    {
                    // InternalAsmetaL.g:101:5: (lv_type_1_1= 'asm' | lv_type_1_2= 'module' )
                    int alt2=2;
                    int LA2_0 = input.LA(1);

                    if ( (LA2_0==25) ) {
                        alt2=1;
                    }
                    else if ( (LA2_0==26) ) {
                        alt2=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 2, 0, input);

                        throw nvae;
                    }
                    switch (alt2) {
                        case 1 :
                            // InternalAsmetaL.g:102:6: lv_type_1_1= 'asm'
                            {
                            lv_type_1_1=(Token)match(input,25,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_type_1_1, grammarAccess.getAsmAccess().getTypeAsmKeyword_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getAsmRule());
                              						}
                              						setWithLastConsumed(current, "type", lv_type_1_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:113:6: lv_type_1_2= 'module'
                            {
                            lv_type_1_2=(Token)match(input,26,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_type_1_2, grammarAccess.getAsmAccess().getTypeModuleKeyword_1_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getAsmRule());
                              						}
                              						setWithLastConsumed(current, "type", lv_type_1_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalAsmetaL.g:126:3: ( ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) ) )
                    // InternalAsmetaL.g:127:4: ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) )
                    {
                    // InternalAsmetaL.g:127:4: ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) )
                    // InternalAsmetaL.g:128:5: (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING )
                    {
                    // InternalAsmetaL.g:128:5: (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING )
                    int alt3=2;
                    int LA3_0 = input.LA(1);

                    if ( (LA3_0==RULE_ID||LA3_0==RULE_ENUM_ID||LA3_0==27||(LA3_0>=96 && LA3_0<=97)) ) {
                        alt3=1;
                    }
                    else if ( (LA3_0==RULE_STRING) ) {
                        alt3=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 3, 0, input);

                        throw nvae;
                    }
                    switch (alt3) {
                        case 1 :
                            // InternalAsmetaL.g:129:6: lv_name_2_1= ruleextendedNameForAsm
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAsmAccess().getNameExtendedNameForAsmParserRuleCall_2_0_0());
                              					
                            }
                            pushFollow(FOLLOW_5);
                            lv_name_2_1=ruleextendedNameForAsm();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAsmRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_2_1,
                              							"org.asmeta.xt.AsmetaL.extendedNameForAsm");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:145:6: lv_name_2_2= RULE_STRING
                            {
                            lv_name_2_2=(Token)match(input,RULE_STRING,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_name_2_2, grammarAccess.getAsmAccess().getNameSTRINGTerminalRuleCall_2_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getAsmRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"name",
                              							lv_name_2_2,
                              							"org.asmeta.xt.AsmetaL.STRING");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalAsmetaL.g:162:3: ( (lv_headerSection_3_0= ruleHeader ) )
                    // InternalAsmetaL.g:163:4: (lv_headerSection_3_0= ruleHeader )
                    {
                    // InternalAsmetaL.g:163:4: (lv_headerSection_3_0= ruleHeader )
                    // InternalAsmetaL.g:164:5: lv_headerSection_3_0= ruleHeader
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAsmAccess().getHeaderSectionHeaderParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_6);
                    lv_headerSection_3_0=ruleHeader();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAsmRule());
                      					}
                      					set(
                      						current,
                      						"headerSection",
                      						lv_headerSection_3_0,
                      						"org.asmeta.xt.AsmetaL.Header");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAsmetaL.g:181:3: ( (lv_bodySection_4_0= ruleBody ) )
                    // InternalAsmetaL.g:182:4: (lv_bodySection_4_0= ruleBody )
                    {
                    // InternalAsmetaL.g:182:4: (lv_bodySection_4_0= ruleBody )
                    // InternalAsmetaL.g:183:5: lv_bodySection_4_0= ruleBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAsmAccess().getBodySectionBodyParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_7);
                    lv_bodySection_4_0=ruleBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAsmRule());
                      					}
                      					set(
                      						current,
                      						"bodySection",
                      						lv_bodySection_4_0,
                      						"org.asmeta.xt.AsmetaL.Body");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAsmetaL.g:200:3: (otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) ) )?
                    int alt4=2;
                    int LA4_0 = input.LA(1);

                    if ( (LA4_0==27) ) {
                        alt4=1;
                    }
                    switch (alt4) {
                        case 1 :
                            // InternalAsmetaL.g:201:4: otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) )
                            {
                            otherlv_5=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				newLeafNode(otherlv_5, grammarAccess.getAsmAccess().getMainKeyword_5_0());
                              			
                            }
                            // InternalAsmetaL.g:205:4: ( (lv_mainrule_6_0= ruleMacroDeclaration ) )
                            // InternalAsmetaL.g:206:5: (lv_mainrule_6_0= ruleMacroDeclaration )
                            {
                            // InternalAsmetaL.g:206:5: (lv_mainrule_6_0= ruleMacroDeclaration )
                            // InternalAsmetaL.g:207:6: lv_mainrule_6_0= ruleMacroDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAsmAccess().getMainruleMacroDeclarationParserRuleCall_5_1_0());
                              					
                            }
                            pushFollow(FOLLOW_9);
                            lv_mainrule_6_0=ruleMacroDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAsmRule());
                              						}
                              						set(
                              							current,
                              							"mainrule",
                              							lv_mainrule_6_0,
                              							"org.asmeta.xt.AsmetaL.MacroDeclaration");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalAsmetaL.g:225:3: ( ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )* )?
                    int alt7=2;
                    int LA7_0 = input.LA(1);

                    if ( (LA7_0==28||LA7_0==37) ) {
                        alt7=1;
                    }
                    switch (alt7) {
                        case 1 :
                            // InternalAsmetaL.g:226:4: ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )*
                            {
                            // InternalAsmetaL.g:226:4: ( (lv_initialState_7_0= ruleInitialization ) )*
                            loop5:
                            do {
                                int alt5=2;
                                int LA5_0 = input.LA(1);

                                if ( (LA5_0==37) ) {
                                    alt5=1;
                                }


                                switch (alt5) {
                            	case 1 :
                            	    // InternalAsmetaL.g:227:5: (lv_initialState_7_0= ruleInitialization )
                            	    {
                            	    // InternalAsmetaL.g:227:5: (lv_initialState_7_0= ruleInitialization )
                            	    // InternalAsmetaL.g:228:6: lv_initialState_7_0= ruleInitialization
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						newCompositeNode(grammarAccess.getAsmAccess().getInitialStateInitializationParserRuleCall_6_0_0());
                            	      					
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_initialState_7_0=ruleInitialization();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						if (current==null) {
                            	      							current = createModelElementForParent(grammarAccess.getAsmRule());
                            	      						}
                            	      						add(
                            	      							current,
                            	      							"initialState",
                            	      							lv_initialState_7_0,
                            	      							"org.asmeta.xt.AsmetaL.Initialization");
                            	      						afterParserOrEnumRuleCall();
                            	      					
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop5;
                                }
                            } while (true);

                            otherlv_8=(Token)match(input,28,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				newLeafNode(otherlv_8, grammarAccess.getAsmAccess().getDefaultKeyword_6_1());
                              			
                            }
                            // InternalAsmetaL.g:249:4: ( (lv_defaultInitialState_9_0= ruleInitialization ) )
                            // InternalAsmetaL.g:250:5: (lv_defaultInitialState_9_0= ruleInitialization )
                            {
                            // InternalAsmetaL.g:250:5: (lv_defaultInitialState_9_0= ruleInitialization )
                            // InternalAsmetaL.g:251:6: lv_defaultInitialState_9_0= ruleInitialization
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAsmAccess().getDefaultInitialStateInitializationParserRuleCall_6_2_0());
                              					
                            }
                            pushFollow(FOLLOW_12);
                            lv_defaultInitialState_9_0=ruleInitialization();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAsmRule());
                              						}
                              						set(
                              							current,
                              							"defaultInitialState",
                              							lv_defaultInitialState_9_0,
                              							"org.asmeta.xt.AsmetaL.Initialization");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }

                            // InternalAsmetaL.g:268:4: ( (lv_initialState_10_0= ruleInitialization ) )*
                            loop6:
                            do {
                                int alt6=2;
                                int LA6_0 = input.LA(1);

                                if ( (LA6_0==37) ) {
                                    alt6=1;
                                }


                                switch (alt6) {
                            	case 1 :
                            	    // InternalAsmetaL.g:269:5: (lv_initialState_10_0= ruleInitialization )
                            	    {
                            	    // InternalAsmetaL.g:269:5: (lv_initialState_10_0= ruleInitialization )
                            	    // InternalAsmetaL.g:270:6: lv_initialState_10_0= ruleInitialization
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						newCompositeNode(grammarAccess.getAsmAccess().getInitialStateInitializationParserRuleCall_6_3_0());
                            	      					
                            	    }
                            	    pushFollow(FOLLOW_12);
                            	    lv_initialState_10_0=ruleInitialization();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						if (current==null) {
                            	      							current = createModelElementForParent(grammarAccess.getAsmRule());
                            	      						}
                            	      						add(
                            	      							current,
                            	      							"initialState",
                            	      							lv_initialState_10_0,
                            	      							"org.asmeta.xt.AsmetaL.Initialization");
                            	      						afterParserOrEnumRuleCall();
                            	      					
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop6;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAsm"


    // $ANTLR start "entryRuleHeader"
    // InternalAsmetaL.g:292:1: entryRuleHeader returns [EObject current=null] : iv_ruleHeader= ruleHeader EOF ;
    public final EObject entryRuleHeader() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHeader = null;


        try {
            // InternalAsmetaL.g:292:47: (iv_ruleHeader= ruleHeader EOF )
            // InternalAsmetaL.g:293:2: iv_ruleHeader= ruleHeader EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHeaderRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHeader=ruleHeader();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHeader; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHeader"


    // $ANTLR start "ruleHeader"
    // InternalAsmetaL.g:299:1: ruleHeader returns [EObject current=null] : ( ( (lv_importClause_0_0= ruleImportClause ) )* ( (lv_exportClause_1_0= ruleExportClause ) )? ( (lv_signature_2_0= ruleSignature ) ) ) ;
    public final EObject ruleHeader() throws RecognitionException {
        EObject current = null;

        EObject lv_importClause_0_0 = null;

        EObject lv_exportClause_1_0 = null;

        EObject lv_signature_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:305:2: ( ( ( (lv_importClause_0_0= ruleImportClause ) )* ( (lv_exportClause_1_0= ruleExportClause ) )? ( (lv_signature_2_0= ruleSignature ) ) ) )
            // InternalAsmetaL.g:306:2: ( ( (lv_importClause_0_0= ruleImportClause ) )* ( (lv_exportClause_1_0= ruleExportClause ) )? ( (lv_signature_2_0= ruleSignature ) ) )
            {
            // InternalAsmetaL.g:306:2: ( ( (lv_importClause_0_0= ruleImportClause ) )* ( (lv_exportClause_1_0= ruleExportClause ) )? ( (lv_signature_2_0= ruleSignature ) ) )
            // InternalAsmetaL.g:307:3: ( (lv_importClause_0_0= ruleImportClause ) )* ( (lv_exportClause_1_0= ruleExportClause ) )? ( (lv_signature_2_0= ruleSignature ) )
            {
            // InternalAsmetaL.g:307:3: ( (lv_importClause_0_0= ruleImportClause ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==29) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // InternalAsmetaL.g:308:4: (lv_importClause_0_0= ruleImportClause )
            	    {
            	    // InternalAsmetaL.g:308:4: (lv_importClause_0_0= ruleImportClause )
            	    // InternalAsmetaL.g:309:5: lv_importClause_0_0= ruleImportClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getHeaderAccess().getImportClauseImportClauseParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_importClause_0_0=ruleImportClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getHeaderRule());
            	      					}
            	      					add(
            	      						current,
            	      						"importClause",
            	      						lv_importClause_0_0,
            	      						"org.asmeta.xt.AsmetaL.ImportClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            // InternalAsmetaL.g:326:3: ( (lv_exportClause_1_0= ruleExportClause ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==33) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalAsmetaL.g:327:4: (lv_exportClause_1_0= ruleExportClause )
                    {
                    // InternalAsmetaL.g:327:4: (lv_exportClause_1_0= ruleExportClause )
                    // InternalAsmetaL.g:328:5: lv_exportClause_1_0= ruleExportClause
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getHeaderAccess().getExportClauseExportClauseParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_5);
                    lv_exportClause_1_0=ruleExportClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getHeaderRule());
                      					}
                      					set(
                      						current,
                      						"exportClause",
                      						lv_exportClause_1_0,
                      						"org.asmeta.xt.AsmetaL.ExportClause");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalAsmetaL.g:345:3: ( (lv_signature_2_0= ruleSignature ) )
            // InternalAsmetaL.g:346:4: (lv_signature_2_0= ruleSignature )
            {
            // InternalAsmetaL.g:346:4: (lv_signature_2_0= ruleSignature )
            // InternalAsmetaL.g:347:5: lv_signature_2_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getHeaderAccess().getSignatureSignatureParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_signature_2_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getHeaderRule());
              					}
              					set(
              						current,
              						"signature",
              						lv_signature_2_0,
              						"org.asmeta.xt.AsmetaL.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHeader"


    // $ANTLR start "entryRuleImportClause"
    // InternalAsmetaL.g:368:1: entryRuleImportClause returns [EObject current=null] : iv_ruleImportClause= ruleImportClause EOF ;
    public final EObject entryRuleImportClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportClause = null;


        try {
            // InternalAsmetaL.g:368:53: (iv_ruleImportClause= ruleImportClause EOF )
            // InternalAsmetaL.g:369:2: iv_ruleImportClause= ruleImportClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportClause=ruleImportClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportClause"


    // $ANTLR start "ruleImportClause"
    // InternalAsmetaL.g:375:1: ruleImportClause returns [EObject current=null] : (otherlv_0= 'import' ( ( (lv_moduleName_1_1= ruleMOD_ID | lv_moduleName_1_2= RULE_STRING ) ) ) (otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')' )? ) ;
    public final EObject ruleImportClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_moduleName_1_2=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_moduleName_1_1 = null;

        EObject lv_importedList_3_0 = null;

        EObject lv_importedList_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:381:2: ( (otherlv_0= 'import' ( ( (lv_moduleName_1_1= ruleMOD_ID | lv_moduleName_1_2= RULE_STRING ) ) ) (otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')' )? ) )
            // InternalAsmetaL.g:382:2: (otherlv_0= 'import' ( ( (lv_moduleName_1_1= ruleMOD_ID | lv_moduleName_1_2= RULE_STRING ) ) ) (otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')' )? )
            {
            // InternalAsmetaL.g:382:2: (otherlv_0= 'import' ( ( (lv_moduleName_1_1= ruleMOD_ID | lv_moduleName_1_2= RULE_STRING ) ) ) (otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')' )? )
            // InternalAsmetaL.g:383:3: otherlv_0= 'import' ( ( (lv_moduleName_1_1= ruleMOD_ID | lv_moduleName_1_2= RULE_STRING ) ) ) (otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')' )?
            {
            otherlv_0=(Token)match(input,29,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getImportClauseAccess().getImportKeyword_0());
              		
            }
            // InternalAsmetaL.g:387:3: ( ( (lv_moduleName_1_1= ruleMOD_ID | lv_moduleName_1_2= RULE_STRING ) ) )
            // InternalAsmetaL.g:388:4: ( (lv_moduleName_1_1= ruleMOD_ID | lv_moduleName_1_2= RULE_STRING ) )
            {
            // InternalAsmetaL.g:388:4: ( (lv_moduleName_1_1= ruleMOD_ID | lv_moduleName_1_2= RULE_STRING ) )
            // InternalAsmetaL.g:389:5: (lv_moduleName_1_1= ruleMOD_ID | lv_moduleName_1_2= RULE_STRING )
            {
            // InternalAsmetaL.g:389:5: (lv_moduleName_1_1= ruleMOD_ID | lv_moduleName_1_2= RULE_STRING )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ID||LA11_0==RULE_ENUM_ID||LA11_0==RULE_MAIUSC_ID||LA11_0==107||LA11_0==143) ) {
                alt11=1;
            }
            else if ( (LA11_0==RULE_STRING) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalAsmetaL.g:390:6: lv_moduleName_1_1= ruleMOD_ID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportClauseAccess().getModuleNameMOD_IDParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_moduleName_1_1=ruleMOD_ID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportClauseRule());
                      						}
                      						set(
                      							current,
                      							"moduleName",
                      							lv_moduleName_1_1,
                      							"org.asmeta.xt.AsmetaL.MOD_ID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:406:6: lv_moduleName_1_2= RULE_STRING
                    {
                    lv_moduleName_1_2=(Token)match(input,RULE_STRING,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_moduleName_1_2, grammarAccess.getImportClauseAccess().getModuleNameSTRINGTerminalRuleCall_1_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getImportClauseRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"moduleName",
                      							lv_moduleName_1_2,
                      							"org.asmeta.xt.AsmetaL.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalAsmetaL.g:423:3: (otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')' )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==30) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalAsmetaL.g:424:4: otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,30,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportClauseAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalAsmetaL.g:428:4: ( (lv_importedList_3_0= ruleimportData ) )
                    // InternalAsmetaL.g:429:5: (lv_importedList_3_0= ruleimportData )
                    {
                    // InternalAsmetaL.g:429:5: (lv_importedList_3_0= ruleimportData )
                    // InternalAsmetaL.g:430:6: lv_importedList_3_0= ruleimportData
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportClauseAccess().getImportedListImportDataParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_importedList_3_0=ruleimportData();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportClauseRule());
                      						}
                      						add(
                      							current,
                      							"importedList",
                      							lv_importedList_3_0,
                      							"org.asmeta.xt.AsmetaL.importData");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:447:4: (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==31) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // InternalAsmetaL.g:448:5: otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) )
                    	    {
                    	    otherlv_4=(Token)match(input,31,FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getImportClauseAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:452:5: ( (lv_importedList_5_0= ruleimportData ) )
                    	    // InternalAsmetaL.g:453:6: (lv_importedList_5_0= ruleimportData )
                    	    {
                    	    // InternalAsmetaL.g:453:6: (lv_importedList_5_0= ruleimportData )
                    	    // InternalAsmetaL.g:454:7: lv_importedList_5_0= ruleimportData
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getImportClauseAccess().getImportedListImportDataParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_importedList_5_0=ruleimportData();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getImportClauseRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"importedList",
                    	      								lv_importedList_5_0,
                    	      								"org.asmeta.xt.AsmetaL.importData");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getImportClauseAccess().getRightParenthesisKeyword_2_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportClause"


    // $ANTLR start "entryRuleimportData"
    // InternalAsmetaL.g:481:1: entryRuleimportData returns [EObject current=null] : iv_ruleimportData= ruleimportData EOF ;
    public final EObject entryRuleimportData() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleimportData = null;


        try {
            // InternalAsmetaL.g:481:51: (iv_ruleimportData= ruleimportData EOF )
            // InternalAsmetaL.g:482:2: iv_ruleimportData= ruleimportData EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDataRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimportData=ruleimportData();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimportData; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimportData"


    // $ANTLR start "ruleimportData"
    // InternalAsmetaL.g:488:1: ruleimportData returns [EObject current=null] : ( (lv_name_0_0= ruleextendedName ) ) ;
    public final EObject ruleimportData() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:494:2: ( ( (lv_name_0_0= ruleextendedName ) ) )
            // InternalAsmetaL.g:495:2: ( (lv_name_0_0= ruleextendedName ) )
            {
            // InternalAsmetaL.g:495:2: ( (lv_name_0_0= ruleextendedName ) )
            // InternalAsmetaL.g:496:3: (lv_name_0_0= ruleextendedName )
            {
            // InternalAsmetaL.g:496:3: (lv_name_0_0= ruleextendedName )
            // InternalAsmetaL.g:497:4: lv_name_0_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getImportDataAccess().getNameExtendedNameParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getImportDataRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.asmeta.xt.AsmetaL.extendedName");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimportData"


    // $ANTLR start "entryRuleExportClause"
    // InternalAsmetaL.g:517:1: entryRuleExportClause returns [EObject current=null] : iv_ruleExportClause= ruleExportClause EOF ;
    public final EObject entryRuleExportClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportClause = null;


        try {
            // InternalAsmetaL.g:517:53: (iv_ruleExportClause= ruleExportClause EOF )
            // InternalAsmetaL.g:518:2: iv_ruleExportClause= ruleExportClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportClause=ruleExportClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExportClause"


    // $ANTLR start "ruleExportClause"
    // InternalAsmetaL.g:524:1: ruleExportClause returns [EObject current=null] : (otherlv_0= 'export' ( ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* ) | ( (lv_exportAll_4_0= '*' ) ) ) ) ;
    public final EObject ruleExportClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_exportAll_4_0=null;
        AntlrDatatypeRuleToken lv_exportedList_1_0 = null;

        AntlrDatatypeRuleToken lv_exportedList_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:530:2: ( (otherlv_0= 'export' ( ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* ) | ( (lv_exportAll_4_0= '*' ) ) ) ) )
            // InternalAsmetaL.g:531:2: (otherlv_0= 'export' ( ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* ) | ( (lv_exportAll_4_0= '*' ) ) ) )
            {
            // InternalAsmetaL.g:531:2: (otherlv_0= 'export' ( ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* ) | ( (lv_exportAll_4_0= '*' ) ) ) )
            // InternalAsmetaL.g:532:3: otherlv_0= 'export' ( ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* ) | ( (lv_exportAll_4_0= '*' ) ) )
            {
            otherlv_0=(Token)match(input,33,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExportClauseAccess().getExportKeyword_0());
              		
            }
            // InternalAsmetaL.g:536:3: ( ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* ) | ( (lv_exportAll_4_0= '*' ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( ((LA15_0>=RULE_ID && LA15_0<=RULE_ENUM_ID)) ) {
                alt15=1;
            }
            else if ( (LA15_0==34) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalAsmetaL.g:537:4: ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* )
                    {
                    // InternalAsmetaL.g:537:4: ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* )
                    // InternalAsmetaL.g:538:5: ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )*
                    {
                    // InternalAsmetaL.g:538:5: ( (lv_exportedList_1_0= ruleextendedName ) )
                    // InternalAsmetaL.g:539:6: (lv_exportedList_1_0= ruleextendedName )
                    {
                    // InternalAsmetaL.g:539:6: (lv_exportedList_1_0= ruleextendedName )
                    // InternalAsmetaL.g:540:7: lv_exportedList_1_0= ruleextendedName
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExportClauseAccess().getExportedListExtendedNameParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_18);
                    lv_exportedList_1_0=ruleextendedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExportClauseRule());
                      							}
                      							add(
                      								current,
                      								"exportedList",
                      								lv_exportedList_1_0,
                      								"org.asmeta.xt.AsmetaL.extendedName");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalAsmetaL.g:557:5: (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )*
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( (LA14_0==31) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    // InternalAsmetaL.g:558:6: otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) )
                    	    {
                    	    otherlv_2=(Token)match(input,31,FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_2, grammarAccess.getExportClauseAccess().getCommaKeyword_1_0_1_0());
                    	      					
                    	    }
                    	    // InternalAsmetaL.g:562:6: ( (lv_exportedList_3_0= ruleextendedName ) )
                    	    // InternalAsmetaL.g:563:7: (lv_exportedList_3_0= ruleextendedName )
                    	    {
                    	    // InternalAsmetaL.g:563:7: (lv_exportedList_3_0= ruleextendedName )
                    	    // InternalAsmetaL.g:564:8: lv_exportedList_3_0= ruleextendedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getExportClauseAccess().getExportedListExtendedNameParserRuleCall_1_0_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_exportedList_3_0=ruleextendedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getExportClauseRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"exportedList",
                    	      									lv_exportedList_3_0,
                    	      									"org.asmeta.xt.AsmetaL.extendedName");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:584:4: ( (lv_exportAll_4_0= '*' ) )
                    {
                    // InternalAsmetaL.g:584:4: ( (lv_exportAll_4_0= '*' ) )
                    // InternalAsmetaL.g:585:5: (lv_exportAll_4_0= '*' )
                    {
                    // InternalAsmetaL.g:585:5: (lv_exportAll_4_0= '*' )
                    // InternalAsmetaL.g:586:6: lv_exportAll_4_0= '*'
                    {
                    lv_exportAll_4_0=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_exportAll_4_0, grammarAccess.getExportClauseAccess().getExportAllAsteriskKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExportClauseRule());
                      						}
                      						setWithLastConsumed(current, "exportAll", lv_exportAll_4_0 != null, "*");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExportClause"


    // $ANTLR start "entryRuleSignature"
    // InternalAsmetaL.g:603:1: entryRuleSignature returns [EObject current=null] : iv_ruleSignature= ruleSignature EOF ;
    public final EObject entryRuleSignature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignature = null;


        try {
            // InternalAsmetaL.g:603:50: (iv_ruleSignature= ruleSignature EOF )
            // InternalAsmetaL.g:604:2: iv_ruleSignature= ruleSignature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignature=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignature"


    // $ANTLR start "ruleSignature"
    // InternalAsmetaL.g:610:1: ruleSignature returns [EObject current=null] : ( () otherlv_1= 'signature' otherlv_2= ':' ( (lv_domain_3_0= ruleDomain ) )* ( (lv_function_4_0= ruleFunction ) )* ) ;
    public final EObject ruleSignature() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_domain_3_0 = null;

        EObject lv_function_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:616:2: ( ( () otherlv_1= 'signature' otherlv_2= ':' ( (lv_domain_3_0= ruleDomain ) )* ( (lv_function_4_0= ruleFunction ) )* ) )
            // InternalAsmetaL.g:617:2: ( () otherlv_1= 'signature' otherlv_2= ':' ( (lv_domain_3_0= ruleDomain ) )* ( (lv_function_4_0= ruleFunction ) )* )
            {
            // InternalAsmetaL.g:617:2: ( () otherlv_1= 'signature' otherlv_2= ':' ( (lv_domain_3_0= ruleDomain ) )* ( (lv_function_4_0= ruleFunction ) )* )
            // InternalAsmetaL.g:618:3: () otherlv_1= 'signature' otherlv_2= ':' ( (lv_domain_3_0= ruleDomain ) )* ( (lv_function_4_0= ruleFunction ) )*
            {
            // InternalAsmetaL.g:618:3: ()
            // InternalAsmetaL.g:619:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSignatureAccess().getSignatureAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,35,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSignatureAccess().getSignatureKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,36,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSignatureAccess().getColonKeyword_2());
              		
            }
            // InternalAsmetaL.g:636:3: ( (lv_domain_3_0= ruleDomain ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==57) ) {
                    int LA16_2 = input.LA(2);

                    if ( (LA16_2==38||LA16_2==69) ) {
                        alt16=1;
                    }


                }
                else if ( (LA16_0==38||(LA16_0>=59 && LA16_0<=60)||LA16_0==69||LA16_0==71||(LA16_0>=75 && LA16_0<=80)) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalAsmetaL.g:637:4: (lv_domain_3_0= ruleDomain )
            	    {
            	    // InternalAsmetaL.g:637:4: (lv_domain_3_0= ruleDomain )
            	    // InternalAsmetaL.g:638:5: lv_domain_3_0= ruleDomain
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSignatureAccess().getDomainDomainParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_domain_3_0=ruleDomain();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSignatureRule());
            	      					}
            	      					add(
            	      						current,
            	      						"domain",
            	      						lv_domain_3_0,
            	      						"org.asmeta.xt.AsmetaL.Domain");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

            // InternalAsmetaL.g:655:3: ( (lv_function_4_0= ruleFunction ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==57||LA17_0==81||(LA17_0>=83 && LA17_0<=88)) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalAsmetaL.g:656:4: (lv_function_4_0= ruleFunction )
            	    {
            	    // InternalAsmetaL.g:656:4: (lv_function_4_0= ruleFunction )
            	    // InternalAsmetaL.g:657:5: lv_function_4_0= ruleFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSignatureAccess().getFunctionFunctionParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_function_4_0=ruleFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSignatureRule());
            	      					}
            	      					add(
            	      						current,
            	      						"function",
            	      						lv_function_4_0,
            	      						"org.asmeta.xt.AsmetaL.Function");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignature"


    // $ANTLR start "entryRuleInitialization"
    // InternalAsmetaL.g:678:1: entryRuleInitialization returns [EObject current=null] : iv_ruleInitialization= ruleInitialization EOF ;
    public final EObject entryRuleInitialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitialization = null;


        try {
            // InternalAsmetaL.g:678:55: (iv_ruleInitialization= ruleInitialization EOF )
            // InternalAsmetaL.g:679:2: iv_ruleInitialization= ruleInitialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInitialization=ruleInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitialization"


    // $ANTLR start "ruleInitialization"
    // InternalAsmetaL.g:685:1: ruleInitialization returns [EObject current=null] : (otherlv_0= 'init' ( (lv_name_1_0= ruleextendedName ) ) otherlv_2= ':' ( (lv_domainInitialization_3_0= ruleDomainInitialization ) )* ( (lv_functionInitialization_4_0= ruleFunctionInitialization ) )* ( (lv_agentInitialization_5_0= ruleAgentInitialization ) )* ) ;
    public final EObject ruleInitialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_domainInitialization_3_0 = null;

        EObject lv_functionInitialization_4_0 = null;

        EObject lv_agentInitialization_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:691:2: ( (otherlv_0= 'init' ( (lv_name_1_0= ruleextendedName ) ) otherlv_2= ':' ( (lv_domainInitialization_3_0= ruleDomainInitialization ) )* ( (lv_functionInitialization_4_0= ruleFunctionInitialization ) )* ( (lv_agentInitialization_5_0= ruleAgentInitialization ) )* ) )
            // InternalAsmetaL.g:692:2: (otherlv_0= 'init' ( (lv_name_1_0= ruleextendedName ) ) otherlv_2= ':' ( (lv_domainInitialization_3_0= ruleDomainInitialization ) )* ( (lv_functionInitialization_4_0= ruleFunctionInitialization ) )* ( (lv_agentInitialization_5_0= ruleAgentInitialization ) )* )
            {
            // InternalAsmetaL.g:692:2: (otherlv_0= 'init' ( (lv_name_1_0= ruleextendedName ) ) otherlv_2= ':' ( (lv_domainInitialization_3_0= ruleDomainInitialization ) )* ( (lv_functionInitialization_4_0= ruleFunctionInitialization ) )* ( (lv_agentInitialization_5_0= ruleAgentInitialization ) )* )
            // InternalAsmetaL.g:693:3: otherlv_0= 'init' ( (lv_name_1_0= ruleextendedName ) ) otherlv_2= ':' ( (lv_domainInitialization_3_0= ruleDomainInitialization ) )* ( (lv_functionInitialization_4_0= ruleFunctionInitialization ) )* ( (lv_agentInitialization_5_0= ruleAgentInitialization ) )*
            {
            otherlv_0=(Token)match(input,37,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getInitializationAccess().getInitKeyword_0());
              		
            }
            // InternalAsmetaL.g:697:3: ( (lv_name_1_0= ruleextendedName ) )
            // InternalAsmetaL.g:698:4: (lv_name_1_0= ruleextendedName )
            {
            // InternalAsmetaL.g:698:4: (lv_name_1_0= ruleextendedName )
            // InternalAsmetaL.g:699:5: lv_name_1_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInitializationAccess().getNameExtendedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_1_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInitializationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,36,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getInitializationAccess().getColonKeyword_2());
              		
            }
            // InternalAsmetaL.g:720:3: ( (lv_domainInitialization_3_0= ruleDomainInitialization ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==38) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // InternalAsmetaL.g:721:4: (lv_domainInitialization_3_0= ruleDomainInitialization )
            	    {
            	    // InternalAsmetaL.g:721:4: (lv_domainInitialization_3_0= ruleDomainInitialization )
            	    // InternalAsmetaL.g:722:5: lv_domainInitialization_3_0= ruleDomainInitialization
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getInitializationAccess().getDomainInitializationDomainInitializationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_domainInitialization_3_0=ruleDomainInitialization();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getInitializationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"domainInitialization",
            	      						lv_domainInitialization_3_0,
            	      						"org.asmeta.xt.AsmetaL.DomainInitialization");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

            // InternalAsmetaL.g:739:3: ( (lv_functionInitialization_4_0= ruleFunctionInitialization ) )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( (LA19_0==40) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // InternalAsmetaL.g:740:4: (lv_functionInitialization_4_0= ruleFunctionInitialization )
            	    {
            	    // InternalAsmetaL.g:740:4: (lv_functionInitialization_4_0= ruleFunctionInitialization )
            	    // InternalAsmetaL.g:741:5: lv_functionInitialization_4_0= ruleFunctionInitialization
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getInitializationAccess().getFunctionInitializationFunctionInitializationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_functionInitialization_4_0=ruleFunctionInitialization();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getInitializationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"functionInitialization",
            	      						lv_functionInitialization_4_0,
            	      						"org.asmeta.xt.AsmetaL.FunctionInitialization");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);

            // InternalAsmetaL.g:758:3: ( (lv_agentInitialization_5_0= ruleAgentInitialization ) )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==42) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // InternalAsmetaL.g:759:4: (lv_agentInitialization_5_0= ruleAgentInitialization )
            	    {
            	    // InternalAsmetaL.g:759:4: (lv_agentInitialization_5_0= ruleAgentInitialization )
            	    // InternalAsmetaL.g:760:5: lv_agentInitialization_5_0= ruleAgentInitialization
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getInitializationAccess().getAgentInitializationAgentInitializationParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_agentInitialization_5_0=ruleAgentInitialization();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getInitializationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"agentInitialization",
            	      						lv_agentInitialization_5_0,
            	      						"org.asmeta.xt.AsmetaL.AgentInitialization");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitialization"


    // $ANTLR start "entryRuleDomainInitialization"
    // InternalAsmetaL.g:781:1: entryRuleDomainInitialization returns [EObject current=null] : iv_ruleDomainInitialization= ruleDomainInitialization EOF ;
    public final EObject entryRuleDomainInitialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDomainInitialization = null;


        try {
            // InternalAsmetaL.g:781:61: (iv_ruleDomainInitialization= ruleDomainInitialization EOF )
            // InternalAsmetaL.g:782:2: iv_ruleDomainInitialization= ruleDomainInitialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDomainInitializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDomainInitialization=ruleDomainInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDomainInitialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDomainInitialization"


    // $ANTLR start "ruleDomainInitialization"
    // InternalAsmetaL.g:788:1: ruleDomainInitialization returns [EObject current=null] : (otherlv_0= 'domain' ( (lv_initializedDomain_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) ) ;
    public final EObject ruleDomainInitialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_initializedDomain_1_0=null;
        Token otherlv_2=null;
        EObject lv_body_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:794:2: ( (otherlv_0= 'domain' ( (lv_initializedDomain_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:795:2: (otherlv_0= 'domain' ( (lv_initializedDomain_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:795:2: (otherlv_0= 'domain' ( (lv_initializedDomain_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) )
            // InternalAsmetaL.g:796:3: otherlv_0= 'domain' ( (lv_initializedDomain_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,38,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDomainInitializationAccess().getDomainKeyword_0());
              		
            }
            // InternalAsmetaL.g:800:3: ( (lv_initializedDomain_1_0= RULE_ID ) )
            // InternalAsmetaL.g:801:4: (lv_initializedDomain_1_0= RULE_ID )
            {
            // InternalAsmetaL.g:801:4: (lv_initializedDomain_1_0= RULE_ID )
            // InternalAsmetaL.g:802:5: lv_initializedDomain_1_0= RULE_ID
            {
            lv_initializedDomain_1_0=(Token)match(input,RULE_ID,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_initializedDomain_1_0, grammarAccess.getDomainInitializationAccess().getInitializedDomainIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDomainInitializationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"initializedDomain",
              						lv_initializedDomain_1_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDomainInitializationAccess().getEqualsSignKeyword_2());
              		
            }
            // InternalAsmetaL.g:822:3: ( (lv_body_3_0= ruleTerm ) )
            // InternalAsmetaL.g:823:4: (lv_body_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:823:4: (lv_body_3_0= ruleTerm )
            // InternalAsmetaL.g:824:5: lv_body_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDomainInitializationAccess().getBodyTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDomainInitializationRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDomainInitialization"


    // $ANTLR start "entryRuleFunctionInitialization"
    // InternalAsmetaL.g:845:1: entryRuleFunctionInitialization returns [EObject current=null] : iv_ruleFunctionInitialization= ruleFunctionInitialization EOF ;
    public final EObject entryRuleFunctionInitialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionInitialization = null;


        try {
            // InternalAsmetaL.g:845:63: (iv_ruleFunctionInitialization= ruleFunctionInitialization EOF )
            // InternalAsmetaL.g:846:2: iv_ruleFunctionInitialization= ruleFunctionInitialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionInitializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionInitialization=ruleFunctionInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionInitialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionInitialization"


    // $ANTLR start "ruleFunctionInitialization"
    // InternalAsmetaL.g:852:1: ruleFunctionInitialization returns [EObject current=null] : (otherlv_0= 'function' ( (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) ) ;
    public final EObject ruleFunctionInitialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_inizializedFunctionName_1_0 = null;

        AntlrDatatypeRuleToken lv_variables_3_0 = null;

        EObject lv_domain_5_0 = null;

        AntlrDatatypeRuleToken lv_variables_7_0 = null;

        EObject lv_domain_9_0 = null;

        EObject lv_body_12_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:858:2: ( (otherlv_0= 'function' ( (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:859:2: (otherlv_0= 'function' ( (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:859:2: (otherlv_0= 'function' ( (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) )
            // InternalAsmetaL.g:860:3: otherlv_0= 'function' ( (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,40,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionInitializationAccess().getFunctionKeyword_0());
              		
            }
            // InternalAsmetaL.g:864:3: ( (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction ) )
            // InternalAsmetaL.g:865:4: (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction )
            {
            // InternalAsmetaL.g:865:4: (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction )
            // InternalAsmetaL.g:866:5: lv_inizializedFunctionName_1_0= ruleextendedNameForFunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionInitializationAccess().getInizializedFunctionNameExtendedNameForFunctionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_29);
            lv_inizializedFunctionName_1_0=ruleextendedNameForFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
              					}
              					set(
              						current,
              						"inizializedFunctionName",
              						lv_inizializedFunctionName_1_0,
              						"org.asmeta.xt.AsmetaL.extendedNameForFunction");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:883:3: (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==30) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalAsmetaL.g:884:4: otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')'
                    {
                    otherlv_2=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFunctionInitializationAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalAsmetaL.g:888:4: ( (lv_variables_3_0= ruleID_VARIABLE ) )
                    // InternalAsmetaL.g:889:5: (lv_variables_3_0= ruleID_VARIABLE )
                    {
                    // InternalAsmetaL.g:889:5: (lv_variables_3_0= ruleID_VARIABLE )
                    // InternalAsmetaL.g:890:6: lv_variables_3_0= ruleID_VARIABLE
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionInitializationAccess().getVariablesID_VARIABLEParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_variables_3_0=ruleID_VARIABLE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_3_0,
                      							"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFunctionInitializationAccess().getInKeyword_2_2());
                      			
                    }
                    // InternalAsmetaL.g:911:4: ( (lv_domain_5_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:912:5: (lv_domain_5_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:912:5: (lv_domain_5_0= rulegetDomainByID )
                    // InternalAsmetaL.g:913:6: lv_domain_5_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionInitializationAccess().getDomainGetDomainByIDParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_domain_5_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_5_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:930:4: (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )*
                    loop21:
                    do {
                        int alt21=2;
                        int LA21_0 = input.LA(1);

                        if ( (LA21_0==31) ) {
                            alt21=1;
                        }


                        switch (alt21) {
                    	case 1 :
                    	    // InternalAsmetaL.g:931:5: otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) )
                    	    {
                    	    otherlv_6=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getFunctionInitializationAccess().getCommaKeyword_2_4_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:935:5: ( (lv_variables_7_0= ruleID_VARIABLE ) )
                    	    // InternalAsmetaL.g:936:6: (lv_variables_7_0= ruleID_VARIABLE )
                    	    {
                    	    // InternalAsmetaL.g:936:6: (lv_variables_7_0= ruleID_VARIABLE )
                    	    // InternalAsmetaL.g:937:7: lv_variables_7_0= ruleID_VARIABLE
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionInitializationAccess().getVariablesID_VARIABLEParserRuleCall_2_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_31);
                    	    lv_variables_7_0=ruleID_VARIABLE();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_7_0,
                    	      								"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_8=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getFunctionInitializationAccess().getInKeyword_2_4_2());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:958:5: ( (lv_domain_9_0= rulegetDomainByID ) )
                    	    // InternalAsmetaL.g:959:6: (lv_domain_9_0= rulegetDomainByID )
                    	    {
                    	    // InternalAsmetaL.g:959:6: (lv_domain_9_0= rulegetDomainByID )
                    	    // InternalAsmetaL.g:960:7: lv_domain_9_0= rulegetDomainByID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionInitializationAccess().getDomainGetDomainByIDParserRuleCall_2_4_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_domain_9_0=rulegetDomainByID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_9_0,
                    	      								"org.asmeta.xt.AsmetaL.getDomainByID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop21;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,32,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getFunctionInitializationAccess().getRightParenthesisKeyword_2_5());
                      			
                    }

                    }
                    break;

            }

            otherlv_11=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getFunctionInitializationAccess().getEqualsSignKeyword_3());
              		
            }
            // InternalAsmetaL.g:987:3: ( (lv_body_12_0= ruleTerm ) )
            // InternalAsmetaL.g:988:4: (lv_body_12_0= ruleTerm )
            {
            // InternalAsmetaL.g:988:4: (lv_body_12_0= ruleTerm )
            // InternalAsmetaL.g:989:5: lv_body_12_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionInitializationAccess().getBodyTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_12_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_12_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionInitialization"


    // $ANTLR start "entryRuleAgentInitialization"
    // InternalAsmetaL.g:1010:1: entryRuleAgentInitialization returns [EObject current=null] : iv_ruleAgentInitialization= ruleAgentInitialization EOF ;
    public final EObject entryRuleAgentInitialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAgentInitialization = null;


        try {
            // InternalAsmetaL.g:1010:60: (iv_ruleAgentInitialization= ruleAgentInitialization EOF )
            // InternalAsmetaL.g:1011:2: iv_ruleAgentInitialization= ruleAgentInitialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAgentInitializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAgentInitialization=ruleAgentInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAgentInitialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAgentInitialization"


    // $ANTLR start "ruleAgentInitialization"
    // InternalAsmetaL.g:1017:1: ruleAgentInitialization returns [EObject current=null] : (otherlv_0= 'agent' ( ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) ) ) otherlv_2= ':' ( (lv_program_3_0= ruleMacroCallRule ) ) ) ;
    public final EObject ruleAgentInitialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_domainName_1_1=null;
        Token lv_domainName_1_2=null;
        Token otherlv_2=null;
        EObject lv_program_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1023:2: ( (otherlv_0= 'agent' ( ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) ) ) otherlv_2= ':' ( (lv_program_3_0= ruleMacroCallRule ) ) ) )
            // InternalAsmetaL.g:1024:2: (otherlv_0= 'agent' ( ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) ) ) otherlv_2= ':' ( (lv_program_3_0= ruleMacroCallRule ) ) )
            {
            // InternalAsmetaL.g:1024:2: (otherlv_0= 'agent' ( ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) ) ) otherlv_2= ':' ( (lv_program_3_0= ruleMacroCallRule ) ) )
            // InternalAsmetaL.g:1025:3: otherlv_0= 'agent' ( ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) ) ) otherlv_2= ':' ( (lv_program_3_0= ruleMacroCallRule ) )
            {
            otherlv_0=(Token)match(input,42,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAgentInitializationAccess().getAgentKeyword_0());
              		
            }
            // InternalAsmetaL.g:1029:3: ( ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) ) )
            // InternalAsmetaL.g:1030:4: ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) )
            {
            // InternalAsmetaL.g:1030:4: ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) )
            // InternalAsmetaL.g:1031:5: (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' )
            {
            // InternalAsmetaL.g:1031:5: (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ID) ) {
                alt23=1;
            }
            else if ( (LA23_0==43) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalAsmetaL.g:1032:6: lv_domainName_1_1= RULE_ID
                    {
                    lv_domainName_1_1=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_domainName_1_1, grammarAccess.getAgentInitializationAccess().getDomainNameIDTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAgentInitializationRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"domainName",
                      							lv_domainName_1_1,
                      							"org.asmeta.xt.AsmetaL.ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:1047:6: lv_domainName_1_2= 'Agent'
                    {
                    lv_domainName_1_2=(Token)match(input,43,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_domainName_1_2, grammarAccess.getAgentInitializationAccess().getDomainNameAgentKeyword_1_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAgentInitializationRule());
                      						}
                      						setWithLastConsumed(current, "domainName", lv_domainName_1_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_2=(Token)match(input,36,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAgentInitializationAccess().getColonKeyword_2());
              		
            }
            // InternalAsmetaL.g:1064:3: ( (lv_program_3_0= ruleMacroCallRule ) )
            // InternalAsmetaL.g:1065:4: (lv_program_3_0= ruleMacroCallRule )
            {
            // InternalAsmetaL.g:1065:4: (lv_program_3_0= ruleMacroCallRule )
            // InternalAsmetaL.g:1066:5: lv_program_3_0= ruleMacroCallRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAgentInitializationAccess().getProgramMacroCallRuleParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_program_3_0=ruleMacroCallRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAgentInitializationRule());
              					}
              					set(
              						current,
              						"program",
              						lv_program_3_0,
              						"org.asmeta.xt.AsmetaL.MacroCallRule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAgentInitialization"


    // $ANTLR start "entryRuleBody"
    // InternalAsmetaL.g:1087:1: entryRuleBody returns [EObject current=null] : iv_ruleBody= ruleBody EOF ;
    public final EObject entryRuleBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBody = null;


        try {
            // InternalAsmetaL.g:1087:45: (iv_ruleBody= ruleBody EOF )
            // InternalAsmetaL.g:1088:2: iv_ruleBody= ruleBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBody=ruleBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBody"


    // $ANTLR start "ruleBody"
    // InternalAsmetaL.g:1094:1: ruleBody returns [EObject current=null] : ( () otherlv_1= 'definitions' otherlv_2= ':' ( (lv_domainDefinition_3_0= ruleDomainDefinition ) )* ( (lv_functionDefinition_4_0= ruleFunctionDefinition ) )* ( (lv_ruleDeclaration_5_0= ruleRuleDeclaration ) )* ( (lv_invariantConstraint_6_0= ruleInvariantConstraint ) )* ( (lv_fairnessConstraint_7_0= ruleFairnessConstraint ) )* ( (lv_property_8_0= ruleProperty ) )* ) ;
    public final EObject ruleBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_domainDefinition_3_0 = null;

        EObject lv_functionDefinition_4_0 = null;

        EObject lv_ruleDeclaration_5_0 = null;

        EObject lv_invariantConstraint_6_0 = null;

        EObject lv_fairnessConstraint_7_0 = null;

        EObject lv_property_8_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1100:2: ( ( () otherlv_1= 'definitions' otherlv_2= ':' ( (lv_domainDefinition_3_0= ruleDomainDefinition ) )* ( (lv_functionDefinition_4_0= ruleFunctionDefinition ) )* ( (lv_ruleDeclaration_5_0= ruleRuleDeclaration ) )* ( (lv_invariantConstraint_6_0= ruleInvariantConstraint ) )* ( (lv_fairnessConstraint_7_0= ruleFairnessConstraint ) )* ( (lv_property_8_0= ruleProperty ) )* ) )
            // InternalAsmetaL.g:1101:2: ( () otherlv_1= 'definitions' otherlv_2= ':' ( (lv_domainDefinition_3_0= ruleDomainDefinition ) )* ( (lv_functionDefinition_4_0= ruleFunctionDefinition ) )* ( (lv_ruleDeclaration_5_0= ruleRuleDeclaration ) )* ( (lv_invariantConstraint_6_0= ruleInvariantConstraint ) )* ( (lv_fairnessConstraint_7_0= ruleFairnessConstraint ) )* ( (lv_property_8_0= ruleProperty ) )* )
            {
            // InternalAsmetaL.g:1101:2: ( () otherlv_1= 'definitions' otherlv_2= ':' ( (lv_domainDefinition_3_0= ruleDomainDefinition ) )* ( (lv_functionDefinition_4_0= ruleFunctionDefinition ) )* ( (lv_ruleDeclaration_5_0= ruleRuleDeclaration ) )* ( (lv_invariantConstraint_6_0= ruleInvariantConstraint ) )* ( (lv_fairnessConstraint_7_0= ruleFairnessConstraint ) )* ( (lv_property_8_0= ruleProperty ) )* )
            // InternalAsmetaL.g:1102:3: () otherlv_1= 'definitions' otherlv_2= ':' ( (lv_domainDefinition_3_0= ruleDomainDefinition ) )* ( (lv_functionDefinition_4_0= ruleFunctionDefinition ) )* ( (lv_ruleDeclaration_5_0= ruleRuleDeclaration ) )* ( (lv_invariantConstraint_6_0= ruleInvariantConstraint ) )* ( (lv_fairnessConstraint_7_0= ruleFairnessConstraint ) )* ( (lv_property_8_0= ruleProperty ) )*
            {
            // InternalAsmetaL.g:1102:3: ()
            // InternalAsmetaL.g:1103:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBodyAccess().getBodyAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,44,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBodyAccess().getDefinitionsKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,36,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBodyAccess().getColonKeyword_2());
              		
            }
            // InternalAsmetaL.g:1120:3: ( (lv_domainDefinition_3_0= ruleDomainDefinition ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==38) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalAsmetaL.g:1121:4: (lv_domainDefinition_3_0= ruleDomainDefinition )
            	    {
            	    // InternalAsmetaL.g:1121:4: (lv_domainDefinition_3_0= ruleDomainDefinition )
            	    // InternalAsmetaL.g:1122:5: lv_domainDefinition_3_0= ruleDomainDefinition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBodyAccess().getDomainDefinitionDomainDefinitionParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_domainDefinition_3_0=ruleDomainDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"domainDefinition",
            	      						lv_domainDefinition_3_0,
            	      						"org.asmeta.xt.AsmetaL.DomainDefinition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            // InternalAsmetaL.g:1139:3: ( (lv_functionDefinition_4_0= ruleFunctionDefinition ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==40) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalAsmetaL.g:1140:4: (lv_functionDefinition_4_0= ruleFunctionDefinition )
            	    {
            	    // InternalAsmetaL.g:1140:4: (lv_functionDefinition_4_0= ruleFunctionDefinition )
            	    // InternalAsmetaL.g:1141:5: lv_functionDefinition_4_0= ruleFunctionDefinition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBodyAccess().getFunctionDefinitionFunctionDefinitionParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_functionDefinition_4_0=ruleFunctionDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"functionDefinition",
            	      						lv_functionDefinition_4_0,
            	      						"org.asmeta.xt.AsmetaL.FunctionDefinition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            // InternalAsmetaL.g:1158:3: ( (lv_ruleDeclaration_5_0= ruleRuleDeclaration ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( ((LA26_0>=45 && LA26_0<=47)) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalAsmetaL.g:1159:4: (lv_ruleDeclaration_5_0= ruleRuleDeclaration )
            	    {
            	    // InternalAsmetaL.g:1159:4: (lv_ruleDeclaration_5_0= ruleRuleDeclaration )
            	    // InternalAsmetaL.g:1160:5: lv_ruleDeclaration_5_0= ruleRuleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBodyAccess().getRuleDeclarationRuleDeclarationParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_ruleDeclaration_5_0=ruleRuleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ruleDeclaration",
            	      						lv_ruleDeclaration_5_0,
            	      						"org.asmeta.xt.AsmetaL.RuleDeclaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            // InternalAsmetaL.g:1177:3: ( (lv_invariantConstraint_6_0= ruleInvariantConstraint ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==56) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalAsmetaL.g:1178:4: (lv_invariantConstraint_6_0= ruleInvariantConstraint )
            	    {
            	    // InternalAsmetaL.g:1178:4: (lv_invariantConstraint_6_0= ruleInvariantConstraint )
            	    // InternalAsmetaL.g:1179:5: lv_invariantConstraint_6_0= ruleInvariantConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBodyAccess().getInvariantConstraintInvariantConstraintParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_invariantConstraint_6_0=ruleInvariantConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"invariantConstraint",
            	      						lv_invariantConstraint_6_0,
            	      						"org.asmeta.xt.AsmetaL.InvariantConstraint");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            // InternalAsmetaL.g:1196:3: ( (lv_fairnessConstraint_7_0= ruleFairnessConstraint ) )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( ((LA28_0>=54 && LA28_0<=55)) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalAsmetaL.g:1197:4: (lv_fairnessConstraint_7_0= ruleFairnessConstraint )
            	    {
            	    // InternalAsmetaL.g:1197:4: (lv_fairnessConstraint_7_0= ruleFairnessConstraint )
            	    // InternalAsmetaL.g:1198:5: lv_fairnessConstraint_7_0= ruleFairnessConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBodyAccess().getFairnessConstraintFairnessConstraintParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_fairnessConstraint_7_0=ruleFairnessConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"fairnessConstraint",
            	      						lv_fairnessConstraint_7_0,
            	      						"org.asmeta.xt.AsmetaL.FairnessConstraint");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

            // InternalAsmetaL.g:1215:3: ( (lv_property_8_0= ruleProperty ) )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==48||(LA29_0>=50 && LA29_0<=53)) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalAsmetaL.g:1216:4: (lv_property_8_0= ruleProperty )
            	    {
            	    // InternalAsmetaL.g:1216:4: (lv_property_8_0= ruleProperty )
            	    // InternalAsmetaL.g:1217:5: lv_property_8_0= ruleProperty
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBodyAccess().getPropertyPropertyParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_property_8_0=ruleProperty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"property",
            	      						lv_property_8_0,
            	      						"org.asmeta.xt.AsmetaL.Property");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBody"


    // $ANTLR start "entryRuleDomainDefinition"
    // InternalAsmetaL.g:1238:1: entryRuleDomainDefinition returns [EObject current=null] : iv_ruleDomainDefinition= ruleDomainDefinition EOF ;
    public final EObject entryRuleDomainDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDomainDefinition = null;


        try {
            // InternalAsmetaL.g:1238:57: (iv_ruleDomainDefinition= ruleDomainDefinition EOF )
            // InternalAsmetaL.g:1239:2: iv_ruleDomainDefinition= ruleDomainDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDomainDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDomainDefinition=ruleDomainDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDomainDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDomainDefinition"


    // $ANTLR start "ruleDomainDefinition"
    // InternalAsmetaL.g:1245:1: ruleDomainDefinition returns [EObject current=null] : (otherlv_0= 'domain' ( (lv_definedDomainName_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) ) ;
    public final EObject ruleDomainDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_definedDomainName_1_0=null;
        Token otherlv_2=null;
        EObject lv_body_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1251:2: ( (otherlv_0= 'domain' ( (lv_definedDomainName_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:1252:2: (otherlv_0= 'domain' ( (lv_definedDomainName_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:1252:2: (otherlv_0= 'domain' ( (lv_definedDomainName_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) )
            // InternalAsmetaL.g:1253:3: otherlv_0= 'domain' ( (lv_definedDomainName_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,38,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDomainDefinitionAccess().getDomainKeyword_0());
              		
            }
            // InternalAsmetaL.g:1257:3: ( (lv_definedDomainName_1_0= RULE_ID ) )
            // InternalAsmetaL.g:1258:4: (lv_definedDomainName_1_0= RULE_ID )
            {
            // InternalAsmetaL.g:1258:4: (lv_definedDomainName_1_0= RULE_ID )
            // InternalAsmetaL.g:1259:5: lv_definedDomainName_1_0= RULE_ID
            {
            lv_definedDomainName_1_0=(Token)match(input,RULE_ID,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_definedDomainName_1_0, grammarAccess.getDomainDefinitionAccess().getDefinedDomainNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDomainDefinitionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"definedDomainName",
              						lv_definedDomainName_1_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDomainDefinitionAccess().getEqualsSignKeyword_2());
              		
            }
            // InternalAsmetaL.g:1279:3: ( (lv_body_3_0= ruleTerm ) )
            // InternalAsmetaL.g:1280:4: (lv_body_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:1280:4: (lv_body_3_0= ruleTerm )
            // InternalAsmetaL.g:1281:5: lv_body_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDomainDefinitionAccess().getBodyTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDomainDefinitionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDomainDefinition"


    // $ANTLR start "entryRuleFunctionDefinition"
    // InternalAsmetaL.g:1302:1: entryRuleFunctionDefinition returns [EObject current=null] : iv_ruleFunctionDefinition= ruleFunctionDefinition EOF ;
    public final EObject entryRuleFunctionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDefinition = null;


        try {
            // InternalAsmetaL.g:1302:59: (iv_ruleFunctionDefinition= ruleFunctionDefinition EOF )
            // InternalAsmetaL.g:1303:2: iv_ruleFunctionDefinition= ruleFunctionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDefinition=ruleFunctionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDefinition"


    // $ANTLR start "ruleFunctionDefinition"
    // InternalAsmetaL.g:1309:1: ruleFunctionDefinition returns [EObject current=null] : (otherlv_0= 'function' ( (lv_definedFunctionName_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) ) ;
    public final EObject ruleFunctionDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_definedFunctionName_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_variables_3_0 = null;

        EObject lv_domain_5_0 = null;

        AntlrDatatypeRuleToken lv_variables_7_0 = null;

        EObject lv_domain_9_0 = null;

        EObject lv_body_12_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1315:2: ( (otherlv_0= 'function' ( (lv_definedFunctionName_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:1316:2: (otherlv_0= 'function' ( (lv_definedFunctionName_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:1316:2: (otherlv_0= 'function' ( (lv_definedFunctionName_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) )
            // InternalAsmetaL.g:1317:3: otherlv_0= 'function' ( (lv_definedFunctionName_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,40,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_0());
              		
            }
            // InternalAsmetaL.g:1321:3: ( (lv_definedFunctionName_1_0= RULE_ID ) )
            // InternalAsmetaL.g:1322:4: (lv_definedFunctionName_1_0= RULE_ID )
            {
            // InternalAsmetaL.g:1322:4: (lv_definedFunctionName_1_0= RULE_ID )
            // InternalAsmetaL.g:1323:5: lv_definedFunctionName_1_0= RULE_ID
            {
            lv_definedFunctionName_1_0=(Token)match(input,RULE_ID,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_definedFunctionName_1_0, grammarAccess.getFunctionDefinitionAccess().getDefinedFunctionNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionDefinitionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"definedFunctionName",
              						lv_definedFunctionName_1_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            // InternalAsmetaL.g:1339:3: (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==30) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalAsmetaL.g:1340:4: otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')'
                    {
                    otherlv_2=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalAsmetaL.g:1344:4: ( (lv_variables_3_0= ruleID_VARIABLE ) )
                    // InternalAsmetaL.g:1345:5: (lv_variables_3_0= ruleID_VARIABLE )
                    {
                    // InternalAsmetaL.g:1345:5: (lv_variables_3_0= ruleID_VARIABLE )
                    // InternalAsmetaL.g:1346:6: lv_variables_3_0= ruleID_VARIABLE
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getVariablesID_VARIABLEParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_variables_3_0=ruleID_VARIABLE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_3_0,
                      							"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFunctionDefinitionAccess().getInKeyword_2_2());
                      			
                    }
                    // InternalAsmetaL.g:1367:4: ( (lv_domain_5_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:1368:5: (lv_domain_5_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:1368:5: (lv_domain_5_0= rulegetDomainByID )
                    // InternalAsmetaL.g:1369:6: lv_domain_5_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getDomainGetDomainByIDParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_domain_5_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_5_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:1386:4: (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )*
                    loop30:
                    do {
                        int alt30=2;
                        int LA30_0 = input.LA(1);

                        if ( (LA30_0==31) ) {
                            alt30=1;
                        }


                        switch (alt30) {
                    	case 1 :
                    	    // InternalAsmetaL.g:1387:5: otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) )
                    	    {
                    	    otherlv_6=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_2_4_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:1391:5: ( (lv_variables_7_0= ruleID_VARIABLE ) )
                    	    // InternalAsmetaL.g:1392:6: (lv_variables_7_0= ruleID_VARIABLE )
                    	    {
                    	    // InternalAsmetaL.g:1392:6: (lv_variables_7_0= ruleID_VARIABLE )
                    	    // InternalAsmetaL.g:1393:7: lv_variables_7_0= ruleID_VARIABLE
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getVariablesID_VARIABLEParserRuleCall_2_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_31);
                    	    lv_variables_7_0=ruleID_VARIABLE();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_7_0,
                    	      								"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_8=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getFunctionDefinitionAccess().getInKeyword_2_4_2());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:1414:5: ( (lv_domain_9_0= rulegetDomainByID ) )
                    	    // InternalAsmetaL.g:1415:6: (lv_domain_9_0= rulegetDomainByID )
                    	    {
                    	    // InternalAsmetaL.g:1415:6: (lv_domain_9_0= rulegetDomainByID )
                    	    // InternalAsmetaL.g:1416:7: lv_domain_9_0= rulegetDomainByID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getDomainGetDomainByIDParserRuleCall_2_4_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_domain_9_0=rulegetDomainByID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_9_0,
                    	      								"org.asmeta.xt.AsmetaL.getDomainByID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop30;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,32,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_2_5());
                      			
                    }

                    }
                    break;

            }

            otherlv_11=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getFunctionDefinitionAccess().getEqualsSignKeyword_3());
              		
            }
            // InternalAsmetaL.g:1443:3: ( (lv_body_12_0= ruleTerm ) )
            // InternalAsmetaL.g:1444:4: (lv_body_12_0= ruleTerm )
            {
            // InternalAsmetaL.g:1444:4: (lv_body_12_0= ruleTerm )
            // InternalAsmetaL.g:1445:5: lv_body_12_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getBodyTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_12_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_12_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDefinition"


    // $ANTLR start "entryRuleRuleDeclaration"
    // InternalAsmetaL.g:1466:1: entryRuleRuleDeclaration returns [EObject current=null] : iv_ruleRuleDeclaration= ruleRuleDeclaration EOF ;
    public final EObject entryRuleRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRuleDeclaration = null;


        try {
            // InternalAsmetaL.g:1466:56: (iv_ruleRuleDeclaration= ruleRuleDeclaration EOF )
            // InternalAsmetaL.g:1467:2: iv_ruleRuleDeclaration= ruleRuleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRuleDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRuleDeclaration=ruleRuleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRuleDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRuleDeclaration"


    // $ANTLR start "ruleRuleDeclaration"
    // InternalAsmetaL.g:1473:1: ruleRuleDeclaration returns [EObject current=null] : (this_MacroDeclaration_0= ruleMacroDeclaration | this_TurboDeclaration_1= ruleTurboDeclaration ) ;
    public final EObject ruleRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_MacroDeclaration_0 = null;

        EObject this_TurboDeclaration_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1479:2: ( (this_MacroDeclaration_0= ruleMacroDeclaration | this_TurboDeclaration_1= ruleTurboDeclaration ) )
            // InternalAsmetaL.g:1480:2: (this_MacroDeclaration_0= ruleMacroDeclaration | this_TurboDeclaration_1= ruleTurboDeclaration )
            {
            // InternalAsmetaL.g:1480:2: (this_MacroDeclaration_0= ruleMacroDeclaration | this_TurboDeclaration_1= ruleTurboDeclaration )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( ((LA32_0>=45 && LA32_0<=46)) ) {
                alt32=1;
            }
            else if ( (LA32_0==47) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalAsmetaL.g:1481:3: this_MacroDeclaration_0= ruleMacroDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleDeclarationAccess().getMacroDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MacroDeclaration_0=ruleMacroDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MacroDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:1493:3: this_TurboDeclaration_1= ruleTurboDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleDeclarationAccess().getTurboDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TurboDeclaration_1=ruleTurboDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TurboDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRuleDeclaration"


    // $ANTLR start "entryRuleMacroDeclaration"
    // InternalAsmetaL.g:1508:1: entryRuleMacroDeclaration returns [EObject current=null] : iv_ruleMacroDeclaration= ruleMacroDeclaration EOF ;
    public final EObject entryRuleMacroDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMacroDeclaration = null;


        try {
            // InternalAsmetaL.g:1508:57: (iv_ruleMacroDeclaration= ruleMacroDeclaration EOF )
            // InternalAsmetaL.g:1509:2: iv_ruleMacroDeclaration= ruleMacroDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMacroDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMacroDeclaration=ruleMacroDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMacroDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMacroDeclaration"


    // $ANTLR start "ruleMacroDeclaration"
    // InternalAsmetaL.g:1515:1: ruleMacroDeclaration returns [EObject current=null] : ( (otherlv_0= 'macro' )? otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) ) ;
    public final EObject ruleMacroDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        AntlrDatatypeRuleToken lv_variables_4_0 = null;

        EObject lv_domain_6_0 = null;

        AntlrDatatypeRuleToken lv_variables_8_0 = null;

        EObject lv_domain_10_0 = null;

        EObject lv_returnedDomain_13_0 = null;

        EObject lv_ruleBody_15_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1521:2: ( ( (otherlv_0= 'macro' )? otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:1522:2: ( (otherlv_0= 'macro' )? otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:1522:2: ( (otherlv_0= 'macro' )? otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) )
            // InternalAsmetaL.g:1523:3: (otherlv_0= 'macro' )? otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) )
            {
            // InternalAsmetaL.g:1523:3: (otherlv_0= 'macro' )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==45) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalAsmetaL.g:1524:4: otherlv_0= 'macro'
                    {
                    otherlv_0=(Token)match(input,45,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getMacroDeclarationAccess().getMacroKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,46,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMacroDeclarationAccess().getRuleKeyword_1());
              		
            }
            // InternalAsmetaL.g:1533:3: ( (lv_name_2_0= RULE_RULE_ID ) )
            // InternalAsmetaL.g:1534:4: (lv_name_2_0= RULE_RULE_ID )
            {
            // InternalAsmetaL.g:1534:4: (lv_name_2_0= RULE_RULE_ID )
            // InternalAsmetaL.g:1535:5: lv_name_2_0= RULE_RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_RULE_ID,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getMacroDeclarationAccess().getNameRULE_IDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMacroDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.RULE_ID");
              				
            }

            }


            }

            // InternalAsmetaL.g:1551:3: (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==30) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalAsmetaL.g:1552:4: otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')'
                    {
                    otherlv_3=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getMacroDeclarationAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalAsmetaL.g:1556:4: ( (lv_variables_4_0= ruleID_VARIABLE ) )
                    // InternalAsmetaL.g:1557:5: (lv_variables_4_0= ruleID_VARIABLE )
                    {
                    // InternalAsmetaL.g:1557:5: (lv_variables_4_0= ruleID_VARIABLE )
                    // InternalAsmetaL.g:1558:6: lv_variables_4_0= ruleID_VARIABLE
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMacroDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_variables_4_0=ruleID_VARIABLE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_4_0,
                      							"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getMacroDeclarationAccess().getInKeyword_3_2());
                      			
                    }
                    // InternalAsmetaL.g:1579:4: ( (lv_domain_6_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:1580:5: (lv_domain_6_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:1580:5: (lv_domain_6_0= rulegetDomainByID )
                    // InternalAsmetaL.g:1581:6: lv_domain_6_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMacroDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_3_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_domain_6_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_6_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:1598:4: (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )*
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( (LA34_0==31) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // InternalAsmetaL.g:1599:5: otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) )
                    	    {
                    	    otherlv_7=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getMacroDeclarationAccess().getCommaKeyword_3_4_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:1603:5: ( (lv_variables_8_0= ruleID_VARIABLE ) )
                    	    // InternalAsmetaL.g:1604:6: (lv_variables_8_0= ruleID_VARIABLE )
                    	    {
                    	    // InternalAsmetaL.g:1604:6: (lv_variables_8_0= ruleID_VARIABLE )
                    	    // InternalAsmetaL.g:1605:7: lv_variables_8_0= ruleID_VARIABLE
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMacroDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_31);
                    	    lv_variables_8_0=ruleID_VARIABLE();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_8_0,
                    	      								"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_9=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getMacroDeclarationAccess().getInKeyword_3_4_2());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:1626:5: ( (lv_domain_10_0= rulegetDomainByID ) )
                    	    // InternalAsmetaL.g:1627:6: (lv_domain_10_0= rulegetDomainByID )
                    	    {
                    	    // InternalAsmetaL.g:1627:6: (lv_domain_10_0= rulegetDomainByID )
                    	    // InternalAsmetaL.g:1628:7: lv_domain_10_0= rulegetDomainByID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMacroDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_4_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_domain_10_0=rulegetDomainByID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_10_0,
                    	      								"org.asmeta.xt.AsmetaL.getDomainByID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop34;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,32,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMacroDeclarationAccess().getRightParenthesisKeyword_3_5());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:1651:3: (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==41) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalAsmetaL.g:1652:4: otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) )
                    {
                    otherlv_12=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getMacroDeclarationAccess().getInKeyword_4_0());
                      			
                    }
                    // InternalAsmetaL.g:1656:4: ( (lv_returnedDomain_13_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:1657:5: (lv_returnedDomain_13_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:1657:5: (lv_returnedDomain_13_0= rulegetDomainByID )
                    // InternalAsmetaL.g:1658:6: lv_returnedDomain_13_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMacroDeclarationAccess().getReturnedDomainGetDomainByIDParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_26);
                    lv_returnedDomain_13_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"returnedDomain",
                      							lv_returnedDomain_13_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_14=(Token)match(input,39,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getMacroDeclarationAccess().getEqualsSignKeyword_5());
              		
            }
            // InternalAsmetaL.g:1680:3: ( (lv_ruleBody_15_0= ruleRule ) )
            // InternalAsmetaL.g:1681:4: (lv_ruleBody_15_0= ruleRule )
            {
            // InternalAsmetaL.g:1681:4: (lv_ruleBody_15_0= ruleRule )
            // InternalAsmetaL.g:1682:5: lv_ruleBody_15_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMacroDeclarationAccess().getRuleBodyRuleParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ruleBody_15_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
              					}
              					set(
              						current,
              						"ruleBody",
              						lv_ruleBody_15_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMacroDeclaration"


    // $ANTLR start "entryRuleTurboDeclaration"
    // InternalAsmetaL.g:1703:1: entryRuleTurboDeclaration returns [EObject current=null] : iv_ruleTurboDeclaration= ruleTurboDeclaration EOF ;
    public final EObject entryRuleTurboDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTurboDeclaration = null;


        try {
            // InternalAsmetaL.g:1703:57: (iv_ruleTurboDeclaration= ruleTurboDeclaration EOF )
            // InternalAsmetaL.g:1704:2: iv_ruleTurboDeclaration= ruleTurboDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTurboDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTurboDeclaration=ruleTurboDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTurboDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTurboDeclaration"


    // $ANTLR start "ruleTurboDeclaration"
    // InternalAsmetaL.g:1710:1: ruleTurboDeclaration returns [EObject current=null] : (otherlv_0= 'turbo' otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) ) ;
    public final EObject ruleTurboDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        AntlrDatatypeRuleToken lv_variables_4_0 = null;

        EObject lv_domain_6_0 = null;

        AntlrDatatypeRuleToken lv_variables_8_0 = null;

        EObject lv_domain_10_0 = null;

        EObject lv_returnedDomain_13_0 = null;

        EObject lv_ruleBody_15_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1716:2: ( (otherlv_0= 'turbo' otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:1717:2: (otherlv_0= 'turbo' otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:1717:2: (otherlv_0= 'turbo' otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) )
            // InternalAsmetaL.g:1718:3: otherlv_0= 'turbo' otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) )
            {
            otherlv_0=(Token)match(input,47,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTurboDeclarationAccess().getTurboKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,46,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTurboDeclarationAccess().getRuleKeyword_1());
              		
            }
            // InternalAsmetaL.g:1726:3: ( (lv_name_2_0= RULE_RULE_ID ) )
            // InternalAsmetaL.g:1727:4: (lv_name_2_0= RULE_RULE_ID )
            {
            // InternalAsmetaL.g:1727:4: (lv_name_2_0= RULE_RULE_ID )
            // InternalAsmetaL.g:1728:5: lv_name_2_0= RULE_RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_RULE_ID,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getTurboDeclarationAccess().getNameRULE_IDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTurboDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.RULE_ID");
              				
            }

            }


            }

            // InternalAsmetaL.g:1744:3: (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==30) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalAsmetaL.g:1745:4: otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')'
                    {
                    otherlv_3=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTurboDeclarationAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalAsmetaL.g:1749:4: ( (lv_variables_4_0= ruleID_VARIABLE ) )
                    // InternalAsmetaL.g:1750:5: (lv_variables_4_0= ruleID_VARIABLE )
                    {
                    // InternalAsmetaL.g:1750:5: (lv_variables_4_0= ruleID_VARIABLE )
                    // InternalAsmetaL.g:1751:6: lv_variables_4_0= ruleID_VARIABLE
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTurboDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_variables_4_0=ruleID_VARIABLE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_4_0,
                      							"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTurboDeclarationAccess().getInKeyword_3_2());
                      			
                    }
                    // InternalAsmetaL.g:1772:4: ( (lv_domain_6_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:1773:5: (lv_domain_6_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:1773:5: (lv_domain_6_0= rulegetDomainByID )
                    // InternalAsmetaL.g:1774:6: lv_domain_6_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTurboDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_3_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_domain_6_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_6_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:1791:4: (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )*
                    loop37:
                    do {
                        int alt37=2;
                        int LA37_0 = input.LA(1);

                        if ( (LA37_0==31) ) {
                            alt37=1;
                        }


                        switch (alt37) {
                    	case 1 :
                    	    // InternalAsmetaL.g:1792:5: otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) )
                    	    {
                    	    otherlv_7=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getTurboDeclarationAccess().getCommaKeyword_3_4_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:1796:5: ( (lv_variables_8_0= ruleID_VARIABLE ) )
                    	    // InternalAsmetaL.g:1797:6: (lv_variables_8_0= ruleID_VARIABLE )
                    	    {
                    	    // InternalAsmetaL.g:1797:6: (lv_variables_8_0= ruleID_VARIABLE )
                    	    // InternalAsmetaL.g:1798:7: lv_variables_8_0= ruleID_VARIABLE
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTurboDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_31);
                    	    lv_variables_8_0=ruleID_VARIABLE();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_8_0,
                    	      								"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_9=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getTurboDeclarationAccess().getInKeyword_3_4_2());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:1819:5: ( (lv_domain_10_0= rulegetDomainByID ) )
                    	    // InternalAsmetaL.g:1820:6: (lv_domain_10_0= rulegetDomainByID )
                    	    {
                    	    // InternalAsmetaL.g:1820:6: (lv_domain_10_0= rulegetDomainByID )
                    	    // InternalAsmetaL.g:1821:7: lv_domain_10_0= rulegetDomainByID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTurboDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_4_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_domain_10_0=rulegetDomainByID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_10_0,
                    	      								"org.asmeta.xt.AsmetaL.getDomainByID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop37;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,32,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getTurboDeclarationAccess().getRightParenthesisKeyword_3_5());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:1844:3: (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==41) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalAsmetaL.g:1845:4: otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) )
                    {
                    otherlv_12=(Token)match(input,41,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getTurboDeclarationAccess().getInKeyword_4_0());
                      			
                    }
                    // InternalAsmetaL.g:1849:4: ( (lv_returnedDomain_13_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:1850:5: (lv_returnedDomain_13_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:1850:5: (lv_returnedDomain_13_0= rulegetDomainByID )
                    // InternalAsmetaL.g:1851:6: lv_returnedDomain_13_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTurboDeclarationAccess().getReturnedDomainGetDomainByIDParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_26);
                    lv_returnedDomain_13_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"returnedDomain",
                      							lv_returnedDomain_13_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_14=(Token)match(input,39,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getTurboDeclarationAccess().getEqualsSignKeyword_5());
              		
            }
            // InternalAsmetaL.g:1873:3: ( (lv_ruleBody_15_0= ruleRule ) )
            // InternalAsmetaL.g:1874:4: (lv_ruleBody_15_0= ruleRule )
            {
            // InternalAsmetaL.g:1874:4: (lv_ruleBody_15_0= ruleRule )
            // InternalAsmetaL.g:1875:5: lv_ruleBody_15_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTurboDeclarationAccess().getRuleBodyRuleParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ruleBody_15_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
              					}
              					set(
              						current,
              						"ruleBody",
              						lv_ruleBody_15_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTurboDeclaration"


    // $ANTLR start "entryRuleProperty"
    // InternalAsmetaL.g:1896:1: entryRuleProperty returns [EObject current=null] : iv_ruleProperty= ruleProperty EOF ;
    public final EObject entryRuleProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProperty = null;


        try {
            // InternalAsmetaL.g:1896:49: (iv_ruleProperty= ruleProperty EOF )
            // InternalAsmetaL.g:1897:2: iv_ruleProperty= ruleProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProperty=ruleProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProperty; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProperty"


    // $ANTLR start "ruleProperty"
    // InternalAsmetaL.g:1903:1: ruleProperty returns [EObject current=null] : (this_Invariant_0= ruleInvariant | this_TemporalProperty_1= ruleTemporalProperty ) ;
    public final EObject ruleProperty() throws RecognitionException {
        EObject current = null;

        EObject this_Invariant_0 = null;

        EObject this_TemporalProperty_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1909:2: ( (this_Invariant_0= ruleInvariant | this_TemporalProperty_1= ruleTemporalProperty ) )
            // InternalAsmetaL.g:1910:2: (this_Invariant_0= ruleInvariant | this_TemporalProperty_1= ruleTemporalProperty )
            {
            // InternalAsmetaL.g:1910:2: (this_Invariant_0= ruleInvariant | this_TemporalProperty_1= ruleTemporalProperty )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==48) ) {
                alt40=1;
            }
            else if ( ((LA40_0>=50 && LA40_0<=53)) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalAsmetaL.g:1911:3: this_Invariant_0= ruleInvariant
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPropertyAccess().getInvariantParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Invariant_0=ruleInvariant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Invariant_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:1923:3: this_TemporalProperty_1= ruleTemporalProperty
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPropertyAccess().getTemporalPropertyParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TemporalProperty_1=ruleTemporalProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TemporalProperty_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProperty"


    // $ANTLR start "entryRuleTemporalProperty"
    // InternalAsmetaL.g:1938:1: entryRuleTemporalProperty returns [EObject current=null] : iv_ruleTemporalProperty= ruleTemporalProperty EOF ;
    public final EObject entryRuleTemporalProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemporalProperty = null;


        try {
            // InternalAsmetaL.g:1938:57: (iv_ruleTemporalProperty= ruleTemporalProperty EOF )
            // InternalAsmetaL.g:1939:2: iv_ruleTemporalProperty= ruleTemporalProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemporalPropertyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemporalProperty=ruleTemporalProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemporalProperty; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemporalProperty"


    // $ANTLR start "ruleTemporalProperty"
    // InternalAsmetaL.g:1945:1: ruleTemporalProperty returns [EObject current=null] : (this_CtlSpec_0= ruleCtlSpec | this_LtlSpec_1= ruleLtlSpec ) ;
    public final EObject ruleTemporalProperty() throws RecognitionException {
        EObject current = null;

        EObject this_CtlSpec_0 = null;

        EObject this_LtlSpec_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1951:2: ( (this_CtlSpec_0= ruleCtlSpec | this_LtlSpec_1= ruleLtlSpec ) )
            // InternalAsmetaL.g:1952:2: (this_CtlSpec_0= ruleCtlSpec | this_LtlSpec_1= ruleLtlSpec )
            {
            // InternalAsmetaL.g:1952:2: (this_CtlSpec_0= ruleCtlSpec | this_LtlSpec_1= ruleLtlSpec )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( ((LA41_0>=50 && LA41_0<=51)) ) {
                alt41=1;
            }
            else if ( ((LA41_0>=52 && LA41_0<=53)) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalAsmetaL.g:1953:3: this_CtlSpec_0= ruleCtlSpec
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTemporalPropertyAccess().getCtlSpecParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CtlSpec_0=ruleCtlSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CtlSpec_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:1965:3: this_LtlSpec_1= ruleLtlSpec
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTemporalPropertyAccess().getLtlSpecParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LtlSpec_1=ruleLtlSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LtlSpec_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemporalProperty"


    // $ANTLR start "entryRuleInvariant"
    // InternalAsmetaL.g:1980:1: entryRuleInvariant returns [EObject current=null] : iv_ruleInvariant= ruleInvariant EOF ;
    public final EObject entryRuleInvariant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvariant = null;


        try {
            // InternalAsmetaL.g:1980:50: (iv_ruleInvariant= ruleInvariant EOF )
            // InternalAsmetaL.g:1981:2: iv_ruleInvariant= ruleInvariant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvariantRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvariant=ruleInvariant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvariant; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvariant"


    // $ANTLR start "ruleInvariant"
    // InternalAsmetaL.g:1987:1: ruleInvariant returns [EObject current=null] : (otherlv_0= 'invariant' ( (lv_name_1_0= RULE_ID ) )? otherlv_2= 'over' ( (lv_invar_list_3_0= ruleInvariantElement ) ) (otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) ) )* otherlv_6= ':' ( (lv_body_7_0= ruleTerm ) ) ) ;
    public final EObject ruleInvariant() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_invar_list_3_0 = null;

        EObject lv_invar_list_5_0 = null;

        EObject lv_body_7_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1993:2: ( (otherlv_0= 'invariant' ( (lv_name_1_0= RULE_ID ) )? otherlv_2= 'over' ( (lv_invar_list_3_0= ruleInvariantElement ) ) (otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) ) )* otherlv_6= ':' ( (lv_body_7_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:1994:2: (otherlv_0= 'invariant' ( (lv_name_1_0= RULE_ID ) )? otherlv_2= 'over' ( (lv_invar_list_3_0= ruleInvariantElement ) ) (otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) ) )* otherlv_6= ':' ( (lv_body_7_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:1994:2: (otherlv_0= 'invariant' ( (lv_name_1_0= RULE_ID ) )? otherlv_2= 'over' ( (lv_invar_list_3_0= ruleInvariantElement ) ) (otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) ) )* otherlv_6= ':' ( (lv_body_7_0= ruleTerm ) ) )
            // InternalAsmetaL.g:1995:3: otherlv_0= 'invariant' ( (lv_name_1_0= RULE_ID ) )? otherlv_2= 'over' ( (lv_invar_list_3_0= ruleInvariantElement ) ) (otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) ) )* otherlv_6= ':' ( (lv_body_7_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,48,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getInvariantAccess().getInvariantKeyword_0());
              		
            }
            // InternalAsmetaL.g:1999:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_ID) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalAsmetaL.g:2000:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalAsmetaL.g:2000:4: (lv_name_1_0= RULE_ID )
                    // InternalAsmetaL.g:2001:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getInvariantAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getInvariantRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.asmeta.xt.AsmetaL.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,49,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getInvariantAccess().getOverKeyword_2());
              		
            }
            // InternalAsmetaL.g:2021:3: ( (lv_invar_list_3_0= ruleInvariantElement ) )
            // InternalAsmetaL.g:2022:4: (lv_invar_list_3_0= ruleInvariantElement )
            {
            // InternalAsmetaL.g:2022:4: (lv_invar_list_3_0= ruleInvariantElement )
            // InternalAsmetaL.g:2023:5: lv_invar_list_3_0= ruleInvariantElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvariantAccess().getInvar_listInvariantElementParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_invar_list_3_0=ruleInvariantElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvariantRule());
              					}
              					add(
              						current,
              						"invar_list",
              						lv_invar_list_3_0,
              						"org.asmeta.xt.AsmetaL.InvariantElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:2040:3: (otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==31) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalAsmetaL.g:2041:4: otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) )
            	    {
            	    otherlv_4=(Token)match(input,31,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getInvariantAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:2045:4: ( (lv_invar_list_5_0= ruleInvariantElement ) )
            	    // InternalAsmetaL.g:2046:5: (lv_invar_list_5_0= ruleInvariantElement )
            	    {
            	    // InternalAsmetaL.g:2046:5: (lv_invar_list_5_0= ruleInvariantElement )
            	    // InternalAsmetaL.g:2047:6: lv_invar_list_5_0= ruleInvariantElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getInvariantAccess().getInvar_listInvariantElementParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_47);
            	    lv_invar_list_5_0=ruleInvariantElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getInvariantRule());
            	      						}
            	      						add(
            	      							current,
            	      							"invar_list",
            	      							lv_invar_list_5_0,
            	      							"org.asmeta.xt.AsmetaL.InvariantElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            otherlv_6=(Token)match(input,36,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getInvariantAccess().getColonKeyword_5());
              		
            }
            // InternalAsmetaL.g:2069:3: ( (lv_body_7_0= ruleTerm ) )
            // InternalAsmetaL.g:2070:4: (lv_body_7_0= ruleTerm )
            {
            // InternalAsmetaL.g:2070:4: (lv_body_7_0= ruleTerm )
            // InternalAsmetaL.g:2071:5: lv_body_7_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvariantAccess().getBodyTermParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_7_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvariantRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_7_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvariant"


    // $ANTLR start "entryRuleInvariantElement"
    // InternalAsmetaL.g:2092:1: entryRuleInvariantElement returns [EObject current=null] : iv_ruleInvariantElement= ruleInvariantElement EOF ;
    public final EObject entryRuleInvariantElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvariantElement = null;


        try {
            // InternalAsmetaL.g:2092:57: (iv_ruleInvariantElement= ruleInvariantElement EOF )
            // InternalAsmetaL.g:2093:2: iv_ruleInvariantElement= ruleInvariantElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvariantElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvariantElement=ruleInvariantElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvariantElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvariantElement"


    // $ANTLR start "ruleInvariantElement"
    // InternalAsmetaL.g:2099:1: ruleInvariantElement returns [EObject current=null] : ( ( (lv_constrainedName_0_0= RULE_ID ) ) (otherlv_1= '(' ( (lv_domainList_2_0= rulegetDomainByID ) )? otherlv_3= ')' )? ) ;
    public final EObject ruleInvariantElement() throws RecognitionException {
        EObject current = null;

        Token lv_constrainedName_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_domainList_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2105:2: ( ( ( (lv_constrainedName_0_0= RULE_ID ) ) (otherlv_1= '(' ( (lv_domainList_2_0= rulegetDomainByID ) )? otherlv_3= ')' )? ) )
            // InternalAsmetaL.g:2106:2: ( ( (lv_constrainedName_0_0= RULE_ID ) ) (otherlv_1= '(' ( (lv_domainList_2_0= rulegetDomainByID ) )? otherlv_3= ')' )? )
            {
            // InternalAsmetaL.g:2106:2: ( ( (lv_constrainedName_0_0= RULE_ID ) ) (otherlv_1= '(' ( (lv_domainList_2_0= rulegetDomainByID ) )? otherlv_3= ')' )? )
            // InternalAsmetaL.g:2107:3: ( (lv_constrainedName_0_0= RULE_ID ) ) (otherlv_1= '(' ( (lv_domainList_2_0= rulegetDomainByID ) )? otherlv_3= ')' )?
            {
            // InternalAsmetaL.g:2107:3: ( (lv_constrainedName_0_0= RULE_ID ) )
            // InternalAsmetaL.g:2108:4: (lv_constrainedName_0_0= RULE_ID )
            {
            // InternalAsmetaL.g:2108:4: (lv_constrainedName_0_0= RULE_ID )
            // InternalAsmetaL.g:2109:5: lv_constrainedName_0_0= RULE_ID
            {
            lv_constrainedName_0_0=(Token)match(input,RULE_ID,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_constrainedName_0_0, grammarAccess.getInvariantElementAccess().getConstrainedNameIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getInvariantElementRule());
              					}
              					setWithLastConsumed(
              						current,
              						"constrainedName",
              						lv_constrainedName_0_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            // InternalAsmetaL.g:2125:3: (otherlv_1= '(' ( (lv_domainList_2_0= rulegetDomainByID ) )? otherlv_3= ')' )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==30) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalAsmetaL.g:2126:4: otherlv_1= '(' ( (lv_domainList_2_0= rulegetDomainByID ) )? otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,30,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getInvariantElementAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalAsmetaL.g:2130:4: ( (lv_domainList_2_0= rulegetDomainByID ) )?
                    int alt44=2;
                    int LA44_0 = input.LA(1);

                    if ( (LA44_0==RULE_ID||LA44_0==43||LA44_0==57||(LA44_0>=61 && LA44_0<=70)||(LA44_0>=75 && LA44_0<=80)) ) {
                        alt44=1;
                    }
                    switch (alt44) {
                        case 1 :
                            // InternalAsmetaL.g:2131:5: (lv_domainList_2_0= rulegetDomainByID )
                            {
                            // InternalAsmetaL.g:2131:5: (lv_domainList_2_0= rulegetDomainByID )
                            // InternalAsmetaL.g:2132:6: lv_domainList_2_0= rulegetDomainByID
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getInvariantElementAccess().getDomainListGetDomainByIDParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_49);
                            lv_domainList_2_0=rulegetDomainByID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getInvariantElementRule());
                              						}
                              						add(
                              							current,
                              							"domainList",
                              							lv_domainList_2_0,
                              							"org.asmeta.xt.AsmetaL.getDomainByID");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getInvariantElementAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvariantElement"


    // $ANTLR start "entryRuleCtlSpec"
    // InternalAsmetaL.g:2158:1: entryRuleCtlSpec returns [EObject current=null] : iv_ruleCtlSpec= ruleCtlSpec EOF ;
    public final EObject entryRuleCtlSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCtlSpec = null;


        try {
            // InternalAsmetaL.g:2158:48: (iv_ruleCtlSpec= ruleCtlSpec EOF )
            // InternalAsmetaL.g:2159:2: iv_ruleCtlSpec= ruleCtlSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCtlSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCtlSpec=ruleCtlSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCtlSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCtlSpec"


    // $ANTLR start "ruleCtlSpec"
    // InternalAsmetaL.g:2165:1: ruleCtlSpec returns [EObject current=null] : ( (otherlv_0= 'CTL' | otherlv_1= 'CTLSPEC' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) ) ;
    public final EObject ruleCtlSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        EObject lv_body_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2171:2: ( ( (otherlv_0= 'CTL' | otherlv_1= 'CTLSPEC' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:2172:2: ( (otherlv_0= 'CTL' | otherlv_1= 'CTLSPEC' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:2172:2: ( (otherlv_0= 'CTL' | otherlv_1= 'CTLSPEC' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) )
            // InternalAsmetaL.g:2173:3: (otherlv_0= 'CTL' | otherlv_1= 'CTLSPEC' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) )
            {
            // InternalAsmetaL.g:2173:3: (otherlv_0= 'CTL' | otherlv_1= 'CTLSPEC' )
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==50) ) {
                alt46=1;
            }
            else if ( (LA46_0==51) ) {
                alt46=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 46, 0, input);

                throw nvae;
            }
            switch (alt46) {
                case 1 :
                    // InternalAsmetaL.g:2174:4: otherlv_0= 'CTL'
                    {
                    otherlv_0=(Token)match(input,50,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCtlSpecAccess().getCTLKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2179:4: otherlv_1= 'CTLSPEC'
                    {
                    otherlv_1=(Token)match(input,51,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCtlSpecAccess().getCTLSPECKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:2184:3: ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==RULE_ID) ) {
                int LA47_1 = input.LA(2);

                if ( (LA47_1==36) ) {
                    alt47=1;
                }
            }
            switch (alt47) {
                case 1 :
                    // InternalAsmetaL.g:2185:4: ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':'
                    {
                    // InternalAsmetaL.g:2185:4: ( (lv_name_2_0= RULE_ID ) )
                    // InternalAsmetaL.g:2186:5: (lv_name_2_0= RULE_ID )
                    {
                    // InternalAsmetaL.g:2186:5: (lv_name_2_0= RULE_ID )
                    // InternalAsmetaL.g:2187:6: lv_name_2_0= RULE_ID
                    {
                    lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_0, grammarAccess.getCtlSpecAccess().getNameIDTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCtlSpecRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_0,
                      							"org.asmeta.xt.AsmetaL.ID");
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,36,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getCtlSpecAccess().getColonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:2208:3: ( (lv_body_4_0= ruleTerm ) )
            // InternalAsmetaL.g:2209:4: (lv_body_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:2209:4: (lv_body_4_0= ruleTerm )
            // InternalAsmetaL.g:2210:5: lv_body_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCtlSpecAccess().getBodyTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCtlSpecRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCtlSpec"


    // $ANTLR start "entryRuleLtlSpec"
    // InternalAsmetaL.g:2231:1: entryRuleLtlSpec returns [EObject current=null] : iv_ruleLtlSpec= ruleLtlSpec EOF ;
    public final EObject entryRuleLtlSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlSpec = null;


        try {
            // InternalAsmetaL.g:2231:48: (iv_ruleLtlSpec= ruleLtlSpec EOF )
            // InternalAsmetaL.g:2232:2: iv_ruleLtlSpec= ruleLtlSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlSpec=ruleLtlSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlSpec"


    // $ANTLR start "ruleLtlSpec"
    // InternalAsmetaL.g:2238:1: ruleLtlSpec returns [EObject current=null] : ( (otherlv_0= 'LTL' | otherlv_1= 'LTLSPEC' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) ) ;
    public final EObject ruleLtlSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        EObject lv_body_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2244:2: ( ( (otherlv_0= 'LTL' | otherlv_1= 'LTLSPEC' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:2245:2: ( (otherlv_0= 'LTL' | otherlv_1= 'LTLSPEC' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:2245:2: ( (otherlv_0= 'LTL' | otherlv_1= 'LTLSPEC' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) )
            // InternalAsmetaL.g:2246:3: (otherlv_0= 'LTL' | otherlv_1= 'LTLSPEC' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) )
            {
            // InternalAsmetaL.g:2246:3: (otherlv_0= 'LTL' | otherlv_1= 'LTLSPEC' )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==52) ) {
                alt48=1;
            }
            else if ( (LA48_0==53) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalAsmetaL.g:2247:4: otherlv_0= 'LTL'
                    {
                    otherlv_0=(Token)match(input,52,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getLtlSpecAccess().getLTLKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2252:4: otherlv_1= 'LTLSPEC'
                    {
                    otherlv_1=(Token)match(input,53,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLtlSpecAccess().getLTLSPECKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:2257:3: ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==RULE_ID) ) {
                int LA49_1 = input.LA(2);

                if ( (LA49_1==36) ) {
                    alt49=1;
                }
            }
            switch (alt49) {
                case 1 :
                    // InternalAsmetaL.g:2258:4: ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':'
                    {
                    // InternalAsmetaL.g:2258:4: ( (lv_name_2_0= RULE_ID ) )
                    // InternalAsmetaL.g:2259:5: (lv_name_2_0= RULE_ID )
                    {
                    // InternalAsmetaL.g:2259:5: (lv_name_2_0= RULE_ID )
                    // InternalAsmetaL.g:2260:6: lv_name_2_0= RULE_ID
                    {
                    lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_0, grammarAccess.getLtlSpecAccess().getNameIDTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLtlSpecRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_0,
                      							"org.asmeta.xt.AsmetaL.ID");
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,36,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLtlSpecAccess().getColonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:2281:3: ( (lv_body_4_0= ruleTerm ) )
            // InternalAsmetaL.g:2282:4: (lv_body_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:2282:4: (lv_body_4_0= ruleTerm )
            // InternalAsmetaL.g:2283:5: lv_body_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLtlSpecAccess().getBodyTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLtlSpecRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlSpec"


    // $ANTLR start "entryRuleFairnessConstraint"
    // InternalAsmetaL.g:2304:1: entryRuleFairnessConstraint returns [EObject current=null] : iv_ruleFairnessConstraint= ruleFairnessConstraint EOF ;
    public final EObject entryRuleFairnessConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFairnessConstraint = null;


        try {
            // InternalAsmetaL.g:2304:59: (iv_ruleFairnessConstraint= ruleFairnessConstraint EOF )
            // InternalAsmetaL.g:2305:2: iv_ruleFairnessConstraint= ruleFairnessConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFairnessConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFairnessConstraint=ruleFairnessConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFairnessConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFairnessConstraint"


    // $ANTLR start "ruleFairnessConstraint"
    // InternalAsmetaL.g:2311:1: ruleFairnessConstraint returns [EObject current=null] : (this_JusticeConstraint_0= ruleJusticeConstraint | this_CompassionConstraint_1= ruleCompassionConstraint ) ;
    public final EObject ruleFairnessConstraint() throws RecognitionException {
        EObject current = null;

        EObject this_JusticeConstraint_0 = null;

        EObject this_CompassionConstraint_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2317:2: ( (this_JusticeConstraint_0= ruleJusticeConstraint | this_CompassionConstraint_1= ruleCompassionConstraint ) )
            // InternalAsmetaL.g:2318:2: (this_JusticeConstraint_0= ruleJusticeConstraint | this_CompassionConstraint_1= ruleCompassionConstraint )
            {
            // InternalAsmetaL.g:2318:2: (this_JusticeConstraint_0= ruleJusticeConstraint | this_CompassionConstraint_1= ruleCompassionConstraint )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==54) ) {
                alt50=1;
            }
            else if ( (LA50_0==55) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalAsmetaL.g:2319:3: this_JusticeConstraint_0= ruleJusticeConstraint
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFairnessConstraintAccess().getJusticeConstraintParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JusticeConstraint_0=ruleJusticeConstraint();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JusticeConstraint_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2331:3: this_CompassionConstraint_1= ruleCompassionConstraint
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFairnessConstraintAccess().getCompassionConstraintParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CompassionConstraint_1=ruleCompassionConstraint();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CompassionConstraint_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFairnessConstraint"


    // $ANTLR start "entryRuleJusticeConstraint"
    // InternalAsmetaL.g:2346:1: entryRuleJusticeConstraint returns [EObject current=null] : iv_ruleJusticeConstraint= ruleJusticeConstraint EOF ;
    public final EObject entryRuleJusticeConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJusticeConstraint = null;


        try {
            // InternalAsmetaL.g:2346:58: (iv_ruleJusticeConstraint= ruleJusticeConstraint EOF )
            // InternalAsmetaL.g:2347:2: iv_ruleJusticeConstraint= ruleJusticeConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJusticeConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJusticeConstraint=ruleJusticeConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJusticeConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJusticeConstraint"


    // $ANTLR start "ruleJusticeConstraint"
    // InternalAsmetaL.g:2353:1: ruleJusticeConstraint returns [EObject current=null] : (otherlv_0= 'JUSTICE' ( (lv_body_1_0= ruleTerm ) ) ) ;
    public final EObject ruleJusticeConstraint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_body_1_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2359:2: ( (otherlv_0= 'JUSTICE' ( (lv_body_1_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:2360:2: (otherlv_0= 'JUSTICE' ( (lv_body_1_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:2360:2: (otherlv_0= 'JUSTICE' ( (lv_body_1_0= ruleTerm ) ) )
            // InternalAsmetaL.g:2361:3: otherlv_0= 'JUSTICE' ( (lv_body_1_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,54,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJusticeConstraintAccess().getJUSTICEKeyword_0());
              		
            }
            // InternalAsmetaL.g:2365:3: ( (lv_body_1_0= ruleTerm ) )
            // InternalAsmetaL.g:2366:4: (lv_body_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:2366:4: (lv_body_1_0= ruleTerm )
            // InternalAsmetaL.g:2367:5: lv_body_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJusticeConstraintAccess().getBodyTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJusticeConstraintRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJusticeConstraint"


    // $ANTLR start "entryRuleCompassionConstraint"
    // InternalAsmetaL.g:2388:1: entryRuleCompassionConstraint returns [EObject current=null] : iv_ruleCompassionConstraint= ruleCompassionConstraint EOF ;
    public final EObject entryRuleCompassionConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompassionConstraint = null;


        try {
            // InternalAsmetaL.g:2388:61: (iv_ruleCompassionConstraint= ruleCompassionConstraint EOF )
            // InternalAsmetaL.g:2389:2: iv_ruleCompassionConstraint= ruleCompassionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompassionConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompassionConstraint=ruleCompassionConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompassionConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompassionConstraint"


    // $ANTLR start "ruleCompassionConstraint"
    // InternalAsmetaL.g:2395:1: ruleCompassionConstraint returns [EObject current=null] : (otherlv_0= 'COMPASSION' otherlv_1= '(' ( (lv_p_2_0= ruleTerm ) ) otherlv_3= ',' ( (lv_q_4_0= ruleTerm ) ) otherlv_5= ')' ) ;
    public final EObject ruleCompassionConstraint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_p_2_0 = null;

        EObject lv_q_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2401:2: ( (otherlv_0= 'COMPASSION' otherlv_1= '(' ( (lv_p_2_0= ruleTerm ) ) otherlv_3= ',' ( (lv_q_4_0= ruleTerm ) ) otherlv_5= ')' ) )
            // InternalAsmetaL.g:2402:2: (otherlv_0= 'COMPASSION' otherlv_1= '(' ( (lv_p_2_0= ruleTerm ) ) otherlv_3= ',' ( (lv_q_4_0= ruleTerm ) ) otherlv_5= ')' )
            {
            // InternalAsmetaL.g:2402:2: (otherlv_0= 'COMPASSION' otherlv_1= '(' ( (lv_p_2_0= ruleTerm ) ) otherlv_3= ',' ( (lv_q_4_0= ruleTerm ) ) otherlv_5= ')' )
            // InternalAsmetaL.g:2403:3: otherlv_0= 'COMPASSION' otherlv_1= '(' ( (lv_p_2_0= ruleTerm ) ) otherlv_3= ',' ( (lv_q_4_0= ruleTerm ) ) otherlv_5= ')'
            {
            otherlv_0=(Token)match(input,55,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getCompassionConstraintAccess().getCOMPASSIONKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,30,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCompassionConstraintAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:2411:3: ( (lv_p_2_0= ruleTerm ) )
            // InternalAsmetaL.g:2412:4: (lv_p_2_0= ruleTerm )
            {
            // InternalAsmetaL.g:2412:4: (lv_p_2_0= ruleTerm )
            // InternalAsmetaL.g:2413:5: lv_p_2_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompassionConstraintAccess().getPTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_p_2_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompassionConstraintRule());
              					}
              					set(
              						current,
              						"p",
              						lv_p_2_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,31,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getCompassionConstraintAccess().getCommaKeyword_3());
              		
            }
            // InternalAsmetaL.g:2434:3: ( (lv_q_4_0= ruleTerm ) )
            // InternalAsmetaL.g:2435:4: (lv_q_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:2435:4: (lv_q_4_0= ruleTerm )
            // InternalAsmetaL.g:2436:5: lv_q_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompassionConstraintAccess().getQTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_49);
            lv_q_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompassionConstraintRule());
              					}
              					set(
              						current,
              						"q",
              						lv_q_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getCompassionConstraintAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompassionConstraint"


    // $ANTLR start "entryRuleInvariantConstraint"
    // InternalAsmetaL.g:2461:1: entryRuleInvariantConstraint returns [EObject current=null] : iv_ruleInvariantConstraint= ruleInvariantConstraint EOF ;
    public final EObject entryRuleInvariantConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvariantConstraint = null;


        try {
            // InternalAsmetaL.g:2461:60: (iv_ruleInvariantConstraint= ruleInvariantConstraint EOF )
            // InternalAsmetaL.g:2462:2: iv_ruleInvariantConstraint= ruleInvariantConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvariantConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvariantConstraint=ruleInvariantConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvariantConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvariantConstraint"


    // $ANTLR start "ruleInvariantConstraint"
    // InternalAsmetaL.g:2468:1: ruleInvariantConstraint returns [EObject current=null] : (otherlv_0= 'INVAR' ( (lv_body_1_0= ruleTerm ) ) ) ;
    public final EObject ruleInvariantConstraint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_body_1_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2474:2: ( (otherlv_0= 'INVAR' ( (lv_body_1_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:2475:2: (otherlv_0= 'INVAR' ( (lv_body_1_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:2475:2: (otherlv_0= 'INVAR' ( (lv_body_1_0= ruleTerm ) ) )
            // InternalAsmetaL.g:2476:3: otherlv_0= 'INVAR' ( (lv_body_1_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,56,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getInvariantConstraintAccess().getINVARKeyword_0());
              		
            }
            // InternalAsmetaL.g:2480:3: ( (lv_body_1_0= ruleTerm ) )
            // InternalAsmetaL.g:2481:4: (lv_body_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:2481:4: (lv_body_1_0= ruleTerm )
            // InternalAsmetaL.g:2482:5: lv_body_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvariantConstraintAccess().getBodyTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvariantConstraintRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvariantConstraint"


    // $ANTLR start "entryRuleDomain"
    // InternalAsmetaL.g:2503:1: entryRuleDomain returns [EObject current=null] : iv_ruleDomain= ruleDomain EOF ;
    public final EObject entryRuleDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDomain = null;


        try {
            // InternalAsmetaL.g:2503:47: (iv_ruleDomain= ruleDomain EOF )
            // InternalAsmetaL.g:2504:2: iv_ruleDomain= ruleDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDomain=ruleDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDomain"


    // $ANTLR start "ruleDomain"
    // InternalAsmetaL.g:2510:1: ruleDomain returns [EObject current=null] : (this_ConcreteDomain_0= ruleConcreteDomain | this_TypeDomain_1= ruleTypeDomain ) ;
    public final EObject ruleDomain() throws RecognitionException {
        EObject current = null;

        EObject this_ConcreteDomain_0 = null;

        EObject this_TypeDomain_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2516:2: ( (this_ConcreteDomain_0= ruleConcreteDomain | this_TypeDomain_1= ruleTypeDomain ) )
            // InternalAsmetaL.g:2517:2: (this_ConcreteDomain_0= ruleConcreteDomain | this_TypeDomain_1= ruleTypeDomain )
            {
            // InternalAsmetaL.g:2517:2: (this_ConcreteDomain_0= ruleConcreteDomain | this_TypeDomain_1= ruleTypeDomain )
            int alt51=2;
            switch ( input.LA(1) ) {
            case 57:
                {
                int LA51_1 = input.LA(2);

                if ( (LA51_1==38) ) {
                    alt51=1;
                }
                else if ( (LA51_1==69) ) {
                    alt51=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 51, 1, input);

                    throw nvae;
                }
                }
                break;
            case 38:
                {
                alt51=1;
                }
                break;
            case 59:
            case 60:
            case 69:
            case 71:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
                {
                alt51=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }

            switch (alt51) {
                case 1 :
                    // InternalAsmetaL.g:2518:3: this_ConcreteDomain_0= ruleConcreteDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDomainAccess().getConcreteDomainParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConcreteDomain_0=ruleConcreteDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConcreteDomain_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2530:3: this_TypeDomain_1= ruleTypeDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDomainAccess().getTypeDomainParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeDomain_1=ruleTypeDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeDomain_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDomain"


    // $ANTLR start "entryRuleConcreteDomain"
    // InternalAsmetaL.g:2545:1: entryRuleConcreteDomain returns [EObject current=null] : iv_ruleConcreteDomain= ruleConcreteDomain EOF ;
    public final EObject entryRuleConcreteDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcreteDomain = null;


        try {
            // InternalAsmetaL.g:2545:55: (iv_ruleConcreteDomain= ruleConcreteDomain EOF )
            // InternalAsmetaL.g:2546:2: iv_ruleConcreteDomain= ruleConcreteDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConcreteDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcreteDomain=ruleConcreteDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcreteDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcreteDomain"


    // $ANTLR start "ruleConcreteDomain"
    // InternalAsmetaL.g:2552:1: ruleConcreteDomain returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= 'subsetof' ( (lv_typeDomain_4_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleConcreteDomain() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        EObject lv_typeDomain_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2558:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= 'subsetof' ( (lv_typeDomain_4_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:2559:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= 'subsetof' ( (lv_typeDomain_4_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:2559:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= 'subsetof' ( (lv_typeDomain_4_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:2560:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= 'subsetof' ( (lv_typeDomain_4_0= rulegetDomainByID ) )
            {
            // InternalAsmetaL.g:2560:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==57) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalAsmetaL.g:2561:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:2561:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:2562:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,57,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getConcreteDomainAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConcreteDomainRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,38,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConcreteDomainAccess().getDomainKeyword_1());
              		
            }
            // InternalAsmetaL.g:2578:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalAsmetaL.g:2579:4: (lv_name_2_0= RULE_ID )
            {
            // InternalAsmetaL.g:2579:4: (lv_name_2_0= RULE_ID )
            // InternalAsmetaL.g:2580:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getConcreteDomainAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteDomainRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,58,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getConcreteDomainAccess().getSubsetofKeyword_3());
              		
            }
            // InternalAsmetaL.g:2600:3: ( (lv_typeDomain_4_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:2601:4: (lv_typeDomain_4_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:2601:4: (lv_typeDomain_4_0= rulegetDomainByID )
            // InternalAsmetaL.g:2602:5: lv_typeDomain_4_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConcreteDomainAccess().getTypeDomainGetDomainByIDParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeDomain_4_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConcreteDomainRule());
              					}
              					set(
              						current,
              						"typeDomain",
              						lv_typeDomain_4_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcreteDomain"


    // $ANTLR start "entryRuleTypeDomain"
    // InternalAsmetaL.g:2623:1: entryRuleTypeDomain returns [EObject current=null] : iv_ruleTypeDomain= ruleTypeDomain EOF ;
    public final EObject entryRuleTypeDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDomain = null;


        try {
            // InternalAsmetaL.g:2623:51: (iv_ruleTypeDomain= ruleTypeDomain EOF )
            // InternalAsmetaL.g:2624:2: iv_ruleTypeDomain= ruleTypeDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDomain=ruleTypeDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDomain"


    // $ANTLR start "ruleTypeDomain"
    // InternalAsmetaL.g:2630:1: ruleTypeDomain returns [EObject current=null] : (this_AnyDomain_0= ruleAnyDomain | this_StructuredTD_1= ruleStructuredTD | this_EnumTD_2= ruleEnumTD | this_AbstractTD_3= ruleAbstractTD | this_BasicTD_4= ruleBasicTD ) ;
    public final EObject ruleTypeDomain() throws RecognitionException {
        EObject current = null;

        EObject this_AnyDomain_0 = null;

        EObject this_StructuredTD_1 = null;

        EObject this_EnumTD_2 = null;

        EObject this_AbstractTD_3 = null;

        EObject this_BasicTD_4 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2636:2: ( (this_AnyDomain_0= ruleAnyDomain | this_StructuredTD_1= ruleStructuredTD | this_EnumTD_2= ruleEnumTD | this_AbstractTD_3= ruleAbstractTD | this_BasicTD_4= ruleBasicTD ) )
            // InternalAsmetaL.g:2637:2: (this_AnyDomain_0= ruleAnyDomain | this_StructuredTD_1= ruleStructuredTD | this_EnumTD_2= ruleEnumTD | this_AbstractTD_3= ruleAbstractTD | this_BasicTD_4= ruleBasicTD )
            {
            // InternalAsmetaL.g:2637:2: (this_AnyDomain_0= ruleAnyDomain | this_StructuredTD_1= ruleStructuredTD | this_EnumTD_2= ruleEnumTD | this_AbstractTD_3= ruleAbstractTD | this_BasicTD_4= ruleBasicTD )
            int alt53=5;
            switch ( input.LA(1) ) {
            case 59:
                {
                alt53=1;
                }
                break;
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
                {
                alt53=2;
                }
                break;
            case 71:
                {
                alt53=3;
                }
                break;
            case 57:
            case 69:
                {
                alt53=4;
                }
                break;
            case 60:
                {
                alt53=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;
            }

            switch (alt53) {
                case 1 :
                    // InternalAsmetaL.g:2638:3: this_AnyDomain_0= ruleAnyDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeDomainAccess().getAnyDomainParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AnyDomain_0=ruleAnyDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnyDomain_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2650:3: this_StructuredTD_1= ruleStructuredTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeDomainAccess().getStructuredTDParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StructuredTD_1=ruleStructuredTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructuredTD_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:2662:3: this_EnumTD_2= ruleEnumTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeDomainAccess().getEnumTDParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EnumTD_2=ruleEnumTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EnumTD_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:2674:3: this_AbstractTD_3= ruleAbstractTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeDomainAccess().getAbstractTDParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AbstractTD_3=ruleAbstractTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AbstractTD_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:2686:3: this_BasicTD_4= ruleBasicTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeDomainAccess().getBasicTDParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BasicTD_4=ruleBasicTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BasicTD_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDomain"


    // $ANTLR start "entryRuleAnyDomain"
    // InternalAsmetaL.g:2701:1: entryRuleAnyDomain returns [EObject current=null] : iv_ruleAnyDomain= ruleAnyDomain EOF ;
    public final EObject entryRuleAnyDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnyDomain = null;


        try {
            // InternalAsmetaL.g:2701:50: (iv_ruleAnyDomain= ruleAnyDomain EOF )
            // InternalAsmetaL.g:2702:2: iv_ruleAnyDomain= ruleAnyDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnyDomain=ruleAnyDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyDomain"


    // $ANTLR start "ruleAnyDomain"
    // InternalAsmetaL.g:2708:1: ruleAnyDomain returns [EObject current=null] : (otherlv_0= 'anydomain' ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleAnyDomain() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:2714:2: ( (otherlv_0= 'anydomain' ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalAsmetaL.g:2715:2: (otherlv_0= 'anydomain' ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalAsmetaL.g:2715:2: (otherlv_0= 'anydomain' ( (lv_name_1_0= RULE_ID ) ) )
            // InternalAsmetaL.g:2716:3: otherlv_0= 'anydomain' ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,59,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAnyDomainAccess().getAnydomainKeyword_0());
              		
            }
            // InternalAsmetaL.g:2720:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalAsmetaL.g:2721:4: (lv_name_1_0= RULE_ID )
            {
            // InternalAsmetaL.g:2721:4: (lv_name_1_0= RULE_ID )
            // InternalAsmetaL.g:2722:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAnyDomainAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnyDomainRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyDomain"


    // $ANTLR start "entryRuleBasicTD"
    // InternalAsmetaL.g:2742:1: entryRuleBasicTD returns [EObject current=null] : iv_ruleBasicTD= ruleBasicTD EOF ;
    public final EObject entryRuleBasicTD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasicTD = null;


        try {
            // InternalAsmetaL.g:2742:48: (iv_ruleBasicTD= ruleBasicTD EOF )
            // InternalAsmetaL.g:2743:2: iv_ruleBasicTD= ruleBasicTD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicTDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicTD=ruleBasicTD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicTD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicTD"


    // $ANTLR start "ruleBasicTD"
    // InternalAsmetaL.g:2749:1: ruleBasicTD returns [EObject current=null] : (otherlv_0= 'basic' otherlv_1= 'domain' ( ( (lv_name_2_0= RULE_ID ) ) | this_StandardDomain_3= ruleStandardDomain ) ) ;
    public final EObject ruleBasicTD() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        EObject this_StandardDomain_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2755:2: ( (otherlv_0= 'basic' otherlv_1= 'domain' ( ( (lv_name_2_0= RULE_ID ) ) | this_StandardDomain_3= ruleStandardDomain ) ) )
            // InternalAsmetaL.g:2756:2: (otherlv_0= 'basic' otherlv_1= 'domain' ( ( (lv_name_2_0= RULE_ID ) ) | this_StandardDomain_3= ruleStandardDomain ) )
            {
            // InternalAsmetaL.g:2756:2: (otherlv_0= 'basic' otherlv_1= 'domain' ( ( (lv_name_2_0= RULE_ID ) ) | this_StandardDomain_3= ruleStandardDomain ) )
            // InternalAsmetaL.g:2757:3: otherlv_0= 'basic' otherlv_1= 'domain' ( ( (lv_name_2_0= RULE_ID ) ) | this_StandardDomain_3= ruleStandardDomain )
            {
            otherlv_0=(Token)match(input,60,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBasicTDAccess().getBasicKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,38,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBasicTDAccess().getDomainKeyword_1());
              		
            }
            // InternalAsmetaL.g:2765:3: ( ( (lv_name_2_0= RULE_ID ) ) | this_StandardDomain_3= ruleStandardDomain )
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==RULE_ID) ) {
                alt54=1;
            }
            else if ( ((LA54_0>=61 && LA54_0<=68)) ) {
                alt54=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }
            switch (alt54) {
                case 1 :
                    // InternalAsmetaL.g:2766:4: ( (lv_name_2_0= RULE_ID ) )
                    {
                    // InternalAsmetaL.g:2766:4: ( (lv_name_2_0= RULE_ID ) )
                    // InternalAsmetaL.g:2767:5: (lv_name_2_0= RULE_ID )
                    {
                    // InternalAsmetaL.g:2767:5: (lv_name_2_0= RULE_ID )
                    // InternalAsmetaL.g:2768:6: lv_name_2_0= RULE_ID
                    {
                    lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_0, grammarAccess.getBasicTDAccess().getNameIDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBasicTDRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_0,
                      							"org.asmeta.xt.AsmetaL.ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2785:4: this_StandardDomain_3= ruleStandardDomain
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getBasicTDAccess().getStandardDomainParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_StandardDomain_3=ruleStandardDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_StandardDomain_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicTD"


    // $ANTLR start "entryRuleStandardDomain"
    // InternalAsmetaL.g:2801:1: entryRuleStandardDomain returns [EObject current=null] : iv_ruleStandardDomain= ruleStandardDomain EOF ;
    public final EObject entryRuleStandardDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStandardDomain = null;


        try {
            // InternalAsmetaL.g:2801:55: (iv_ruleStandardDomain= ruleStandardDomain EOF )
            // InternalAsmetaL.g:2802:2: iv_ruleStandardDomain= ruleStandardDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStandardDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStandardDomain=ruleStandardDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStandardDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStandardDomain"


    // $ANTLR start "ruleStandardDomain"
    // InternalAsmetaL.g:2808:1: ruleStandardDomain returns [EObject current=null] : (this_IntegerDomain_0= ruleIntegerDomain | this_RealDomain_1= ruleRealDomain | this_StringDomain_2= ruleStringDomain | this_NaturalDomain_3= ruleNaturalDomain | this_CharDomain_4= ruleCharDomain | this_ComplexDomain_5= ruleComplexDomain | this_BooleanDomain_6= ruleBooleanDomain | this_UndefDomain_7= ruleUndefDomain ) ;
    public final EObject ruleStandardDomain() throws RecognitionException {
        EObject current = null;

        EObject this_IntegerDomain_0 = null;

        EObject this_RealDomain_1 = null;

        EObject this_StringDomain_2 = null;

        EObject this_NaturalDomain_3 = null;

        EObject this_CharDomain_4 = null;

        EObject this_ComplexDomain_5 = null;

        EObject this_BooleanDomain_6 = null;

        EObject this_UndefDomain_7 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2814:2: ( (this_IntegerDomain_0= ruleIntegerDomain | this_RealDomain_1= ruleRealDomain | this_StringDomain_2= ruleStringDomain | this_NaturalDomain_3= ruleNaturalDomain | this_CharDomain_4= ruleCharDomain | this_ComplexDomain_5= ruleComplexDomain | this_BooleanDomain_6= ruleBooleanDomain | this_UndefDomain_7= ruleUndefDomain ) )
            // InternalAsmetaL.g:2815:2: (this_IntegerDomain_0= ruleIntegerDomain | this_RealDomain_1= ruleRealDomain | this_StringDomain_2= ruleStringDomain | this_NaturalDomain_3= ruleNaturalDomain | this_CharDomain_4= ruleCharDomain | this_ComplexDomain_5= ruleComplexDomain | this_BooleanDomain_6= ruleBooleanDomain | this_UndefDomain_7= ruleUndefDomain )
            {
            // InternalAsmetaL.g:2815:2: (this_IntegerDomain_0= ruleIntegerDomain | this_RealDomain_1= ruleRealDomain | this_StringDomain_2= ruleStringDomain | this_NaturalDomain_3= ruleNaturalDomain | this_CharDomain_4= ruleCharDomain | this_ComplexDomain_5= ruleComplexDomain | this_BooleanDomain_6= ruleBooleanDomain | this_UndefDomain_7= ruleUndefDomain )
            int alt55=8;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt55=1;
                }
                break;
            case 62:
                {
                alt55=2;
                }
                break;
            case 63:
                {
                alt55=3;
                }
                break;
            case 64:
                {
                alt55=4;
                }
                break;
            case 65:
                {
                alt55=5;
                }
                break;
            case 66:
                {
                alt55=6;
                }
                break;
            case 67:
                {
                alt55=7;
                }
                break;
            case 68:
                {
                alt55=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }

            switch (alt55) {
                case 1 :
                    // InternalAsmetaL.g:2816:3: this_IntegerDomain_0= ruleIntegerDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getIntegerDomainParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IntegerDomain_0=ruleIntegerDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntegerDomain_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2828:3: this_RealDomain_1= ruleRealDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getRealDomainParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RealDomain_1=ruleRealDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RealDomain_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:2840:3: this_StringDomain_2= ruleStringDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getStringDomainParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StringDomain_2=ruleStringDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringDomain_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:2852:3: this_NaturalDomain_3= ruleNaturalDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getNaturalDomainParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NaturalDomain_3=ruleNaturalDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NaturalDomain_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:2864:3: this_CharDomain_4= ruleCharDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getCharDomainParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CharDomain_4=ruleCharDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CharDomain_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:2876:3: this_ComplexDomain_5= ruleComplexDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getComplexDomainParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ComplexDomain_5=ruleComplexDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ComplexDomain_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAsmetaL.g:2888:3: this_BooleanDomain_6= ruleBooleanDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getBooleanDomainParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanDomain_6=ruleBooleanDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BooleanDomain_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAsmetaL.g:2900:3: this_UndefDomain_7= ruleUndefDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getUndefDomainParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UndefDomain_7=ruleUndefDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UndefDomain_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStandardDomain"


    // $ANTLR start "entryRuleIntegerDomain"
    // InternalAsmetaL.g:2915:1: entryRuleIntegerDomain returns [EObject current=null] : iv_ruleIntegerDomain= ruleIntegerDomain EOF ;
    public final EObject entryRuleIntegerDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntegerDomain = null;


        try {
            // InternalAsmetaL.g:2915:54: (iv_ruleIntegerDomain= ruleIntegerDomain EOF )
            // InternalAsmetaL.g:2916:2: iv_ruleIntegerDomain= ruleIntegerDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntegerDomain=ruleIntegerDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntegerDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntegerDomain"


    // $ANTLR start "ruleIntegerDomain"
    // InternalAsmetaL.g:2922:1: ruleIntegerDomain returns [EObject current=null] : ( (lv_name_0_0= 'Integer' ) ) ;
    public final EObject ruleIntegerDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:2928:2: ( ( (lv_name_0_0= 'Integer' ) ) )
            // InternalAsmetaL.g:2929:2: ( (lv_name_0_0= 'Integer' ) )
            {
            // InternalAsmetaL.g:2929:2: ( (lv_name_0_0= 'Integer' ) )
            // InternalAsmetaL.g:2930:3: (lv_name_0_0= 'Integer' )
            {
            // InternalAsmetaL.g:2930:3: (lv_name_0_0= 'Integer' )
            // InternalAsmetaL.g:2931:4: lv_name_0_0= 'Integer'
            {
            lv_name_0_0=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getIntegerDomainAccess().getNameIntegerKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getIntegerDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Integer");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntegerDomain"


    // $ANTLR start "entryRuleRealDomain"
    // InternalAsmetaL.g:2946:1: entryRuleRealDomain returns [EObject current=null] : iv_ruleRealDomain= ruleRealDomain EOF ;
    public final EObject entryRuleRealDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRealDomain = null;


        try {
            // InternalAsmetaL.g:2946:51: (iv_ruleRealDomain= ruleRealDomain EOF )
            // InternalAsmetaL.g:2947:2: iv_ruleRealDomain= ruleRealDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealDomain=ruleRealDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealDomain"


    // $ANTLR start "ruleRealDomain"
    // InternalAsmetaL.g:2953:1: ruleRealDomain returns [EObject current=null] : ( (lv_name_0_0= 'Real' ) ) ;
    public final EObject ruleRealDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:2959:2: ( ( (lv_name_0_0= 'Real' ) ) )
            // InternalAsmetaL.g:2960:2: ( (lv_name_0_0= 'Real' ) )
            {
            // InternalAsmetaL.g:2960:2: ( (lv_name_0_0= 'Real' ) )
            // InternalAsmetaL.g:2961:3: (lv_name_0_0= 'Real' )
            {
            // InternalAsmetaL.g:2961:3: (lv_name_0_0= 'Real' )
            // InternalAsmetaL.g:2962:4: lv_name_0_0= 'Real'
            {
            lv_name_0_0=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getRealDomainAccess().getNameRealKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRealDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Real");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealDomain"


    // $ANTLR start "entryRuleStringDomain"
    // InternalAsmetaL.g:2977:1: entryRuleStringDomain returns [EObject current=null] : iv_ruleStringDomain= ruleStringDomain EOF ;
    public final EObject entryRuleStringDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringDomain = null;


        try {
            // InternalAsmetaL.g:2977:53: (iv_ruleStringDomain= ruleStringDomain EOF )
            // InternalAsmetaL.g:2978:2: iv_ruleStringDomain= ruleStringDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringDomain=ruleStringDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringDomain"


    // $ANTLR start "ruleStringDomain"
    // InternalAsmetaL.g:2984:1: ruleStringDomain returns [EObject current=null] : ( (lv_name_0_0= 'String' ) ) ;
    public final EObject ruleStringDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:2990:2: ( ( (lv_name_0_0= 'String' ) ) )
            // InternalAsmetaL.g:2991:2: ( (lv_name_0_0= 'String' ) )
            {
            // InternalAsmetaL.g:2991:2: ( (lv_name_0_0= 'String' ) )
            // InternalAsmetaL.g:2992:3: (lv_name_0_0= 'String' )
            {
            // InternalAsmetaL.g:2992:3: (lv_name_0_0= 'String' )
            // InternalAsmetaL.g:2993:4: lv_name_0_0= 'String'
            {
            lv_name_0_0=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getStringDomainAccess().getNameStringKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "String");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringDomain"


    // $ANTLR start "entryRuleNaturalDomain"
    // InternalAsmetaL.g:3008:1: entryRuleNaturalDomain returns [EObject current=null] : iv_ruleNaturalDomain= ruleNaturalDomain EOF ;
    public final EObject entryRuleNaturalDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNaturalDomain = null;


        try {
            // InternalAsmetaL.g:3008:54: (iv_ruleNaturalDomain= ruleNaturalDomain EOF )
            // InternalAsmetaL.g:3009:2: iv_ruleNaturalDomain= ruleNaturalDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNaturalDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNaturalDomain=ruleNaturalDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNaturalDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNaturalDomain"


    // $ANTLR start "ruleNaturalDomain"
    // InternalAsmetaL.g:3015:1: ruleNaturalDomain returns [EObject current=null] : ( (lv_name_0_0= 'Natural' ) ) ;
    public final EObject ruleNaturalDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3021:2: ( ( (lv_name_0_0= 'Natural' ) ) )
            // InternalAsmetaL.g:3022:2: ( (lv_name_0_0= 'Natural' ) )
            {
            // InternalAsmetaL.g:3022:2: ( (lv_name_0_0= 'Natural' ) )
            // InternalAsmetaL.g:3023:3: (lv_name_0_0= 'Natural' )
            {
            // InternalAsmetaL.g:3023:3: (lv_name_0_0= 'Natural' )
            // InternalAsmetaL.g:3024:4: lv_name_0_0= 'Natural'
            {
            lv_name_0_0=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getNaturalDomainAccess().getNameNaturalKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNaturalDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Natural");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNaturalDomain"


    // $ANTLR start "entryRuleCharDomain"
    // InternalAsmetaL.g:3039:1: entryRuleCharDomain returns [EObject current=null] : iv_ruleCharDomain= ruleCharDomain EOF ;
    public final EObject entryRuleCharDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCharDomain = null;


        try {
            // InternalAsmetaL.g:3039:51: (iv_ruleCharDomain= ruleCharDomain EOF )
            // InternalAsmetaL.g:3040:2: iv_ruleCharDomain= ruleCharDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCharDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCharDomain=ruleCharDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCharDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCharDomain"


    // $ANTLR start "ruleCharDomain"
    // InternalAsmetaL.g:3046:1: ruleCharDomain returns [EObject current=null] : ( (lv_name_0_0= 'Char' ) ) ;
    public final EObject ruleCharDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3052:2: ( ( (lv_name_0_0= 'Char' ) ) )
            // InternalAsmetaL.g:3053:2: ( (lv_name_0_0= 'Char' ) )
            {
            // InternalAsmetaL.g:3053:2: ( (lv_name_0_0= 'Char' ) )
            // InternalAsmetaL.g:3054:3: (lv_name_0_0= 'Char' )
            {
            // InternalAsmetaL.g:3054:3: (lv_name_0_0= 'Char' )
            // InternalAsmetaL.g:3055:4: lv_name_0_0= 'Char'
            {
            lv_name_0_0=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getCharDomainAccess().getNameCharKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCharDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Char");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCharDomain"


    // $ANTLR start "entryRuleComplexDomain"
    // InternalAsmetaL.g:3070:1: entryRuleComplexDomain returns [EObject current=null] : iv_ruleComplexDomain= ruleComplexDomain EOF ;
    public final EObject entryRuleComplexDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComplexDomain = null;


        try {
            // InternalAsmetaL.g:3070:54: (iv_ruleComplexDomain= ruleComplexDomain EOF )
            // InternalAsmetaL.g:3071:2: iv_ruleComplexDomain= ruleComplexDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComplexDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComplexDomain=ruleComplexDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComplexDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComplexDomain"


    // $ANTLR start "ruleComplexDomain"
    // InternalAsmetaL.g:3077:1: ruleComplexDomain returns [EObject current=null] : ( (lv_name_0_0= 'Complex' ) ) ;
    public final EObject ruleComplexDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3083:2: ( ( (lv_name_0_0= 'Complex' ) ) )
            // InternalAsmetaL.g:3084:2: ( (lv_name_0_0= 'Complex' ) )
            {
            // InternalAsmetaL.g:3084:2: ( (lv_name_0_0= 'Complex' ) )
            // InternalAsmetaL.g:3085:3: (lv_name_0_0= 'Complex' )
            {
            // InternalAsmetaL.g:3085:3: (lv_name_0_0= 'Complex' )
            // InternalAsmetaL.g:3086:4: lv_name_0_0= 'Complex'
            {
            lv_name_0_0=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getComplexDomainAccess().getNameComplexKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getComplexDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Complex");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComplexDomain"


    // $ANTLR start "entryRuleBooleanDomain"
    // InternalAsmetaL.g:3101:1: entryRuleBooleanDomain returns [EObject current=null] : iv_ruleBooleanDomain= ruleBooleanDomain EOF ;
    public final EObject entryRuleBooleanDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanDomain = null;


        try {
            // InternalAsmetaL.g:3101:54: (iv_ruleBooleanDomain= ruleBooleanDomain EOF )
            // InternalAsmetaL.g:3102:2: iv_ruleBooleanDomain= ruleBooleanDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanDomain=ruleBooleanDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanDomain"


    // $ANTLR start "ruleBooleanDomain"
    // InternalAsmetaL.g:3108:1: ruleBooleanDomain returns [EObject current=null] : ( (lv_name_0_0= 'Boolean' ) ) ;
    public final EObject ruleBooleanDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3114:2: ( ( (lv_name_0_0= 'Boolean' ) ) )
            // InternalAsmetaL.g:3115:2: ( (lv_name_0_0= 'Boolean' ) )
            {
            // InternalAsmetaL.g:3115:2: ( (lv_name_0_0= 'Boolean' ) )
            // InternalAsmetaL.g:3116:3: (lv_name_0_0= 'Boolean' )
            {
            // InternalAsmetaL.g:3116:3: (lv_name_0_0= 'Boolean' )
            // InternalAsmetaL.g:3117:4: lv_name_0_0= 'Boolean'
            {
            lv_name_0_0=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getBooleanDomainAccess().getNameBooleanKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBooleanDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Boolean");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanDomain"


    // $ANTLR start "entryRuleUndefDomain"
    // InternalAsmetaL.g:3132:1: entryRuleUndefDomain returns [EObject current=null] : iv_ruleUndefDomain= ruleUndefDomain EOF ;
    public final EObject entryRuleUndefDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUndefDomain = null;


        try {
            // InternalAsmetaL.g:3132:52: (iv_ruleUndefDomain= ruleUndefDomain EOF )
            // InternalAsmetaL.g:3133:2: iv_ruleUndefDomain= ruleUndefDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUndefDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUndefDomain=ruleUndefDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUndefDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUndefDomain"


    // $ANTLR start "ruleUndefDomain"
    // InternalAsmetaL.g:3139:1: ruleUndefDomain returns [EObject current=null] : ( (lv_name_0_0= 'Undef' ) ) ;
    public final EObject ruleUndefDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3145:2: ( ( (lv_name_0_0= 'Undef' ) ) )
            // InternalAsmetaL.g:3146:2: ( (lv_name_0_0= 'Undef' ) )
            {
            // InternalAsmetaL.g:3146:2: ( (lv_name_0_0= 'Undef' ) )
            // InternalAsmetaL.g:3147:3: (lv_name_0_0= 'Undef' )
            {
            // InternalAsmetaL.g:3147:3: (lv_name_0_0= 'Undef' )
            // InternalAsmetaL.g:3148:4: lv_name_0_0= 'Undef'
            {
            lv_name_0_0=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getUndefDomainAccess().getNameUndefKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getUndefDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Undef");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUndefDomain"


    // $ANTLR start "entryRuleAbstractTD"
    // InternalAsmetaL.g:3163:1: entryRuleAbstractTD returns [EObject current=null] : iv_ruleAbstractTD= ruleAbstractTD EOF ;
    public final EObject entryRuleAbstractTD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractTD = null;


        try {
            // InternalAsmetaL.g:3163:51: (iv_ruleAbstractTD= ruleAbstractTD EOF )
            // InternalAsmetaL.g:3164:2: iv_ruleAbstractTD= ruleAbstractTD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractTDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAbstractTD=ruleAbstractTD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractTD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractTD"


    // $ANTLR start "ruleAbstractTD"
    // InternalAsmetaL.g:3170:1: ruleAbstractTD returns [EObject current=null] : (this_GenericAbstractTD_0= ruleGenericAbstractTD | this_AgentDomain_1= ruleAgentDomain | this_ReserveDomain_2= ruleReserveDomain ) ;
    public final EObject ruleAbstractTD() throws RecognitionException {
        EObject current = null;

        EObject this_GenericAbstractTD_0 = null;

        EObject this_AgentDomain_1 = null;

        EObject this_ReserveDomain_2 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3176:2: ( (this_GenericAbstractTD_0= ruleGenericAbstractTD | this_AgentDomain_1= ruleAgentDomain | this_ReserveDomain_2= ruleReserveDomain ) )
            // InternalAsmetaL.g:3177:2: (this_GenericAbstractTD_0= ruleGenericAbstractTD | this_AgentDomain_1= ruleAgentDomain | this_ReserveDomain_2= ruleReserveDomain )
            {
            // InternalAsmetaL.g:3177:2: (this_GenericAbstractTD_0= ruleGenericAbstractTD | this_AgentDomain_1= ruleAgentDomain | this_ReserveDomain_2= ruleReserveDomain )
            int alt56=3;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==57) ) {
                int LA56_1 = input.LA(2);

                if ( (LA56_1==69) ) {
                    int LA56_2 = input.LA(3);

                    if ( (LA56_2==38) ) {
                        switch ( input.LA(4) ) {
                        case RULE_ID:
                            {
                            alt56=1;
                            }
                            break;
                        case 43:
                            {
                            alt56=2;
                            }
                            break;
                        case 70:
                            {
                            alt56=3;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 56, 3, input);

                            throw nvae;
                        }

                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA56_0==69) ) {
                int LA56_2 = input.LA(2);

                if ( (LA56_2==38) ) {
                    switch ( input.LA(3) ) {
                    case RULE_ID:
                        {
                        alt56=1;
                        }
                        break;
                    case 43:
                        {
                        alt56=2;
                        }
                        break;
                    case 70:
                        {
                        alt56=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 56, 3, input);

                        throw nvae;
                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 56, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalAsmetaL.g:3178:3: this_GenericAbstractTD_0= ruleGenericAbstractTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbstractTDAccess().getGenericAbstractTDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_GenericAbstractTD_0=ruleGenericAbstractTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_GenericAbstractTD_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:3190:3: this_AgentDomain_1= ruleAgentDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbstractTDAccess().getAgentDomainParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AgentDomain_1=ruleAgentDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AgentDomain_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:3202:3: this_ReserveDomain_2= ruleReserveDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbstractTDAccess().getReserveDomainParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ReserveDomain_2=ruleReserveDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReserveDomain_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractTD"


    // $ANTLR start "entryRuleGenericAbstractTD"
    // InternalAsmetaL.g:3217:1: entryRuleGenericAbstractTD returns [EObject current=null] : iv_ruleGenericAbstractTD= ruleGenericAbstractTD EOF ;
    public final EObject entryRuleGenericAbstractTD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGenericAbstractTD = null;


        try {
            // InternalAsmetaL.g:3217:58: (iv_ruleGenericAbstractTD= ruleGenericAbstractTD EOF )
            // InternalAsmetaL.g:3218:2: iv_ruleGenericAbstractTD= ruleGenericAbstractTD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGenericAbstractTDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGenericAbstractTD=ruleGenericAbstractTD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGenericAbstractTD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGenericAbstractTD"


    // $ANTLR start "ruleGenericAbstractTD"
    // InternalAsmetaL.g:3224:1: ruleGenericAbstractTD returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= RULE_ID ) ) ) ;
    public final EObject ruleGenericAbstractTD() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3230:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= RULE_ID ) ) ) )
            // InternalAsmetaL.g:3231:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= RULE_ID ) ) )
            {
            // InternalAsmetaL.g:3231:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= RULE_ID ) ) )
            // InternalAsmetaL.g:3232:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= RULE_ID ) )
            {
            // InternalAsmetaL.g:3232:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==57) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalAsmetaL.g:3233:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:3233:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:3234:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,57,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getGenericAbstractTDAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGenericAbstractTDRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,69,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGenericAbstractTDAccess().getAbstractKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,38,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGenericAbstractTDAccess().getDomainKeyword_2());
              		
            }
            // InternalAsmetaL.g:3254:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalAsmetaL.g:3255:4: (lv_name_3_0= RULE_ID )
            {
            // InternalAsmetaL.g:3255:4: (lv_name_3_0= RULE_ID )
            // InternalAsmetaL.g:3256:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getGenericAbstractTDAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGenericAbstractTDRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGenericAbstractTD"


    // $ANTLR start "entryRuleAgentDomain"
    // InternalAsmetaL.g:3276:1: entryRuleAgentDomain returns [EObject current=null] : iv_ruleAgentDomain= ruleAgentDomain EOF ;
    public final EObject entryRuleAgentDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAgentDomain = null;


        try {
            // InternalAsmetaL.g:3276:52: (iv_ruleAgentDomain= ruleAgentDomain EOF )
            // InternalAsmetaL.g:3277:2: iv_ruleAgentDomain= ruleAgentDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAgentDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAgentDomain=ruleAgentDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAgentDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAgentDomain"


    // $ANTLR start "ruleAgentDomain"
    // InternalAsmetaL.g:3283:1: ruleAgentDomain returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Agent' ) ) ) ;
    public final EObject ruleAgentDomain() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3289:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Agent' ) ) ) )
            // InternalAsmetaL.g:3290:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Agent' ) ) )
            {
            // InternalAsmetaL.g:3290:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Agent' ) ) )
            // InternalAsmetaL.g:3291:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Agent' ) )
            {
            // InternalAsmetaL.g:3291:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==57) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalAsmetaL.g:3292:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:3292:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:3293:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,57,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getAgentDomainAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAgentDomainRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,69,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAgentDomainAccess().getAbstractKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,38,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAgentDomainAccess().getDomainKeyword_2());
              		
            }
            // InternalAsmetaL.g:3313:3: ( (lv_name_3_0= 'Agent' ) )
            // InternalAsmetaL.g:3314:4: (lv_name_3_0= 'Agent' )
            {
            // InternalAsmetaL.g:3314:4: (lv_name_3_0= 'Agent' )
            // InternalAsmetaL.g:3315:5: lv_name_3_0= 'Agent'
            {
            lv_name_3_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getAgentDomainAccess().getNameAgentKeyword_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAgentDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_3_0, "Agent");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAgentDomain"


    // $ANTLR start "entryRuleReserveDomain"
    // InternalAsmetaL.g:3331:1: entryRuleReserveDomain returns [EObject current=null] : iv_ruleReserveDomain= ruleReserveDomain EOF ;
    public final EObject entryRuleReserveDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReserveDomain = null;


        try {
            // InternalAsmetaL.g:3331:54: (iv_ruleReserveDomain= ruleReserveDomain EOF )
            // InternalAsmetaL.g:3332:2: iv_ruleReserveDomain= ruleReserveDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReserveDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReserveDomain=ruleReserveDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReserveDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReserveDomain"


    // $ANTLR start "ruleReserveDomain"
    // InternalAsmetaL.g:3338:1: ruleReserveDomain returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Reserve' ) ) ) ;
    public final EObject ruleReserveDomain() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3344:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Reserve' ) ) ) )
            // InternalAsmetaL.g:3345:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Reserve' ) ) )
            {
            // InternalAsmetaL.g:3345:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Reserve' ) ) )
            // InternalAsmetaL.g:3346:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Reserve' ) )
            {
            // InternalAsmetaL.g:3346:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==57) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalAsmetaL.g:3347:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:3347:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:3348:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,57,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getReserveDomainAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getReserveDomainRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,69,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReserveDomainAccess().getAbstractKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,38,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getReserveDomainAccess().getDomainKeyword_2());
              		
            }
            // InternalAsmetaL.g:3368:3: ( (lv_name_3_0= 'Reserve' ) )
            // InternalAsmetaL.g:3369:4: (lv_name_3_0= 'Reserve' )
            {
            // InternalAsmetaL.g:3369:4: (lv_name_3_0= 'Reserve' )
            // InternalAsmetaL.g:3370:5: lv_name_3_0= 'Reserve'
            {
            lv_name_3_0=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getReserveDomainAccess().getNameReserveKeyword_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReserveDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_3_0, "Reserve");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReserveDomain"


    // $ANTLR start "entryRuleEnumTD"
    // InternalAsmetaL.g:3386:1: entryRuleEnumTD returns [EObject current=null] : iv_ruleEnumTD= ruleEnumTD EOF ;
    public final EObject entryRuleEnumTD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumTD = null;


        try {
            // InternalAsmetaL.g:3386:47: (iv_ruleEnumTD= ruleEnumTD EOF )
            // InternalAsmetaL.g:3387:2: iv_ruleEnumTD= ruleEnumTD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumTDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumTD=ruleEnumTD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumTD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumTD"


    // $ANTLR start "ruleEnumTD"
    // InternalAsmetaL.g:3393:1: ruleEnumTD returns [EObject current=null] : (otherlv_0= 'enum' otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' otherlv_4= '{' ( (lv_element_5_0= ruleEnumElement ) ) ( (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) ) )* otherlv_9= '}' ) ;
    public final EObject ruleEnumTD() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_element_5_0 = null;

        EObject lv_element_8_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3399:2: ( (otherlv_0= 'enum' otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' otherlv_4= '{' ( (lv_element_5_0= ruleEnumElement ) ) ( (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) ) )* otherlv_9= '}' ) )
            // InternalAsmetaL.g:3400:2: (otherlv_0= 'enum' otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' otherlv_4= '{' ( (lv_element_5_0= ruleEnumElement ) ) ( (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) ) )* otherlv_9= '}' )
            {
            // InternalAsmetaL.g:3400:2: (otherlv_0= 'enum' otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' otherlv_4= '{' ( (lv_element_5_0= ruleEnumElement ) ) ( (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) ) )* otherlv_9= '}' )
            // InternalAsmetaL.g:3401:3: otherlv_0= 'enum' otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' otherlv_4= '{' ( (lv_element_5_0= ruleEnumElement ) ) ( (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) ) )* otherlv_9= '}'
            {
            otherlv_0=(Token)match(input,71,FOLLOW_52); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEnumTDAccess().getEnumKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,38,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEnumTDAccess().getDomainKeyword_1());
              		
            }
            // InternalAsmetaL.g:3409:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalAsmetaL.g:3410:4: (lv_name_2_0= RULE_ID )
            {
            // InternalAsmetaL.g:3410:4: (lv_name_2_0= RULE_ID )
            // InternalAsmetaL.g:3411:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getEnumTDAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEnumTDRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,39,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEnumTDAccess().getEqualsSignKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,72,FOLLOW_59); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getEnumTDAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalAsmetaL.g:3435:3: ( (lv_element_5_0= ruleEnumElement ) )
            // InternalAsmetaL.g:3436:4: (lv_element_5_0= ruleEnumElement )
            {
            // InternalAsmetaL.g:3436:4: (lv_element_5_0= ruleEnumElement )
            // InternalAsmetaL.g:3437:5: lv_element_5_0= ruleEnumElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumTDAccess().getElementEnumElementParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_60);
            lv_element_5_0=ruleEnumElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumTDRule());
              					}
              					add(
              						current,
              						"element",
              						lv_element_5_0,
              						"org.asmeta.xt.AsmetaL.EnumElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:3454:3: ( (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) ) )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==31||LA61_0==73) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalAsmetaL.g:3455:4: (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) )
            	    {
            	    // InternalAsmetaL.g:3455:4: (otherlv_6= '|' | otherlv_7= ',' )
            	    int alt60=2;
            	    int LA60_0 = input.LA(1);

            	    if ( (LA60_0==73) ) {
            	        alt60=1;
            	    }
            	    else if ( (LA60_0==31) ) {
            	        alt60=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 60, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt60) {
            	        case 1 :
            	            // InternalAsmetaL.g:3456:5: otherlv_6= '|'
            	            {
            	            otherlv_6=(Token)match(input,73,FOLLOW_59); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_6, grammarAccess.getEnumTDAccess().getVerticalLineKeyword_6_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:3461:5: otherlv_7= ','
            	            {
            	            otherlv_7=(Token)match(input,31,FOLLOW_59); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_7, grammarAccess.getEnumTDAccess().getCommaKeyword_6_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalAsmetaL.g:3466:4: ( (lv_element_8_0= ruleEnumElement ) )
            	    // InternalAsmetaL.g:3467:5: (lv_element_8_0= ruleEnumElement )
            	    {
            	    // InternalAsmetaL.g:3467:5: (lv_element_8_0= ruleEnumElement )
            	    // InternalAsmetaL.g:3468:6: lv_element_8_0= ruleEnumElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEnumTDAccess().getElementEnumElementParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_element_8_0=ruleEnumElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEnumTDRule());
            	      						}
            	      						add(
            	      							current,
            	      							"element",
            	      							lv_element_8_0,
            	      							"org.asmeta.xt.AsmetaL.EnumElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            otherlv_9=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getEnumTDAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumTD"


    // $ANTLR start "entryRuleEnumElement"
    // InternalAsmetaL.g:3494:1: entryRuleEnumElement returns [EObject current=null] : iv_ruleEnumElement= ruleEnumElement EOF ;
    public final EObject entryRuleEnumElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumElement = null;


        try {
            // InternalAsmetaL.g:3494:52: (iv_ruleEnumElement= ruleEnumElement EOF )
            // InternalAsmetaL.g:3495:2: iv_ruleEnumElement= ruleEnumElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumElement=ruleEnumElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumElement"


    // $ANTLR start "ruleEnumElement"
    // InternalAsmetaL.g:3501:1: ruleEnumElement returns [EObject current=null] : ( (lv_symbol_0_0= RULE_ENUM_ID ) ) ;
    public final EObject ruleEnumElement() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3507:2: ( ( (lv_symbol_0_0= RULE_ENUM_ID ) ) )
            // InternalAsmetaL.g:3508:2: ( (lv_symbol_0_0= RULE_ENUM_ID ) )
            {
            // InternalAsmetaL.g:3508:2: ( (lv_symbol_0_0= RULE_ENUM_ID ) )
            // InternalAsmetaL.g:3509:3: (lv_symbol_0_0= RULE_ENUM_ID )
            {
            // InternalAsmetaL.g:3509:3: (lv_symbol_0_0= RULE_ENUM_ID )
            // InternalAsmetaL.g:3510:4: lv_symbol_0_0= RULE_ENUM_ID
            {
            lv_symbol_0_0=(Token)match(input,RULE_ENUM_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getEnumElementAccess().getSymbolENUM_IDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEnumElementRule());
              				}
              				setWithLastConsumed(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.ENUM_ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumElement"


    // $ANTLR start "entryRuleStructuredTD"
    // InternalAsmetaL.g:3529:1: entryRuleStructuredTD returns [EObject current=null] : iv_ruleStructuredTD= ruleStructuredTD EOF ;
    public final EObject entryRuleStructuredTD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuredTD = null;


        try {
            // InternalAsmetaL.g:3529:53: (iv_ruleStructuredTD= ruleStructuredTD EOF )
            // InternalAsmetaL.g:3530:2: iv_ruleStructuredTD= ruleStructuredTD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuredTDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructuredTD=ruleStructuredTD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuredTD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuredTD"


    // $ANTLR start "ruleStructuredTD"
    // InternalAsmetaL.g:3536:1: ruleStructuredTD returns [EObject current=null] : (this_RuleDomain_0= ruleRuleDomain | this_ProductDomain_1= ruleProductDomain | this_SequenceDomain_2= ruleSequenceDomain | this_PowersetDomain_3= rulePowersetDomain | this_BagDomain_4= ruleBagDomain | this_MapDomain_5= ruleMapDomain ) ;
    public final EObject ruleStructuredTD() throws RecognitionException {
        EObject current = null;

        EObject this_RuleDomain_0 = null;

        EObject this_ProductDomain_1 = null;

        EObject this_SequenceDomain_2 = null;

        EObject this_PowersetDomain_3 = null;

        EObject this_BagDomain_4 = null;

        EObject this_MapDomain_5 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3542:2: ( (this_RuleDomain_0= ruleRuleDomain | this_ProductDomain_1= ruleProductDomain | this_SequenceDomain_2= ruleSequenceDomain | this_PowersetDomain_3= rulePowersetDomain | this_BagDomain_4= ruleBagDomain | this_MapDomain_5= ruleMapDomain ) )
            // InternalAsmetaL.g:3543:2: (this_RuleDomain_0= ruleRuleDomain | this_ProductDomain_1= ruleProductDomain | this_SequenceDomain_2= ruleSequenceDomain | this_PowersetDomain_3= rulePowersetDomain | this_BagDomain_4= ruleBagDomain | this_MapDomain_5= ruleMapDomain )
            {
            // InternalAsmetaL.g:3543:2: (this_RuleDomain_0= ruleRuleDomain | this_ProductDomain_1= ruleProductDomain | this_SequenceDomain_2= ruleSequenceDomain | this_PowersetDomain_3= rulePowersetDomain | this_BagDomain_4= ruleBagDomain | this_MapDomain_5= ruleMapDomain )
            int alt62=6;
            switch ( input.LA(1) ) {
            case 75:
                {
                alt62=1;
                }
                break;
            case 76:
                {
                alt62=2;
                }
                break;
            case 77:
                {
                alt62=3;
                }
                break;
            case 78:
                {
                alt62=4;
                }
                break;
            case 79:
                {
                alt62=5;
                }
                break;
            case 80:
                {
                alt62=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }

            switch (alt62) {
                case 1 :
                    // InternalAsmetaL.g:3544:3: this_RuleDomain_0= ruleRuleDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuredTDAccess().getRuleDomainParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RuleDomain_0=ruleRuleDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RuleDomain_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:3556:3: this_ProductDomain_1= ruleProductDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuredTDAccess().getProductDomainParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ProductDomain_1=ruleProductDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ProductDomain_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:3568:3: this_SequenceDomain_2= ruleSequenceDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuredTDAccess().getSequenceDomainParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SequenceDomain_2=ruleSequenceDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SequenceDomain_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:3580:3: this_PowersetDomain_3= rulePowersetDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuredTDAccess().getPowersetDomainParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PowersetDomain_3=rulePowersetDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PowersetDomain_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:3592:3: this_BagDomain_4= ruleBagDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuredTDAccess().getBagDomainParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BagDomain_4=ruleBagDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BagDomain_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:3604:3: this_MapDomain_5= ruleMapDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuredTDAccess().getMapDomainParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MapDomain_5=ruleMapDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MapDomain_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuredTD"


    // $ANTLR start "entryRuleRuleDomain"
    // InternalAsmetaL.g:3619:1: entryRuleRuleDomain returns [EObject current=null] : iv_ruleRuleDomain= ruleRuleDomain EOF ;
    public final EObject entryRuleRuleDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRuleDomain = null;


        try {
            // InternalAsmetaL.g:3619:51: (iv_ruleRuleDomain= ruleRuleDomain EOF )
            // InternalAsmetaL.g:3620:2: iv_ruleRuleDomain= ruleRuleDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRuleDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRuleDomain=ruleRuleDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRuleDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRuleDomain"


    // $ANTLR start "ruleRuleDomain"
    // InternalAsmetaL.g:3626:1: ruleRuleDomain returns [EObject current=null] : ( () ( (lv_name_1_0= 'Rule' ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? ) ;
    public final EObject ruleRuleDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_domains_3_0 = null;

        EObject lv_domains_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3632:2: ( ( () ( (lv_name_1_0= 'Rule' ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? ) )
            // InternalAsmetaL.g:3633:2: ( () ( (lv_name_1_0= 'Rule' ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? )
            {
            // InternalAsmetaL.g:3633:2: ( () ( (lv_name_1_0= 'Rule' ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? )
            // InternalAsmetaL.g:3634:3: () ( (lv_name_1_0= 'Rule' ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )?
            {
            // InternalAsmetaL.g:3634:3: ()
            // InternalAsmetaL.g:3635:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRuleDomainAccess().getRuleDomainAction_0(),
              					current);
              			
            }

            }

            // InternalAsmetaL.g:3644:3: ( (lv_name_1_0= 'Rule' ) )
            // InternalAsmetaL.g:3645:4: (lv_name_1_0= 'Rule' )
            {
            // InternalAsmetaL.g:3645:4: (lv_name_1_0= 'Rule' )
            // InternalAsmetaL.g:3646:5: lv_name_1_0= 'Rule'
            {
            lv_name_1_0=(Token)match(input,75,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getRuleDomainAccess().getNameRuleKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRuleDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_1_0, "Rule");
              				
            }

            }


            }

            // InternalAsmetaL.g:3658:3: (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==30) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // InternalAsmetaL.g:3659:4: otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,30,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRuleDomainAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalAsmetaL.g:3663:4: ( (lv_domains_3_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:3664:5: (lv_domains_3_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:3664:5: (lv_domains_3_0= rulegetDomainByID )
                    // InternalAsmetaL.g:3665:6: lv_domains_3_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRuleDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_domains_3_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRuleDomainRule());
                      						}
                      						add(
                      							current,
                      							"domains",
                      							lv_domains_3_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:3682:4: (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( (LA63_0==31) ) {
                            alt63=1;
                        }


                        switch (alt63) {
                    	case 1 :
                    	    // InternalAsmetaL.g:3683:5: otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) )
                    	    {
                    	    otherlv_4=(Token)match(input,31,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getRuleDomainAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:3687:5: ( (lv_domains_5_0= rulegetDomainByID ) )
                    	    // InternalAsmetaL.g:3688:6: (lv_domains_5_0= rulegetDomainByID )
                    	    {
                    	    // InternalAsmetaL.g:3688:6: (lv_domains_5_0= rulegetDomainByID )
                    	    // InternalAsmetaL.g:3689:7: lv_domains_5_0= rulegetDomainByID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getRuleDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_domains_5_0=rulegetDomainByID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getRuleDomainRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domains",
                    	      								lv_domains_5_0,
                    	      								"org.asmeta.xt.AsmetaL.getDomainByID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getRuleDomainAccess().getRightParenthesisKeyword_2_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRuleDomain"


    // $ANTLR start "entryRuleProductDomain"
    // InternalAsmetaL.g:3716:1: entryRuleProductDomain returns [EObject current=null] : iv_ruleProductDomain= ruleProductDomain EOF ;
    public final EObject entryRuleProductDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProductDomain = null;


        try {
            // InternalAsmetaL.g:3716:54: (iv_ruleProductDomain= ruleProductDomain EOF )
            // InternalAsmetaL.g:3717:2: iv_ruleProductDomain= ruleProductDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProductDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProductDomain=ruleProductDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProductDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProductDomain"


    // $ANTLR start "ruleProductDomain"
    // InternalAsmetaL.g:3723:1: ruleProductDomain returns [EObject current=null] : ( ( (lv_name_0_0= 'Prod' ) ) otherlv_1= '(' ( (lv_domains_2_0= rulegetDomainByID ) ) (otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) ) )+ otherlv_5= ')' ) ;
    public final EObject ruleProductDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_domains_2_0 = null;

        EObject lv_domains_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3729:2: ( ( ( (lv_name_0_0= 'Prod' ) ) otherlv_1= '(' ( (lv_domains_2_0= rulegetDomainByID ) ) (otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) ) )+ otherlv_5= ')' ) )
            // InternalAsmetaL.g:3730:2: ( ( (lv_name_0_0= 'Prod' ) ) otherlv_1= '(' ( (lv_domains_2_0= rulegetDomainByID ) ) (otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) ) )+ otherlv_5= ')' )
            {
            // InternalAsmetaL.g:3730:2: ( ( (lv_name_0_0= 'Prod' ) ) otherlv_1= '(' ( (lv_domains_2_0= rulegetDomainByID ) ) (otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) ) )+ otherlv_5= ')' )
            // InternalAsmetaL.g:3731:3: ( (lv_name_0_0= 'Prod' ) ) otherlv_1= '(' ( (lv_domains_2_0= rulegetDomainByID ) ) (otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) ) )+ otherlv_5= ')'
            {
            // InternalAsmetaL.g:3731:3: ( (lv_name_0_0= 'Prod' ) )
            // InternalAsmetaL.g:3732:4: (lv_name_0_0= 'Prod' )
            {
            // InternalAsmetaL.g:3732:4: (lv_name_0_0= 'Prod' )
            // InternalAsmetaL.g:3733:5: lv_name_0_0= 'Prod'
            {
            lv_name_0_0=(Token)match(input,76,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getProductDomainAccess().getNameProdKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getProductDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "Prod");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,30,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getProductDomainAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:3749:3: ( (lv_domains_2_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:3750:4: (lv_domains_2_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:3750:4: (lv_domains_2_0= rulegetDomainByID )
            // InternalAsmetaL.g:3751:5: lv_domains_2_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getProductDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_domains_2_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getProductDomainRule());
              					}
              					add(
              						current,
              						"domains",
              						lv_domains_2_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:3768:3: (otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) ) )+
            int cnt65=0;
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==31) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalAsmetaL.g:3769:4: otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) )
            	    {
            	    otherlv_3=(Token)match(input,31,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getProductDomainAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:3773:4: ( (lv_domains_4_0= rulegetDomainByID ) )
            	    // InternalAsmetaL.g:3774:5: (lv_domains_4_0= rulegetDomainByID )
            	    {
            	    // InternalAsmetaL.g:3774:5: (lv_domains_4_0= rulegetDomainByID )
            	    // InternalAsmetaL.g:3775:6: lv_domains_4_0= rulegetDomainByID
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getProductDomainAccess().getDomainsGetDomainByIDParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_domains_4_0=rulegetDomainByID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getProductDomainRule());
            	      						}
            	      						add(
            	      							current,
            	      							"domains",
            	      							lv_domains_4_0,
            	      							"org.asmeta.xt.AsmetaL.getDomainByID");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt65 >= 1 ) break loop65;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(65, input);
                        throw eee;
                }
                cnt65++;
            } while (true);

            otherlv_5=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getProductDomainAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProductDomain"


    // $ANTLR start "entryRuleSequenceDomain"
    // InternalAsmetaL.g:3801:1: entryRuleSequenceDomain returns [EObject current=null] : iv_ruleSequenceDomain= ruleSequenceDomain EOF ;
    public final EObject entryRuleSequenceDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceDomain = null;


        try {
            // InternalAsmetaL.g:3801:55: (iv_ruleSequenceDomain= ruleSequenceDomain EOF )
            // InternalAsmetaL.g:3802:2: iv_ruleSequenceDomain= ruleSequenceDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceDomain=ruleSequenceDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceDomain"


    // $ANTLR start "ruleSequenceDomain"
    // InternalAsmetaL.g:3808:1: ruleSequenceDomain returns [EObject current=null] : ( ( (lv_name_0_0= 'Seq' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' ) ;
    public final EObject ruleSequenceDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_domain_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3814:2: ( ( ( (lv_name_0_0= 'Seq' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' ) )
            // InternalAsmetaL.g:3815:2: ( ( (lv_name_0_0= 'Seq' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' )
            {
            // InternalAsmetaL.g:3815:2: ( ( (lv_name_0_0= 'Seq' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' )
            // InternalAsmetaL.g:3816:3: ( (lv_name_0_0= 'Seq' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')'
            {
            // InternalAsmetaL.g:3816:3: ( (lv_name_0_0= 'Seq' ) )
            // InternalAsmetaL.g:3817:4: (lv_name_0_0= 'Seq' )
            {
            // InternalAsmetaL.g:3817:4: (lv_name_0_0= 'Seq' )
            // InternalAsmetaL.g:3818:5: lv_name_0_0= 'Seq'
            {
            lv_name_0_0=(Token)match(input,77,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getSequenceDomainAccess().getNameSeqKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSequenceDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "Seq");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,30,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSequenceDomainAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:3834:3: ( (lv_domain_2_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:3835:4: (lv_domain_2_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:3835:4: (lv_domain_2_0= rulegetDomainByID )
            // InternalAsmetaL.g:3836:5: lv_domain_2_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSequenceDomainAccess().getDomainGetDomainByIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_49);
            lv_domain_2_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSequenceDomainRule());
              					}
              					set(
              						current,
              						"domain",
              						lv_domain_2_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSequenceDomainAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceDomain"


    // $ANTLR start "entryRulePowersetDomain"
    // InternalAsmetaL.g:3861:1: entryRulePowersetDomain returns [EObject current=null] : iv_rulePowersetDomain= rulePowersetDomain EOF ;
    public final EObject entryRulePowersetDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePowersetDomain = null;


        try {
            // InternalAsmetaL.g:3861:55: (iv_rulePowersetDomain= rulePowersetDomain EOF )
            // InternalAsmetaL.g:3862:2: iv_rulePowersetDomain= rulePowersetDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPowersetDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePowersetDomain=rulePowersetDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePowersetDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePowersetDomain"


    // $ANTLR start "rulePowersetDomain"
    // InternalAsmetaL.g:3868:1: rulePowersetDomain returns [EObject current=null] : ( ( (lv_name_0_0= 'Powerset' ) ) otherlv_1= '(' ( (lv_baseDomain_2_0= rulegetDomainByID ) ) otherlv_3= ')' ) ;
    public final EObject rulePowersetDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_baseDomain_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3874:2: ( ( ( (lv_name_0_0= 'Powerset' ) ) otherlv_1= '(' ( (lv_baseDomain_2_0= rulegetDomainByID ) ) otherlv_3= ')' ) )
            // InternalAsmetaL.g:3875:2: ( ( (lv_name_0_0= 'Powerset' ) ) otherlv_1= '(' ( (lv_baseDomain_2_0= rulegetDomainByID ) ) otherlv_3= ')' )
            {
            // InternalAsmetaL.g:3875:2: ( ( (lv_name_0_0= 'Powerset' ) ) otherlv_1= '(' ( (lv_baseDomain_2_0= rulegetDomainByID ) ) otherlv_3= ')' )
            // InternalAsmetaL.g:3876:3: ( (lv_name_0_0= 'Powerset' ) ) otherlv_1= '(' ( (lv_baseDomain_2_0= rulegetDomainByID ) ) otherlv_3= ')'
            {
            // InternalAsmetaL.g:3876:3: ( (lv_name_0_0= 'Powerset' ) )
            // InternalAsmetaL.g:3877:4: (lv_name_0_0= 'Powerset' )
            {
            // InternalAsmetaL.g:3877:4: (lv_name_0_0= 'Powerset' )
            // InternalAsmetaL.g:3878:5: lv_name_0_0= 'Powerset'
            {
            lv_name_0_0=(Token)match(input,78,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getPowersetDomainAccess().getNamePowersetKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPowersetDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "Powerset");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,30,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPowersetDomainAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:3894:3: ( (lv_baseDomain_2_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:3895:4: (lv_baseDomain_2_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:3895:4: (lv_baseDomain_2_0= rulegetDomainByID )
            // InternalAsmetaL.g:3896:5: lv_baseDomain_2_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPowersetDomainAccess().getBaseDomainGetDomainByIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_49);
            lv_baseDomain_2_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPowersetDomainRule());
              					}
              					set(
              						current,
              						"baseDomain",
              						lv_baseDomain_2_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPowersetDomainAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePowersetDomain"


    // $ANTLR start "entryRuleBagDomain"
    // InternalAsmetaL.g:3921:1: entryRuleBagDomain returns [EObject current=null] : iv_ruleBagDomain= ruleBagDomain EOF ;
    public final EObject entryRuleBagDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBagDomain = null;


        try {
            // InternalAsmetaL.g:3921:50: (iv_ruleBagDomain= ruleBagDomain EOF )
            // InternalAsmetaL.g:3922:2: iv_ruleBagDomain= ruleBagDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBagDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBagDomain=ruleBagDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBagDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBagDomain"


    // $ANTLR start "ruleBagDomain"
    // InternalAsmetaL.g:3928:1: ruleBagDomain returns [EObject current=null] : ( ( (lv_name_0_0= 'Bag' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' ) ;
    public final EObject ruleBagDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_domain_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3934:2: ( ( ( (lv_name_0_0= 'Bag' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' ) )
            // InternalAsmetaL.g:3935:2: ( ( (lv_name_0_0= 'Bag' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' )
            {
            // InternalAsmetaL.g:3935:2: ( ( (lv_name_0_0= 'Bag' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' )
            // InternalAsmetaL.g:3936:3: ( (lv_name_0_0= 'Bag' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')'
            {
            // InternalAsmetaL.g:3936:3: ( (lv_name_0_0= 'Bag' ) )
            // InternalAsmetaL.g:3937:4: (lv_name_0_0= 'Bag' )
            {
            // InternalAsmetaL.g:3937:4: (lv_name_0_0= 'Bag' )
            // InternalAsmetaL.g:3938:5: lv_name_0_0= 'Bag'
            {
            lv_name_0_0=(Token)match(input,79,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getBagDomainAccess().getNameBagKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getBagDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "Bag");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,30,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBagDomainAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:3954:3: ( (lv_domain_2_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:3955:4: (lv_domain_2_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:3955:4: (lv_domain_2_0= rulegetDomainByID )
            // InternalAsmetaL.g:3956:5: lv_domain_2_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBagDomainAccess().getDomainGetDomainByIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_49);
            lv_domain_2_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBagDomainRule());
              					}
              					set(
              						current,
              						"domain",
              						lv_domain_2_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getBagDomainAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBagDomain"


    // $ANTLR start "entryRuleMapDomain"
    // InternalAsmetaL.g:3981:1: entryRuleMapDomain returns [EObject current=null] : iv_ruleMapDomain= ruleMapDomain EOF ;
    public final EObject entryRuleMapDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapDomain = null;


        try {
            // InternalAsmetaL.g:3981:50: (iv_ruleMapDomain= ruleMapDomain EOF )
            // InternalAsmetaL.g:3982:2: iv_ruleMapDomain= ruleMapDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapDomain=ruleMapDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapDomain"


    // $ANTLR start "ruleMapDomain"
    // InternalAsmetaL.g:3988:1: ruleMapDomain returns [EObject current=null] : ( ( (lv_name_0_0= 'Map' ) ) otherlv_1= '(' ( (lv_sourceDomain_2_0= rulegetDomainByID ) ) otherlv_3= ',' ( (lv_targetDomain_4_0= rulegetDomainByID ) ) otherlv_5= ')' ) ;
    public final EObject ruleMapDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_sourceDomain_2_0 = null;

        EObject lv_targetDomain_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3994:2: ( ( ( (lv_name_0_0= 'Map' ) ) otherlv_1= '(' ( (lv_sourceDomain_2_0= rulegetDomainByID ) ) otherlv_3= ',' ( (lv_targetDomain_4_0= rulegetDomainByID ) ) otherlv_5= ')' ) )
            // InternalAsmetaL.g:3995:2: ( ( (lv_name_0_0= 'Map' ) ) otherlv_1= '(' ( (lv_sourceDomain_2_0= rulegetDomainByID ) ) otherlv_3= ',' ( (lv_targetDomain_4_0= rulegetDomainByID ) ) otherlv_5= ')' )
            {
            // InternalAsmetaL.g:3995:2: ( ( (lv_name_0_0= 'Map' ) ) otherlv_1= '(' ( (lv_sourceDomain_2_0= rulegetDomainByID ) ) otherlv_3= ',' ( (lv_targetDomain_4_0= rulegetDomainByID ) ) otherlv_5= ')' )
            // InternalAsmetaL.g:3996:3: ( (lv_name_0_0= 'Map' ) ) otherlv_1= '(' ( (lv_sourceDomain_2_0= rulegetDomainByID ) ) otherlv_3= ',' ( (lv_targetDomain_4_0= rulegetDomainByID ) ) otherlv_5= ')'
            {
            // InternalAsmetaL.g:3996:3: ( (lv_name_0_0= 'Map' ) )
            // InternalAsmetaL.g:3997:4: (lv_name_0_0= 'Map' )
            {
            // InternalAsmetaL.g:3997:4: (lv_name_0_0= 'Map' )
            // InternalAsmetaL.g:3998:5: lv_name_0_0= 'Map'
            {
            lv_name_0_0=(Token)match(input,80,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getMapDomainAccess().getNameMapKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMapDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "Map");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,30,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapDomainAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:4014:3: ( (lv_sourceDomain_2_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4015:4: (lv_sourceDomain_2_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4015:4: (lv_sourceDomain_2_0= rulegetDomainByID )
            // InternalAsmetaL.g:4016:5: lv_sourceDomain_2_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapDomainAccess().getSourceDomainGetDomainByIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_sourceDomain_2_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapDomainRule());
              					}
              					set(
              						current,
              						"sourceDomain",
              						lv_sourceDomain_2_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,31,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMapDomainAccess().getCommaKeyword_3());
              		
            }
            // InternalAsmetaL.g:4037:3: ( (lv_targetDomain_4_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4038:4: (lv_targetDomain_4_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4038:4: (lv_targetDomain_4_0= rulegetDomainByID )
            // InternalAsmetaL.g:4039:5: lv_targetDomain_4_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapDomainAccess().getTargetDomainGetDomainByIDParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_49);
            lv_targetDomain_4_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapDomainRule());
              					}
              					set(
              						current,
              						"targetDomain",
              						lv_targetDomain_4_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMapDomainAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapDomain"


    // $ANTLR start "entryRulegetDomainByID"
    // InternalAsmetaL.g:4064:1: entryRulegetDomainByID returns [EObject current=null] : iv_rulegetDomainByID= rulegetDomainByID EOF ;
    public final EObject entryRulegetDomainByID() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegetDomainByID = null;


        try {
            // InternalAsmetaL.g:4064:54: (iv_rulegetDomainByID= rulegetDomainByID EOF )
            // InternalAsmetaL.g:4065:2: iv_rulegetDomainByID= rulegetDomainByID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGetDomainByIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegetDomainByID=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegetDomainByID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegetDomainByID"


    // $ANTLR start "rulegetDomainByID"
    // InternalAsmetaL.g:4071:1: rulegetDomainByID returns [EObject current=null] : (this_StructuredTD_0= ruleStructuredTD | this_nameofDomain_1= rulenameofDomain | this_StandardDomain_2= ruleStandardDomain | this_AbstractTD_3= ruleAbstractTD | ( (lv_name_4_0= 'Agent' ) ) | ( (lv_name_5_0= 'Reserve' ) ) ) ;
    public final EObject rulegetDomainByID() throws RecognitionException {
        EObject current = null;

        Token lv_name_4_0=null;
        Token lv_name_5_0=null;
        EObject this_StructuredTD_0 = null;

        EObject this_nameofDomain_1 = null;

        EObject this_StandardDomain_2 = null;

        EObject this_AbstractTD_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4077:2: ( (this_StructuredTD_0= ruleStructuredTD | this_nameofDomain_1= rulenameofDomain | this_StandardDomain_2= ruleStandardDomain | this_AbstractTD_3= ruleAbstractTD | ( (lv_name_4_0= 'Agent' ) ) | ( (lv_name_5_0= 'Reserve' ) ) ) )
            // InternalAsmetaL.g:4078:2: (this_StructuredTD_0= ruleStructuredTD | this_nameofDomain_1= rulenameofDomain | this_StandardDomain_2= ruleStandardDomain | this_AbstractTD_3= ruleAbstractTD | ( (lv_name_4_0= 'Agent' ) ) | ( (lv_name_5_0= 'Reserve' ) ) )
            {
            // InternalAsmetaL.g:4078:2: (this_StructuredTD_0= ruleStructuredTD | this_nameofDomain_1= rulenameofDomain | this_StandardDomain_2= ruleStandardDomain | this_AbstractTD_3= ruleAbstractTD | ( (lv_name_4_0= 'Agent' ) ) | ( (lv_name_5_0= 'Reserve' ) ) )
            int alt66=6;
            switch ( input.LA(1) ) {
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
                {
                alt66=1;
                }
                break;
            case RULE_ID:
                {
                alt66=2;
                }
                break;
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
                {
                alt66=3;
                }
                break;
            case 57:
            case 69:
                {
                alt66=4;
                }
                break;
            case 43:
                {
                alt66=5;
                }
                break;
            case 70:
                {
                alt66=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }

            switch (alt66) {
                case 1 :
                    // InternalAsmetaL.g:4079:3: this_StructuredTD_0= ruleStructuredTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGetDomainByIDAccess().getStructuredTDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StructuredTD_0=ruleStructuredTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructuredTD_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:4091:3: this_nameofDomain_1= rulenameofDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGetDomainByIDAccess().getNameofDomainParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_nameofDomain_1=rulenameofDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_nameofDomain_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:4103:3: this_StandardDomain_2= ruleStandardDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGetDomainByIDAccess().getStandardDomainParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StandardDomain_2=ruleStandardDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StandardDomain_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:4115:3: this_AbstractTD_3= ruleAbstractTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGetDomainByIDAccess().getAbstractTDParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AbstractTD_3=ruleAbstractTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AbstractTD_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:4127:3: ( (lv_name_4_0= 'Agent' ) )
                    {
                    // InternalAsmetaL.g:4127:3: ( (lv_name_4_0= 'Agent' ) )
                    // InternalAsmetaL.g:4128:4: (lv_name_4_0= 'Agent' )
                    {
                    // InternalAsmetaL.g:4128:4: (lv_name_4_0= 'Agent' )
                    // InternalAsmetaL.g:4129:5: lv_name_4_0= 'Agent'
                    {
                    lv_name_4_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_4_0, grammarAccess.getGetDomainByIDAccess().getNameAgentKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGetDomainByIDRule());
                      					}
                      					setWithLastConsumed(current, "name", lv_name_4_0, "Agent");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:4142:3: ( (lv_name_5_0= 'Reserve' ) )
                    {
                    // InternalAsmetaL.g:4142:3: ( (lv_name_5_0= 'Reserve' ) )
                    // InternalAsmetaL.g:4143:4: (lv_name_5_0= 'Reserve' )
                    {
                    // InternalAsmetaL.g:4143:4: (lv_name_5_0= 'Reserve' )
                    // InternalAsmetaL.g:4144:5: lv_name_5_0= 'Reserve'
                    {
                    lv_name_5_0=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_5_0, grammarAccess.getGetDomainByIDAccess().getNameReserveKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGetDomainByIDRule());
                      					}
                      					setWithLastConsumed(current, "name", lv_name_5_0, "Reserve");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegetDomainByID"


    // $ANTLR start "entryRuleFunction"
    // InternalAsmetaL.g:4160:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalAsmetaL.g:4160:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalAsmetaL.g:4161:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalAsmetaL.g:4167:1: ruleFunction returns [EObject current=null] : (this_BasicFunction_0= ruleBasicFunction | this_DerivedFunction_1= ruleDerivedFunction ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        EObject this_BasicFunction_0 = null;

        EObject this_DerivedFunction_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4173:2: ( (this_BasicFunction_0= ruleBasicFunction | this_DerivedFunction_1= ruleDerivedFunction ) )
            // InternalAsmetaL.g:4174:2: (this_BasicFunction_0= ruleBasicFunction | this_DerivedFunction_1= ruleDerivedFunction )
            {
            // InternalAsmetaL.g:4174:2: (this_BasicFunction_0= ruleBasicFunction | this_DerivedFunction_1= ruleDerivedFunction )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==57||(LA67_0>=83 && LA67_0<=88)) ) {
                alt67=1;
            }
            else if ( (LA67_0==81) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // InternalAsmetaL.g:4175:3: this_BasicFunction_0= ruleBasicFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionAccess().getBasicFunctionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BasicFunction_0=ruleBasicFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BasicFunction_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:4187:3: this_DerivedFunction_1= ruleDerivedFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionAccess().getDerivedFunctionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DerivedFunction_1=ruleDerivedFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DerivedFunction_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleBasicFunction"
    // InternalAsmetaL.g:4202:1: entryRuleBasicFunction returns [EObject current=null] : iv_ruleBasicFunction= ruleBasicFunction EOF ;
    public final EObject entryRuleBasicFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasicFunction = null;


        try {
            // InternalAsmetaL.g:4202:54: (iv_ruleBasicFunction= ruleBasicFunction EOF )
            // InternalAsmetaL.g:4203:2: iv_ruleBasicFunction= ruleBasicFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicFunction=ruleBasicFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicFunction"


    // $ANTLR start "ruleBasicFunction"
    // InternalAsmetaL.g:4209:1: ruleBasicFunction returns [EObject current=null] : (this_StaticFunction_0= ruleStaticFunction | this_DynamicFunction_1= ruleDynamicFunction ) ;
    public final EObject ruleBasicFunction() throws RecognitionException {
        EObject current = null;

        EObject this_StaticFunction_0 = null;

        EObject this_DynamicFunction_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4215:2: ( (this_StaticFunction_0= ruleStaticFunction | this_DynamicFunction_1= ruleDynamicFunction ) )
            // InternalAsmetaL.g:4216:2: (this_StaticFunction_0= ruleStaticFunction | this_DynamicFunction_1= ruleDynamicFunction )
            {
            // InternalAsmetaL.g:4216:2: (this_StaticFunction_0= ruleStaticFunction | this_DynamicFunction_1= ruleDynamicFunction )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==83) ) {
                alt68=1;
            }
            else if ( (LA68_0==57||(LA68_0>=84 && LA68_0<=88)) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalAsmetaL.g:4217:3: this_StaticFunction_0= ruleStaticFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicFunctionAccess().getStaticFunctionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StaticFunction_0=ruleStaticFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StaticFunction_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:4229:3: this_DynamicFunction_1= ruleDynamicFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicFunctionAccess().getDynamicFunctionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DynamicFunction_1=ruleDynamicFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DynamicFunction_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicFunction"


    // $ANTLR start "entryRuleDerivedFunction"
    // InternalAsmetaL.g:4244:1: entryRuleDerivedFunction returns [EObject current=null] : iv_ruleDerivedFunction= ruleDerivedFunction EOF ;
    public final EObject entryRuleDerivedFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDerivedFunction = null;


        try {
            // InternalAsmetaL.g:4244:56: (iv_ruleDerivedFunction= ruleDerivedFunction EOF )
            // InternalAsmetaL.g:4245:2: iv_ruleDerivedFunction= ruleDerivedFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDerivedFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDerivedFunction=ruleDerivedFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDerivedFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDerivedFunction"


    // $ANTLR start "ruleDerivedFunction"
    // InternalAsmetaL.g:4251:1: ruleDerivedFunction returns [EObject current=null] : (otherlv_0= 'derived' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleDerivedFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_domain_3_0 = null;

        EObject lv_codomain_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4257:2: ( (otherlv_0= 'derived' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4258:2: (otherlv_0= 'derived' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4258:2: (otherlv_0= 'derived' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4259:3: otherlv_0= 'derived' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) )
            {
            otherlv_0=(Token)match(input,81,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDerivedFunctionAccess().getDerivedKeyword_0());
              		
            }
            // InternalAsmetaL.g:4263:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalAsmetaL.g:4264:4: (lv_name_1_0= RULE_ID )
            {
            // InternalAsmetaL.g:4264:4: (lv_name_1_0= RULE_ID )
            // InternalAsmetaL.g:4265:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDerivedFunctionAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDerivedFunctionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,36,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDerivedFunctionAccess().getColonKeyword_2());
              		
            }
            // InternalAsmetaL.g:4285:3: ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )?
            int alt69=2;
            alt69 = dfa69.predict(input);
            switch (alt69) {
                case 1 :
                    // InternalAsmetaL.g:4286:4: ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->'
                    {
                    // InternalAsmetaL.g:4286:4: ( (lv_domain_3_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4287:5: (lv_domain_3_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4287:5: (lv_domain_3_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4288:6: lv_domain_3_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDerivedFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_3_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDerivedFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_3_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,82,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDerivedFunctionAccess().getHyphenMinusGreaterThanSignKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4310:3: ( (lv_codomain_5_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4311:4: (lv_codomain_5_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4311:4: (lv_codomain_5_0= rulegetDomainByID )
            // InternalAsmetaL.g:4312:5: lv_codomain_5_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDerivedFunctionAccess().getCodomainGetDomainByIDParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_5_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDerivedFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_5_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDerivedFunction"


    // $ANTLR start "entryRuleStaticFunction"
    // InternalAsmetaL.g:4333:1: entryRuleStaticFunction returns [EObject current=null] : iv_ruleStaticFunction= ruleStaticFunction EOF ;
    public final EObject entryRuleStaticFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStaticFunction = null;


        try {
            // InternalAsmetaL.g:4333:55: (iv_ruleStaticFunction= ruleStaticFunction EOF )
            // InternalAsmetaL.g:4334:2: iv_ruleStaticFunction= ruleStaticFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStaticFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStaticFunction=ruleStaticFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStaticFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStaticFunction"


    // $ANTLR start "ruleStaticFunction"
    // InternalAsmetaL.g:4340:1: ruleStaticFunction returns [EObject current=null] : (otherlv_0= 'static' ( (lv_name_1_0= ruleextendedNameForFunction ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleStaticFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_domain_3_0 = null;

        EObject lv_codomain_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4346:2: ( (otherlv_0= 'static' ( (lv_name_1_0= ruleextendedNameForFunction ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4347:2: (otherlv_0= 'static' ( (lv_name_1_0= ruleextendedNameForFunction ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4347:2: (otherlv_0= 'static' ( (lv_name_1_0= ruleextendedNameForFunction ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4348:3: otherlv_0= 'static' ( (lv_name_1_0= ruleextendedNameForFunction ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) )
            {
            otherlv_0=(Token)match(input,83,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStaticFunctionAccess().getStaticKeyword_0());
              		
            }
            // InternalAsmetaL.g:4352:3: ( (lv_name_1_0= ruleextendedNameForFunction ) )
            // InternalAsmetaL.g:4353:4: (lv_name_1_0= ruleextendedNameForFunction )
            {
            // InternalAsmetaL.g:4353:4: (lv_name_1_0= ruleextendedNameForFunction )
            // InternalAsmetaL.g:4354:5: lv_name_1_0= ruleextendedNameForFunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStaticFunctionAccess().getNameExtendedNameForFunctionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_1_0=ruleextendedNameForFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStaticFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.asmeta.xt.AsmetaL.extendedNameForFunction");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,36,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getStaticFunctionAccess().getColonKeyword_2());
              		
            }
            // InternalAsmetaL.g:4375:3: ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )?
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    // InternalAsmetaL.g:4376:4: ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->'
                    {
                    // InternalAsmetaL.g:4376:4: ( (lv_domain_3_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4377:5: (lv_domain_3_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4377:5: (lv_domain_3_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4378:6: lv_domain_3_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStaticFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_3_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStaticFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_3_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,82,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getStaticFunctionAccess().getHyphenMinusGreaterThanSignKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4400:3: ( (lv_codomain_5_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4401:4: (lv_codomain_5_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4401:4: (lv_codomain_5_0= rulegetDomainByID )
            // InternalAsmetaL.g:4402:5: lv_codomain_5_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStaticFunctionAccess().getCodomainGetDomainByIDParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_5_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStaticFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_5_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStaticFunction"


    // $ANTLR start "entryRuleDynamicFunction"
    // InternalAsmetaL.g:4423:1: entryRuleDynamicFunction returns [EObject current=null] : iv_ruleDynamicFunction= ruleDynamicFunction EOF ;
    public final EObject entryRuleDynamicFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDynamicFunction = null;


        try {
            // InternalAsmetaL.g:4423:56: (iv_ruleDynamicFunction= ruleDynamicFunction EOF )
            // InternalAsmetaL.g:4424:2: iv_ruleDynamicFunction= ruleDynamicFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDynamicFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDynamicFunction=ruleDynamicFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDynamicFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDynamicFunction"


    // $ANTLR start "ruleDynamicFunction"
    // InternalAsmetaL.g:4430:1: ruleDynamicFunction returns [EObject current=null] : (this_OutFunction_0= ruleOutFunction | this_MonitoredFunction_1= ruleMonitoredFunction | this_SharedFunction_2= ruleSharedFunction | this_ControlledFunction_3= ruleControlledFunction | this_LocalFunction_4= ruleLocalFunction ) ;
    public final EObject ruleDynamicFunction() throws RecognitionException {
        EObject current = null;

        EObject this_OutFunction_0 = null;

        EObject this_MonitoredFunction_1 = null;

        EObject this_SharedFunction_2 = null;

        EObject this_ControlledFunction_3 = null;

        EObject this_LocalFunction_4 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4436:2: ( (this_OutFunction_0= ruleOutFunction | this_MonitoredFunction_1= ruleMonitoredFunction | this_SharedFunction_2= ruleSharedFunction | this_ControlledFunction_3= ruleControlledFunction | this_LocalFunction_4= ruleLocalFunction ) )
            // InternalAsmetaL.g:4437:2: (this_OutFunction_0= ruleOutFunction | this_MonitoredFunction_1= ruleMonitoredFunction | this_SharedFunction_2= ruleSharedFunction | this_ControlledFunction_3= ruleControlledFunction | this_LocalFunction_4= ruleLocalFunction )
            {
            // InternalAsmetaL.g:4437:2: (this_OutFunction_0= ruleOutFunction | this_MonitoredFunction_1= ruleMonitoredFunction | this_SharedFunction_2= ruleSharedFunction | this_ControlledFunction_3= ruleControlledFunction | this_LocalFunction_4= ruleLocalFunction )
            int alt71=5;
            switch ( input.LA(1) ) {
            case 57:
                {
                switch ( input.LA(2) ) {
                case 87:
                    {
                    alt71=2;
                    }
                    break;
                case 84:
                    {
                    alt71=5;
                    }
                    break;
                case 86:
                    {
                    alt71=3;
                    }
                    break;
                case 88:
                    {
                    alt71=1;
                    }
                    break;
                case 85:
                    {
                    alt71=4;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 1, input);

                    throw nvae;
                }

                }
                break;
            case 88:
                {
                alt71=1;
                }
                break;
            case 87:
                {
                alt71=2;
                }
                break;
            case 86:
                {
                alt71=3;
                }
                break;
            case 85:
                {
                alt71=4;
                }
                break;
            case 84:
                {
                alt71=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }

            switch (alt71) {
                case 1 :
                    // InternalAsmetaL.g:4438:3: this_OutFunction_0= ruleOutFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getOutFunctionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OutFunction_0=ruleOutFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OutFunction_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:4450:3: this_MonitoredFunction_1= ruleMonitoredFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getMonitoredFunctionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MonitoredFunction_1=ruleMonitoredFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MonitoredFunction_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:4462:3: this_SharedFunction_2= ruleSharedFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getSharedFunctionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SharedFunction_2=ruleSharedFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SharedFunction_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:4474:3: this_ControlledFunction_3= ruleControlledFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getControlledFunctionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ControlledFunction_3=ruleControlledFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ControlledFunction_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:4486:3: this_LocalFunction_4= ruleLocalFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getLocalFunctionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LocalFunction_4=ruleLocalFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LocalFunction_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDynamicFunction"


    // $ANTLR start "entryRuleLocalFunction"
    // InternalAsmetaL.g:4501:1: entryRuleLocalFunction returns [EObject current=null] : iv_ruleLocalFunction= ruleLocalFunction EOF ;
    public final EObject entryRuleLocalFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalFunction = null;


        try {
            // InternalAsmetaL.g:4501:54: (iv_ruleLocalFunction= ruleLocalFunction EOF )
            // InternalAsmetaL.g:4502:2: iv_ruleLocalFunction= ruleLocalFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalFunction=ruleLocalFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalFunction"


    // $ANTLR start "ruleLocalFunction"
    // InternalAsmetaL.g:4508:1: ruleLocalFunction returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'local' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleLocalFunction() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_codomain_6_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4514:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'local' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4515:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'local' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4515:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'local' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4516:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'local' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) )
            {
            // InternalAsmetaL.g:4516:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==57) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // InternalAsmetaL.g:4517:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:4517:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:4518:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,57,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getLocalFunctionAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLocalFunctionRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,84,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLocalFunctionAccess().getLocalKeyword_1());
              		
            }
            // InternalAsmetaL.g:4534:3: ( (lv_name_2_0= ruleextendedName ) )
            // InternalAsmetaL.g:4535:4: (lv_name_2_0= ruleextendedName )
            {
            // InternalAsmetaL.g:4535:4: (lv_name_2_0= ruleextendedName )
            // InternalAsmetaL.g:4536:5: lv_name_2_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLocalFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_2_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLocalFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,36,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLocalFunctionAccess().getColonKeyword_3());
              		
            }
            // InternalAsmetaL.g:4557:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?
            int alt73=2;
            alt73 = dfa73.predict(input);
            switch (alt73) {
                case 1 :
                    // InternalAsmetaL.g:4558:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
                    {
                    // InternalAsmetaL.g:4558:4: ( (lv_domain_4_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4559:5: (lv_domain_4_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4559:5: (lv_domain_4_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4560:6: lv_domain_4_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLocalFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_4_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLocalFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,82,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getLocalFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4582:3: ( (lv_codomain_6_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4583:4: (lv_codomain_6_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4583:4: (lv_codomain_6_0= rulegetDomainByID )
            // InternalAsmetaL.g:4584:5: lv_codomain_6_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLocalFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_6_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLocalFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_6_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalFunction"


    // $ANTLR start "entryRuleControlledFunction"
    // InternalAsmetaL.g:4605:1: entryRuleControlledFunction returns [EObject current=null] : iv_ruleControlledFunction= ruleControlledFunction EOF ;
    public final EObject entryRuleControlledFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlledFunction = null;


        try {
            // InternalAsmetaL.g:4605:59: (iv_ruleControlledFunction= ruleControlledFunction EOF )
            // InternalAsmetaL.g:4606:2: iv_ruleControlledFunction= ruleControlledFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getControlledFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleControlledFunction=ruleControlledFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleControlledFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlledFunction"


    // $ANTLR start "ruleControlledFunction"
    // InternalAsmetaL.g:4612:1: ruleControlledFunction returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'controlled' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleControlledFunction() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_codomain_6_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4618:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'controlled' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4619:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'controlled' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4619:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'controlled' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4620:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'controlled' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) )
            {
            // InternalAsmetaL.g:4620:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==57) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalAsmetaL.g:4621:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:4621:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:4622:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,57,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getControlledFunctionAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getControlledFunctionRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,85,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getControlledFunctionAccess().getControlledKeyword_1());
              		
            }
            // InternalAsmetaL.g:4638:3: ( (lv_name_2_0= ruleextendedName ) )
            // InternalAsmetaL.g:4639:4: (lv_name_2_0= ruleextendedName )
            {
            // InternalAsmetaL.g:4639:4: (lv_name_2_0= ruleextendedName )
            // InternalAsmetaL.g:4640:5: lv_name_2_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getControlledFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_2_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getControlledFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,36,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getControlledFunctionAccess().getColonKeyword_3());
              		
            }
            // InternalAsmetaL.g:4661:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // InternalAsmetaL.g:4662:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
                    {
                    // InternalAsmetaL.g:4662:4: ( (lv_domain_4_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4663:5: (lv_domain_4_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4663:5: (lv_domain_4_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4664:6: lv_domain_4_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getControlledFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_4_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getControlledFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,82,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getControlledFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4686:3: ( (lv_codomain_6_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4687:4: (lv_codomain_6_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4687:4: (lv_codomain_6_0= rulegetDomainByID )
            // InternalAsmetaL.g:4688:5: lv_codomain_6_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getControlledFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_6_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getControlledFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_6_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlledFunction"


    // $ANTLR start "entryRuleSharedFunction"
    // InternalAsmetaL.g:4709:1: entryRuleSharedFunction returns [EObject current=null] : iv_ruleSharedFunction= ruleSharedFunction EOF ;
    public final EObject entryRuleSharedFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSharedFunction = null;


        try {
            // InternalAsmetaL.g:4709:55: (iv_ruleSharedFunction= ruleSharedFunction EOF )
            // InternalAsmetaL.g:4710:2: iv_ruleSharedFunction= ruleSharedFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSharedFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSharedFunction=ruleSharedFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSharedFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSharedFunction"


    // $ANTLR start "ruleSharedFunction"
    // InternalAsmetaL.g:4716:1: ruleSharedFunction returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'shared' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleSharedFunction() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_codomain_6_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4722:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'shared' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4723:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'shared' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4723:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'shared' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4724:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'shared' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) )
            {
            // InternalAsmetaL.g:4724:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==57) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalAsmetaL.g:4725:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:4725:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:4726:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,57,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getSharedFunctionAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSharedFunctionRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,86,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSharedFunctionAccess().getSharedKeyword_1());
              		
            }
            // InternalAsmetaL.g:4742:3: ( (lv_name_2_0= ruleextendedName ) )
            // InternalAsmetaL.g:4743:4: (lv_name_2_0= ruleextendedName )
            {
            // InternalAsmetaL.g:4743:4: (lv_name_2_0= ruleextendedName )
            // InternalAsmetaL.g:4744:5: lv_name_2_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSharedFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_2_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSharedFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,36,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSharedFunctionAccess().getColonKeyword_3());
              		
            }
            // InternalAsmetaL.g:4765:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?
            int alt77=2;
            alt77 = dfa77.predict(input);
            switch (alt77) {
                case 1 :
                    // InternalAsmetaL.g:4766:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
                    {
                    // InternalAsmetaL.g:4766:4: ( (lv_domain_4_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4767:5: (lv_domain_4_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4767:5: (lv_domain_4_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4768:6: lv_domain_4_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSharedFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_4_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSharedFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,82,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSharedFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4790:3: ( (lv_codomain_6_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4791:4: (lv_codomain_6_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4791:4: (lv_codomain_6_0= rulegetDomainByID )
            // InternalAsmetaL.g:4792:5: lv_codomain_6_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSharedFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_6_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSharedFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_6_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSharedFunction"


    // $ANTLR start "entryRuleMonitoredFunction"
    // InternalAsmetaL.g:4813:1: entryRuleMonitoredFunction returns [EObject current=null] : iv_ruleMonitoredFunction= ruleMonitoredFunction EOF ;
    public final EObject entryRuleMonitoredFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMonitoredFunction = null;


        try {
            // InternalAsmetaL.g:4813:58: (iv_ruleMonitoredFunction= ruleMonitoredFunction EOF )
            // InternalAsmetaL.g:4814:2: iv_ruleMonitoredFunction= ruleMonitoredFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMonitoredFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMonitoredFunction=ruleMonitoredFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMonitoredFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMonitoredFunction"


    // $ANTLR start "ruleMonitoredFunction"
    // InternalAsmetaL.g:4820:1: ruleMonitoredFunction returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'monitored' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleMonitoredFunction() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_codomain_6_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4826:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'monitored' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4827:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'monitored' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4827:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'monitored' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4828:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'monitored' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) )
            {
            // InternalAsmetaL.g:4828:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==57) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalAsmetaL.g:4829:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:4829:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:4830:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,57,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getMonitoredFunctionAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMonitoredFunctionRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,87,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMonitoredFunctionAccess().getMonitoredKeyword_1());
              		
            }
            // InternalAsmetaL.g:4846:3: ( (lv_name_2_0= ruleextendedName ) )
            // InternalAsmetaL.g:4847:4: (lv_name_2_0= ruleextendedName )
            {
            // InternalAsmetaL.g:4847:4: (lv_name_2_0= ruleextendedName )
            // InternalAsmetaL.g:4848:5: lv_name_2_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMonitoredFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_2_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMonitoredFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,36,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMonitoredFunctionAccess().getColonKeyword_3());
              		
            }
            // InternalAsmetaL.g:4869:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?
            int alt79=2;
            alt79 = dfa79.predict(input);
            switch (alt79) {
                case 1 :
                    // InternalAsmetaL.g:4870:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
                    {
                    // InternalAsmetaL.g:4870:4: ( (lv_domain_4_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4871:5: (lv_domain_4_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4871:5: (lv_domain_4_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4872:6: lv_domain_4_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMonitoredFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_4_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMonitoredFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,82,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getMonitoredFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4894:3: ( (lv_codomain_6_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4895:4: (lv_codomain_6_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4895:4: (lv_codomain_6_0= rulegetDomainByID )
            // InternalAsmetaL.g:4896:5: lv_codomain_6_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMonitoredFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_6_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMonitoredFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_6_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMonitoredFunction"


    // $ANTLR start "entryRuleOutFunction"
    // InternalAsmetaL.g:4917:1: entryRuleOutFunction returns [EObject current=null] : iv_ruleOutFunction= ruleOutFunction EOF ;
    public final EObject entryRuleOutFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOutFunction = null;


        try {
            // InternalAsmetaL.g:4917:52: (iv_ruleOutFunction= ruleOutFunction EOF )
            // InternalAsmetaL.g:4918:2: iv_ruleOutFunction= ruleOutFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOutFunction=ruleOutFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOutFunction"


    // $ANTLR start "ruleOutFunction"
    // InternalAsmetaL.g:4924:1: ruleOutFunction returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'out' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleOutFunction() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_codomain_6_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4930:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'out' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4931:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'out' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4931:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'out' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4932:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'out' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) )
            {
            // InternalAsmetaL.g:4932:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==57) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalAsmetaL.g:4933:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:4933:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:4934:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,57,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getOutFunctionAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOutFunctionRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,88,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getOutFunctionAccess().getOutKeyword_1());
              		
            }
            // InternalAsmetaL.g:4950:3: ( (lv_name_2_0= ruleextendedName ) )
            // InternalAsmetaL.g:4951:4: (lv_name_2_0= ruleextendedName )
            {
            // InternalAsmetaL.g:4951:4: (lv_name_2_0= ruleextendedName )
            // InternalAsmetaL.g:4952:5: lv_name_2_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_2_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOutFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,36,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getOutFunctionAccess().getColonKeyword_3());
              		
            }
            // InternalAsmetaL.g:4973:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?
            int alt81=2;
            alt81 = dfa81.predict(input);
            switch (alt81) {
                case 1 :
                    // InternalAsmetaL.g:4974:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
                    {
                    // InternalAsmetaL.g:4974:4: ( (lv_domain_4_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4975:5: (lv_domain_4_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4975:5: (lv_domain_4_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4976:6: lv_domain_4_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_4_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOutFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,82,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getOutFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4998:3: ( (lv_codomain_6_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4999:4: (lv_codomain_6_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4999:4: (lv_codomain_6_0= rulegetDomainByID )
            // InternalAsmetaL.g:5000:5: lv_codomain_6_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_6_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOutFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_6_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOutFunction"


    // $ANTLR start "entryRuleextendedNameForFunction"
    // InternalAsmetaL.g:5021:1: entryRuleextendedNameForFunction returns [String current=null] : iv_ruleextendedNameForFunction= ruleextendedNameForFunction EOF ;
    public final String entryRuleextendedNameForFunction() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleextendedNameForFunction = null;


        try {
            // InternalAsmetaL.g:5021:63: (iv_ruleextendedNameForFunction= ruleextendedNameForFunction EOF )
            // InternalAsmetaL.g:5022:2: iv_ruleextendedNameForFunction= ruleextendedNameForFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedNameForFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleextendedNameForFunction=ruleextendedNameForFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleextendedNameForFunction.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleextendedNameForFunction"


    // $ANTLR start "ruleextendedNameForFunction"
    // InternalAsmetaL.g:5028:1: ruleextendedNameForFunction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | kw= 'and' | kw= 'or' | kw= 'not' | kw= 'xor' | kw= 'mod' | kw= 'iff' | kw= 'implies' ) ;
    public final AntlrDatatypeRuleToken ruleextendedNameForFunction() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:5034:2: ( (this_ID_0= RULE_ID | kw= 'and' | kw= 'or' | kw= 'not' | kw= 'xor' | kw= 'mod' | kw= 'iff' | kw= 'implies' ) )
            // InternalAsmetaL.g:5035:2: (this_ID_0= RULE_ID | kw= 'and' | kw= 'or' | kw= 'not' | kw= 'xor' | kw= 'mod' | kw= 'iff' | kw= 'implies' )
            {
            // InternalAsmetaL.g:5035:2: (this_ID_0= RULE_ID | kw= 'and' | kw= 'or' | kw= 'not' | kw= 'xor' | kw= 'mod' | kw= 'iff' | kw= 'implies' )
            int alt82=8;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt82=1;
                }
                break;
            case 89:
                {
                alt82=2;
                }
                break;
            case 90:
                {
                alt82=3;
                }
                break;
            case 91:
                {
                alt82=4;
                }
                break;
            case 92:
                {
                alt82=5;
                }
                break;
            case 93:
                {
                alt82=6;
                }
                break;
            case 94:
                {
                alt82=7;
                }
                break;
            case 95:
                {
                alt82=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }

            switch (alt82) {
                case 1 :
                    // InternalAsmetaL.g:5036:3: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getExtendedNameForFunctionAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:5044:3: kw= 'and'
                    {
                    kw=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getAndKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:5050:3: kw= 'or'
                    {
                    kw=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getOrKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:5056:3: kw= 'not'
                    {
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getNotKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:5062:3: kw= 'xor'
                    {
                    kw=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getXorKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:5068:3: kw= 'mod'
                    {
                    kw=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getModKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAsmetaL.g:5074:3: kw= 'iff'
                    {
                    kw=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getIffKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAsmetaL.g:5080:3: kw= 'implies'
                    {
                    kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getImpliesKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleextendedNameForFunction"


    // $ANTLR start "entryRuleextendedNameForAsm"
    // InternalAsmetaL.g:5089:1: entryRuleextendedNameForAsm returns [String current=null] : iv_ruleextendedNameForAsm= ruleextendedNameForAsm EOF ;
    public final String entryRuleextendedNameForAsm() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleextendedNameForAsm = null;


        try {
            // InternalAsmetaL.g:5089:58: (iv_ruleextendedNameForAsm= ruleextendedNameForAsm EOF )
            // InternalAsmetaL.g:5090:2: iv_ruleextendedNameForAsm= ruleextendedNameForAsm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedNameForAsmRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleextendedNameForAsm=ruleextendedNameForAsm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleextendedNameForAsm.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleextendedNameForAsm"


    // $ANTLR start "ruleextendedNameForAsm"
    // InternalAsmetaL.g:5096:1: ruleextendedNameForAsm returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | this_ENUM_ID_1= RULE_ENUM_ID | kw= 'while' | kw= 'for' | kw= 'main' ) ;
    public final AntlrDatatypeRuleToken ruleextendedNameForAsm() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token this_ENUM_ID_1=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:5102:2: ( (this_ID_0= RULE_ID | this_ENUM_ID_1= RULE_ENUM_ID | kw= 'while' | kw= 'for' | kw= 'main' ) )
            // InternalAsmetaL.g:5103:2: (this_ID_0= RULE_ID | this_ENUM_ID_1= RULE_ENUM_ID | kw= 'while' | kw= 'for' | kw= 'main' )
            {
            // InternalAsmetaL.g:5103:2: (this_ID_0= RULE_ID | this_ENUM_ID_1= RULE_ENUM_ID | kw= 'while' | kw= 'for' | kw= 'main' )
            int alt83=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt83=1;
                }
                break;
            case RULE_ENUM_ID:
                {
                alt83=2;
                }
                break;
            case 96:
                {
                alt83=3;
                }
                break;
            case 97:
                {
                alt83=4;
                }
                break;
            case 27:
                {
                alt83=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }

            switch (alt83) {
                case 1 :
                    // InternalAsmetaL.g:5104:3: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getExtendedNameForAsmAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:5112:3: this_ENUM_ID_1= RULE_ENUM_ID
                    {
                    this_ENUM_ID_1=(Token)match(input,RULE_ENUM_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ENUM_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ENUM_ID_1, grammarAccess.getExtendedNameForAsmAccess().getENUM_IDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:5120:3: kw= 'while'
                    {
                    kw=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForAsmAccess().getWhileKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:5126:3: kw= 'for'
                    {
                    kw=(Token)match(input,97,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForAsmAccess().getForKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:5132:3: kw= 'main'
                    {
                    kw=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForAsmAccess().getMainKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleextendedNameForAsm"


    // $ANTLR start "entryRuleextendedName"
    // InternalAsmetaL.g:5141:1: entryRuleextendedName returns [String current=null] : iv_ruleextendedName= ruleextendedName EOF ;
    public final String entryRuleextendedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleextendedName = null;


        try {
            // InternalAsmetaL.g:5141:52: (iv_ruleextendedName= ruleextendedName EOF )
            // InternalAsmetaL.g:5142:2: iv_ruleextendedName= ruleextendedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleextendedName=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleextendedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleextendedName"


    // $ANTLR start "ruleextendedName"
    // InternalAsmetaL.g:5148:1: ruleextendedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_RULE_ID_0= RULE_RULE_ID | this_ID_1= RULE_ID | this_ENUM_ID_2= RULE_ENUM_ID ) ;
    public final AntlrDatatypeRuleToken ruleextendedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_RULE_ID_0=null;
        Token this_ID_1=null;
        Token this_ENUM_ID_2=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:5154:2: ( (this_RULE_ID_0= RULE_RULE_ID | this_ID_1= RULE_ID | this_ENUM_ID_2= RULE_ENUM_ID ) )
            // InternalAsmetaL.g:5155:2: (this_RULE_ID_0= RULE_RULE_ID | this_ID_1= RULE_ID | this_ENUM_ID_2= RULE_ENUM_ID )
            {
            // InternalAsmetaL.g:5155:2: (this_RULE_ID_0= RULE_RULE_ID | this_ID_1= RULE_ID | this_ENUM_ID_2= RULE_ENUM_ID )
            int alt84=3;
            switch ( input.LA(1) ) {
            case RULE_RULE_ID:
                {
                alt84=1;
                }
                break;
            case RULE_ID:
                {
                alt84=2;
                }
                break;
            case RULE_ENUM_ID:
                {
                alt84=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }

            switch (alt84) {
                case 1 :
                    // InternalAsmetaL.g:5156:3: this_RULE_ID_0= RULE_RULE_ID
                    {
                    this_RULE_ID_0=(Token)match(input,RULE_RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_RULE_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_RULE_ID_0, grammarAccess.getExtendedNameAccess().getRULE_IDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:5164:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_1, grammarAccess.getExtendedNameAccess().getIDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:5172:3: this_ENUM_ID_2= RULE_ENUM_ID
                    {
                    this_ENUM_ID_2=(Token)match(input,RULE_ENUM_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ENUM_ID_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ENUM_ID_2, grammarAccess.getExtendedNameAccess().getENUM_IDTerminalRuleCall_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleextendedName"


    // $ANTLR start "entryRuleTerm"
    // InternalAsmetaL.g:5183:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalAsmetaL.g:5183:45: (iv_ruleTerm= ruleTerm EOF )
            // InternalAsmetaL.g:5184:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalAsmetaL.g:5190:1: ruleTerm returns [EObject current=null] : (this_Expression_0= ruleExpression | this_DomainTerm_1= ruleDomainTerm | this_ExtendedTerm_2= ruleExtendedTerm ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;

        EObject this_DomainTerm_1 = null;

        EObject this_ExtendedTerm_2 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5196:2: ( (this_Expression_0= ruleExpression | this_DomainTerm_1= ruleDomainTerm | this_ExtendedTerm_2= ruleExtendedTerm ) )
            // InternalAsmetaL.g:5197:2: (this_Expression_0= ruleExpression | this_DomainTerm_1= ruleDomainTerm | this_ExtendedTerm_2= ruleExtendedTerm )
            {
            // InternalAsmetaL.g:5197:2: (this_Expression_0= ruleExpression | this_DomainTerm_1= ruleDomainTerm | this_ExtendedTerm_2= ruleExtendedTerm )
            int alt85=3;
            alt85 = dfa85.predict(input);
            switch (alt85) {
                case 1 :
                    // InternalAsmetaL.g:5198:3: this_Expression_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTermAccess().getExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:5210:3: this_DomainTerm_1= ruleDomainTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTermAccess().getDomainTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DomainTerm_1=ruleDomainTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DomainTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:5222:3: this_ExtendedTerm_2= ruleExtendedTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTermAccess().getExtendedTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExtendedTerm_2=ruleExtendedTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExtendedTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRuleDomainTerm"
    // InternalAsmetaL.g:5237:1: entryRuleDomainTerm returns [EObject current=null] : iv_ruleDomainTerm= ruleDomainTerm EOF ;
    public final EObject entryRuleDomainTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDomainTerm = null;


        try {
            // InternalAsmetaL.g:5237:51: (iv_ruleDomainTerm= ruleDomainTerm EOF )
            // InternalAsmetaL.g:5238:2: iv_ruleDomainTerm= ruleDomainTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDomainTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDomainTerm=ruleDomainTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDomainTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDomainTerm"


    // $ANTLR start "ruleDomainTerm"
    // InternalAsmetaL.g:5244:1: ruleDomainTerm returns [EObject current=null] : this_getDomainByID_0= rulegetDomainByID ;
    public final EObject ruleDomainTerm() throws RecognitionException {
        EObject current = null;

        EObject this_getDomainByID_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5250:2: (this_getDomainByID_0= rulegetDomainByID )
            // InternalAsmetaL.g:5251:2: this_getDomainByID_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getDomainTermAccess().getGetDomainByIDParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_getDomainByID_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_getDomainByID_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDomainTerm"


    // $ANTLR start "entryRuleExpression"
    // InternalAsmetaL.g:5265:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalAsmetaL.g:5265:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalAsmetaL.g:5266:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalAsmetaL.g:5272:1: ruleExpression returns [EObject current=null] : this_ImpliesIffExpression_0= ruleImpliesIffExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ImpliesIffExpression_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5278:2: (this_ImpliesIffExpression_0= ruleImpliesIffExpression )
            // InternalAsmetaL.g:5279:2: this_ImpliesIffExpression_0= ruleImpliesIffExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getImpliesIffExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ImpliesIffExpression_0=ruleImpliesIffExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ImpliesIffExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleImpliesIffExpression"
    // InternalAsmetaL.g:5293:1: entryRuleImpliesIffExpression returns [EObject current=null] : iv_ruleImpliesIffExpression= ruleImpliesIffExpression EOF ;
    public final EObject entryRuleImpliesIffExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesIffExpression = null;


        try {
            // InternalAsmetaL.g:5293:61: (iv_ruleImpliesIffExpression= ruleImpliesIffExpression EOF )
            // InternalAsmetaL.g:5294:2: iv_ruleImpliesIffExpression= ruleImpliesIffExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesIffExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesIffExpression=ruleImpliesIffExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesIffExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesIffExpression"


    // $ANTLR start "ruleImpliesIffExpression"
    // InternalAsmetaL.g:5300:1: ruleImpliesIffExpression returns [EObject current=null] : (this_XorOrExpression_0= ruleXorOrExpression ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )* ) ;
    public final EObject ruleImpliesIffExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject this_XorOrExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5306:2: ( (this_XorOrExpression_0= ruleXorOrExpression ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )* ) )
            // InternalAsmetaL.g:5307:2: (this_XorOrExpression_0= ruleXorOrExpression ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )* )
            {
            // InternalAsmetaL.g:5307:2: (this_XorOrExpression_0= ruleXorOrExpression ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )* )
            // InternalAsmetaL.g:5308:3: this_XorOrExpression_0= ruleXorOrExpression ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getImpliesIffExpressionAccess().getXorOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_67);
            this_XorOrExpression_0=ruleXorOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XorOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5319:3: ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )*
            loop87:
            do {
                int alt87=2;
                alt87 = dfa87.predict(input);
                switch (alt87) {
            	case 1 :
            	    // InternalAsmetaL.g:5320:4: ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) )
            	    {
            	    // InternalAsmetaL.g:5320:4: ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) )
            	    // InternalAsmetaL.g:5321:5: ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) )
            	    {
            	    // InternalAsmetaL.g:5335:5: ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) )
            	    // InternalAsmetaL.g:5336:6: () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) )
            	    {
            	    // InternalAsmetaL.g:5336:6: ()
            	    // InternalAsmetaL.g:5337:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getImpliesIffExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5346:6: ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) )
            	    // InternalAsmetaL.g:5347:7: ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) )
            	    {
            	    // InternalAsmetaL.g:5347:7: ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) )
            	    // InternalAsmetaL.g:5348:8: (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' )
            	    {
            	    // InternalAsmetaL.g:5348:8: (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' )
            	    int alt86=2;
            	    int LA86_0 = input.LA(1);

            	    if ( (LA86_0==95) ) {
            	        alt86=1;
            	    }
            	    else if ( (LA86_0==94) ) {
            	        alt86=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 86, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt86) {
            	        case 1 :
            	            // InternalAsmetaL.g:5349:9: lv_op_2_1= 'implies'
            	            {
            	            lv_op_2_1=(Token)match(input,95,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_1, grammarAccess.getImpliesIffExpressionAccess().getOpImpliesKeyword_1_0_0_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getImpliesIffExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:5360:9: lv_op_2_2= 'iff'
            	            {
            	            lv_op_2_2=(Token)match(input,94,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_2, grammarAccess.getImpliesIffExpressionAccess().getOpIffKeyword_1_0_0_1_0_1());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getImpliesIffExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:5375:4: ( (lv_right_3_0= ruleXorOrExpression ) )
            	    // InternalAsmetaL.g:5376:5: (lv_right_3_0= ruleXorOrExpression )
            	    {
            	    // InternalAsmetaL.g:5376:5: (lv_right_3_0= ruleXorOrExpression )
            	    // InternalAsmetaL.g:5377:6: lv_right_3_0= ruleXorOrExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getImpliesIffExpressionAccess().getRightXorOrExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_67);
            	    lv_right_3_0=ruleXorOrExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getImpliesIffExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.XorOrExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesIffExpression"


    // $ANTLR start "entryRuleXorOrExpression"
    // InternalAsmetaL.g:5399:1: entryRuleXorOrExpression returns [EObject current=null] : iv_ruleXorOrExpression= ruleXorOrExpression EOF ;
    public final EObject entryRuleXorOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorOrExpression = null;


        try {
            // InternalAsmetaL.g:5399:56: (iv_ruleXorOrExpression= ruleXorOrExpression EOF )
            // InternalAsmetaL.g:5400:2: iv_ruleXorOrExpression= ruleXorOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorOrExpression=ruleXorOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorOrExpression"


    // $ANTLR start "ruleXorOrExpression"
    // InternalAsmetaL.g:5406:1: ruleXorOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) ;
    public final EObject ruleXorOrExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject this_AndExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5412:2: ( (this_AndExpression_0= ruleAndExpression ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) )
            // InternalAsmetaL.g:5413:2: (this_AndExpression_0= ruleAndExpression ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            {
            // InternalAsmetaL.g:5413:2: (this_AndExpression_0= ruleAndExpression ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            // InternalAsmetaL.g:5414:3: this_AndExpression_0= ruleAndExpression ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXorOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_69);
            this_AndExpression_0=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5425:3: ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            loop89:
            do {
                int alt89=2;
                alt89 = dfa89.predict(input);
                switch (alt89) {
            	case 1 :
            	    // InternalAsmetaL.g:5426:4: ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) )
            	    {
            	    // InternalAsmetaL.g:5426:4: ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) )
            	    // InternalAsmetaL.g:5427:5: ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) )
            	    {
            	    // InternalAsmetaL.g:5441:5: ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) )
            	    // InternalAsmetaL.g:5442:6: () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) )
            	    {
            	    // InternalAsmetaL.g:5442:6: ()
            	    // InternalAsmetaL.g:5443:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXorOrExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5452:6: ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) )
            	    // InternalAsmetaL.g:5453:7: ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) )
            	    {
            	    // InternalAsmetaL.g:5453:7: ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) )
            	    // InternalAsmetaL.g:5454:8: (lv_op_2_1= 'xor' | lv_op_2_2= 'or' )
            	    {
            	    // InternalAsmetaL.g:5454:8: (lv_op_2_1= 'xor' | lv_op_2_2= 'or' )
            	    int alt88=2;
            	    int LA88_0 = input.LA(1);

            	    if ( (LA88_0==92) ) {
            	        alt88=1;
            	    }
            	    else if ( (LA88_0==90) ) {
            	        alt88=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 88, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt88) {
            	        case 1 :
            	            // InternalAsmetaL.g:5455:9: lv_op_2_1= 'xor'
            	            {
            	            lv_op_2_1=(Token)match(input,92,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_1, grammarAccess.getXorOrExpressionAccess().getOpXorKeyword_1_0_0_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getXorOrExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:5466:9: lv_op_2_2= 'or'
            	            {
            	            lv_op_2_2=(Token)match(input,90,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_2, grammarAccess.getXorOrExpressionAccess().getOpOrKeyword_1_0_0_1_0_1());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getXorOrExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:5481:4: ( (lv_right_3_0= ruleAndExpression ) )
            	    // InternalAsmetaL.g:5482:5: (lv_right_3_0= ruleAndExpression )
            	    {
            	    // InternalAsmetaL.g:5482:5: (lv_right_3_0= ruleAndExpression )
            	    // InternalAsmetaL.g:5483:6: lv_right_3_0= ruleAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXorOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_69);
            	    lv_right_3_0=ruleAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXorOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorOrExpression"


    // $ANTLR start "entryRuleAndExpression"
    // InternalAsmetaL.g:5505:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalAsmetaL.g:5505:54: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalAsmetaL.g:5506:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalAsmetaL.g:5512:1: ruleAndExpression returns [EObject current=null] : (this_EqualityExpression_0= ruleEqualityExpression ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_EqualityExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5518:2: ( (this_EqualityExpression_0= ruleEqualityExpression ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* ) )
            // InternalAsmetaL.g:5519:2: (this_EqualityExpression_0= ruleEqualityExpression ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* )
            {
            // InternalAsmetaL.g:5519:2: (this_EqualityExpression_0= ruleEqualityExpression ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* )
            // InternalAsmetaL.g:5520:3: this_EqualityExpression_0= ruleEqualityExpression ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_70);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5531:3: ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*
            loop90:
            do {
                int alt90=2;
                alt90 = dfa90.predict(input);
                switch (alt90) {
            	case 1 :
            	    // InternalAsmetaL.g:5532:4: ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) )
            	    {
            	    // InternalAsmetaL.g:5532:4: ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) )
            	    // InternalAsmetaL.g:5533:5: ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) )
            	    {
            	    // InternalAsmetaL.g:5543:5: ( () ( (lv_op_2_0= 'and' ) ) )
            	    // InternalAsmetaL.g:5544:6: () ( (lv_op_2_0= 'and' ) )
            	    {
            	    // InternalAsmetaL.g:5544:6: ()
            	    // InternalAsmetaL.g:5545:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5554:6: ( (lv_op_2_0= 'and' ) )
            	    // InternalAsmetaL.g:5555:7: (lv_op_2_0= 'and' )
            	    {
            	    // InternalAsmetaL.g:5555:7: (lv_op_2_0= 'and' )
            	    // InternalAsmetaL.g:5556:8: lv_op_2_0= 'and'
            	    {
            	    lv_op_2_0=(Token)match(input,89,FOLLOW_68); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(lv_op_2_0, grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_0_0_1_0());
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getAndExpressionRule());
            	      								}
            	      								setWithLastConsumed(current, "op", lv_op_2_0, "and");
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:5570:4: ( (lv_right_3_0= ruleEqualityExpression ) )
            	    // InternalAsmetaL.g:5571:5: (lv_right_3_0= ruleEqualityExpression )
            	    {
            	    // InternalAsmetaL.g:5571:5: (lv_right_3_0= ruleEqualityExpression )
            	    // InternalAsmetaL.g:5572:6: lv_right_3_0= ruleEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_70);
            	    lv_right_3_0=ruleEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleEqualityExpression"
    // InternalAsmetaL.g:5594:1: entryRuleEqualityExpression returns [EObject current=null] : iv_ruleEqualityExpression= ruleEqualityExpression EOF ;
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            // InternalAsmetaL.g:5594:59: (iv_ruleEqualityExpression= ruleEqualityExpression EOF )
            // InternalAsmetaL.g:5595:2: iv_ruleEqualityExpression= ruleEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpression"


    // $ANTLR start "ruleEqualityExpression"
    // InternalAsmetaL.g:5601:1: ruleEqualityExpression returns [EObject current=null] : (this_CompareExpression_0= ruleCompareExpression ( ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) ) )* ) ;
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject this_CompareExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5607:2: ( (this_CompareExpression_0= ruleCompareExpression ( ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) ) )* ) )
            // InternalAsmetaL.g:5608:2: (this_CompareExpression_0= ruleCompareExpression ( ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) ) )* )
            {
            // InternalAsmetaL.g:5608:2: (this_CompareExpression_0= ruleCompareExpression ( ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) ) )* )
            // InternalAsmetaL.g:5609:3: this_CompareExpression_0= ruleCompareExpression ( ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getCompareExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_71);
            this_CompareExpression_0=ruleCompareExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5620:3: ( ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==39||LA92_0==98) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalAsmetaL.g:5621:4: ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) )
            	    {
            	    // InternalAsmetaL.g:5621:4: ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) )
            	    // InternalAsmetaL.g:5622:5: ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) )
            	    {
            	    // InternalAsmetaL.g:5636:5: ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) )
            	    // InternalAsmetaL.g:5637:6: () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) )
            	    {
            	    // InternalAsmetaL.g:5637:6: ()
            	    // InternalAsmetaL.g:5638:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5647:6: ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) )
            	    // InternalAsmetaL.g:5648:7: ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) )
            	    {
            	    // InternalAsmetaL.g:5648:7: ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) )
            	    // InternalAsmetaL.g:5649:8: (lv_op_2_1= '=' | lv_op_2_2= '!=' )
            	    {
            	    // InternalAsmetaL.g:5649:8: (lv_op_2_1= '=' | lv_op_2_2= '!=' )
            	    int alt91=2;
            	    int LA91_0 = input.LA(1);

            	    if ( (LA91_0==39) ) {
            	        alt91=1;
            	    }
            	    else if ( (LA91_0==98) ) {
            	        alt91=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 91, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt91) {
            	        case 1 :
            	            // InternalAsmetaL.g:5650:9: lv_op_2_1= '='
            	            {
            	            lv_op_2_1=(Token)match(input,39,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_1, grammarAccess.getEqualityExpressionAccess().getOpEqualsSignKeyword_1_0_0_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getEqualityExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:5661:9: lv_op_2_2= '!='
            	            {
            	            lv_op_2_2=(Token)match(input,98,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_2, grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_0_0_1_0_1());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getEqualityExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:5676:4: ( (lv_right_3_0= ruleCompareExpression ) )
            	    // InternalAsmetaL.g:5677:5: (lv_right_3_0= ruleCompareExpression )
            	    {
            	    // InternalAsmetaL.g:5677:5: (lv_right_3_0= ruleCompareExpression )
            	    // InternalAsmetaL.g:5678:6: lv_right_3_0= ruleCompareExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_71);
            	    lv_right_3_0=ruleCompareExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.CompareExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpression"


    // $ANTLR start "entryRuleCompareExpression"
    // InternalAsmetaL.g:5700:1: entryRuleCompareExpression returns [EObject current=null] : iv_ruleCompareExpression= ruleCompareExpression EOF ;
    public final EObject entryRuleCompareExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareExpression = null;


        try {
            // InternalAsmetaL.g:5700:58: (iv_ruleCompareExpression= ruleCompareExpression EOF )
            // InternalAsmetaL.g:5701:2: iv_ruleCompareExpression= ruleCompareExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompareExpression=ruleCompareExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareExpression"


    // $ANTLR start "ruleCompareExpression"
    // InternalAsmetaL.g:5707:1: ruleCompareExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )* ) ;
    public final EObject ruleCompareExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_AdditiveExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5713:2: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )* ) )
            // InternalAsmetaL.g:5714:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )* )
            {
            // InternalAsmetaL.g:5714:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )* )
            // InternalAsmetaL.g:5715:3: this_AdditiveExpression_0= ruleAdditiveExpression ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCompareExpressionAccess().getAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_72);
            this_AdditiveExpression_0=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5726:3: ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )*
            loop94:
            do {
                int alt94=2;
                alt94 = dfa94.predict(input);
                switch (alt94) {
            	case 1 :
            	    // InternalAsmetaL.g:5727:4: ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) )
            	    {
            	    // InternalAsmetaL.g:5727:4: ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) )
            	    // InternalAsmetaL.g:5728:5: ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) )
            	    {
            	    // InternalAsmetaL.g:5746:5: ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) )
            	    // InternalAsmetaL.g:5747:6: () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) )
            	    {
            	    // InternalAsmetaL.g:5747:6: ()
            	    // InternalAsmetaL.g:5748:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getCompareExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5757:6: ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) )
            	    // InternalAsmetaL.g:5758:7: ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) )
            	    {
            	    // InternalAsmetaL.g:5758:7: ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) )
            	    // InternalAsmetaL.g:5759:8: (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' )
            	    {
            	    // InternalAsmetaL.g:5759:8: (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' )
            	    int alt93=4;
            	    switch ( input.LA(1) ) {
            	    case 99:
            	        {
            	        alt93=1;
            	        }
            	        break;
            	    case 100:
            	        {
            	        alt93=2;
            	        }
            	        break;
            	    case 101:
            	        {
            	        alt93=3;
            	        }
            	        break;
            	    case 102:
            	        {
            	        alt93=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 93, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt93) {
            	        case 1 :
            	            // InternalAsmetaL.g:5760:9: lv_op_2_1= '>'
            	            {
            	            lv_op_2_1=(Token)match(input,99,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_1, grammarAccess.getCompareExpressionAccess().getOpGreaterThanSignKeyword_1_0_0_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getCompareExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:5771:9: lv_op_2_2= '<'
            	            {
            	            lv_op_2_2=(Token)match(input,100,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_2, grammarAccess.getCompareExpressionAccess().getOpLessThanSignKeyword_1_0_0_1_0_1());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getCompareExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalAsmetaL.g:5782:9: lv_op_2_3= '>='
            	            {
            	            lv_op_2_3=(Token)match(input,101,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_3, grammarAccess.getCompareExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_0_1_0_2());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getCompareExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_3, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalAsmetaL.g:5793:9: lv_op_2_4= '<='
            	            {
            	            lv_op_2_4=(Token)match(input,102,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_4, grammarAccess.getCompareExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_0_1_0_3());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getCompareExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_4, null);
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:5808:4: ( (lv_right_3_0= ruleAdditiveExpression ) )
            	    // InternalAsmetaL.g:5809:5: (lv_right_3_0= ruleAdditiveExpression )
            	    {
            	    // InternalAsmetaL.g:5809:5: (lv_right_3_0= ruleAdditiveExpression )
            	    // InternalAsmetaL.g:5810:6: lv_right_3_0= ruleAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCompareExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_72);
            	    lv_right_3_0=ruleAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCompareExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.AdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareExpression"


    // $ANTLR start "entryRuleAdditiveExpression"
    // InternalAsmetaL.g:5832:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdditiveExpression = null;


        try {
            // InternalAsmetaL.g:5832:59: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // InternalAsmetaL.g:5833:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAdditiveExpression"


    // $ANTLR start "ruleAdditiveExpression"
    // InternalAsmetaL.g:5839:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject this_MultiplicativeExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5845:2: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) ) )* ) )
            // InternalAsmetaL.g:5846:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) ) )* )
            {
            // InternalAsmetaL.g:5846:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) ) )* )
            // InternalAsmetaL.g:5847:3: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_73);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5858:3: ( ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) ) )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( ((LA96_0>=103 && LA96_0<=104)) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // InternalAsmetaL.g:5859:4: ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) )
            	    {
            	    // InternalAsmetaL.g:5859:4: ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) )
            	    // InternalAsmetaL.g:5860:5: ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) )
            	    {
            	    // InternalAsmetaL.g:5874:5: ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) )
            	    // InternalAsmetaL.g:5875:6: () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) )
            	    {
            	    // InternalAsmetaL.g:5875:6: ()
            	    // InternalAsmetaL.g:5876:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getAdditiveExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5885:6: ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) )
            	    // InternalAsmetaL.g:5886:7: ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) )
            	    {
            	    // InternalAsmetaL.g:5886:7: ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) )
            	    // InternalAsmetaL.g:5887:8: (lv_op_2_1= '+' | lv_op_2_2= '-' )
            	    {
            	    // InternalAsmetaL.g:5887:8: (lv_op_2_1= '+' | lv_op_2_2= '-' )
            	    int alt95=2;
            	    int LA95_0 = input.LA(1);

            	    if ( (LA95_0==103) ) {
            	        alt95=1;
            	    }
            	    else if ( (LA95_0==104) ) {
            	        alt95=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 95, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt95) {
            	        case 1 :
            	            // InternalAsmetaL.g:5888:9: lv_op_2_1= '+'
            	            {
            	            lv_op_2_1=(Token)match(input,103,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_1, grammarAccess.getAdditiveExpressionAccess().getOpPlusSignKeyword_1_0_0_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getAdditiveExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:5899:9: lv_op_2_2= '-'
            	            {
            	            lv_op_2_2=(Token)match(input,104,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_2, grammarAccess.getAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_0_0_1_0_1());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getAdditiveExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:5914:4: ( (lv_right_3_0= ruleMultiplicativeExpression ) )
            	    // InternalAsmetaL.g:5915:5: (lv_right_3_0= ruleMultiplicativeExpression )
            	    {
            	    // InternalAsmetaL.g:5915:5: (lv_right_3_0= ruleMultiplicativeExpression )
            	    // InternalAsmetaL.g:5916:6: lv_right_3_0= ruleMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_right_3_0=ruleMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.MultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAdditiveExpression"


    // $ANTLR start "entryRuleMultiplicativeExpression"
    // InternalAsmetaL.g:5938:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            // InternalAsmetaL.g:5938:65: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // InternalAsmetaL.g:5939:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicativeExpression"


    // $ANTLR start "ruleMultiplicativeExpression"
    // InternalAsmetaL.g:5945:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_PowerExpression_0= rulePowerExpression ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        EObject this_PowerExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5951:2: ( (this_PowerExpression_0= rulePowerExpression ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )* ) )
            // InternalAsmetaL.g:5952:2: (this_PowerExpression_0= rulePowerExpression ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )* )
            {
            // InternalAsmetaL.g:5952:2: (this_PowerExpression_0= rulePowerExpression ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )* )
            // InternalAsmetaL.g:5953:3: this_PowerExpression_0= rulePowerExpression ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getPowerExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_74);
            this_PowerExpression_0=rulePowerExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PowerExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5964:3: ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )*
            loop98:
            do {
                int alt98=2;
                alt98 = dfa98.predict(input);
                switch (alt98) {
            	case 1 :
            	    // InternalAsmetaL.g:5965:4: ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) )
            	    {
            	    // InternalAsmetaL.g:5965:4: ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) )
            	    // InternalAsmetaL.g:5966:5: ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) )
            	    {
            	    // InternalAsmetaL.g:5982:5: ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) )
            	    // InternalAsmetaL.g:5983:6: () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) )
            	    {
            	    // InternalAsmetaL.g:5983:6: ()
            	    // InternalAsmetaL.g:5984:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getMultiplicativeExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5993:6: ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) )
            	    // InternalAsmetaL.g:5994:7: ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) )
            	    {
            	    // InternalAsmetaL.g:5994:7: ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) )
            	    // InternalAsmetaL.g:5995:8: (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' )
            	    {
            	    // InternalAsmetaL.g:5995:8: (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' )
            	    int alt97=3;
            	    switch ( input.LA(1) ) {
            	    case 34:
            	        {
            	        alt97=1;
            	        }
            	        break;
            	    case 105:
            	        {
            	        alt97=2;
            	        }
            	        break;
            	    case 93:
            	        {
            	        alt97=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 97, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt97) {
            	        case 1 :
            	            // InternalAsmetaL.g:5996:9: lv_op_2_1= '*'
            	            {
            	            lv_op_2_1=(Token)match(input,34,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_1, grammarAccess.getMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_0_0_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:6007:9: lv_op_2_2= '/'
            	            {
            	            lv_op_2_2=(Token)match(input,105,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_2, grammarAccess.getMultiplicativeExpressionAccess().getOpSolidusKeyword_1_0_0_1_0_1());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalAsmetaL.g:6018:9: lv_op_2_3= 'mod'
            	            {
            	            lv_op_2_3=(Token)match(input,93,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_3, grammarAccess.getMultiplicativeExpressionAccess().getOpModKeyword_1_0_0_1_0_2());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_3, null);
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:6033:4: ( (lv_right_3_0= rulePowerExpression ) )
            	    // InternalAsmetaL.g:6034:5: (lv_right_3_0= rulePowerExpression )
            	    {
            	    // InternalAsmetaL.g:6034:5: (lv_right_3_0= rulePowerExpression )
            	    // InternalAsmetaL.g:6035:6: lv_right_3_0= rulePowerExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightPowerExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_right_3_0=rulePowerExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.PowerExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicativeExpression"


    // $ANTLR start "entryRulePowerExpression"
    // InternalAsmetaL.g:6057:1: entryRulePowerExpression returns [EObject current=null] : iv_rulePowerExpression= rulePowerExpression EOF ;
    public final EObject entryRulePowerExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePowerExpression = null;


        try {
            // InternalAsmetaL.g:6057:56: (iv_rulePowerExpression= rulePowerExpression EOF )
            // InternalAsmetaL.g:6058:2: iv_rulePowerExpression= rulePowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePowerExpression=rulePowerExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePowerExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePowerExpression"


    // $ANTLR start "rulePowerExpression"
    // InternalAsmetaL.g:6064:1: rulePowerExpression returns [EObject current=null] : (this_UnaryOperation_0= ruleUnaryOperation ( ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) ) )* ) ;
    public final EObject rulePowerExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_UnaryOperation_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6070:2: ( (this_UnaryOperation_0= ruleUnaryOperation ( ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) ) )* ) )
            // InternalAsmetaL.g:6071:2: (this_UnaryOperation_0= ruleUnaryOperation ( ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) ) )* )
            {
            // InternalAsmetaL.g:6071:2: (this_UnaryOperation_0= ruleUnaryOperation ( ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) ) )* )
            // InternalAsmetaL.g:6072:3: this_UnaryOperation_0= ruleUnaryOperation ( ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerExpressionAccess().getUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_75);
            this_UnaryOperation_0=ruleUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:6083:3: ( ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) ) )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==106) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalAsmetaL.g:6084:4: ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) )
            	    {
            	    // InternalAsmetaL.g:6084:4: ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) )
            	    // InternalAsmetaL.g:6085:5: ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) )
            	    {
            	    // InternalAsmetaL.g:6095:5: ( () ( (lv_op_2_0= '^' ) ) )
            	    // InternalAsmetaL.g:6096:6: () ( (lv_op_2_0= '^' ) )
            	    {
            	    // InternalAsmetaL.g:6096:6: ()
            	    // InternalAsmetaL.g:6097:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getPowerExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:6106:6: ( (lv_op_2_0= '^' ) )
            	    // InternalAsmetaL.g:6107:7: (lv_op_2_0= '^' )
            	    {
            	    // InternalAsmetaL.g:6107:7: (lv_op_2_0= '^' )
            	    // InternalAsmetaL.g:6108:8: lv_op_2_0= '^'
            	    {
            	    lv_op_2_0=(Token)match(input,106,FOLLOW_68); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(lv_op_2_0, grammarAccess.getPowerExpressionAccess().getOpCircumflexAccentKeyword_1_0_0_1_0());
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getPowerExpressionRule());
            	      								}
            	      								setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:6122:4: ( (lv_right_3_0= ruleUnaryOperation ) )
            	    // InternalAsmetaL.g:6123:5: (lv_right_3_0= ruleUnaryOperation )
            	    {
            	    // InternalAsmetaL.g:6123:5: (lv_right_3_0= ruleUnaryOperation )
            	    // InternalAsmetaL.g:6124:6: lv_right_3_0= ruleUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerExpressionAccess().getRightUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_75);
            	    lv_right_3_0=ruleUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.UnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePowerExpression"


    // $ANTLR start "entryRuleUnaryOperation"
    // InternalAsmetaL.g:6146:1: entryRuleUnaryOperation returns [EObject current=null] : iv_ruleUnaryOperation= ruleUnaryOperation EOF ;
    public final EObject entryRuleUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryOperation = null;


        try {
            // InternalAsmetaL.g:6146:55: (iv_ruleUnaryOperation= ruleUnaryOperation EOF )
            // InternalAsmetaL.g:6147:2: iv_ruleUnaryOperation= ruleUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryOperation=ruleUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryOperation"


    // $ANTLR start "ruleUnaryOperation"
    // InternalAsmetaL.g:6153:1: ruleUnaryOperation returns [EObject current=null] : ( ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) ) | this_basicExpr_2= rulebasicExpr | this_ParenthesizedExpression_3= ruleParenthesizedExpression ) ;
    public final EObject ruleUnaryOperation() throws RecognitionException {
        EObject current = null;

        Token lv_op_0_1=null;
        Token lv_op_0_2=null;
        Token lv_op_0_3=null;
        EObject lv_operand_1_0 = null;

        EObject this_basicExpr_2 = null;

        EObject this_ParenthesizedExpression_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6159:2: ( ( ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) ) | this_basicExpr_2= rulebasicExpr | this_ParenthesizedExpression_3= ruleParenthesizedExpression ) )
            // InternalAsmetaL.g:6160:2: ( ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) ) | this_basicExpr_2= rulebasicExpr | this_ParenthesizedExpression_3= ruleParenthesizedExpression )
            {
            // InternalAsmetaL.g:6160:2: ( ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) ) | this_basicExpr_2= rulebasicExpr | this_ParenthesizedExpression_3= ruleParenthesizedExpression )
            int alt101=3;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalAsmetaL.g:6161:3: ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) )
                    {
                    // InternalAsmetaL.g:6161:3: ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) )
                    // InternalAsmetaL.g:6162:4: ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) )
                    {
                    // InternalAsmetaL.g:6162:4: ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) )
                    // InternalAsmetaL.g:6163:5: ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) )
                    {
                    // InternalAsmetaL.g:6163:5: ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) )
                    // InternalAsmetaL.g:6164:6: (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' )
                    {
                    // InternalAsmetaL.g:6164:6: (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' )
                    int alt100=3;
                    switch ( input.LA(1) ) {
                    case 91:
                        {
                        alt100=1;
                        }
                        break;
                    case 103:
                        {
                        alt100=2;
                        }
                        break;
                    case 104:
                        {
                        alt100=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 100, 0, input);

                        throw nvae;
                    }

                    switch (alt100) {
                        case 1 :
                            // InternalAsmetaL.g:6165:7: lv_op_0_1= 'not'
                            {
                            lv_op_0_1=(Token)match(input,91,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_0_1, grammarAccess.getUnaryOperationAccess().getOpNotKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryOperationRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_0_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:6176:7: lv_op_0_2= '+'
                            {
                            lv_op_0_2=(Token)match(input,103,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_0_2, grammarAccess.getUnaryOperationAccess().getOpPlusSignKeyword_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryOperationRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_0_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalAsmetaL.g:6187:7: lv_op_0_3= '-'
                            {
                            lv_op_0_3=(Token)match(input,104,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_0_3, grammarAccess.getUnaryOperationAccess().getOpHyphenMinusKeyword_0_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryOperationRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_0_3, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalAsmetaL.g:6200:4: ( (lv_operand_1_0= ruleUnaryOperation ) )
                    // InternalAsmetaL.g:6201:5: (lv_operand_1_0= ruleUnaryOperation )
                    {
                    // InternalAsmetaL.g:6201:5: (lv_operand_1_0= ruleUnaryOperation )
                    // InternalAsmetaL.g:6202:6: lv_operand_1_0= ruleUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryOperationAccess().getOperandUnaryOperationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_1_0=ruleUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_1_0,
                      							"org.asmeta.xt.AsmetaL.UnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:6221:3: this_basicExpr_2= rulebasicExpr
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryOperationAccess().getBasicExprParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_basicExpr_2=rulebasicExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_basicExpr_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:6233:3: this_ParenthesizedExpression_3= ruleParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryOperationAccess().getParenthesizedExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ParenthesizedExpression_3=ruleParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ParenthesizedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryOperation"


    // $ANTLR start "entryRuleParenthesizedExpression"
    // InternalAsmetaL.g:6248:1: entryRuleParenthesizedExpression returns [EObject current=null] : iv_ruleParenthesizedExpression= ruleParenthesizedExpression EOF ;
    public final EObject entryRuleParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParenthesizedExpression = null;


        try {
            // InternalAsmetaL.g:6248:64: (iv_ruleParenthesizedExpression= ruleParenthesizedExpression EOF )
            // InternalAsmetaL.g:6249:2: iv_ruleParenthesizedExpression= ruleParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParenthesizedExpression=ruleParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParenthesizedExpression"


    // $ANTLR start "ruleParenthesizedExpression"
    // InternalAsmetaL.g:6255:1: ruleParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_Expression_1= ruleExpression otherlv_2= ')' ) ;
    public final EObject ruleParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_Expression_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6261:2: ( (otherlv_0= '(' this_Expression_1= ruleExpression otherlv_2= ')' ) )
            // InternalAsmetaL.g:6262:2: (otherlv_0= '(' this_Expression_1= ruleExpression otherlv_2= ')' )
            {
            // InternalAsmetaL.g:6262:2: (otherlv_0= '(' this_Expression_1= ruleExpression otherlv_2= ')' )
            // InternalAsmetaL.g:6263:3: otherlv_0= '(' this_Expression_1= ruleExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,30,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_49);
            this_Expression_1=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Expression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParenthesizedExpression"


    // $ANTLR start "entryRulebasicExpr"
    // InternalAsmetaL.g:6286:1: entryRulebasicExpr returns [EObject current=null] : iv_rulebasicExpr= rulebasicExpr EOF ;
    public final EObject entryRulebasicExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_rulebasicExpr = null;


        try {
            // InternalAsmetaL.g:6286:50: (iv_rulebasicExpr= rulebasicExpr EOF )
            // InternalAsmetaL.g:6287:2: iv_rulebasicExpr= rulebasicExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulebasicExpr=rulebasicExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebasicExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulebasicExpr"


    // $ANTLR start "rulebasicExpr"
    // InternalAsmetaL.g:6293:1: rulebasicExpr returns [EObject current=null] : (this_BasicTerm_0= ruleBasicTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm ) ;
    public final EObject rulebasicExpr() throws RecognitionException {
        EObject current = null;

        EObject this_BasicTerm_0 = null;

        EObject this_FiniteQuantificationTerm_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6299:2: ( (this_BasicTerm_0= ruleBasicTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm ) )
            // InternalAsmetaL.g:6300:2: (this_BasicTerm_0= ruleBasicTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm )
            {
            // InternalAsmetaL.g:6300:2: (this_BasicTerm_0= ruleBasicTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm )
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( ((LA102_0>=RULE_ID && LA102_0<=RULE_REAL_NUMBER)||(LA102_0>=89 && LA102_0<=95)||(LA102_0>=103 && LA102_0<=104)||(LA102_0>=108 && LA102_0<=110)||LA102_0==144) ) {
                alt102=1;
            }
            else if ( (LA102_0==30) ) {
                alt102=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;
            }
            switch (alt102) {
                case 1 :
                    // InternalAsmetaL.g:6301:3: this_BasicTerm_0= ruleBasicTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicExprAccess().getBasicTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BasicTerm_0=ruleBasicTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BasicTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:6313:3: this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicExprAccess().getFiniteQuantificationTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FiniteQuantificationTerm_1=ruleFiniteQuantificationTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FiniteQuantificationTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulebasicExpr"


    // $ANTLR start "entryRuleBasicTerm"
    // InternalAsmetaL.g:6328:1: entryRuleBasicTerm returns [EObject current=null] : iv_ruleBasicTerm= ruleBasicTerm EOF ;
    public final EObject entryRuleBasicTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasicTerm = null;


        try {
            // InternalAsmetaL.g:6328:50: (iv_ruleBasicTerm= ruleBasicTerm EOF )
            // InternalAsmetaL.g:6329:2: iv_ruleBasicTerm= ruleBasicTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicTerm=ruleBasicTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicTerm"


    // $ANTLR start "ruleBasicTerm"
    // InternalAsmetaL.g:6335:1: ruleBasicTerm returns [EObject current=null] : (this_FunctionTerm_0= ruleFunctionTerm | this_ConstantTerm_1= ruleConstantTerm | this_VariableTerm_2= ruleVariableTerm | this_LocationTerm_3= ruleLocationTerm ) ;
    public final EObject ruleBasicTerm() throws RecognitionException {
        EObject current = null;

        EObject this_FunctionTerm_0 = null;

        EObject this_ConstantTerm_1 = null;

        EObject this_VariableTerm_2 = null;

        EObject this_LocationTerm_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6341:2: ( (this_FunctionTerm_0= ruleFunctionTerm | this_ConstantTerm_1= ruleConstantTerm | this_VariableTerm_2= ruleVariableTerm | this_LocationTerm_3= ruleLocationTerm ) )
            // InternalAsmetaL.g:6342:2: (this_FunctionTerm_0= ruleFunctionTerm | this_ConstantTerm_1= ruleConstantTerm | this_VariableTerm_2= ruleVariableTerm | this_LocationTerm_3= ruleLocationTerm )
            {
            // InternalAsmetaL.g:6342:2: (this_FunctionTerm_0= ruleFunctionTerm | this_ConstantTerm_1= ruleConstantTerm | this_VariableTerm_2= ruleVariableTerm | this_LocationTerm_3= ruleLocationTerm )
            int alt103=4;
            alt103 = dfa103.predict(input);
            switch (alt103) {
                case 1 :
                    // InternalAsmetaL.g:6343:3: this_FunctionTerm_0= ruleFunctionTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicTermAccess().getFunctionTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionTerm_0=ruleFunctionTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:6355:3: this_ConstantTerm_1= ruleConstantTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicTermAccess().getConstantTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConstantTerm_1=ruleConstantTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConstantTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:6367:3: this_VariableTerm_2= ruleVariableTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicTermAccess().getVariableTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableTerm_2=ruleVariableTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:6379:3: this_LocationTerm_3= ruleLocationTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicTermAccess().getLocationTermParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LocationTerm_3=ruleLocationTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LocationTerm_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicTerm"


    // $ANTLR start "entryRuleFunctionTerm"
    // InternalAsmetaL.g:6394:1: entryRuleFunctionTerm returns [EObject current=null] : iv_ruleFunctionTerm= ruleFunctionTerm EOF ;
    public final EObject entryRuleFunctionTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionTerm = null;


        try {
            // InternalAsmetaL.g:6394:53: (iv_ruleFunctionTerm= ruleFunctionTerm EOF )
            // InternalAsmetaL.g:6395:2: iv_ruleFunctionTerm= ruleFunctionTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionTerm=ruleFunctionTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionTerm"


    // $ANTLR start "ruleFunctionTerm"
    // InternalAsmetaL.g:6401:1: ruleFunctionTerm returns [EObject current=null] : ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? ) ;
    public final EObject ruleFunctionTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_agent_0_0 = null;

        AntlrDatatypeRuleToken lv_functionName_2_0 = null;

        EObject lv_arguments_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6407:2: ( ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? ) )
            // InternalAsmetaL.g:6408:2: ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? )
            {
            // InternalAsmetaL.g:6408:2: ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? )
            // InternalAsmetaL.g:6409:3: ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )?
            {
            // InternalAsmetaL.g:6409:3: ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( ((LA104_0>=RULE_RULE_ID && LA104_0<=RULE_ENUM_ID)) ) {
                alt104=1;
            }
            else if ( (LA104_0==RULE_ID) ) {
                int LA104_2 = input.LA(2);

                if ( (LA104_2==107) ) {
                    alt104=1;
                }
            }
            switch (alt104) {
                case 1 :
                    // InternalAsmetaL.g:6410:4: ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.'
                    {
                    // InternalAsmetaL.g:6410:4: ( (lv_agent_0_0= ruleextendedName ) )
                    // InternalAsmetaL.g:6411:5: (lv_agent_0_0= ruleextendedName )
                    {
                    // InternalAsmetaL.g:6411:5: (lv_agent_0_0= ruleextendedName )
                    // InternalAsmetaL.g:6412:6: lv_agent_0_0= ruleextendedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionTermAccess().getAgentExtendedNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_76);
                    lv_agent_0_0=ruleextendedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionTermRule());
                      						}
                      						set(
                      							current,
                      							"agent",
                      							lv_agent_0_0,
                      							"org.asmeta.xt.AsmetaL.extendedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,107,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFunctionTermAccess().getFullStopKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:6434:3: ( (lv_functionName_2_0= ruleextendedNameForFunction ) )
            // InternalAsmetaL.g:6435:4: (lv_functionName_2_0= ruleextendedNameForFunction )
            {
            // InternalAsmetaL.g:6435:4: (lv_functionName_2_0= ruleextendedNameForFunction )
            // InternalAsmetaL.g:6436:5: lv_functionName_2_0= ruleextendedNameForFunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionTermAccess().getFunctionNameExtendedNameForFunctionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_functionName_2_0=ruleextendedNameForFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionTermRule());
              					}
              					set(
              						current,
              						"functionName",
              						lv_functionName_2_0,
              						"org.asmeta.xt.AsmetaL.extendedNameForFunction");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:6453:3: ( (lv_arguments_3_0= ruleTupleTerm ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==30) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalAsmetaL.g:6454:4: (lv_arguments_3_0= ruleTupleTerm )
                    {
                    // InternalAsmetaL.g:6454:4: (lv_arguments_3_0= ruleTupleTerm )
                    // InternalAsmetaL.g:6455:5: lv_arguments_3_0= ruleTupleTerm
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionTermAccess().getArgumentsTupleTermParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_3_0=ruleTupleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionTermRule());
                      					}
                      					set(
                      						current,
                      						"arguments",
                      						lv_arguments_3_0,
                      						"org.asmeta.xt.AsmetaL.TupleTerm");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionTerm"


    // $ANTLR start "entryRuleLocationTerm"
    // InternalAsmetaL.g:6476:1: entryRuleLocationTerm returns [EObject current=null] : iv_ruleLocationTerm= ruleLocationTerm EOF ;
    public final EObject entryRuleLocationTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocationTerm = null;


        try {
            // InternalAsmetaL.g:6476:53: (iv_ruleLocationTerm= ruleLocationTerm EOF )
            // InternalAsmetaL.g:6477:2: iv_ruleLocationTerm= ruleLocationTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocationTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocationTerm=ruleLocationTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocationTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocationTerm"


    // $ANTLR start "ruleLocationTerm"
    // InternalAsmetaL.g:6483:1: ruleLocationTerm returns [EObject current=null] : ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? ) ;
    public final EObject ruleLocationTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_agent_0_0 = null;

        AntlrDatatypeRuleToken lv_functionName_2_0 = null;

        EObject lv_arguments_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6489:2: ( ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? ) )
            // InternalAsmetaL.g:6490:2: ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? )
            {
            // InternalAsmetaL.g:6490:2: ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? )
            // InternalAsmetaL.g:6491:3: ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )?
            {
            // InternalAsmetaL.g:6491:3: ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( ((LA106_0>=RULE_RULE_ID && LA106_0<=RULE_ENUM_ID)) ) {
                alt106=1;
            }
            else if ( (LA106_0==RULE_ID) ) {
                int LA106_2 = input.LA(2);

                if ( (LA106_2==107) ) {
                    alt106=1;
                }
            }
            switch (alt106) {
                case 1 :
                    // InternalAsmetaL.g:6492:4: ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.'
                    {
                    // InternalAsmetaL.g:6492:4: ( (lv_agent_0_0= ruleextendedName ) )
                    // InternalAsmetaL.g:6493:5: (lv_agent_0_0= ruleextendedName )
                    {
                    // InternalAsmetaL.g:6493:5: (lv_agent_0_0= ruleextendedName )
                    // InternalAsmetaL.g:6494:6: lv_agent_0_0= ruleextendedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLocationTermAccess().getAgentExtendedNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_76);
                    lv_agent_0_0=ruleextendedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLocationTermRule());
                      						}
                      						set(
                      							current,
                      							"agent",
                      							lv_agent_0_0,
                      							"org.asmeta.xt.AsmetaL.extendedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,107,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLocationTermAccess().getFullStopKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:6516:3: ( (lv_functionName_2_0= ruleextendedNameForFunction ) )
            // InternalAsmetaL.g:6517:4: (lv_functionName_2_0= ruleextendedNameForFunction )
            {
            // InternalAsmetaL.g:6517:4: (lv_functionName_2_0= ruleextendedNameForFunction )
            // InternalAsmetaL.g:6518:5: lv_functionName_2_0= ruleextendedNameForFunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLocationTermAccess().getFunctionNameExtendedNameForFunctionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_functionName_2_0=ruleextendedNameForFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLocationTermRule());
              					}
              					set(
              						current,
              						"functionName",
              						lv_functionName_2_0,
              						"org.asmeta.xt.AsmetaL.extendedNameForFunction");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:6535:3: ( (lv_arguments_3_0= ruleTupleTerm ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==30) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalAsmetaL.g:6536:4: (lv_arguments_3_0= ruleTupleTerm )
                    {
                    // InternalAsmetaL.g:6536:4: (lv_arguments_3_0= ruleTupleTerm )
                    // InternalAsmetaL.g:6537:5: lv_arguments_3_0= ruleTupleTerm
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLocationTermAccess().getArgumentsTupleTermParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_3_0=ruleTupleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLocationTermRule());
                      					}
                      					set(
                      						current,
                      						"arguments",
                      						lv_arguments_3_0,
                      						"org.asmeta.xt.AsmetaL.TupleTerm");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocationTerm"


    // $ANTLR start "entryRuleVariableTerm"
    // InternalAsmetaL.g:6558:1: entryRuleVariableTerm returns [EObject current=null] : iv_ruleVariableTerm= ruleVariableTerm EOF ;
    public final EObject entryRuleVariableTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableTerm = null;


        try {
            // InternalAsmetaL.g:6558:53: (iv_ruleVariableTerm= ruleVariableTerm EOF )
            // InternalAsmetaL.g:6559:2: iv_ruleVariableTerm= ruleVariableTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableTerm=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableTerm"


    // $ANTLR start "ruleVariableTerm"
    // InternalAsmetaL.g:6565:1: ruleVariableTerm returns [EObject current=null] : ( (lv_name_0_0= ruleID_VARIABLE ) ) ;
    public final EObject ruleVariableTerm() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6571:2: ( ( (lv_name_0_0= ruleID_VARIABLE ) ) )
            // InternalAsmetaL.g:6572:2: ( (lv_name_0_0= ruleID_VARIABLE ) )
            {
            // InternalAsmetaL.g:6572:2: ( (lv_name_0_0= ruleID_VARIABLE ) )
            // InternalAsmetaL.g:6573:3: (lv_name_0_0= ruleID_VARIABLE )
            {
            // InternalAsmetaL.g:6573:3: (lv_name_0_0= ruleID_VARIABLE )
            // InternalAsmetaL.g:6574:4: lv_name_0_0= ruleID_VARIABLE
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getVariableTermAccess().getNameID_VARIABLEParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleID_VARIABLE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getVariableTermRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.asmeta.xt.AsmetaL.ID_VARIABLE");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableTerm"


    // $ANTLR start "entryRuleConstantTerm"
    // InternalAsmetaL.g:6594:1: entryRuleConstantTerm returns [EObject current=null] : iv_ruleConstantTerm= ruleConstantTerm EOF ;
    public final EObject entryRuleConstantTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstantTerm = null;


        try {
            // InternalAsmetaL.g:6594:53: (iv_ruleConstantTerm= ruleConstantTerm EOF )
            // InternalAsmetaL.g:6595:2: iv_ruleConstantTerm= ruleConstantTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstantTerm=ruleConstantTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstantTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstantTerm"


    // $ANTLR start "ruleConstantTerm"
    // InternalAsmetaL.g:6601:1: ruleConstantTerm returns [EObject current=null] : (this_NumberTerm_0= ruleNumberTerm | this_ComplexTerm_1= ruleComplexTerm | this_NaturalTerm_2= ruleNaturalTerm | this_CharTerm_3= ruleCharTerm | this_StringTerm_4= ruleStringTerm | this_BooleanTerm_5= ruleBooleanTerm | this_UndefTerm_6= ruleUndefTerm | this_EnumTerm_7= ruleEnumTerm ) ;
    public final EObject ruleConstantTerm() throws RecognitionException {
        EObject current = null;

        EObject this_NumberTerm_0 = null;

        EObject this_ComplexTerm_1 = null;

        EObject this_NaturalTerm_2 = null;

        EObject this_CharTerm_3 = null;

        EObject this_StringTerm_4 = null;

        EObject this_BooleanTerm_5 = null;

        EObject this_UndefTerm_6 = null;

        EObject this_EnumTerm_7 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6607:2: ( (this_NumberTerm_0= ruleNumberTerm | this_ComplexTerm_1= ruleComplexTerm | this_NaturalTerm_2= ruleNaturalTerm | this_CharTerm_3= ruleCharTerm | this_StringTerm_4= ruleStringTerm | this_BooleanTerm_5= ruleBooleanTerm | this_UndefTerm_6= ruleUndefTerm | this_EnumTerm_7= ruleEnumTerm ) )
            // InternalAsmetaL.g:6608:2: (this_NumberTerm_0= ruleNumberTerm | this_ComplexTerm_1= ruleComplexTerm | this_NaturalTerm_2= ruleNaturalTerm | this_CharTerm_3= ruleCharTerm | this_StringTerm_4= ruleStringTerm | this_BooleanTerm_5= ruleBooleanTerm | this_UndefTerm_6= ruleUndefTerm | this_EnumTerm_7= ruleEnumTerm )
            {
            // InternalAsmetaL.g:6608:2: (this_NumberTerm_0= ruleNumberTerm | this_ComplexTerm_1= ruleComplexTerm | this_NaturalTerm_2= ruleNaturalTerm | this_CharTerm_3= ruleCharTerm | this_StringTerm_4= ruleStringTerm | this_BooleanTerm_5= ruleBooleanTerm | this_UndefTerm_6= ruleUndefTerm | this_EnumTerm_7= ruleEnumTerm )
            int alt108=8;
            switch ( input.LA(1) ) {
            case RULE_NUMBER_TOKEN:
            case RULE_REAL_NUMBER:
            case 103:
            case 104:
                {
                alt108=1;
                }
                break;
            case RULE_COMPLEX_NUMBER:
                {
                alt108=2;
                }
                break;
            case RULE_NATNUMBER:
                {
                alt108=3;
                }
                break;
            case RULE_CHAR_LITERAL:
                {
                alt108=4;
                }
                break;
            case RULE_STRING_LITERAL:
                {
                alt108=5;
                }
                break;
            case 108:
            case 109:
                {
                alt108=6;
                }
                break;
            case 110:
                {
                alt108=7;
                }
                break;
            case RULE_ENUM_ID:
                {
                alt108=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 108, 0, input);

                throw nvae;
            }

            switch (alt108) {
                case 1 :
                    // InternalAsmetaL.g:6609:3: this_NumberTerm_0= ruleNumberTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getNumberTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NumberTerm_0=ruleNumberTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NumberTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:6621:3: this_ComplexTerm_1= ruleComplexTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getComplexTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ComplexTerm_1=ruleComplexTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ComplexTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:6633:3: this_NaturalTerm_2= ruleNaturalTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getNaturalTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NaturalTerm_2=ruleNaturalTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NaturalTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:6645:3: this_CharTerm_3= ruleCharTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getCharTermParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CharTerm_3=ruleCharTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CharTerm_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:6657:3: this_StringTerm_4= ruleStringTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getStringTermParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StringTerm_4=ruleStringTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringTerm_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:6669:3: this_BooleanTerm_5= ruleBooleanTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getBooleanTermParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanTerm_5=ruleBooleanTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BooleanTerm_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAsmetaL.g:6681:3: this_UndefTerm_6= ruleUndefTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getUndefTermParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UndefTerm_6=ruleUndefTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UndefTerm_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAsmetaL.g:6693:3: this_EnumTerm_7= ruleEnumTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getEnumTermParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EnumTerm_7=ruleEnumTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EnumTerm_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstantTerm"


    // $ANTLR start "entryRuleNumberTerm"
    // InternalAsmetaL.g:6708:1: entryRuleNumberTerm returns [EObject current=null] : iv_ruleNumberTerm= ruleNumberTerm EOF ;
    public final EObject entryRuleNumberTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumberTerm = null;


        try {
            // InternalAsmetaL.g:6708:51: (iv_ruleNumberTerm= ruleNumberTerm EOF )
            // InternalAsmetaL.g:6709:2: iv_ruleNumberTerm= ruleNumberTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumberTerm=ruleNumberTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumberTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumberTerm"


    // $ANTLR start "ruleNumberTerm"
    // InternalAsmetaL.g:6715:1: ruleNumberTerm returns [EObject current=null] : (this_IntegerTerm_0= ruleIntegerTerm | this_RealTerm_1= ruleRealTerm ) ;
    public final EObject ruleNumberTerm() throws RecognitionException {
        EObject current = null;

        EObject this_IntegerTerm_0 = null;

        EObject this_RealTerm_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6721:2: ( (this_IntegerTerm_0= ruleIntegerTerm | this_RealTerm_1= ruleRealTerm ) )
            // InternalAsmetaL.g:6722:2: (this_IntegerTerm_0= ruleIntegerTerm | this_RealTerm_1= ruleRealTerm )
            {
            // InternalAsmetaL.g:6722:2: (this_IntegerTerm_0= ruleIntegerTerm | this_RealTerm_1= ruleRealTerm )
            int alt109=2;
            switch ( input.LA(1) ) {
            case RULE_NUMBER_TOKEN:
                {
                alt109=1;
                }
                break;
            case 103:
                {
                int LA109_2 = input.LA(2);

                if ( (LA109_2==RULE_REAL_NUMBER) ) {
                    alt109=2;
                }
                else if ( (LA109_2==RULE_NUMBER_TOKEN) ) {
                    alt109=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 109, 2, input);

                    throw nvae;
                }
                }
                break;
            case 104:
                {
                int LA109_3 = input.LA(2);

                if ( (LA109_3==RULE_REAL_NUMBER) ) {
                    alt109=2;
                }
                else if ( (LA109_3==RULE_NUMBER_TOKEN) ) {
                    alt109=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 109, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_REAL_NUMBER:
                {
                alt109=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }

            switch (alt109) {
                case 1 :
                    // InternalAsmetaL.g:6723:3: this_IntegerTerm_0= ruleIntegerTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNumberTermAccess().getIntegerTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IntegerTerm_0=ruleIntegerTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntegerTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:6735:3: this_RealTerm_1= ruleRealTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNumberTermAccess().getRealTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RealTerm_1=ruleRealTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RealTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumberTerm"


    // $ANTLR start "entryRuleBooleanTerm"
    // InternalAsmetaL.g:6750:1: entryRuleBooleanTerm returns [EObject current=null] : iv_ruleBooleanTerm= ruleBooleanTerm EOF ;
    public final EObject entryRuleBooleanTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanTerm = null;


        try {
            // InternalAsmetaL.g:6750:52: (iv_ruleBooleanTerm= ruleBooleanTerm EOF )
            // InternalAsmetaL.g:6751:2: iv_ruleBooleanTerm= ruleBooleanTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanTerm=ruleBooleanTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanTerm"


    // $ANTLR start "ruleBooleanTerm"
    // InternalAsmetaL.g:6757:1: ruleBooleanTerm returns [EObject current=null] : ( ( (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' ) ) ) ;
    public final EObject ruleBooleanTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_1=null;
        Token lv_symbol_0_2=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6763:2: ( ( ( (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' ) ) ) )
            // InternalAsmetaL.g:6764:2: ( ( (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' ) ) )
            {
            // InternalAsmetaL.g:6764:2: ( ( (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' ) ) )
            // InternalAsmetaL.g:6765:3: ( (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' ) )
            {
            // InternalAsmetaL.g:6765:3: ( (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' ) )
            // InternalAsmetaL.g:6766:4: (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' )
            {
            // InternalAsmetaL.g:6766:4: (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' )
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==108) ) {
                alt110=1;
            }
            else if ( (LA110_0==109) ) {
                alt110=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // InternalAsmetaL.g:6767:5: lv_symbol_0_1= 'true'
                    {
                    lv_symbol_0_1=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_symbol_0_1, grammarAccess.getBooleanTermAccess().getSymbolTrueKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBooleanTermRule());
                      					}
                      					setWithLastConsumed(current, "symbol", lv_symbol_0_1, null);
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:6778:5: lv_symbol_0_2= 'false'
                    {
                    lv_symbol_0_2=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_symbol_0_2, grammarAccess.getBooleanTermAccess().getSymbolFalseKeyword_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBooleanTermRule());
                      					}
                      					setWithLastConsumed(current, "symbol", lv_symbol_0_2, null);
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanTerm"


    // $ANTLR start "entryRuleUndefTerm"
    // InternalAsmetaL.g:6794:1: entryRuleUndefTerm returns [EObject current=null] : iv_ruleUndefTerm= ruleUndefTerm EOF ;
    public final EObject entryRuleUndefTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUndefTerm = null;


        try {
            // InternalAsmetaL.g:6794:50: (iv_ruleUndefTerm= ruleUndefTerm EOF )
            // InternalAsmetaL.g:6795:2: iv_ruleUndefTerm= ruleUndefTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUndefTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUndefTerm=ruleUndefTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUndefTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUndefTerm"


    // $ANTLR start "ruleUndefTerm"
    // InternalAsmetaL.g:6801:1: ruleUndefTerm returns [EObject current=null] : ( (lv_symbol_0_0= 'undef' ) ) ;
    public final EObject ruleUndefTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6807:2: ( ( (lv_symbol_0_0= 'undef' ) ) )
            // InternalAsmetaL.g:6808:2: ( (lv_symbol_0_0= 'undef' ) )
            {
            // InternalAsmetaL.g:6808:2: ( (lv_symbol_0_0= 'undef' ) )
            // InternalAsmetaL.g:6809:3: (lv_symbol_0_0= 'undef' )
            {
            // InternalAsmetaL.g:6809:3: (lv_symbol_0_0= 'undef' )
            // InternalAsmetaL.g:6810:4: lv_symbol_0_0= 'undef'
            {
            lv_symbol_0_0=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getUndefTermAccess().getSymbolUndefKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getUndefTermRule());
              				}
              				setWithLastConsumed(current, "symbol", lv_symbol_0_0, "undef");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUndefTerm"


    // $ANTLR start "entryRuleComplexTerm"
    // InternalAsmetaL.g:6825:1: entryRuleComplexTerm returns [EObject current=null] : iv_ruleComplexTerm= ruleComplexTerm EOF ;
    public final EObject entryRuleComplexTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComplexTerm = null;


        try {
            // InternalAsmetaL.g:6825:52: (iv_ruleComplexTerm= ruleComplexTerm EOF )
            // InternalAsmetaL.g:6826:2: iv_ruleComplexTerm= ruleComplexTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComplexTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComplexTerm=ruleComplexTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComplexTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComplexTerm"


    // $ANTLR start "ruleComplexTerm"
    // InternalAsmetaL.g:6832:1: ruleComplexTerm returns [EObject current=null] : ( (lv_symbol_0_0= RULE_COMPLEX_NUMBER ) ) ;
    public final EObject ruleComplexTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6838:2: ( ( (lv_symbol_0_0= RULE_COMPLEX_NUMBER ) ) )
            // InternalAsmetaL.g:6839:2: ( (lv_symbol_0_0= RULE_COMPLEX_NUMBER ) )
            {
            // InternalAsmetaL.g:6839:2: ( (lv_symbol_0_0= RULE_COMPLEX_NUMBER ) )
            // InternalAsmetaL.g:6840:3: (lv_symbol_0_0= RULE_COMPLEX_NUMBER )
            {
            // InternalAsmetaL.g:6840:3: (lv_symbol_0_0= RULE_COMPLEX_NUMBER )
            // InternalAsmetaL.g:6841:4: lv_symbol_0_0= RULE_COMPLEX_NUMBER
            {
            lv_symbol_0_0=(Token)match(input,RULE_COMPLEX_NUMBER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getComplexTermAccess().getSymbolCOMPLEX_NUMBERTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getComplexTermRule());
              				}
              				setWithLastConsumed(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.COMPLEX_NUMBER");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComplexTerm"


    // $ANTLR start "entryRuleNaturalTerm"
    // InternalAsmetaL.g:6860:1: entryRuleNaturalTerm returns [EObject current=null] : iv_ruleNaturalTerm= ruleNaturalTerm EOF ;
    public final EObject entryRuleNaturalTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNaturalTerm = null;


        try {
            // InternalAsmetaL.g:6860:52: (iv_ruleNaturalTerm= ruleNaturalTerm EOF )
            // InternalAsmetaL.g:6861:2: iv_ruleNaturalTerm= ruleNaturalTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNaturalTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNaturalTerm=ruleNaturalTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNaturalTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNaturalTerm"


    // $ANTLR start "ruleNaturalTerm"
    // InternalAsmetaL.g:6867:1: ruleNaturalTerm returns [EObject current=null] : ( (lv_symbol_0_0= RULE_NATNUMBER ) ) ;
    public final EObject ruleNaturalTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6873:2: ( ( (lv_symbol_0_0= RULE_NATNUMBER ) ) )
            // InternalAsmetaL.g:6874:2: ( (lv_symbol_0_0= RULE_NATNUMBER ) )
            {
            // InternalAsmetaL.g:6874:2: ( (lv_symbol_0_0= RULE_NATNUMBER ) )
            // InternalAsmetaL.g:6875:3: (lv_symbol_0_0= RULE_NATNUMBER )
            {
            // InternalAsmetaL.g:6875:3: (lv_symbol_0_0= RULE_NATNUMBER )
            // InternalAsmetaL.g:6876:4: lv_symbol_0_0= RULE_NATNUMBER
            {
            lv_symbol_0_0=(Token)match(input,RULE_NATNUMBER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getNaturalTermAccess().getSymbolNATNUMBERTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNaturalTermRule());
              				}
              				setWithLastConsumed(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.NATNUMBER");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNaturalTerm"


    // $ANTLR start "entryRuleCharTerm"
    // InternalAsmetaL.g:6895:1: entryRuleCharTerm returns [EObject current=null] : iv_ruleCharTerm= ruleCharTerm EOF ;
    public final EObject entryRuleCharTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCharTerm = null;


        try {
            // InternalAsmetaL.g:6895:49: (iv_ruleCharTerm= ruleCharTerm EOF )
            // InternalAsmetaL.g:6896:2: iv_ruleCharTerm= ruleCharTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCharTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCharTerm=ruleCharTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCharTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCharTerm"


    // $ANTLR start "ruleCharTerm"
    // InternalAsmetaL.g:6902:1: ruleCharTerm returns [EObject current=null] : ( (lv_symbol_0_0= RULE_CHAR_LITERAL ) ) ;
    public final EObject ruleCharTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6908:2: ( ( (lv_symbol_0_0= RULE_CHAR_LITERAL ) ) )
            // InternalAsmetaL.g:6909:2: ( (lv_symbol_0_0= RULE_CHAR_LITERAL ) )
            {
            // InternalAsmetaL.g:6909:2: ( (lv_symbol_0_0= RULE_CHAR_LITERAL ) )
            // InternalAsmetaL.g:6910:3: (lv_symbol_0_0= RULE_CHAR_LITERAL )
            {
            // InternalAsmetaL.g:6910:3: (lv_symbol_0_0= RULE_CHAR_LITERAL )
            // InternalAsmetaL.g:6911:4: lv_symbol_0_0= RULE_CHAR_LITERAL
            {
            lv_symbol_0_0=(Token)match(input,RULE_CHAR_LITERAL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getCharTermAccess().getSymbolCHAR_LITERALTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCharTermRule());
              				}
              				setWithLastConsumed(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.CHAR_LITERAL");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCharTerm"


    // $ANTLR start "entryRuleStringTerm"
    // InternalAsmetaL.g:6930:1: entryRuleStringTerm returns [EObject current=null] : iv_ruleStringTerm= ruleStringTerm EOF ;
    public final EObject entryRuleStringTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringTerm = null;


        try {
            // InternalAsmetaL.g:6930:51: (iv_ruleStringTerm= ruleStringTerm EOF )
            // InternalAsmetaL.g:6931:2: iv_ruleStringTerm= ruleStringTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringTerm=ruleStringTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringTerm"


    // $ANTLR start "ruleStringTerm"
    // InternalAsmetaL.g:6937:1: ruleStringTerm returns [EObject current=null] : ( (lv_symbol_0_0= RULE_STRING_LITERAL ) ) ;
    public final EObject ruleStringTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6943:2: ( ( (lv_symbol_0_0= RULE_STRING_LITERAL ) ) )
            // InternalAsmetaL.g:6944:2: ( (lv_symbol_0_0= RULE_STRING_LITERAL ) )
            {
            // InternalAsmetaL.g:6944:2: ( (lv_symbol_0_0= RULE_STRING_LITERAL ) )
            // InternalAsmetaL.g:6945:3: (lv_symbol_0_0= RULE_STRING_LITERAL )
            {
            // InternalAsmetaL.g:6945:3: (lv_symbol_0_0= RULE_STRING_LITERAL )
            // InternalAsmetaL.g:6946:4: lv_symbol_0_0= RULE_STRING_LITERAL
            {
            lv_symbol_0_0=(Token)match(input,RULE_STRING_LITERAL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getStringTermAccess().getSymbolSTRING_LITERALTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringTermRule());
              				}
              				setWithLastConsumed(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.STRING_LITERAL");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringTerm"


    // $ANTLR start "entryRuleEnumTerm"
    // InternalAsmetaL.g:6965:1: entryRuleEnumTerm returns [EObject current=null] : iv_ruleEnumTerm= ruleEnumTerm EOF ;
    public final EObject entryRuleEnumTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumTerm = null;


        try {
            // InternalAsmetaL.g:6965:49: (iv_ruleEnumTerm= ruleEnumTerm EOF )
            // InternalAsmetaL.g:6966:2: iv_ruleEnumTerm= ruleEnumTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumTerm=ruleEnumTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumTerm"


    // $ANTLR start "ruleEnumTerm"
    // InternalAsmetaL.g:6972:1: ruleEnumTerm returns [EObject current=null] : ( (lv_symbol_0_0= RULE_ENUM_ID ) ) ;
    public final EObject ruleEnumTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6978:2: ( ( (lv_symbol_0_0= RULE_ENUM_ID ) ) )
            // InternalAsmetaL.g:6979:2: ( (lv_symbol_0_0= RULE_ENUM_ID ) )
            {
            // InternalAsmetaL.g:6979:2: ( (lv_symbol_0_0= RULE_ENUM_ID ) )
            // InternalAsmetaL.g:6980:3: (lv_symbol_0_0= RULE_ENUM_ID )
            {
            // InternalAsmetaL.g:6980:3: (lv_symbol_0_0= RULE_ENUM_ID )
            // InternalAsmetaL.g:6981:4: lv_symbol_0_0= RULE_ENUM_ID
            {
            lv_symbol_0_0=(Token)match(input,RULE_ENUM_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getEnumTermAccess().getSymbolENUM_IDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEnumTermRule());
              				}
              				setWithLastConsumed(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.ENUM_ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumTerm"


    // $ANTLR start "entryRuleRealTerm"
    // InternalAsmetaL.g:7000:1: entryRuleRealTerm returns [EObject current=null] : iv_ruleRealTerm= ruleRealTerm EOF ;
    public final EObject entryRuleRealTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRealTerm = null;


        try {
            // InternalAsmetaL.g:7000:49: (iv_ruleRealTerm= ruleRealTerm EOF )
            // InternalAsmetaL.g:7001:2: iv_ruleRealTerm= ruleRealTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealTerm=ruleRealTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealTerm"


    // $ANTLR start "ruleRealTerm"
    // InternalAsmetaL.g:7007:1: ruleRealTerm returns [EObject current=null] : ( (lv_symbol_0_0= ruleRealNumberWithSign ) ) ;
    public final EObject ruleRealTerm() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_symbol_0_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7013:2: ( ( (lv_symbol_0_0= ruleRealNumberWithSign ) ) )
            // InternalAsmetaL.g:7014:2: ( (lv_symbol_0_0= ruleRealNumberWithSign ) )
            {
            // InternalAsmetaL.g:7014:2: ( (lv_symbol_0_0= ruleRealNumberWithSign ) )
            // InternalAsmetaL.g:7015:3: (lv_symbol_0_0= ruleRealNumberWithSign )
            {
            // InternalAsmetaL.g:7015:3: (lv_symbol_0_0= ruleRealNumberWithSign )
            // InternalAsmetaL.g:7016:4: lv_symbol_0_0= ruleRealNumberWithSign
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRealTermAccess().getSymbolRealNumberWithSignParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_symbol_0_0=ruleRealNumberWithSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getRealTermRule());
              				}
              				set(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.RealNumberWithSign");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealTerm"


    // $ANTLR start "entryRuleIntegerTerm"
    // InternalAsmetaL.g:7036:1: entryRuleIntegerTerm returns [EObject current=null] : iv_ruleIntegerTerm= ruleIntegerTerm EOF ;
    public final EObject entryRuleIntegerTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntegerTerm = null;


        try {
            // InternalAsmetaL.g:7036:52: (iv_ruleIntegerTerm= ruleIntegerTerm EOF )
            // InternalAsmetaL.g:7037:2: iv_ruleIntegerTerm= ruleIntegerTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntegerTerm=ruleIntegerTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntegerTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntegerTerm"


    // $ANTLR start "ruleIntegerTerm"
    // InternalAsmetaL.g:7043:1: ruleIntegerTerm returns [EObject current=null] : ( ( (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign ) ) ) ;
    public final EObject ruleIntegerTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_1=null;
        AntlrDatatypeRuleToken lv_symbol_0_2 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7049:2: ( ( ( (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign ) ) ) )
            // InternalAsmetaL.g:7050:2: ( ( (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign ) ) )
            {
            // InternalAsmetaL.g:7050:2: ( ( (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign ) ) )
            // InternalAsmetaL.g:7051:3: ( (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign ) )
            {
            // InternalAsmetaL.g:7051:3: ( (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign ) )
            // InternalAsmetaL.g:7052:4: (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign )
            {
            // InternalAsmetaL.g:7052:4: (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign )
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==RULE_NUMBER_TOKEN) ) {
                int LA111_1 = input.LA(2);

                if ( (synpred173_InternalAsmetaL()) ) {
                    alt111=1;
                }
                else if ( (true) ) {
                    alt111=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 111, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA111_0>=103 && LA111_0<=104)) ) {
                alt111=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // InternalAsmetaL.g:7053:5: lv_symbol_0_1= RULE_NUMBER_TOKEN
                    {
                    lv_symbol_0_1=(Token)match(input,RULE_NUMBER_TOKEN,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_symbol_0_1, grammarAccess.getIntegerTermAccess().getSymbolNUMBER_TOKENTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getIntegerTermRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"symbol",
                      						lv_symbol_0_1,
                      						"org.asmeta.xt.AsmetaL.NUMBER_TOKEN");
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:7068:5: lv_symbol_0_2= ruleNumberWithSign
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIntegerTermAccess().getSymbolNumberWithSignParserRuleCall_0_1());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_symbol_0_2=ruleNumberWithSign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getIntegerTermRule());
                      					}
                      					set(
                      						current,
                      						"symbol",
                      						lv_symbol_0_2,
                      						"org.asmeta.xt.AsmetaL.NumberWithSign");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntegerTerm"


    // $ANTLR start "entryRuleRealNumberWithSign"
    // InternalAsmetaL.g:7089:1: entryRuleRealNumberWithSign returns [String current=null] : iv_ruleRealNumberWithSign= ruleRealNumberWithSign EOF ;
    public final String entryRuleRealNumberWithSign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRealNumberWithSign = null;


        try {
            // InternalAsmetaL.g:7089:58: (iv_ruleRealNumberWithSign= ruleRealNumberWithSign EOF )
            // InternalAsmetaL.g:7090:2: iv_ruleRealNumberWithSign= ruleRealNumberWithSign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealNumberWithSignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealNumberWithSign=ruleRealNumberWithSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealNumberWithSign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealNumberWithSign"


    // $ANTLR start "ruleRealNumberWithSign"
    // InternalAsmetaL.g:7096:1: ruleRealNumberWithSign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '+' | kw= '-' )? this_REAL_NUMBER_2= RULE_REAL_NUMBER ) ;
    public final AntlrDatatypeRuleToken ruleRealNumberWithSign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_REAL_NUMBER_2=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:7102:2: ( ( (kw= '+' | kw= '-' )? this_REAL_NUMBER_2= RULE_REAL_NUMBER ) )
            // InternalAsmetaL.g:7103:2: ( (kw= '+' | kw= '-' )? this_REAL_NUMBER_2= RULE_REAL_NUMBER )
            {
            // InternalAsmetaL.g:7103:2: ( (kw= '+' | kw= '-' )? this_REAL_NUMBER_2= RULE_REAL_NUMBER )
            // InternalAsmetaL.g:7104:3: (kw= '+' | kw= '-' )? this_REAL_NUMBER_2= RULE_REAL_NUMBER
            {
            // InternalAsmetaL.g:7104:3: (kw= '+' | kw= '-' )?
            int alt112=3;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==103) ) {
                alt112=1;
            }
            else if ( (LA112_0==104) ) {
                alt112=2;
            }
            switch (alt112) {
                case 1 :
                    // InternalAsmetaL.g:7105:4: kw= '+'
                    {
                    kw=(Token)match(input,103,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getRealNumberWithSignAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:7111:4: kw= '-'
                    {
                    kw=(Token)match(input,104,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getRealNumberWithSignAccess().getHyphenMinusKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            this_REAL_NUMBER_2=(Token)match(input,RULE_REAL_NUMBER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_REAL_NUMBER_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_REAL_NUMBER_2, grammarAccess.getRealNumberWithSignAccess().getREAL_NUMBERTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealNumberWithSign"


    // $ANTLR start "entryRuleNumberWithSign"
    // InternalAsmetaL.g:7128:1: entryRuleNumberWithSign returns [String current=null] : iv_ruleNumberWithSign= ruleNumberWithSign EOF ;
    public final String entryRuleNumberWithSign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumberWithSign = null;


        try {
            // InternalAsmetaL.g:7128:54: (iv_ruleNumberWithSign= ruleNumberWithSign EOF )
            // InternalAsmetaL.g:7129:2: iv_ruleNumberWithSign= ruleNumberWithSign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberWithSignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumberWithSign=ruleNumberWithSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumberWithSign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumberWithSign"


    // $ANTLR start "ruleNumberWithSign"
    // InternalAsmetaL.g:7135:1: ruleNumberWithSign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '+' | kw= '-' )? this_NUMBER_TOKEN_2= RULE_NUMBER_TOKEN ) ;
    public final AntlrDatatypeRuleToken ruleNumberWithSign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_NUMBER_TOKEN_2=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:7141:2: ( ( (kw= '+' | kw= '-' )? this_NUMBER_TOKEN_2= RULE_NUMBER_TOKEN ) )
            // InternalAsmetaL.g:7142:2: ( (kw= '+' | kw= '-' )? this_NUMBER_TOKEN_2= RULE_NUMBER_TOKEN )
            {
            // InternalAsmetaL.g:7142:2: ( (kw= '+' | kw= '-' )? this_NUMBER_TOKEN_2= RULE_NUMBER_TOKEN )
            // InternalAsmetaL.g:7143:3: (kw= '+' | kw= '-' )? this_NUMBER_TOKEN_2= RULE_NUMBER_TOKEN
            {
            // InternalAsmetaL.g:7143:3: (kw= '+' | kw= '-' )?
            int alt113=3;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==103) ) {
                alt113=1;
            }
            else if ( (LA113_0==104) ) {
                alt113=2;
            }
            switch (alt113) {
                case 1 :
                    // InternalAsmetaL.g:7144:4: kw= '+'
                    {
                    kw=(Token)match(input,103,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getNumberWithSignAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:7150:4: kw= '-'
                    {
                    kw=(Token)match(input,104,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getNumberWithSignAccess().getHyphenMinusKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            this_NUMBER_TOKEN_2=(Token)match(input,RULE_NUMBER_TOKEN,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_NUMBER_TOKEN_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_NUMBER_TOKEN_2, grammarAccess.getNumberWithSignAccess().getNUMBER_TOKENTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumberWithSign"


    // $ANTLR start "entryRuleExtendedTerm"
    // InternalAsmetaL.g:7167:1: entryRuleExtendedTerm returns [EObject current=null] : iv_ruleExtendedTerm= ruleExtendedTerm EOF ;
    public final EObject entryRuleExtendedTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendedTerm = null;


        try {
            // InternalAsmetaL.g:7167:53: (iv_ruleExtendedTerm= ruleExtendedTerm EOF )
            // InternalAsmetaL.g:7168:2: iv_ruleExtendedTerm= ruleExtendedTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExtendedTerm=ruleExtendedTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedTerm"


    // $ANTLR start "ruleExtendedTerm"
    // InternalAsmetaL.g:7174:1: ruleExtendedTerm returns [EObject current=null] : (this_ConditionalTerm_0= ruleConditionalTerm | this_CaseTerm_1= ruleCaseTerm | this_TupleTerm_2= ruleTupleTerm | this_VariableBindingTerm_3= ruleVariableBindingTerm | this_CollectionTerm_4= ruleCollectionTerm | this_RuleAsTerm_5= ruleRuleAsTerm ) ;
    public final EObject ruleExtendedTerm() throws RecognitionException {
        EObject current = null;

        EObject this_ConditionalTerm_0 = null;

        EObject this_CaseTerm_1 = null;

        EObject this_TupleTerm_2 = null;

        EObject this_VariableBindingTerm_3 = null;

        EObject this_CollectionTerm_4 = null;

        EObject this_RuleAsTerm_5 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7180:2: ( (this_ConditionalTerm_0= ruleConditionalTerm | this_CaseTerm_1= ruleCaseTerm | this_TupleTerm_2= ruleTupleTerm | this_VariableBindingTerm_3= ruleVariableBindingTerm | this_CollectionTerm_4= ruleCollectionTerm | this_RuleAsTerm_5= ruleRuleAsTerm ) )
            // InternalAsmetaL.g:7181:2: (this_ConditionalTerm_0= ruleConditionalTerm | this_CaseTerm_1= ruleCaseTerm | this_TupleTerm_2= ruleTupleTerm | this_VariableBindingTerm_3= ruleVariableBindingTerm | this_CollectionTerm_4= ruleCollectionTerm | this_RuleAsTerm_5= ruleRuleAsTerm )
            {
            // InternalAsmetaL.g:7181:2: (this_ConditionalTerm_0= ruleConditionalTerm | this_CaseTerm_1= ruleCaseTerm | this_TupleTerm_2= ruleTupleTerm | this_VariableBindingTerm_3= ruleVariableBindingTerm | this_CollectionTerm_4= ruleCollectionTerm | this_RuleAsTerm_5= ruleRuleAsTerm )
            int alt114=6;
            alt114 = dfa114.predict(input);
            switch (alt114) {
                case 1 :
                    // InternalAsmetaL.g:7182:3: this_ConditionalTerm_0= ruleConditionalTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtendedTermAccess().getConditionalTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConditionalTerm_0=ruleConditionalTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConditionalTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:7194:3: this_CaseTerm_1= ruleCaseTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtendedTermAccess().getCaseTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CaseTerm_1=ruleCaseTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CaseTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:7206:3: this_TupleTerm_2= ruleTupleTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtendedTermAccess().getTupleTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TupleTerm_2=ruleTupleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TupleTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:7218:3: this_VariableBindingTerm_3= ruleVariableBindingTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtendedTermAccess().getVariableBindingTermParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBindingTerm_3=ruleVariableBindingTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableBindingTerm_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:7230:3: this_CollectionTerm_4= ruleCollectionTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtendedTermAccess().getCollectionTermParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CollectionTerm_4=ruleCollectionTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CollectionTerm_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:7242:3: this_RuleAsTerm_5= ruleRuleAsTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtendedTermAccess().getRuleAsTermParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RuleAsTerm_5=ruleRuleAsTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RuleAsTerm_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedTerm"


    // $ANTLR start "entryRuleConditionalTerm"
    // InternalAsmetaL.g:7257:1: entryRuleConditionalTerm returns [EObject current=null] : iv_ruleConditionalTerm= ruleConditionalTerm EOF ;
    public final EObject entryRuleConditionalTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalTerm = null;


        try {
            // InternalAsmetaL.g:7257:56: (iv_ruleConditionalTerm= ruleConditionalTerm EOF )
            // InternalAsmetaL.g:7258:2: iv_ruleConditionalTerm= ruleConditionalTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalTerm=ruleConditionalTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalTerm"


    // $ANTLR start "ruleConditionalTerm"
    // InternalAsmetaL.g:7264:1: ruleConditionalTerm returns [EObject current=null] : (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenTerm_3_0= ruleTerm ) ) (otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) ) )? otherlv_6= 'endif' ) ;
    public final EObject ruleConditionalTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_guard_1_0 = null;

        EObject lv_thenTerm_3_0 = null;

        EObject lv_elseTerm_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7270:2: ( (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenTerm_3_0= ruleTerm ) ) (otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) ) )? otherlv_6= 'endif' ) )
            // InternalAsmetaL.g:7271:2: (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenTerm_3_0= ruleTerm ) ) (otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) ) )? otherlv_6= 'endif' )
            {
            // InternalAsmetaL.g:7271:2: (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenTerm_3_0= ruleTerm ) ) (otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) ) )? otherlv_6= 'endif' )
            // InternalAsmetaL.g:7272:3: otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenTerm_3_0= ruleTerm ) ) (otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) ) )? otherlv_6= 'endif'
            {
            otherlv_0=(Token)match(input,111,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConditionalTermAccess().getIfKeyword_0());
              		
            }
            // InternalAsmetaL.g:7276:3: ( (lv_guard_1_0= ruleTerm ) )
            // InternalAsmetaL.g:7277:4: (lv_guard_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:7277:4: (lv_guard_1_0= ruleTerm )
            // InternalAsmetaL.g:7278:5: lv_guard_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionalTermAccess().getGuardTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_79);
            lv_guard_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionalTermRule());
              					}
              					set(
              						current,
              						"guard",
              						lv_guard_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,112,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getConditionalTermAccess().getThenKeyword_2());
              		
            }
            // InternalAsmetaL.g:7299:3: ( (lv_thenTerm_3_0= ruleTerm ) )
            // InternalAsmetaL.g:7300:4: (lv_thenTerm_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:7300:4: (lv_thenTerm_3_0= ruleTerm )
            // InternalAsmetaL.g:7301:5: lv_thenTerm_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionalTermAccess().getThenTermTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_thenTerm_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionalTermRule());
              					}
              					set(
              						current,
              						"thenTerm",
              						lv_thenTerm_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:7318:3: (otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) ) )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==113) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalAsmetaL.g:7319:4: otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) )
                    {
                    otherlv_4=(Token)match(input,113,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getConditionalTermAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalAsmetaL.g:7323:4: ( (lv_elseTerm_5_0= ruleTerm ) )
                    // InternalAsmetaL.g:7324:5: (lv_elseTerm_5_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:7324:5: (lv_elseTerm_5_0= ruleTerm )
                    // InternalAsmetaL.g:7325:6: lv_elseTerm_5_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalTermAccess().getElseTermTermParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_81);
                    lv_elseTerm_5_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalTermRule());
                      						}
                      						set(
                      							current,
                      							"elseTerm",
                      							lv_elseTerm_5_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getConditionalTermAccess().getEndifKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalTerm"


    // $ANTLR start "entryRuleCaseTerm"
    // InternalAsmetaL.g:7351:1: entryRuleCaseTerm returns [EObject current=null] : iv_ruleCaseTerm= ruleCaseTerm EOF ;
    public final EObject entryRuleCaseTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseTerm = null;


        try {
            // InternalAsmetaL.g:7351:49: (iv_ruleCaseTerm= ruleCaseTerm EOF )
            // InternalAsmetaL.g:7352:2: iv_ruleCaseTerm= ruleCaseTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseTerm=ruleCaseTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCaseTerm"


    // $ANTLR start "ruleCaseTerm"
    // InternalAsmetaL.g:7358:1: ruleCaseTerm returns [EObject current=null] : (otherlv_0= 'switch' ( (lv_comparedTerm_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) ) )? otherlv_8= 'endswitch' ) ;
    public final EObject ruleCaseTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_comparedTerm_1_0 = null;

        EObject lv_comparingTerm_3_0 = null;

        EObject lv_resultTerms_5_0 = null;

        EObject lv_otherwiseTerm_7_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7364:2: ( (otherlv_0= 'switch' ( (lv_comparedTerm_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) ) )? otherlv_8= 'endswitch' ) )
            // InternalAsmetaL.g:7365:2: (otherlv_0= 'switch' ( (lv_comparedTerm_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) ) )? otherlv_8= 'endswitch' )
            {
            // InternalAsmetaL.g:7365:2: (otherlv_0= 'switch' ( (lv_comparedTerm_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) ) )? otherlv_8= 'endswitch' )
            // InternalAsmetaL.g:7366:3: otherlv_0= 'switch' ( (lv_comparedTerm_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) ) )? otherlv_8= 'endswitch'
            {
            otherlv_0=(Token)match(input,115,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getCaseTermAccess().getSwitchKeyword_0());
              		
            }
            // InternalAsmetaL.g:7370:3: ( (lv_comparedTerm_1_0= ruleTerm ) )
            // InternalAsmetaL.g:7371:4: (lv_comparedTerm_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:7371:4: (lv_comparedTerm_1_0= ruleTerm )
            // InternalAsmetaL.g:7372:5: lv_comparedTerm_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCaseTermAccess().getComparedTermTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_82);
            lv_comparedTerm_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCaseTermRule());
              					}
              					set(
              						current,
              						"comparedTerm",
              						lv_comparedTerm_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:7389:3: (otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) ) )+
            int cnt116=0;
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==116) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalAsmetaL.g:7390:4: otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) )
            	    {
            	    otherlv_2=(Token)match(input,116,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getCaseTermAccess().getCaseKeyword_2_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:7394:4: ( (lv_comparingTerm_3_0= ruleTerm ) )
            	    // InternalAsmetaL.g:7395:5: (lv_comparingTerm_3_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:7395:5: (lv_comparingTerm_3_0= ruleTerm )
            	    // InternalAsmetaL.g:7396:6: lv_comparingTerm_3_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCaseTermAccess().getComparingTermTermParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_comparingTerm_3_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCaseTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"comparingTerm",
            	      							lv_comparingTerm_3_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,36,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getCaseTermAccess().getColonKeyword_2_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:7417:4: ( (lv_resultTerms_5_0= ruleTerm ) )
            	    // InternalAsmetaL.g:7418:5: (lv_resultTerms_5_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:7418:5: (lv_resultTerms_5_0= ruleTerm )
            	    // InternalAsmetaL.g:7419:6: lv_resultTerms_5_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCaseTermAccess().getResultTermsTermParserRuleCall_2_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_resultTerms_5_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCaseTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"resultTerms",
            	      							lv_resultTerms_5_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt116 >= 1 ) break loop116;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(116, input);
                        throw eee;
                }
                cnt116++;
            } while (true);

            // InternalAsmetaL.g:7437:3: (otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==117) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalAsmetaL.g:7438:4: otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) )
                    {
                    otherlv_6=(Token)match(input,117,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getCaseTermAccess().getOtherwiseKeyword_3_0());
                      			
                    }
                    // InternalAsmetaL.g:7442:4: ( (lv_otherwiseTerm_7_0= ruleTerm ) )
                    // InternalAsmetaL.g:7443:5: (lv_otherwiseTerm_7_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:7443:5: (lv_otherwiseTerm_7_0= ruleTerm )
                    // InternalAsmetaL.g:7444:6: lv_otherwiseTerm_7_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCaseTermAccess().getOtherwiseTermTermParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_84);
                    lv_otherwiseTerm_7_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCaseTermRule());
                      						}
                      						set(
                      							current,
                      							"otherwiseTerm",
                      							lv_otherwiseTerm_7_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getCaseTermAccess().getEndswitchKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCaseTerm"


    // $ANTLR start "entryRuleTupleTerm"
    // InternalAsmetaL.g:7470:1: entryRuleTupleTerm returns [EObject current=null] : iv_ruleTupleTerm= ruleTupleTerm EOF ;
    public final EObject entryRuleTupleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleTerm = null;


        try {
            // InternalAsmetaL.g:7470:50: (iv_ruleTupleTerm= ruleTupleTerm EOF )
            // InternalAsmetaL.g:7471:2: iv_ruleTupleTerm= ruleTupleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTupleTerm=ruleTupleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleTerm"


    // $ANTLR start "ruleTupleTerm"
    // InternalAsmetaL.g:7477:1: ruleTupleTerm returns [EObject current=null] : (otherlv_0= '(' ( (lv_terms_1_0= ruleTerm ) ) (otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) ) )* otherlv_4= ')' ) ;
    public final EObject ruleTupleTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_terms_1_0 = null;

        EObject lv_terms_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7483:2: ( (otherlv_0= '(' ( (lv_terms_1_0= ruleTerm ) ) (otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) ) )* otherlv_4= ')' ) )
            // InternalAsmetaL.g:7484:2: (otherlv_0= '(' ( (lv_terms_1_0= ruleTerm ) ) (otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) ) )* otherlv_4= ')' )
            {
            // InternalAsmetaL.g:7484:2: (otherlv_0= '(' ( (lv_terms_1_0= ruleTerm ) ) (otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) ) )* otherlv_4= ')' )
            // InternalAsmetaL.g:7485:3: otherlv_0= '(' ( (lv_terms_1_0= ruleTerm ) ) (otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,30,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTupleTermAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalAsmetaL.g:7489:3: ( (lv_terms_1_0= ruleTerm ) )
            // InternalAsmetaL.g:7490:4: (lv_terms_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:7490:4: (lv_terms_1_0= ruleTerm )
            // InternalAsmetaL.g:7491:5: lv_terms_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTupleTermAccess().getTermsTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_terms_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTupleTermRule());
              					}
              					add(
              						current,
              						"terms",
              						lv_terms_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:7508:3: (otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) ) )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==31) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // InternalAsmetaL.g:7509:4: otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) )
            	    {
            	    otherlv_2=(Token)match(input,31,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getTupleTermAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:7513:4: ( (lv_terms_3_0= ruleTerm ) )
            	    // InternalAsmetaL.g:7514:5: (lv_terms_3_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:7514:5: (lv_terms_3_0= ruleTerm )
            	    // InternalAsmetaL.g:7515:6: lv_terms_3_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTupleTermAccess().getTermsTermParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_terms_3_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTupleTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"terms",
            	      							lv_terms_3_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);

            otherlv_4=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTupleTermAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleTerm"


    // $ANTLR start "entryRuleCollectionTerm"
    // InternalAsmetaL.g:7541:1: entryRuleCollectionTerm returns [EObject current=null] : iv_ruleCollectionTerm= ruleCollectionTerm EOF ;
    public final EObject entryRuleCollectionTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionTerm = null;


        try {
            // InternalAsmetaL.g:7541:55: (iv_ruleCollectionTerm= ruleCollectionTerm EOF )
            // InternalAsmetaL.g:7542:2: iv_ruleCollectionTerm= ruleCollectionTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCollectionTerm=ruleCollectionTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionTerm"


    // $ANTLR start "ruleCollectionTerm"
    // InternalAsmetaL.g:7548:1: ruleCollectionTerm returns [EObject current=null] : (this_SequenceTerm_0= ruleSequenceTerm | this_MapTerm_1= ruleMapTerm | this_SetTerm_2= ruleSetTerm | this_BagTerm_3= ruleBagTerm ) ;
    public final EObject ruleCollectionTerm() throws RecognitionException {
        EObject current = null;

        EObject this_SequenceTerm_0 = null;

        EObject this_MapTerm_1 = null;

        EObject this_SetTerm_2 = null;

        EObject this_BagTerm_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7554:2: ( (this_SequenceTerm_0= ruleSequenceTerm | this_MapTerm_1= ruleMapTerm | this_SetTerm_2= ruleSetTerm | this_BagTerm_3= ruleBagTerm ) )
            // InternalAsmetaL.g:7555:2: (this_SequenceTerm_0= ruleSequenceTerm | this_MapTerm_1= ruleMapTerm | this_SetTerm_2= ruleSetTerm | this_BagTerm_3= ruleBagTerm )
            {
            // InternalAsmetaL.g:7555:2: (this_SequenceTerm_0= ruleSequenceTerm | this_MapTerm_1= ruleMapTerm | this_SetTerm_2= ruleSetTerm | this_BagTerm_3= ruleBagTerm )
            int alt119=4;
            switch ( input.LA(1) ) {
            case 119:
                {
                alt119=1;
                }
                break;
            case 72:
                {
                int LA119_2 = input.LA(2);

                if ( (synpred188_InternalAsmetaL()) ) {
                    alt119=2;
                }
                else if ( (synpred189_InternalAsmetaL()) ) {
                    alt119=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 119, 2, input);

                    throw nvae;
                }
                }
                break;
            case 100:
                {
                alt119=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;
            }

            switch (alt119) {
                case 1 :
                    // InternalAsmetaL.g:7556:3: this_SequenceTerm_0= ruleSequenceTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCollectionTermAccess().getSequenceTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SequenceTerm_0=ruleSequenceTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SequenceTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:7568:3: this_MapTerm_1= ruleMapTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCollectionTermAccess().getMapTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MapTerm_1=ruleMapTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MapTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:7580:3: this_SetTerm_2= ruleSetTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCollectionTermAccess().getSetTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SetTerm_2=ruleSetTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SetTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:7592:3: this_BagTerm_3= ruleBagTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCollectionTermAccess().getBagTermParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BagTerm_3=ruleBagTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BagTerm_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionTerm"


    // $ANTLR start "entryRuleSequenceTerm"
    // InternalAsmetaL.g:7607:1: entryRuleSequenceTerm returns [EObject current=null] : iv_ruleSequenceTerm= ruleSequenceTerm EOF ;
    public final EObject entryRuleSequenceTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceTerm = null;


        try {
            // InternalAsmetaL.g:7607:53: (iv_ruleSequenceTerm= ruleSequenceTerm EOF )
            // InternalAsmetaL.g:7608:2: iv_ruleSequenceTerm= ruleSequenceTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceTerm=ruleSequenceTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceTerm"


    // $ANTLR start "ruleSequenceTerm"
    // InternalAsmetaL.g:7614:1: ruleSequenceTerm returns [EObject current=null] : ( () otherlv_1= '[' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= ']' ) ;
    public final EObject ruleSequenceTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_start_term_2_0 = null;

        EObject lv_other_terms_4_0 = null;

        EObject lv_end_term_6_0 = null;

        EObject lv_step_8_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7620:2: ( ( () otherlv_1= '[' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= ']' ) )
            // InternalAsmetaL.g:7621:2: ( () otherlv_1= '[' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= ']' )
            {
            // InternalAsmetaL.g:7621:2: ( () otherlv_1= '[' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= ']' )
            // InternalAsmetaL.g:7622:3: () otherlv_1= '[' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= ']'
            {
            // InternalAsmetaL.g:7622:3: ()
            // InternalAsmetaL.g:7623:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSequenceTermAccess().getSequenceTermAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,119,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSequenceTermAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalAsmetaL.g:7636:3: ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( ((LA123_0>=RULE_ID && LA123_0<=RULE_REAL_NUMBER)||LA123_0==30||LA123_0==43||LA123_0==57||(LA123_0>=61 && LA123_0<=70)||LA123_0==72||(LA123_0>=75 && LA123_0<=80)||(LA123_0>=89 && LA123_0<=95)||LA123_0==100||(LA123_0>=103 && LA123_0<=104)||(LA123_0>=108 && LA123_0<=111)||LA123_0==115||LA123_0==119||LA123_0==125||LA123_0==127||LA123_0==144) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalAsmetaL.g:7637:4: ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )?
                    {
                    // InternalAsmetaL.g:7637:4: ( (lv_start_term_2_0= ruleTerm ) )
                    // InternalAsmetaL.g:7638:5: (lv_start_term_2_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:7638:5: (lv_start_term_2_0= ruleTerm )
                    // InternalAsmetaL.g:7639:6: lv_start_term_2_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSequenceTermAccess().getStart_termTermParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_86);
                    lv_start_term_2_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSequenceTermRule());
                      						}
                      						set(
                      							current,
                      							"start_term",
                      							lv_start_term_2_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:7656:4: ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )?
                    int alt122=3;
                    int LA122_0 = input.LA(1);

                    if ( (LA122_0==31) ) {
                        alt122=1;
                    }
                    else if ( (LA122_0==36) ) {
                        alt122=2;
                    }
                    switch (alt122) {
                        case 1 :
                            // InternalAsmetaL.g:7657:5: (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+
                            {
                            // InternalAsmetaL.g:7657:5: (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+
                            int cnt120=0;
                            loop120:
                            do {
                                int alt120=2;
                                int LA120_0 = input.LA(1);

                                if ( (LA120_0==31) ) {
                                    alt120=1;
                                }


                                switch (alt120) {
                            	case 1 :
                            	    // InternalAsmetaL.g:7658:6: otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) )
                            	    {
                            	    otherlv_3=(Token)match(input,31,FOLLOW_27); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getSequenceTermAccess().getCommaKeyword_2_1_0_0());
                            	      					
                            	    }
                            	    // InternalAsmetaL.g:7662:6: ( (lv_other_terms_4_0= ruleTerm ) )
                            	    // InternalAsmetaL.g:7663:7: (lv_other_terms_4_0= ruleTerm )
                            	    {
                            	    // InternalAsmetaL.g:7663:7: (lv_other_terms_4_0= ruleTerm )
                            	    // InternalAsmetaL.g:7664:8: lv_other_terms_4_0= ruleTerm
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getSequenceTermAccess().getOther_termsTermParserRuleCall_2_1_0_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_87);
                            	    lv_other_terms_4_0=ruleTerm();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getSequenceTermRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"other_terms",
                            	      									lv_other_terms_4_0,
                            	      									"org.asmeta.xt.AsmetaL.Term");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt120 >= 1 ) break loop120;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(120, input);
                                        throw eee;
                                }
                                cnt120++;
                            } while (true);


                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:7683:5: ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? )
                            {
                            // InternalAsmetaL.g:7683:5: ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? )
                            // InternalAsmetaL.g:7684:6: ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )?
                            {
                            // InternalAsmetaL.g:7684:6: ( ( ':' )=>otherlv_5= ':' )
                            // InternalAsmetaL.g:7685:7: ( ':' )=>otherlv_5= ':'
                            {
                            otherlv_5=(Token)match(input,36,FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_5, grammarAccess.getSequenceTermAccess().getColonKeyword_2_1_1_0());
                              						
                            }

                            }

                            // InternalAsmetaL.g:7691:6: ( (lv_end_term_6_0= ruleTerm ) )
                            // InternalAsmetaL.g:7692:7: (lv_end_term_6_0= ruleTerm )
                            {
                            // InternalAsmetaL.g:7692:7: (lv_end_term_6_0= ruleTerm )
                            // InternalAsmetaL.g:7693:8: lv_end_term_6_0= ruleTerm
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSequenceTermAccess().getEnd_termTermParserRuleCall_2_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_87);
                            lv_end_term_6_0=ruleTerm();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSequenceTermRule());
                              								}
                              								set(
                              									current,
                              									"end_term",
                              									lv_end_term_6_0,
                              									"org.asmeta.xt.AsmetaL.Term");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalAsmetaL.g:7710:6: (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )?
                            int alt121=2;
                            int LA121_0 = input.LA(1);

                            if ( (LA121_0==31) ) {
                                alt121=1;
                            }
                            switch (alt121) {
                                case 1 :
                                    // InternalAsmetaL.g:7711:7: otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) )
                                    {
                                    otherlv_7=(Token)match(input,31,FOLLOW_88); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_7, grammarAccess.getSequenceTermAccess().getCommaKeyword_2_1_1_2_0());
                                      						
                                    }
                                    // InternalAsmetaL.g:7715:7: ( (lv_step_8_0= ruleConstantTerm ) )
                                    // InternalAsmetaL.g:7716:8: (lv_step_8_0= ruleConstantTerm )
                                    {
                                    // InternalAsmetaL.g:7716:8: (lv_step_8_0= ruleConstantTerm )
                                    // InternalAsmetaL.g:7717:9: lv_step_8_0= ruleConstantTerm
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSequenceTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_89);
                                    lv_step_8_0=ruleConstantTerm();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getSequenceTermRule());
                                      									}
                                      									set(
                                      										current,
                                      										"step",
                                      										lv_step_8_0,
                                      										"org.asmeta.xt.AsmetaL.ConstantTerm");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getSequenceTermAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceTerm"


    // $ANTLR start "entryRuleMapTerm"
    // InternalAsmetaL.g:7746:1: entryRuleMapTerm returns [EObject current=null] : iv_ruleMapTerm= ruleMapTerm EOF ;
    public final EObject entryRuleMapTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapTerm = null;


        try {
            // InternalAsmetaL.g:7746:48: (iv_ruleMapTerm= ruleMapTerm EOF )
            // InternalAsmetaL.g:7747:2: iv_ruleMapTerm= ruleMapTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapTerm=ruleMapTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapTerm"


    // $ANTLR start "ruleMapTerm"
    // InternalAsmetaL.g:7753:1: ruleMapTerm returns [EObject current=null] : ( () otherlv_1= '{' (otherlv_2= '->' | ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* ) ) otherlv_10= '}' ) ;
    public final EObject ruleMapTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_term_3_0 = null;

        EObject lv_term_5_0 = null;

        EObject lv_term_7_0 = null;

        EObject lv_term_9_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7759:2: ( ( () otherlv_1= '{' (otherlv_2= '->' | ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* ) ) otherlv_10= '}' ) )
            // InternalAsmetaL.g:7760:2: ( () otherlv_1= '{' (otherlv_2= '->' | ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* ) ) otherlv_10= '}' )
            {
            // InternalAsmetaL.g:7760:2: ( () otherlv_1= '{' (otherlv_2= '->' | ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* ) ) otherlv_10= '}' )
            // InternalAsmetaL.g:7761:3: () otherlv_1= '{' (otherlv_2= '->' | ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* ) ) otherlv_10= '}'
            {
            // InternalAsmetaL.g:7761:3: ()
            // InternalAsmetaL.g:7762:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMapTermAccess().getMapTermAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,72,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapTermAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalAsmetaL.g:7775:3: (otherlv_2= '->' | ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* ) )
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==82) ) {
                alt125=1;
            }
            else if ( ((LA125_0>=RULE_ID && LA125_0<=RULE_REAL_NUMBER)||LA125_0==30||LA125_0==43||LA125_0==57||(LA125_0>=61 && LA125_0<=70)||LA125_0==72||(LA125_0>=75 && LA125_0<=80)||(LA125_0>=89 && LA125_0<=95)||LA125_0==100||(LA125_0>=103 && LA125_0<=104)||(LA125_0>=108 && LA125_0<=111)||LA125_0==115||LA125_0==119||LA125_0==125||LA125_0==127||LA125_0==144) ) {
                alt125=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;
            }
            switch (alt125) {
                case 1 :
                    // InternalAsmetaL.g:7776:4: otherlv_2= '->'
                    {
                    otherlv_2=(Token)match(input,82,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:7781:4: ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* )
                    {
                    // InternalAsmetaL.g:7781:4: ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* )
                    // InternalAsmetaL.g:7782:5: ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )*
                    {
                    // InternalAsmetaL.g:7782:5: ( (lv_term_3_0= ruleTerm ) )
                    // InternalAsmetaL.g:7783:6: (lv_term_3_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:7783:6: (lv_term_3_0= ruleTerm )
                    // InternalAsmetaL.g:7784:7: lv_term_3_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_61);
                    lv_term_3_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMapTermRule());
                      							}
                      							add(
                      								current,
                      								"term",
                      								lv_term_3_0,
                      								"org.asmeta.xt.AsmetaL.Term");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,82,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_1_1());
                      				
                    }
                    // InternalAsmetaL.g:7805:5: ( (lv_term_5_0= ruleTerm ) )
                    // InternalAsmetaL.g:7806:6: (lv_term_5_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:7806:6: (lv_term_5_0= ruleTerm )
                    // InternalAsmetaL.g:7807:7: lv_term_5_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_92);
                    lv_term_5_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMapTermRule());
                      							}
                      							add(
                      								current,
                      								"term",
                      								lv_term_5_0,
                      								"org.asmeta.xt.AsmetaL.Term");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalAsmetaL.g:7824:5: (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )*
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==31) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // InternalAsmetaL.g:7825:6: otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) )
                    	    {
                    	    otherlv_6=(Token)match(input,31,FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getMapTermAccess().getCommaKeyword_2_1_3_0());
                    	      					
                    	    }
                    	    // InternalAsmetaL.g:7829:6: ( (lv_term_7_0= ruleTerm ) )
                    	    // InternalAsmetaL.g:7830:7: (lv_term_7_0= ruleTerm )
                    	    {
                    	    // InternalAsmetaL.g:7830:7: (lv_term_7_0= ruleTerm )
                    	    // InternalAsmetaL.g:7831:8: lv_term_7_0= ruleTerm
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_3_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_61);
                    	    lv_term_7_0=ruleTerm();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMapTermRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"term",
                    	      									lv_term_7_0,
                    	      									"org.asmeta.xt.AsmetaL.Term");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_8=(Token)match(input,82,FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_1_3_2());
                    	      					
                    	    }
                    	    // InternalAsmetaL.g:7852:6: ( (lv_term_9_0= ruleTerm ) )
                    	    // InternalAsmetaL.g:7853:7: (lv_term_9_0= ruleTerm )
                    	    {
                    	    // InternalAsmetaL.g:7853:7: (lv_term_9_0= ruleTerm )
                    	    // InternalAsmetaL.g:7854:8: lv_term_9_0= ruleTerm
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_3_3_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_92);
                    	    lv_term_9_0=ruleTerm();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMapTermRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"term",
                    	      									lv_term_9_0,
                    	      									"org.asmeta.xt.AsmetaL.Term");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop124;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getMapTermAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapTerm"


    // $ANTLR start "entryRuleSetTerm"
    // InternalAsmetaL.g:7882:1: entryRuleSetTerm returns [EObject current=null] : iv_ruleSetTerm= ruleSetTerm EOF ;
    public final EObject entryRuleSetTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetTerm = null;


        try {
            // InternalAsmetaL.g:7882:48: (iv_ruleSetTerm= ruleSetTerm EOF )
            // InternalAsmetaL.g:7883:2: iv_ruleSetTerm= ruleSetTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSetTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSetTerm=ruleSetTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSetTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetTerm"


    // $ANTLR start "ruleSetTerm"
    // InternalAsmetaL.g:7889:1: ruleSetTerm returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '}' ) ;
    public final EObject ruleSetTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_start_term_2_0 = null;

        EObject lv_other_terms_4_0 = null;

        EObject lv_end_term_6_0 = null;

        EObject lv_step_8_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7895:2: ( ( () otherlv_1= '{' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '}' ) )
            // InternalAsmetaL.g:7896:2: ( () otherlv_1= '{' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '}' )
            {
            // InternalAsmetaL.g:7896:2: ( () otherlv_1= '{' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '}' )
            // InternalAsmetaL.g:7897:3: () otherlv_1= '{' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '}'
            {
            // InternalAsmetaL.g:7897:3: ()
            // InternalAsmetaL.g:7898:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSetTermAccess().getSetTermAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,72,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSetTermAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalAsmetaL.g:7911:3: ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( ((LA129_0>=RULE_ID && LA129_0<=RULE_REAL_NUMBER)||LA129_0==30||LA129_0==43||LA129_0==57||(LA129_0>=61 && LA129_0<=70)||LA129_0==72||(LA129_0>=75 && LA129_0<=80)||(LA129_0>=89 && LA129_0<=95)||LA129_0==100||(LA129_0>=103 && LA129_0<=104)||(LA129_0>=108 && LA129_0<=111)||LA129_0==115||LA129_0==119||LA129_0==125||LA129_0==127||LA129_0==144) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalAsmetaL.g:7912:4: ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )?
                    {
                    // InternalAsmetaL.g:7912:4: ( (lv_start_term_2_0= ruleTerm ) )
                    // InternalAsmetaL.g:7913:5: (lv_start_term_2_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:7913:5: (lv_start_term_2_0= ruleTerm )
                    // InternalAsmetaL.g:7914:6: lv_start_term_2_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSetTermAccess().getStart_termTermParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_94);
                    lv_start_term_2_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSetTermRule());
                      						}
                      						set(
                      							current,
                      							"start_term",
                      							lv_start_term_2_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:7931:4: ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )?
                    int alt128=3;
                    int LA128_0 = input.LA(1);

                    if ( (LA128_0==31) ) {
                        alt128=1;
                    }
                    else if ( (LA128_0==36) ) {
                        alt128=2;
                    }
                    switch (alt128) {
                        case 1 :
                            // InternalAsmetaL.g:7932:5: (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+
                            {
                            // InternalAsmetaL.g:7932:5: (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+
                            int cnt126=0;
                            loop126:
                            do {
                                int alt126=2;
                                int LA126_0 = input.LA(1);

                                if ( (LA126_0==31) ) {
                                    alt126=1;
                                }


                                switch (alt126) {
                            	case 1 :
                            	    // InternalAsmetaL.g:7933:6: otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) )
                            	    {
                            	    otherlv_3=(Token)match(input,31,FOLLOW_27); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getSetTermAccess().getCommaKeyword_2_1_0_0());
                            	      					
                            	    }
                            	    // InternalAsmetaL.g:7937:6: ( (lv_other_terms_4_0= ruleTerm ) )
                            	    // InternalAsmetaL.g:7938:7: (lv_other_terms_4_0= ruleTerm )
                            	    {
                            	    // InternalAsmetaL.g:7938:7: (lv_other_terms_4_0= ruleTerm )
                            	    // InternalAsmetaL.g:7939:8: lv_other_terms_4_0= ruleTerm
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getSetTermAccess().getOther_termsTermParserRuleCall_2_1_0_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_92);
                            	    lv_other_terms_4_0=ruleTerm();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getSetTermRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"other_terms",
                            	      									lv_other_terms_4_0,
                            	      									"org.asmeta.xt.AsmetaL.Term");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt126 >= 1 ) break loop126;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(126, input);
                                        throw eee;
                                }
                                cnt126++;
                            } while (true);


                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:7958:5: ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? )
                            {
                            // InternalAsmetaL.g:7958:5: ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? )
                            // InternalAsmetaL.g:7959:6: ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )?
                            {
                            // InternalAsmetaL.g:7959:6: ( ( ':' )=>otherlv_5= ':' )
                            // InternalAsmetaL.g:7960:7: ( ':' )=>otherlv_5= ':'
                            {
                            otherlv_5=(Token)match(input,36,FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_5, grammarAccess.getSetTermAccess().getColonKeyword_2_1_1_0());
                              						
                            }

                            }

                            // InternalAsmetaL.g:7966:6: ( (lv_end_term_6_0= ruleTerm ) )
                            // InternalAsmetaL.g:7967:7: (lv_end_term_6_0= ruleTerm )
                            {
                            // InternalAsmetaL.g:7967:7: (lv_end_term_6_0= ruleTerm )
                            // InternalAsmetaL.g:7968:8: lv_end_term_6_0= ruleTerm
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSetTermAccess().getEnd_termTermParserRuleCall_2_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_92);
                            lv_end_term_6_0=ruleTerm();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSetTermRule());
                              								}
                              								set(
                              									current,
                              									"end_term",
                              									lv_end_term_6_0,
                              									"org.asmeta.xt.AsmetaL.Term");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalAsmetaL.g:7985:6: (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )?
                            int alt127=2;
                            int LA127_0 = input.LA(1);

                            if ( (LA127_0==31) ) {
                                alt127=1;
                            }
                            switch (alt127) {
                                case 1 :
                                    // InternalAsmetaL.g:7986:7: otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) )
                                    {
                                    otherlv_7=(Token)match(input,31,FOLLOW_88); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_7, grammarAccess.getSetTermAccess().getCommaKeyword_2_1_1_2_0());
                                      						
                                    }
                                    // InternalAsmetaL.g:7990:7: ( (lv_step_8_0= ruleConstantTerm ) )
                                    // InternalAsmetaL.g:7991:8: (lv_step_8_0= ruleConstantTerm )
                                    {
                                    // InternalAsmetaL.g:7991:8: (lv_step_8_0= ruleConstantTerm )
                                    // InternalAsmetaL.g:7992:9: lv_step_8_0= ruleConstantTerm
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSetTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_91);
                                    lv_step_8_0=ruleConstantTerm();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getSetTermRule());
                                      									}
                                      									set(
                                      										current,
                                      										"step",
                                      										lv_step_8_0,
                                      										"org.asmeta.xt.AsmetaL.ConstantTerm");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getSetTermAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetTerm"


    // $ANTLR start "entryRuleBagTerm"
    // InternalAsmetaL.g:8021:1: entryRuleBagTerm returns [EObject current=null] : iv_ruleBagTerm= ruleBagTerm EOF ;
    public final EObject entryRuleBagTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBagTerm = null;


        try {
            // InternalAsmetaL.g:8021:48: (iv_ruleBagTerm= ruleBagTerm EOF )
            // InternalAsmetaL.g:8022:2: iv_ruleBagTerm= ruleBagTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBagTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBagTerm=ruleBagTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBagTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBagTerm"


    // $ANTLR start "ruleBagTerm"
    // InternalAsmetaL.g:8028:1: ruleBagTerm returns [EObject current=null] : ( () otherlv_1= '<' ( ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '>' ) ;
    public final EObject ruleBagTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_start_term_2_0 = null;

        EObject lv_other_terms_4_0 = null;

        EObject lv_end_term_6_0 = null;

        EObject lv_step_8_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8034:2: ( ( () otherlv_1= '<' ( ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '>' ) )
            // InternalAsmetaL.g:8035:2: ( () otherlv_1= '<' ( ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '>' )
            {
            // InternalAsmetaL.g:8035:2: ( () otherlv_1= '<' ( ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '>' )
            // InternalAsmetaL.g:8036:3: () otherlv_1= '<' ( ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '>'
            {
            // InternalAsmetaL.g:8036:3: ()
            // InternalAsmetaL.g:8037:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBagTermAccess().getBagTermAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,100,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBagTermAccess().getLessThanSignKeyword_1());
              		
            }
            // InternalAsmetaL.g:8050:3: ( ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( ((LA133_0>=RULE_ID && LA133_0<=RULE_REAL_NUMBER)||(LA133_0>=89 && LA133_0<=95)||(LA133_0>=103 && LA133_0<=104)||(LA133_0>=108 && LA133_0<=110)||LA133_0==144) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalAsmetaL.g:8051:4: ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )?
                    {
                    // InternalAsmetaL.g:8051:4: ( (lv_start_term_2_0= ruleBasicTerm ) )
                    // InternalAsmetaL.g:8052:5: (lv_start_term_2_0= ruleBasicTerm )
                    {
                    // InternalAsmetaL.g:8052:5: (lv_start_term_2_0= ruleBasicTerm )
                    // InternalAsmetaL.g:8053:6: lv_start_term_2_0= ruleBasicTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBagTermAccess().getStart_termBasicTermParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_96);
                    lv_start_term_2_0=ruleBasicTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBagTermRule());
                      						}
                      						set(
                      							current,
                      							"start_term",
                      							lv_start_term_2_0,
                      							"org.asmeta.xt.AsmetaL.BasicTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:8070:4: ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )?
                    int alt132=3;
                    int LA132_0 = input.LA(1);

                    if ( (LA132_0==31) ) {
                        alt132=1;
                    }
                    else if ( (LA132_0==36) ) {
                        alt132=2;
                    }
                    switch (alt132) {
                        case 1 :
                            // InternalAsmetaL.g:8071:5: (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+
                            {
                            // InternalAsmetaL.g:8071:5: (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+
                            int cnt130=0;
                            loop130:
                            do {
                                int alt130=2;
                                int LA130_0 = input.LA(1);

                                if ( (LA130_0==31) ) {
                                    alt130=1;
                                }


                                switch (alt130) {
                            	case 1 :
                            	    // InternalAsmetaL.g:8072:6: otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) )
                            	    {
                            	    otherlv_3=(Token)match(input,31,FOLLOW_97); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getBagTermAccess().getCommaKeyword_2_1_0_0());
                            	      					
                            	    }
                            	    // InternalAsmetaL.g:8076:6: ( (lv_other_terms_4_0= ruleBasicTerm ) )
                            	    // InternalAsmetaL.g:8077:7: (lv_other_terms_4_0= ruleBasicTerm )
                            	    {
                            	    // InternalAsmetaL.g:8077:7: (lv_other_terms_4_0= ruleBasicTerm )
                            	    // InternalAsmetaL.g:8078:8: lv_other_terms_4_0= ruleBasicTerm
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getBagTermAccess().getOther_termsBasicTermParserRuleCall_2_1_0_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_98);
                            	    lv_other_terms_4_0=ruleBasicTerm();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getBagTermRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"other_terms",
                            	      									lv_other_terms_4_0,
                            	      									"org.asmeta.xt.AsmetaL.BasicTerm");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt130 >= 1 ) break loop130;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(130, input);
                                        throw eee;
                                }
                                cnt130++;
                            } while (true);


                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:8097:5: ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? )
                            {
                            // InternalAsmetaL.g:8097:5: ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? )
                            // InternalAsmetaL.g:8098:6: ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )?
                            {
                            // InternalAsmetaL.g:8098:6: ( ( ':' )=>otherlv_5= ':' )
                            // InternalAsmetaL.g:8099:7: ( ':' )=>otherlv_5= ':'
                            {
                            otherlv_5=(Token)match(input,36,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_5, grammarAccess.getBagTermAccess().getColonKeyword_2_1_1_0());
                              						
                            }

                            }

                            // InternalAsmetaL.g:8105:6: ( (lv_end_term_6_0= ruleConstantTerm ) )
                            // InternalAsmetaL.g:8106:7: (lv_end_term_6_0= ruleConstantTerm )
                            {
                            // InternalAsmetaL.g:8106:7: (lv_end_term_6_0= ruleConstantTerm )
                            // InternalAsmetaL.g:8107:8: lv_end_term_6_0= ruleConstantTerm
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getBagTermAccess().getEnd_termConstantTermParserRuleCall_2_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_98);
                            lv_end_term_6_0=ruleConstantTerm();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getBagTermRule());
                              								}
                              								set(
                              									current,
                              									"end_term",
                              									lv_end_term_6_0,
                              									"org.asmeta.xt.AsmetaL.ConstantTerm");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalAsmetaL.g:8124:6: (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )?
                            int alt131=2;
                            int LA131_0 = input.LA(1);

                            if ( (LA131_0==31) ) {
                                alt131=1;
                            }
                            switch (alt131) {
                                case 1 :
                                    // InternalAsmetaL.g:8125:7: otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) )
                                    {
                                    otherlv_7=(Token)match(input,31,FOLLOW_88); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_7, grammarAccess.getBagTermAccess().getCommaKeyword_2_1_1_2_0());
                                      						
                                    }
                                    // InternalAsmetaL.g:8129:7: ( (lv_step_8_0= ruleConstantTerm ) )
                                    // InternalAsmetaL.g:8130:8: (lv_step_8_0= ruleConstantTerm )
                                    {
                                    // InternalAsmetaL.g:8130:8: (lv_step_8_0= ruleConstantTerm )
                                    // InternalAsmetaL.g:8131:9: lv_step_8_0= ruleConstantTerm
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getBagTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_99);
                                    lv_step_8_0=ruleConstantTerm();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getBagTermRule());
                                      									}
                                      									set(
                                      										current,
                                      										"step",
                                      										lv_step_8_0,
                                      										"org.asmeta.xt.AsmetaL.ConstantTerm");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getBagTermAccess().getGreaterThanSignKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBagTerm"


    // $ANTLR start "entryRuleVariableBindingTerm"
    // InternalAsmetaL.g:8160:1: entryRuleVariableBindingTerm returns [EObject current=null] : iv_ruleVariableBindingTerm= ruleVariableBindingTerm EOF ;
    public final EObject entryRuleVariableBindingTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableBindingTerm = null;


        try {
            // InternalAsmetaL.g:8160:60: (iv_ruleVariableBindingTerm= ruleVariableBindingTerm EOF )
            // InternalAsmetaL.g:8161:2: iv_ruleVariableBindingTerm= ruleVariableBindingTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableBindingTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableBindingTerm=ruleVariableBindingTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableBindingTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableBindingTerm"


    // $ANTLR start "ruleVariableBindingTerm"
    // InternalAsmetaL.g:8167:1: ruleVariableBindingTerm returns [EObject current=null] : (this_LetTerm_0= ruleLetTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm | this_ComprehensionTerm_2= ruleComprehensionTerm ) ;
    public final EObject ruleVariableBindingTerm() throws RecognitionException {
        EObject current = null;

        EObject this_LetTerm_0 = null;

        EObject this_FiniteQuantificationTerm_1 = null;

        EObject this_ComprehensionTerm_2 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8173:2: ( (this_LetTerm_0= ruleLetTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm | this_ComprehensionTerm_2= ruleComprehensionTerm ) )
            // InternalAsmetaL.g:8174:2: (this_LetTerm_0= ruleLetTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm | this_ComprehensionTerm_2= ruleComprehensionTerm )
            {
            // InternalAsmetaL.g:8174:2: (this_LetTerm_0= ruleLetTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm | this_ComprehensionTerm_2= ruleComprehensionTerm )
            int alt134=3;
            switch ( input.LA(1) ) {
            case 125:
                {
                alt134=1;
                }
                break;
            case 30:
                {
                alt134=2;
                }
                break;
            case 72:
            case 100:
            case 119:
                {
                alt134=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }

            switch (alt134) {
                case 1 :
                    // InternalAsmetaL.g:8175:3: this_LetTerm_0= ruleLetTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableBindingTermAccess().getLetTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LetTerm_0=ruleLetTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LetTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:8187:3: this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableBindingTermAccess().getFiniteQuantificationTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FiniteQuantificationTerm_1=ruleFiniteQuantificationTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FiniteQuantificationTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:8199:3: this_ComprehensionTerm_2= ruleComprehensionTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableBindingTermAccess().getComprehensionTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ComprehensionTerm_2=ruleComprehensionTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ComprehensionTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableBindingTerm"


    // $ANTLR start "entryRuleFiniteQuantificationTerm"
    // InternalAsmetaL.g:8214:1: entryRuleFiniteQuantificationTerm returns [EObject current=null] : iv_ruleFiniteQuantificationTerm= ruleFiniteQuantificationTerm EOF ;
    public final EObject entryRuleFiniteQuantificationTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFiniteQuantificationTerm = null;


        try {
            // InternalAsmetaL.g:8214:65: (iv_ruleFiniteQuantificationTerm= ruleFiniteQuantificationTerm EOF )
            // InternalAsmetaL.g:8215:2: iv_ruleFiniteQuantificationTerm= ruleFiniteQuantificationTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFiniteQuantificationTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFiniteQuantificationTerm=ruleFiniteQuantificationTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFiniteQuantificationTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFiniteQuantificationTerm"


    // $ANTLR start "ruleFiniteQuantificationTerm"
    // InternalAsmetaL.g:8221:1: ruleFiniteQuantificationTerm returns [EObject current=null] : (this_ForallTerm_0= ruleForallTerm | this_ExistUniqueTerm_1= ruleExistUniqueTerm | this_ExistTerm_2= ruleExistTerm ) ;
    public final EObject ruleFiniteQuantificationTerm() throws RecognitionException {
        EObject current = null;

        EObject this_ForallTerm_0 = null;

        EObject this_ExistUniqueTerm_1 = null;

        EObject this_ExistTerm_2 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8227:2: ( (this_ForallTerm_0= ruleForallTerm | this_ExistUniqueTerm_1= ruleExistUniqueTerm | this_ExistTerm_2= ruleExistTerm ) )
            // InternalAsmetaL.g:8228:2: (this_ForallTerm_0= ruleForallTerm | this_ExistUniqueTerm_1= ruleExistUniqueTerm | this_ExistTerm_2= ruleExistTerm )
            {
            // InternalAsmetaL.g:8228:2: (this_ForallTerm_0= ruleForallTerm | this_ExistUniqueTerm_1= ruleExistUniqueTerm | this_ExistTerm_2= ruleExistTerm )
            int alt135=3;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==30) ) {
                int LA135_1 = input.LA(2);

                if ( (LA135_1==121) ) {
                    int LA135_2 = input.LA(3);

                    if ( (LA135_2==144) ) {
                        alt135=3;
                    }
                    else if ( (LA135_2==122) ) {
                        alt135=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 135, 2, input);

                        throw nvae;
                    }
                }
                else if ( (LA135_1==124) ) {
                    alt135=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 135, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }
            switch (alt135) {
                case 1 :
                    // InternalAsmetaL.g:8229:3: this_ForallTerm_0= ruleForallTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFiniteQuantificationTermAccess().getForallTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ForallTerm_0=ruleForallTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ForallTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:8241:3: this_ExistUniqueTerm_1= ruleExistUniqueTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFiniteQuantificationTermAccess().getExistUniqueTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExistUniqueTerm_1=ruleExistUniqueTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExistUniqueTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:8253:3: this_ExistTerm_2= ruleExistTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFiniteQuantificationTermAccess().getExistTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExistTerm_2=ruleExistTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExistTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFiniteQuantificationTerm"


    // $ANTLR start "entryRuleExistUniqueTerm"
    // InternalAsmetaL.g:8268:1: entryRuleExistUniqueTerm returns [EObject current=null] : iv_ruleExistUniqueTerm= ruleExistUniqueTerm EOF ;
    public final EObject entryRuleExistUniqueTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExistUniqueTerm = null;


        try {
            // InternalAsmetaL.g:8268:56: (iv_ruleExistUniqueTerm= ruleExistUniqueTerm EOF )
            // InternalAsmetaL.g:8269:2: iv_ruleExistUniqueTerm= ruleExistUniqueTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExistUniqueTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExistUniqueTerm=ruleExistUniqueTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExistUniqueTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExistUniqueTerm"


    // $ANTLR start "ruleExistUniqueTerm"
    // InternalAsmetaL.g:8275:1: ruleExistUniqueTerm returns [EObject current=null] : (otherlv_0= '(' otherlv_1= 'exist' otherlv_2= 'unique' ( (lv_variable_3_0= ruleVariableTerm ) ) otherlv_4= 'in' ( (lv_ranges_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) ) )* (otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) ) )? otherlv_12= ')' ) ;
    public final EObject ruleExistUniqueTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_3_0 = null;

        EObject lv_ranges_5_0 = null;

        EObject lv_variable_7_0 = null;

        EObject lv_ranges_9_0 = null;

        EObject lv_guard_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8281:2: ( (otherlv_0= '(' otherlv_1= 'exist' otherlv_2= 'unique' ( (lv_variable_3_0= ruleVariableTerm ) ) otherlv_4= 'in' ( (lv_ranges_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) ) )* (otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) ) )? otherlv_12= ')' ) )
            // InternalAsmetaL.g:8282:2: (otherlv_0= '(' otherlv_1= 'exist' otherlv_2= 'unique' ( (lv_variable_3_0= ruleVariableTerm ) ) otherlv_4= 'in' ( (lv_ranges_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) ) )* (otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) ) )? otherlv_12= ')' )
            {
            // InternalAsmetaL.g:8282:2: (otherlv_0= '(' otherlv_1= 'exist' otherlv_2= 'unique' ( (lv_variable_3_0= ruleVariableTerm ) ) otherlv_4= 'in' ( (lv_ranges_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) ) )* (otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) ) )? otherlv_12= ')' )
            // InternalAsmetaL.g:8283:3: otherlv_0= '(' otherlv_1= 'exist' otherlv_2= 'unique' ( (lv_variable_3_0= ruleVariableTerm ) ) otherlv_4= 'in' ( (lv_ranges_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) ) )* (otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) ) )? otherlv_12= ')'
            {
            otherlv_0=(Token)match(input,30,FOLLOW_100); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExistUniqueTermAccess().getLeftParenthesisKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,121,FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExistUniqueTermAccess().getExistKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,122,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getExistUniqueTermAccess().getUniqueKeyword_2());
              		
            }
            // InternalAsmetaL.g:8295:3: ( (lv_variable_3_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:8296:4: (lv_variable_3_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:8296:4: (lv_variable_3_0= ruleVariableTerm )
            // InternalAsmetaL.g:8297:5: lv_variable_3_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExistUniqueTermAccess().getVariableVariableTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_3_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_3_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getExistUniqueTermAccess().getInKeyword_4());
              		
            }
            // InternalAsmetaL.g:8318:3: ( (lv_ranges_5_0= ruleTerm ) )
            // InternalAsmetaL.g:8319:4: (lv_ranges_5_0= ruleTerm )
            {
            // InternalAsmetaL.g:8319:4: (lv_ranges_5_0= ruleTerm )
            // InternalAsmetaL.g:8320:5: lv_ranges_5_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExistUniqueTermAccess().getRangesTermParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_102);
            lv_ranges_5_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_5_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:8337:3: (otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) ) )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==31) ) {
                    alt136=1;
                }


                switch (alt136) {
            	case 1 :
            	    // InternalAsmetaL.g:8338:4: otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) )
            	    {
            	    otherlv_6=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getExistUniqueTermAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:8342:4: ( (lv_variable_7_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:8343:5: (lv_variable_7_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:8343:5: (lv_variable_7_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:8344:6: lv_variable_7_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExistUniqueTermAccess().getVariableVariableTermParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_7_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_7_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_8=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_8, grammarAccess.getExistUniqueTermAccess().getInKeyword_6_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:8365:4: ( (lv_ranges_9_0= ruleTerm ) )
            	    // InternalAsmetaL.g:8366:5: (lv_ranges_9_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:8366:5: (lv_ranges_9_0= ruleTerm )
            	    // InternalAsmetaL.g:8367:6: lv_ranges_9_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExistUniqueTermAccess().getRangesTermParserRuleCall_6_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_ranges_9_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_9_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);

            // InternalAsmetaL.g:8385:3: (otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==123) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalAsmetaL.g:8386:4: otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) )
                    {
                    otherlv_10=(Token)match(input,123,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getExistUniqueTermAccess().getWithKeyword_7_0());
                      			
                    }
                    // InternalAsmetaL.g:8390:4: ( (lv_guard_11_0= ruleTerm ) )
                    // InternalAsmetaL.g:8391:5: (lv_guard_11_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:8391:5: (lv_guard_11_0= ruleTerm )
                    // InternalAsmetaL.g:8392:6: lv_guard_11_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExistUniqueTermAccess().getGuardTermParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_49);
                    lv_guard_11_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_11_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_12=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getExistUniqueTermAccess().getRightParenthesisKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExistUniqueTerm"


    // $ANTLR start "entryRuleExistTerm"
    // InternalAsmetaL.g:8418:1: entryRuleExistTerm returns [EObject current=null] : iv_ruleExistTerm= ruleExistTerm EOF ;
    public final EObject entryRuleExistTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExistTerm = null;


        try {
            // InternalAsmetaL.g:8418:50: (iv_ruleExistTerm= ruleExistTerm EOF )
            // InternalAsmetaL.g:8419:2: iv_ruleExistTerm= ruleExistTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExistTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExistTerm=ruleExistTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExistTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExistTerm"


    // $ANTLR start "ruleExistTerm"
    // InternalAsmetaL.g:8425:1: ruleExistTerm returns [EObject current=null] : (otherlv_0= '(' otherlv_1= 'exist' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' ) ;
    public final EObject ruleExistTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_variable_2_0 = null;

        EObject lv_ranges_4_0 = null;

        EObject lv_variable_6_0 = null;

        EObject lv_ranges_8_0 = null;

        EObject lv_guard_10_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8431:2: ( (otherlv_0= '(' otherlv_1= 'exist' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' ) )
            // InternalAsmetaL.g:8432:2: (otherlv_0= '(' otherlv_1= 'exist' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' )
            {
            // InternalAsmetaL.g:8432:2: (otherlv_0= '(' otherlv_1= 'exist' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' )
            // InternalAsmetaL.g:8433:3: otherlv_0= '(' otherlv_1= 'exist' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')'
            {
            otherlv_0=(Token)match(input,30,FOLLOW_100); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExistTermAccess().getLeftParenthesisKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,121,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExistTermAccess().getExistKeyword_1());
              		
            }
            // InternalAsmetaL.g:8441:3: ( (lv_variable_2_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:8442:4: (lv_variable_2_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:8442:4: (lv_variable_2_0= ruleVariableTerm )
            // InternalAsmetaL.g:8443:5: lv_variable_2_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExistTermAccess().getVariableVariableTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_2_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExistTermRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_2_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getExistTermAccess().getInKeyword_3());
              		
            }
            // InternalAsmetaL.g:8464:3: ( (lv_ranges_4_0= ruleTerm ) )
            // InternalAsmetaL.g:8465:4: (lv_ranges_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:8465:4: (lv_ranges_4_0= ruleTerm )
            // InternalAsmetaL.g:8466:5: lv_ranges_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExistTermAccess().getRangesTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_102);
            lv_ranges_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExistTermRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:8483:3: (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )*
            loop138:
            do {
                int alt138=2;
                int LA138_0 = input.LA(1);

                if ( (LA138_0==31) ) {
                    alt138=1;
                }


                switch (alt138) {
            	case 1 :
            	    // InternalAsmetaL.g:8484:4: otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) )
            	    {
            	    otherlv_5=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getExistTermAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:8488:4: ( (lv_variable_6_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:8489:5: (lv_variable_6_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:8489:5: (lv_variable_6_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:8490:6: lv_variable_6_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExistTermAccess().getVariableVariableTermParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_6_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExistTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_6_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_7=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getExistTermAccess().getInKeyword_5_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:8511:4: ( (lv_ranges_8_0= ruleTerm ) )
            	    // InternalAsmetaL.g:8512:5: (lv_ranges_8_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:8512:5: (lv_ranges_8_0= ruleTerm )
            	    // InternalAsmetaL.g:8513:6: lv_ranges_8_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExistTermAccess().getRangesTermParserRuleCall_5_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_ranges_8_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExistTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_8_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);

            // InternalAsmetaL.g:8531:3: (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==123) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalAsmetaL.g:8532:4: otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) )
                    {
                    otherlv_9=(Token)match(input,123,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getExistTermAccess().getWithKeyword_6_0());
                      			
                    }
                    // InternalAsmetaL.g:8536:4: ( (lv_guard_10_0= ruleTerm ) )
                    // InternalAsmetaL.g:8537:5: (lv_guard_10_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:8537:5: (lv_guard_10_0= ruleTerm )
                    // InternalAsmetaL.g:8538:6: lv_guard_10_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExistTermAccess().getGuardTermParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_49);
                    lv_guard_10_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExistTermRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_10_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getExistTermAccess().getRightParenthesisKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExistTerm"


    // $ANTLR start "entryRuleForallTerm"
    // InternalAsmetaL.g:8564:1: entryRuleForallTerm returns [EObject current=null] : iv_ruleForallTerm= ruleForallTerm EOF ;
    public final EObject entryRuleForallTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForallTerm = null;


        try {
            // InternalAsmetaL.g:8564:51: (iv_ruleForallTerm= ruleForallTerm EOF )
            // InternalAsmetaL.g:8565:2: iv_ruleForallTerm= ruleForallTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForallTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForallTerm=ruleForallTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForallTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForallTerm"


    // $ANTLR start "ruleForallTerm"
    // InternalAsmetaL.g:8571:1: ruleForallTerm returns [EObject current=null] : (otherlv_0= '(' otherlv_1= 'forall' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' ) ;
    public final EObject ruleForallTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_variable_2_0 = null;

        EObject lv_ranges_4_0 = null;

        EObject lv_variable_6_0 = null;

        EObject lv_ranges_8_0 = null;

        EObject lv_guard_10_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8577:2: ( (otherlv_0= '(' otherlv_1= 'forall' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' ) )
            // InternalAsmetaL.g:8578:2: (otherlv_0= '(' otherlv_1= 'forall' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' )
            {
            // InternalAsmetaL.g:8578:2: (otherlv_0= '(' otherlv_1= 'forall' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' )
            // InternalAsmetaL.g:8579:3: otherlv_0= '(' otherlv_1= 'forall' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')'
            {
            otherlv_0=(Token)match(input,30,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForallTermAccess().getLeftParenthesisKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,124,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForallTermAccess().getForallKeyword_1());
              		
            }
            // InternalAsmetaL.g:8587:3: ( (lv_variable_2_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:8588:4: (lv_variable_2_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:8588:4: (lv_variable_2_0= ruleVariableTerm )
            // InternalAsmetaL.g:8589:5: lv_variable_2_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForallTermAccess().getVariableVariableTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_2_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForallTermRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_2_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getForallTermAccess().getInKeyword_3());
              		
            }
            // InternalAsmetaL.g:8610:3: ( (lv_ranges_4_0= ruleTerm ) )
            // InternalAsmetaL.g:8611:4: (lv_ranges_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:8611:4: (lv_ranges_4_0= ruleTerm )
            // InternalAsmetaL.g:8612:5: lv_ranges_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForallTermAccess().getRangesTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_102);
            lv_ranges_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForallTermRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:8629:3: (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )*
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==31) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    // InternalAsmetaL.g:8630:4: otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) )
            	    {
            	    otherlv_5=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getForallTermAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:8634:4: ( (lv_variable_6_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:8635:5: (lv_variable_6_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:8635:5: (lv_variable_6_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:8636:6: lv_variable_6_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForallTermAccess().getVariableVariableTermParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_6_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForallTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_6_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_7=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getForallTermAccess().getInKeyword_5_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:8657:4: ( (lv_ranges_8_0= ruleTerm ) )
            	    // InternalAsmetaL.g:8658:5: (lv_ranges_8_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:8658:5: (lv_ranges_8_0= ruleTerm )
            	    // InternalAsmetaL.g:8659:6: lv_ranges_8_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForallTermAccess().getRangesTermParserRuleCall_5_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_ranges_8_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForallTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_8_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);

            // InternalAsmetaL.g:8677:3: (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==123) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalAsmetaL.g:8678:4: otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) )
                    {
                    otherlv_9=(Token)match(input,123,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getForallTermAccess().getWithKeyword_6_0());
                      			
                    }
                    // InternalAsmetaL.g:8682:4: ( (lv_guard_10_0= ruleTerm ) )
                    // InternalAsmetaL.g:8683:5: (lv_guard_10_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:8683:5: (lv_guard_10_0= ruleTerm )
                    // InternalAsmetaL.g:8684:6: lv_guard_10_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForallTermAccess().getGuardTermParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_49);
                    lv_guard_10_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForallTermRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_10_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getForallTermAccess().getRightParenthesisKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForallTerm"


    // $ANTLR start "entryRuleLetTerm"
    // InternalAsmetaL.g:8710:1: entryRuleLetTerm returns [EObject current=null] : iv_ruleLetTerm= ruleLetTerm EOF ;
    public final EObject entryRuleLetTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetTerm = null;


        try {
            // InternalAsmetaL.g:8710:48: (iv_ruleLetTerm= ruleLetTerm EOF )
            // InternalAsmetaL.g:8711:2: iv_ruleLetTerm= ruleLetTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLetTerm=ruleLetTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetTerm"


    // $ANTLR start "ruleLetTerm"
    // InternalAsmetaL.g:8717:1: ruleLetTerm returns [EObject current=null] : (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_assignmentTerm_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_body_11_0= ruleTerm ) ) otherlv_12= 'endlet' ) ;
    public final EObject ruleLetTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_2_0 = null;

        EObject lv_assignmentTerm_4_0 = null;

        EObject lv_variable_6_0 = null;

        EObject lv_assignmentTerm_8_0 = null;

        EObject lv_body_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8723:2: ( (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_assignmentTerm_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_body_11_0= ruleTerm ) ) otherlv_12= 'endlet' ) )
            // InternalAsmetaL.g:8724:2: (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_assignmentTerm_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_body_11_0= ruleTerm ) ) otherlv_12= 'endlet' )
            {
            // InternalAsmetaL.g:8724:2: (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_assignmentTerm_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_body_11_0= ruleTerm ) ) otherlv_12= 'endlet' )
            // InternalAsmetaL.g:8725:3: otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_assignmentTerm_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_body_11_0= ruleTerm ) ) otherlv_12= 'endlet'
            {
            otherlv_0=(Token)match(input,125,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLetTermAccess().getLetKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLetTermAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:8733:3: ( (lv_variable_2_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:8734:4: (lv_variable_2_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:8734:4: (lv_variable_2_0= ruleVariableTerm )
            // InternalAsmetaL.g:8735:5: lv_variable_2_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetTermAccess().getVariableVariableTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_variable_2_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetTermRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_2_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLetTermAccess().getEqualsSignKeyword_3());
              		
            }
            // InternalAsmetaL.g:8756:3: ( (lv_assignmentTerm_4_0= ruleTerm ) )
            // InternalAsmetaL.g:8757:4: (lv_assignmentTerm_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:8757:4: (lv_assignmentTerm_4_0= ruleTerm )
            // InternalAsmetaL.g:8758:5: lv_assignmentTerm_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetTermAccess().getAssignmentTermTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_assignmentTerm_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetTermRule());
              					}
              					add(
              						current,
              						"assignmentTerm",
              						lv_assignmentTerm_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:8775:3: (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) ) )*
            loop142:
            do {
                int alt142=2;
                int LA142_0 = input.LA(1);

                if ( (LA142_0==31) ) {
                    alt142=1;
                }


                switch (alt142) {
            	case 1 :
            	    // InternalAsmetaL.g:8776:4: otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) )
            	    {
            	    otherlv_5=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getLetTermAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:8780:4: ( (lv_variable_6_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:8781:5: (lv_variable_6_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:8781:5: (lv_variable_6_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:8782:6: lv_variable_6_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLetTermAccess().getVariableVariableTermParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_26);
            	    lv_variable_6_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLetTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_6_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_7=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getLetTermAccess().getEqualsSignKeyword_5_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:8803:4: ( (lv_assignmentTerm_8_0= ruleTerm ) )
            	    // InternalAsmetaL.g:8804:5: (lv_assignmentTerm_8_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:8804:5: (lv_assignmentTerm_8_0= ruleTerm )
            	    // InternalAsmetaL.g:8805:6: lv_assignmentTerm_8_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLetTermAccess().getAssignmentTermTermParserRuleCall_5_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_assignmentTerm_8_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLetTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"assignmentTerm",
            	      							lv_assignmentTerm_8_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop142;
                }
            } while (true);

            otherlv_9=(Token)match(input,32,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getLetTermAccess().getRightParenthesisKeyword_6());
              		
            }
            otherlv_10=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getLetTermAccess().getInKeyword_7());
              		
            }
            // InternalAsmetaL.g:8831:3: ( (lv_body_11_0= ruleTerm ) )
            // InternalAsmetaL.g:8832:4: (lv_body_11_0= ruleTerm )
            {
            // InternalAsmetaL.g:8832:4: (lv_body_11_0= ruleTerm )
            // InternalAsmetaL.g:8833:5: lv_body_11_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetTermAccess().getBodyTermParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_104);
            lv_body_11_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetTermRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_11_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getLetTermAccess().getEndletKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetTerm"


    // $ANTLR start "entryRuleComprehensionTerm"
    // InternalAsmetaL.g:8858:1: entryRuleComprehensionTerm returns [EObject current=null] : iv_ruleComprehensionTerm= ruleComprehensionTerm EOF ;
    public final EObject entryRuleComprehensionTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComprehensionTerm = null;


        try {
            // InternalAsmetaL.g:8858:58: (iv_ruleComprehensionTerm= ruleComprehensionTerm EOF )
            // InternalAsmetaL.g:8859:2: iv_ruleComprehensionTerm= ruleComprehensionTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComprehensionTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComprehensionTerm=ruleComprehensionTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComprehensionTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComprehensionTerm"


    // $ANTLR start "ruleComprehensionTerm"
    // InternalAsmetaL.g:8865:1: ruleComprehensionTerm returns [EObject current=null] : (this_SetCT_0= ruleSetCT | this_MapCT_1= ruleMapCT | this_SequenceCT_2= ruleSequenceCT | this_BagCT_3= ruleBagCT ) ;
    public final EObject ruleComprehensionTerm() throws RecognitionException {
        EObject current = null;

        EObject this_SetCT_0 = null;

        EObject this_MapCT_1 = null;

        EObject this_SequenceCT_2 = null;

        EObject this_BagCT_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8871:2: ( (this_SetCT_0= ruleSetCT | this_MapCT_1= ruleMapCT | this_SequenceCT_2= ruleSequenceCT | this_BagCT_3= ruleBagCT ) )
            // InternalAsmetaL.g:8872:2: (this_SetCT_0= ruleSetCT | this_MapCT_1= ruleMapCT | this_SequenceCT_2= ruleSequenceCT | this_BagCT_3= ruleBagCT )
            {
            // InternalAsmetaL.g:8872:2: (this_SetCT_0= ruleSetCT | this_MapCT_1= ruleMapCT | this_SequenceCT_2= ruleSequenceCT | this_BagCT_3= ruleBagCT )
            int alt143=4;
            switch ( input.LA(1) ) {
            case 72:
                {
                int LA143_1 = input.LA(2);

                if ( (synpred221_InternalAsmetaL()) ) {
                    alt143=1;
                }
                else if ( (synpred222_InternalAsmetaL()) ) {
                    alt143=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 143, 1, input);

                    throw nvae;
                }
                }
                break;
            case 119:
                {
                alt143=3;
                }
                break;
            case 100:
                {
                alt143=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }

            switch (alt143) {
                case 1 :
                    // InternalAsmetaL.g:8873:3: this_SetCT_0= ruleSetCT
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getComprehensionTermAccess().getSetCTParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SetCT_0=ruleSetCT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SetCT_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:8885:3: this_MapCT_1= ruleMapCT
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getComprehensionTermAccess().getMapCTParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MapCT_1=ruleMapCT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MapCT_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:8897:3: this_SequenceCT_2= ruleSequenceCT
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getComprehensionTermAccess().getSequenceCTParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SequenceCT_2=ruleSequenceCT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SequenceCT_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:8909:3: this_BagCT_3= ruleBagCT
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getComprehensionTermAccess().getBagCTParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BagCT_3=ruleBagCT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BagCT_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComprehensionTerm"


    // $ANTLR start "entryRuleSetCT"
    // InternalAsmetaL.g:8924:1: entryRuleSetCT returns [EObject current=null] : iv_ruleSetCT= ruleSetCT EOF ;
    public final EObject entryRuleSetCT() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetCT = null;


        try {
            // InternalAsmetaL.g:8924:46: (iv_ruleSetCT= ruleSetCT EOF )
            // InternalAsmetaL.g:8925:2: iv_ruleSetCT= ruleSetCT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSetCTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSetCT=ruleSetCT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSetCT; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetCT"


    // $ANTLR start "ruleSetCT"
    // InternalAsmetaL.g:8931:1: ruleSetCT returns [EObject current=null] : (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' ) ;
    public final EObject ruleSetCT() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_1_0 = null;

        EObject lv_ranges_3_0 = null;

        EObject lv_variable_5_0 = null;

        EObject lv_ranges_7_0 = null;

        EObject lv_guard_9_0 = null;

        EObject lv_term_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8937:2: ( (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' ) )
            // InternalAsmetaL.g:8938:2: (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' )
            {
            // InternalAsmetaL.g:8938:2: (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' )
            // InternalAsmetaL.g:8939:3: otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}'
            {
            otherlv_0=(Token)match(input,72,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSetCTAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalAsmetaL.g:8943:3: ( (lv_variable_1_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:8944:4: (lv_variable_1_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:8944:4: (lv_variable_1_0= ruleVariableTerm )
            // InternalAsmetaL.g:8945:5: lv_variable_1_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetCTAccess().getVariableVariableTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_1_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSetCTRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSetCTAccess().getInKeyword_2());
              		
            }
            // InternalAsmetaL.g:8966:3: ( (lv_ranges_3_0= ruleTerm ) )
            // InternalAsmetaL.g:8967:4: (lv_ranges_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:8967:4: (lv_ranges_3_0= ruleTerm )
            // InternalAsmetaL.g:8968:5: lv_ranges_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetCTAccess().getRangesTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_105);
            lv_ranges_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSetCTRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:8985:3: (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )*
            loop144:
            do {
                int alt144=2;
                int LA144_0 = input.LA(1);

                if ( (LA144_0==31) ) {
                    alt144=1;
                }


                switch (alt144) {
            	case 1 :
            	    // InternalAsmetaL.g:8986:4: otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getSetCTAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:8990:4: ( (lv_variable_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:8991:5: (lv_variable_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:8991:5: (lv_variable_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:8992:6: lv_variable_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSetCTAccess().getVariableVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSetCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getSetCTAccess().getInKeyword_4_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:9013:4: ( (lv_ranges_7_0= ruleTerm ) )
            	    // InternalAsmetaL.g:9014:5: (lv_ranges_7_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:9014:5: (lv_ranges_7_0= ruleTerm )
            	    // InternalAsmetaL.g:9015:6: lv_ranges_7_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSetCTAccess().getRangesTermParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_ranges_7_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSetCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_7_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop144;
                }
            } while (true);

            // InternalAsmetaL.g:9033:3: (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==73) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalAsmetaL.g:9034:4: otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) )
                    {
                    otherlv_8=(Token)match(input,73,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSetCTAccess().getVerticalLineKeyword_5_0());
                      			
                    }
                    // InternalAsmetaL.g:9038:4: ( (lv_guard_9_0= ruleTerm ) )
                    // InternalAsmetaL.g:9039:5: (lv_guard_9_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:9039:5: (lv_guard_9_0= ruleTerm )
                    // InternalAsmetaL.g:9040:6: lv_guard_9_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSetCTAccess().getGuardTermParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_guard_9_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSetCTRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_9_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,36,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getSetCTAccess().getColonKeyword_6());
              		
            }
            // InternalAsmetaL.g:9062:3: ( (lv_term_11_0= ruleTerm ) )
            // InternalAsmetaL.g:9063:4: (lv_term_11_0= ruleTerm )
            {
            // InternalAsmetaL.g:9063:4: (lv_term_11_0= ruleTerm )
            // InternalAsmetaL.g:9064:5: lv_term_11_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetCTAccess().getTermTermParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_91);
            lv_term_11_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSetCTRule());
              					}
              					set(
              						current,
              						"term",
              						lv_term_11_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getSetCTAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetCT"


    // $ANTLR start "entryRuleMapCT"
    // InternalAsmetaL.g:9089:1: entryRuleMapCT returns [EObject current=null] : iv_ruleMapCT= ruleMapCT EOF ;
    public final EObject entryRuleMapCT() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapCT = null;


        try {
            // InternalAsmetaL.g:9089:46: (iv_ruleMapCT= ruleMapCT EOF )
            // InternalAsmetaL.g:9090:2: iv_ruleMapCT= ruleMapCT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapCTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapCT=ruleMapCT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapCT; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapCT"


    // $ANTLR start "ruleMapCT"
    // InternalAsmetaL.g:9096:1: ruleMapCT returns [EObject current=null] : (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' ) ;
    public final EObject ruleMapCT() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_1_0 = null;

        EObject lv_ranges_3_0 = null;

        EObject lv_variable_5_0 = null;

        EObject lv_ranges_7_0 = null;

        EObject lv_guard_9_0 = null;

        EObject lv_term_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9102:2: ( (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' ) )
            // InternalAsmetaL.g:9103:2: (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' )
            {
            // InternalAsmetaL.g:9103:2: (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' )
            // InternalAsmetaL.g:9104:3: otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}'
            {
            otherlv_0=(Token)match(input,72,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMapCTAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalAsmetaL.g:9108:3: ( (lv_variable_1_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:9109:4: (lv_variable_1_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:9109:4: (lv_variable_1_0= ruleVariableTerm )
            // InternalAsmetaL.g:9110:5: lv_variable_1_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapCTAccess().getVariableVariableTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_1_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapCTRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getMapCTAccess().getInKeyword_2());
              		
            }
            // InternalAsmetaL.g:9131:3: ( (lv_ranges_3_0= ruleTerm ) )
            // InternalAsmetaL.g:9132:4: (lv_ranges_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:9132:4: (lv_ranges_3_0= ruleTerm )
            // InternalAsmetaL.g:9133:5: lv_ranges_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapCTAccess().getRangesTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_105);
            lv_ranges_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapCTRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:9150:3: (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==31) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalAsmetaL.g:9151:4: otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getMapCTAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:9155:4: ( (lv_variable_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:9156:5: (lv_variable_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:9156:5: (lv_variable_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:9157:6: lv_variable_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMapCTAccess().getVariableVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMapCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getMapCTAccess().getInKeyword_4_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:9178:4: ( (lv_ranges_7_0= ruleTerm ) )
            	    // InternalAsmetaL.g:9179:5: (lv_ranges_7_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:9179:5: (lv_ranges_7_0= ruleTerm )
            	    // InternalAsmetaL.g:9180:6: lv_ranges_7_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMapCTAccess().getRangesTermParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_ranges_7_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMapCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_7_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);

            // InternalAsmetaL.g:9198:3: (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==73) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalAsmetaL.g:9199:4: otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) )
                    {
                    otherlv_8=(Token)match(input,73,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getMapCTAccess().getVerticalLineKeyword_5_0());
                      			
                    }
                    // InternalAsmetaL.g:9203:4: ( (lv_guard_9_0= ruleTerm ) )
                    // InternalAsmetaL.g:9204:5: (lv_guard_9_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:9204:5: (lv_guard_9_0= ruleTerm )
                    // InternalAsmetaL.g:9205:6: lv_guard_9_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapCTAccess().getGuardTermParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_guard_9_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapCTRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_9_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,36,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getMapCTAccess().getColonKeyword_6());
              		
            }
            // InternalAsmetaL.g:9227:3: ( (lv_term_11_0= ruleTerm ) )
            // InternalAsmetaL.g:9228:4: (lv_term_11_0= ruleTerm )
            {
            // InternalAsmetaL.g:9228:4: (lv_term_11_0= ruleTerm )
            // InternalAsmetaL.g:9229:5: lv_term_11_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapCTAccess().getTermTermParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_91);
            lv_term_11_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapCTRule());
              					}
              					set(
              						current,
              						"term",
              						lv_term_11_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getMapCTAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapCT"


    // $ANTLR start "entryRuleSequenceCT"
    // InternalAsmetaL.g:9254:1: entryRuleSequenceCT returns [EObject current=null] : iv_ruleSequenceCT= ruleSequenceCT EOF ;
    public final EObject entryRuleSequenceCT() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceCT = null;


        try {
            // InternalAsmetaL.g:9254:51: (iv_ruleSequenceCT= ruleSequenceCT EOF )
            // InternalAsmetaL.g:9255:2: iv_ruleSequenceCT= ruleSequenceCT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceCTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceCT=ruleSequenceCT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceCT; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceCT"


    // $ANTLR start "ruleSequenceCT"
    // InternalAsmetaL.g:9261:1: ruleSequenceCT returns [EObject current=null] : (otherlv_0= '[' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= ']' ) ;
    public final EObject ruleSequenceCT() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_1_0 = null;

        EObject lv_ranges_3_0 = null;

        EObject lv_variable_5_0 = null;

        EObject lv_ranges_7_0 = null;

        EObject lv_guard_9_0 = null;

        EObject lv_term_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9267:2: ( (otherlv_0= '[' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= ']' ) )
            // InternalAsmetaL.g:9268:2: (otherlv_0= '[' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= ']' )
            {
            // InternalAsmetaL.g:9268:2: (otherlv_0= '[' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= ']' )
            // InternalAsmetaL.g:9269:3: otherlv_0= '[' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= ']'
            {
            otherlv_0=(Token)match(input,119,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSequenceCTAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalAsmetaL.g:9273:3: ( (lv_variable_1_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:9274:4: (lv_variable_1_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:9274:4: (lv_variable_1_0= ruleVariableTerm )
            // InternalAsmetaL.g:9275:5: lv_variable_1_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSequenceCTAccess().getVariableVariableTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_1_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSequenceCTRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSequenceCTAccess().getInKeyword_2());
              		
            }
            // InternalAsmetaL.g:9296:3: ( (lv_ranges_3_0= ruleTerm ) )
            // InternalAsmetaL.g:9297:4: (lv_ranges_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:9297:4: (lv_ranges_3_0= ruleTerm )
            // InternalAsmetaL.g:9298:5: lv_ranges_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSequenceCTAccess().getRangesTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_105);
            lv_ranges_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSequenceCTRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:9315:3: (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )*
            loop148:
            do {
                int alt148=2;
                int LA148_0 = input.LA(1);

                if ( (LA148_0==31) ) {
                    alt148=1;
                }


                switch (alt148) {
            	case 1 :
            	    // InternalAsmetaL.g:9316:4: otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getSequenceCTAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:9320:4: ( (lv_variable_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:9321:5: (lv_variable_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:9321:5: (lv_variable_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:9322:6: lv_variable_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSequenceCTAccess().getVariableVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSequenceCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getSequenceCTAccess().getInKeyword_4_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:9343:4: ( (lv_ranges_7_0= ruleTerm ) )
            	    // InternalAsmetaL.g:9344:5: (lv_ranges_7_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:9344:5: (lv_ranges_7_0= ruleTerm )
            	    // InternalAsmetaL.g:9345:6: lv_ranges_7_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSequenceCTAccess().getRangesTermParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_ranges_7_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSequenceCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_7_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);

            // InternalAsmetaL.g:9363:3: (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==73) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // InternalAsmetaL.g:9364:4: otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) )
                    {
                    otherlv_8=(Token)match(input,73,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSequenceCTAccess().getVerticalLineKeyword_5_0());
                      			
                    }
                    // InternalAsmetaL.g:9368:4: ( (lv_guard_9_0= ruleTerm ) )
                    // InternalAsmetaL.g:9369:5: (lv_guard_9_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:9369:5: (lv_guard_9_0= ruleTerm )
                    // InternalAsmetaL.g:9370:6: lv_guard_9_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSequenceCTAccess().getGuardTermParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_guard_9_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSequenceCTRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_9_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,36,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getSequenceCTAccess().getColonKeyword_6());
              		
            }
            // InternalAsmetaL.g:9392:3: ( (lv_term_11_0= ruleTerm ) )
            // InternalAsmetaL.g:9393:4: (lv_term_11_0= ruleTerm )
            {
            // InternalAsmetaL.g:9393:4: (lv_term_11_0= ruleTerm )
            // InternalAsmetaL.g:9394:5: lv_term_11_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSequenceCTAccess().getTermTermParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_89);
            lv_term_11_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSequenceCTRule());
              					}
              					set(
              						current,
              						"term",
              						lv_term_11_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getSequenceCTAccess().getRightSquareBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceCT"


    // $ANTLR start "entryRuleBagCT"
    // InternalAsmetaL.g:9419:1: entryRuleBagCT returns [EObject current=null] : iv_ruleBagCT= ruleBagCT EOF ;
    public final EObject entryRuleBagCT() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBagCT = null;


        try {
            // InternalAsmetaL.g:9419:46: (iv_ruleBagCT= ruleBagCT EOF )
            // InternalAsmetaL.g:9420:2: iv_ruleBagCT= ruleBagCT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBagCTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBagCT=ruleBagCT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBagCT; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBagCT"


    // $ANTLR start "ruleBagCT"
    // InternalAsmetaL.g:9426:1: ruleBagCT returns [EObject current=null] : (otherlv_0= '<' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '>' ) ;
    public final EObject ruleBagCT() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_1_0 = null;

        EObject lv_ranges_3_0 = null;

        EObject lv_variable_5_0 = null;

        EObject lv_ranges_7_0 = null;

        EObject lv_guard_9_0 = null;

        EObject lv_term_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9432:2: ( (otherlv_0= '<' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '>' ) )
            // InternalAsmetaL.g:9433:2: (otherlv_0= '<' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '>' )
            {
            // InternalAsmetaL.g:9433:2: (otherlv_0= '<' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '>' )
            // InternalAsmetaL.g:9434:3: otherlv_0= '<' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '>'
            {
            otherlv_0=(Token)match(input,100,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBagCTAccess().getLessThanSignKeyword_0());
              		
            }
            // InternalAsmetaL.g:9438:3: ( (lv_variable_1_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:9439:4: (lv_variable_1_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:9439:4: (lv_variable_1_0= ruleVariableTerm )
            // InternalAsmetaL.g:9440:5: lv_variable_1_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBagCTAccess().getVariableVariableTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_1_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBagCTRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBagCTAccess().getInKeyword_2());
              		
            }
            // InternalAsmetaL.g:9461:3: ( (lv_ranges_3_0= ruleTerm ) )
            // InternalAsmetaL.g:9462:4: (lv_ranges_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:9462:4: (lv_ranges_3_0= ruleTerm )
            // InternalAsmetaL.g:9463:5: lv_ranges_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBagCTAccess().getRangesTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_105);
            lv_ranges_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBagCTRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:9480:3: (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )*
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==31) ) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    // InternalAsmetaL.g:9481:4: otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getBagCTAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:9485:4: ( (lv_variable_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:9486:5: (lv_variable_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:9486:5: (lv_variable_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:9487:6: lv_variable_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBagCTAccess().getVariableVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBagCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getBagCTAccess().getInKeyword_4_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:9508:4: ( (lv_ranges_7_0= ruleTerm ) )
            	    // InternalAsmetaL.g:9509:5: (lv_ranges_7_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:9509:5: (lv_ranges_7_0= ruleTerm )
            	    // InternalAsmetaL.g:9510:6: lv_ranges_7_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBagCTAccess().getRangesTermParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_ranges_7_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBagCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_7_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);

            // InternalAsmetaL.g:9528:3: (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==73) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalAsmetaL.g:9529:4: otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) )
                    {
                    otherlv_8=(Token)match(input,73,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getBagCTAccess().getVerticalLineKeyword_5_0());
                      			
                    }
                    // InternalAsmetaL.g:9533:4: ( (lv_guard_9_0= ruleTerm ) )
                    // InternalAsmetaL.g:9534:5: (lv_guard_9_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:9534:5: (lv_guard_9_0= ruleTerm )
                    // InternalAsmetaL.g:9535:6: lv_guard_9_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBagCTAccess().getGuardTermParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_guard_9_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBagCTRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_9_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,36,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getBagCTAccess().getColonKeyword_6());
              		
            }
            // InternalAsmetaL.g:9557:3: ( (lv_term_11_0= ruleTerm ) )
            // InternalAsmetaL.g:9558:4: (lv_term_11_0= ruleTerm )
            {
            // InternalAsmetaL.g:9558:4: (lv_term_11_0= ruleTerm )
            // InternalAsmetaL.g:9559:5: lv_term_11_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBagCTAccess().getTermTermParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_99);
            lv_term_11_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBagCTRule());
              					}
              					set(
              						current,
              						"term",
              						lv_term_11_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getBagCTAccess().getGreaterThanSignKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBagCT"


    // $ANTLR start "entryRuleRuleAsTerm"
    // InternalAsmetaL.g:9584:1: entryRuleRuleAsTerm returns [EObject current=null] : iv_ruleRuleAsTerm= ruleRuleAsTerm EOF ;
    public final EObject entryRuleRuleAsTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRuleAsTerm = null;


        try {
            // InternalAsmetaL.g:9584:51: (iv_ruleRuleAsTerm= ruleRuleAsTerm EOF )
            // InternalAsmetaL.g:9585:2: iv_ruleRuleAsTerm= ruleRuleAsTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRuleAsTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRuleAsTerm=ruleRuleAsTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRuleAsTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRuleAsTerm"


    // $ANTLR start "ruleRuleAsTerm"
    // InternalAsmetaL.g:9591:1: ruleRuleAsTerm returns [EObject current=null] : (otherlv_0= '<<' ( (lv_name_1_0= ruleextendedName ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? otherlv_7= '>>' ) ;
    public final EObject ruleRuleAsTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_domains_3_0 = null;

        EObject lv_domains_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9597:2: ( (otherlv_0= '<<' ( (lv_name_1_0= ruleextendedName ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? otherlv_7= '>>' ) )
            // InternalAsmetaL.g:9598:2: (otherlv_0= '<<' ( (lv_name_1_0= ruleextendedName ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? otherlv_7= '>>' )
            {
            // InternalAsmetaL.g:9598:2: (otherlv_0= '<<' ( (lv_name_1_0= ruleextendedName ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? otherlv_7= '>>' )
            // InternalAsmetaL.g:9599:3: otherlv_0= '<<' ( (lv_name_1_0= ruleextendedName ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? otherlv_7= '>>'
            {
            otherlv_0=(Token)match(input,127,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRuleAsTermAccess().getLessThanSignLessThanSignKeyword_0());
              		
            }
            // InternalAsmetaL.g:9603:3: ( (lv_name_1_0= ruleextendedName ) )
            // InternalAsmetaL.g:9604:4: (lv_name_1_0= ruleextendedName )
            {
            // InternalAsmetaL.g:9604:4: (lv_name_1_0= ruleextendedName )
            // InternalAsmetaL.g:9605:5: lv_name_1_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRuleAsTermAccess().getNameExtendedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_106);
            lv_name_1_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRuleAsTermRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:9622:3: (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==30) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalAsmetaL.g:9623:4: otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,30,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRuleAsTermAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalAsmetaL.g:9627:4: ( (lv_domains_3_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:9628:5: (lv_domains_3_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:9628:5: (lv_domains_3_0= rulegetDomainByID )
                    // InternalAsmetaL.g:9629:6: lv_domains_3_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRuleAsTermAccess().getDomainsGetDomainByIDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_domains_3_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRuleAsTermRule());
                      						}
                      						add(
                      							current,
                      							"domains",
                      							lv_domains_3_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:9646:4: (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )*
                    loop152:
                    do {
                        int alt152=2;
                        int LA152_0 = input.LA(1);

                        if ( (LA152_0==31) ) {
                            alt152=1;
                        }


                        switch (alt152) {
                    	case 1 :
                    	    // InternalAsmetaL.g:9647:5: otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) )
                    	    {
                    	    otherlv_4=(Token)match(input,31,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getRuleAsTermAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:9651:5: ( (lv_domains_5_0= rulegetDomainByID ) )
                    	    // InternalAsmetaL.g:9652:6: (lv_domains_5_0= rulegetDomainByID )
                    	    {
                    	    // InternalAsmetaL.g:9652:6: (lv_domains_5_0= rulegetDomainByID )
                    	    // InternalAsmetaL.g:9653:7: lv_domains_5_0= rulegetDomainByID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getRuleAsTermAccess().getDomainsGetDomainByIDParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_domains_5_0=rulegetDomainByID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getRuleAsTermRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domains",
                    	      								lv_domains_5_0,
                    	      								"org.asmeta.xt.AsmetaL.getDomainByID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop152;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,32,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getRuleAsTermAccess().getRightParenthesisKeyword_2_3());
                      			
                    }

                    }
                    break;

            }

            otherlv_7=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getRuleAsTermAccess().getGreaterThanSignGreaterThanSignKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRuleAsTerm"


    // $ANTLR start "entryRuleRule"
    // InternalAsmetaL.g:9684:1: entryRuleRule returns [EObject current=null] : iv_ruleRule= ruleRule EOF ;
    public final EObject entryRuleRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRule = null;


        try {
            // InternalAsmetaL.g:9684:45: (iv_ruleRule= ruleRule EOF )
            // InternalAsmetaL.g:9685:2: iv_ruleRule= ruleRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRule=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRule"


    // $ANTLR start "ruleRule"
    // InternalAsmetaL.g:9691:1: ruleRule returns [EObject current=null] : (this_UpdateRule_0= ruleUpdateRule | this_TurboReturnRule_1= ruleTurboReturnRule | this_BasicRule_2= ruleBasicRule | this_TermAsRule_3= ruleTermAsRule | this_TurboRule_4= ruleTurboRule | this_DerivedRule_5= ruleDerivedRule ) ;
    public final EObject ruleRule() throws RecognitionException {
        EObject current = null;

        EObject this_UpdateRule_0 = null;

        EObject this_TurboReturnRule_1 = null;

        EObject this_BasicRule_2 = null;

        EObject this_TermAsRule_3 = null;

        EObject this_TurboRule_4 = null;

        EObject this_DerivedRule_5 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9697:2: ( (this_UpdateRule_0= ruleUpdateRule | this_TurboReturnRule_1= ruleTurboReturnRule | this_BasicRule_2= ruleBasicRule | this_TermAsRule_3= ruleTermAsRule | this_TurboRule_4= ruleTurboRule | this_DerivedRule_5= ruleDerivedRule ) )
            // InternalAsmetaL.g:9698:2: (this_UpdateRule_0= ruleUpdateRule | this_TurboReturnRule_1= ruleTurboReturnRule | this_BasicRule_2= ruleBasicRule | this_TermAsRule_3= ruleTermAsRule | this_TurboRule_4= ruleTurboRule | this_DerivedRule_5= ruleDerivedRule )
            {
            // InternalAsmetaL.g:9698:2: (this_UpdateRule_0= ruleUpdateRule | this_TurboReturnRule_1= ruleTurboReturnRule | this_BasicRule_2= ruleBasicRule | this_TermAsRule_3= ruleTermAsRule | this_TurboRule_4= ruleTurboRule | this_DerivedRule_5= ruleDerivedRule )
            int alt154=6;
            alt154 = dfa154.predict(input);
            switch (alt154) {
                case 1 :
                    // InternalAsmetaL.g:9699:3: this_UpdateRule_0= ruleUpdateRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleAccess().getUpdateRuleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UpdateRule_0=ruleUpdateRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UpdateRule_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:9711:3: this_TurboReturnRule_1= ruleTurboReturnRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleAccess().getTurboReturnRuleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TurboReturnRule_1=ruleTurboReturnRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TurboReturnRule_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:9723:3: this_BasicRule_2= ruleBasicRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleAccess().getBasicRuleParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BasicRule_2=ruleBasicRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BasicRule_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:9735:3: this_TermAsRule_3= ruleTermAsRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleAccess().getTermAsRuleParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TermAsRule_3=ruleTermAsRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TermAsRule_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:9747:3: this_TurboRule_4= ruleTurboRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleAccess().getTurboRuleParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TurboRule_4=ruleTurboRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TurboRule_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:9759:3: this_DerivedRule_5= ruleDerivedRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleAccess().getDerivedRuleParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DerivedRule_5=ruleDerivedRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DerivedRule_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRule"


    // $ANTLR start "entryRuleTermAsRule"
    // InternalAsmetaL.g:9774:1: entryRuleTermAsRule returns [EObject current=null] : iv_ruleTermAsRule= ruleTermAsRule EOF ;
    public final EObject entryRuleTermAsRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTermAsRule = null;


        try {
            // InternalAsmetaL.g:9774:51: (iv_ruleTermAsRule= ruleTermAsRule EOF )
            // InternalAsmetaL.g:9775:2: iv_ruleTermAsRule= ruleTermAsRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermAsRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTermAsRule=ruleTermAsRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTermAsRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTermAsRule"


    // $ANTLR start "ruleTermAsRule"
    // InternalAsmetaL.g:9781:1: ruleTermAsRule returns [EObject current=null] : ( ( ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) ) ) (otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']' )? ) ;
    public final EObject ruleTermAsRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_term_0_1 = null;

        EObject lv_term_0_2 = null;

        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9787:2: ( ( ( ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) ) ) (otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']' )? ) )
            // InternalAsmetaL.g:9788:2: ( ( ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) ) ) (otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']' )? )
            {
            // InternalAsmetaL.g:9788:2: ( ( ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) ) ) (otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']' )? )
            // InternalAsmetaL.g:9789:3: ( ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) ) ) (otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']' )?
            {
            // InternalAsmetaL.g:9789:3: ( ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) ) )
            // InternalAsmetaL.g:9790:4: ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) )
            {
            // InternalAsmetaL.g:9790:4: ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) )
            // InternalAsmetaL.g:9791:5: (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm )
            {
            // InternalAsmetaL.g:9791:5: (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm )
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( ((LA155_0>=RULE_ID && LA155_0<=RULE_ENUM_ID)||(LA155_0>=89 && LA155_0<=95)) ) {
                alt155=1;
            }
            else if ( (LA155_0==144) ) {
                alt155=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;
            }
            switch (alt155) {
                case 1 :
                    // InternalAsmetaL.g:9792:6: lv_term_0_1= ruleFunctionTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTermAsRuleAccess().getTermFunctionTermParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_108);
                    lv_term_0_1=ruleFunctionTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTermAsRuleRule());
                      						}
                      						set(
                      							current,
                      							"term",
                      							lv_term_0_1,
                      							"org.asmeta.xt.AsmetaL.FunctionTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:9808:6: lv_term_0_2= ruleVariableTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTermAsRuleAccess().getTermVariableTermParserRuleCall_0_0_1());
                      					
                    }
                    pushFollow(FOLLOW_108);
                    lv_term_0_2=ruleVariableTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTermAsRuleRule());
                      						}
                      						set(
                      							current,
                      							"term",
                      							lv_term_0_2,
                      							"org.asmeta.xt.AsmetaL.VariableTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalAsmetaL.g:9826:3: (otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']' )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==119) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalAsmetaL.g:9827:4: otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']'
                    {
                    otherlv_1=(Token)match(input,119,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTermAsRuleAccess().getLeftSquareBracketKeyword_1_0());
                      			
                    }
                    // InternalAsmetaL.g:9831:4: ( (lv_parameters_2_0= ruleTerm ) )
                    // InternalAsmetaL.g:9832:5: (lv_parameters_2_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:9832:5: (lv_parameters_2_0= ruleTerm )
                    // InternalAsmetaL.g:9833:6: lv_parameters_2_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTermAsRuleAccess().getParametersTermParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_87);
                    lv_parameters_2_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTermAsRuleRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_2_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:9850:4: (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )*
                    loop156:
                    do {
                        int alt156=2;
                        int LA156_0 = input.LA(1);

                        if ( (LA156_0==31) ) {
                            alt156=1;
                        }


                        switch (alt156) {
                    	case 1 :
                    	    // InternalAsmetaL.g:9851:5: otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) )
                    	    {
                    	    otherlv_3=(Token)match(input,31,FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getTermAsRuleAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:9855:5: ( (lv_parameters_4_0= ruleTerm ) )
                    	    // InternalAsmetaL.g:9856:6: (lv_parameters_4_0= ruleTerm )
                    	    {
                    	    // InternalAsmetaL.g:9856:6: (lv_parameters_4_0= ruleTerm )
                    	    // InternalAsmetaL.g:9857:7: lv_parameters_4_0= ruleTerm
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTermAsRuleAccess().getParametersTermParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_87);
                    	    lv_parameters_4_0=ruleTerm();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTermAsRuleRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_4_0,
                    	      								"org.asmeta.xt.AsmetaL.Term");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop156;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTermAsRuleAccess().getRightSquareBracketKeyword_1_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTermAsRule"


    // $ANTLR start "entryRuleBasicRule"
    // InternalAsmetaL.g:9884:1: entryRuleBasicRule returns [EObject current=null] : iv_ruleBasicRule= ruleBasicRule EOF ;
    public final EObject entryRuleBasicRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasicRule = null;


        try {
            // InternalAsmetaL.g:9884:50: (iv_ruleBasicRule= ruleBasicRule EOF )
            // InternalAsmetaL.g:9885:2: iv_ruleBasicRule= ruleBasicRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicRule=ruleBasicRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicRule"


    // $ANTLR start "ruleBasicRule"
    // InternalAsmetaL.g:9891:1: ruleBasicRule returns [EObject current=null] : (this_SkipRule_0= ruleSkipRule | this_MacroCallRule_1= ruleMacroCallRule | this_BlockRule_2= ruleBlockRule | this_ConditionalRule_3= ruleConditionalRule | this_ChooseRule_4= ruleChooseRule | this_ForallRule_5= ruleForallRule | this_LetRule_6= ruleLetRule | this_ExtendRule_7= ruleExtendRule ) ;
    public final EObject ruleBasicRule() throws RecognitionException {
        EObject current = null;

        EObject this_SkipRule_0 = null;

        EObject this_MacroCallRule_1 = null;

        EObject this_BlockRule_2 = null;

        EObject this_ConditionalRule_3 = null;

        EObject this_ChooseRule_4 = null;

        EObject this_ForallRule_5 = null;

        EObject this_LetRule_6 = null;

        EObject this_ExtendRule_7 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9897:2: ( (this_SkipRule_0= ruleSkipRule | this_MacroCallRule_1= ruleMacroCallRule | this_BlockRule_2= ruleBlockRule | this_ConditionalRule_3= ruleConditionalRule | this_ChooseRule_4= ruleChooseRule | this_ForallRule_5= ruleForallRule | this_LetRule_6= ruleLetRule | this_ExtendRule_7= ruleExtendRule ) )
            // InternalAsmetaL.g:9898:2: (this_SkipRule_0= ruleSkipRule | this_MacroCallRule_1= ruleMacroCallRule | this_BlockRule_2= ruleBlockRule | this_ConditionalRule_3= ruleConditionalRule | this_ChooseRule_4= ruleChooseRule | this_ForallRule_5= ruleForallRule | this_LetRule_6= ruleLetRule | this_ExtendRule_7= ruleExtendRule )
            {
            // InternalAsmetaL.g:9898:2: (this_SkipRule_0= ruleSkipRule | this_MacroCallRule_1= ruleMacroCallRule | this_BlockRule_2= ruleBlockRule | this_ConditionalRule_3= ruleConditionalRule | this_ChooseRule_4= ruleChooseRule | this_ForallRule_5= ruleForallRule | this_LetRule_6= ruleLetRule | this_ExtendRule_7= ruleExtendRule )
            int alt158=8;
            switch ( input.LA(1) ) {
            case 129:
                {
                alt158=1;
                }
                break;
            case RULE_ID:
            case RULE_RULE_ID:
            case RULE_ENUM_ID:
                {
                alt158=2;
                }
                break;
            case 131:
                {
                alt158=3;
                }
                break;
            case 111:
                {
                alt158=4;
                }
                break;
            case 133:
                {
                alt158=5;
                }
                break;
            case 124:
                {
                alt158=6;
                }
                break;
            case 125:
                {
                alt158=7;
                }
                break;
            case 136:
                {
                alt158=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }

            switch (alt158) {
                case 1 :
                    // InternalAsmetaL.g:9899:3: this_SkipRule_0= ruleSkipRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getSkipRuleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SkipRule_0=ruleSkipRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SkipRule_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:9911:3: this_MacroCallRule_1= ruleMacroCallRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getMacroCallRuleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MacroCallRule_1=ruleMacroCallRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MacroCallRule_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:9923:3: this_BlockRule_2= ruleBlockRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getBlockRuleParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BlockRule_2=ruleBlockRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BlockRule_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:9935:3: this_ConditionalRule_3= ruleConditionalRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getConditionalRuleParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConditionalRule_3=ruleConditionalRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConditionalRule_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:9947:3: this_ChooseRule_4= ruleChooseRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getChooseRuleParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChooseRule_4=ruleChooseRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChooseRule_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:9959:3: this_ForallRule_5= ruleForallRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getForallRuleParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ForallRule_5=ruleForallRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ForallRule_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAsmetaL.g:9971:3: this_LetRule_6= ruleLetRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getLetRuleParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LetRule_6=ruleLetRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LetRule_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAsmetaL.g:9983:3: this_ExtendRule_7= ruleExtendRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getExtendRuleParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExtendRule_7=ruleExtendRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExtendRule_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicRule"


    // $ANTLR start "entryRuleSkipRule"
    // InternalAsmetaL.g:9998:1: entryRuleSkipRule returns [EObject current=null] : iv_ruleSkipRule= ruleSkipRule EOF ;
    public final EObject entryRuleSkipRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSkipRule = null;


        try {
            // InternalAsmetaL.g:9998:49: (iv_ruleSkipRule= ruleSkipRule EOF )
            // InternalAsmetaL.g:9999:2: iv_ruleSkipRule= ruleSkipRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSkipRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSkipRule=ruleSkipRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSkipRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSkipRule"


    // $ANTLR start "ruleSkipRule"
    // InternalAsmetaL.g:10005:1: ruleSkipRule returns [EObject current=null] : ( () otherlv_1= 'skip' ) ;
    public final EObject ruleSkipRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:10011:2: ( ( () otherlv_1= 'skip' ) )
            // InternalAsmetaL.g:10012:2: ( () otherlv_1= 'skip' )
            {
            // InternalAsmetaL.g:10012:2: ( () otherlv_1= 'skip' )
            // InternalAsmetaL.g:10013:3: () otherlv_1= 'skip'
            {
            // InternalAsmetaL.g:10013:3: ()
            // InternalAsmetaL.g:10014:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSkipRuleAccess().getSkipRuleAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSkipRuleAccess().getSkipKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSkipRule"


    // $ANTLR start "entryRuleUpdateRule"
    // InternalAsmetaL.g:10031:1: entryRuleUpdateRule returns [EObject current=null] : iv_ruleUpdateRule= ruleUpdateRule EOF ;
    public final EObject entryRuleUpdateRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpdateRule = null;


        try {
            // InternalAsmetaL.g:10031:51: (iv_ruleUpdateRule= ruleUpdateRule EOF )
            // InternalAsmetaL.g:10032:2: iv_ruleUpdateRule= ruleUpdateRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpdateRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpdateRule=ruleUpdateRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpdateRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpdateRule"


    // $ANTLR start "ruleUpdateRule"
    // InternalAsmetaL.g:10038:1: ruleUpdateRule returns [EObject current=null] : ( ( ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= ':=' ( (lv_updatingTerm_2_0= ruleTerm ) ) ) ;
    public final EObject ruleUpdateRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_location_0_1 = null;

        EObject lv_location_0_2 = null;

        EObject lv_updatingTerm_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10044:2: ( ( ( ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= ':=' ( (lv_updatingTerm_2_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:10045:2: ( ( ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= ':=' ( (lv_updatingTerm_2_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:10045:2: ( ( ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= ':=' ( (lv_updatingTerm_2_0= ruleTerm ) ) )
            // InternalAsmetaL.g:10046:3: ( ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= ':=' ( (lv_updatingTerm_2_0= ruleTerm ) )
            {
            // InternalAsmetaL.g:10046:3: ( ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) ) )
            // InternalAsmetaL.g:10047:4: ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) )
            {
            // InternalAsmetaL.g:10047:4: ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) )
            // InternalAsmetaL.g:10048:5: (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm )
            {
            // InternalAsmetaL.g:10048:5: (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm )
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( ((LA159_0>=RULE_ID && LA159_0<=RULE_ENUM_ID)||(LA159_0>=89 && LA159_0<=95)) ) {
                alt159=1;
            }
            else if ( (LA159_0==144) ) {
                alt159=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 159, 0, input);

                throw nvae;
            }
            switch (alt159) {
                case 1 :
                    // InternalAsmetaL.g:10049:6: lv_location_0_1= ruleLocationTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateRuleAccess().getLocationLocationTermParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_109);
                    lv_location_0_1=ruleLocationTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateRuleRule());
                      						}
                      						set(
                      							current,
                      							"location",
                      							lv_location_0_1,
                      							"org.asmeta.xt.AsmetaL.LocationTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:10065:6: lv_location_0_2= ruleVariableTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateRuleAccess().getLocationVariableTermParserRuleCall_0_0_1());
                      					
                    }
                    pushFollow(FOLLOW_109);
                    lv_location_0_2=ruleVariableTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateRuleRule());
                      						}
                      						set(
                      							current,
                      							"location",
                      							lv_location_0_2,
                      							"org.asmeta.xt.AsmetaL.VariableTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_1=(Token)match(input,130,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getUpdateRuleAccess().getColonEqualsSignKeyword_1());
              		
            }
            // InternalAsmetaL.g:10087:3: ( (lv_updatingTerm_2_0= ruleTerm ) )
            // InternalAsmetaL.g:10088:4: (lv_updatingTerm_2_0= ruleTerm )
            {
            // InternalAsmetaL.g:10088:4: (lv_updatingTerm_2_0= ruleTerm )
            // InternalAsmetaL.g:10089:5: lv_updatingTerm_2_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getUpdateRuleAccess().getUpdatingTermTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_updatingTerm_2_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getUpdateRuleRule());
              					}
              					set(
              						current,
              						"updatingTerm",
              						lv_updatingTerm_2_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpdateRule"


    // $ANTLR start "entryRuleBlockRule"
    // InternalAsmetaL.g:10110:1: entryRuleBlockRule returns [EObject current=null] : iv_ruleBlockRule= ruleBlockRule EOF ;
    public final EObject entryRuleBlockRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlockRule = null;


        try {
            // InternalAsmetaL.g:10110:50: (iv_ruleBlockRule= ruleBlockRule EOF )
            // InternalAsmetaL.g:10111:2: iv_ruleBlockRule= ruleBlockRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlockRule=ruleBlockRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlockRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlockRule"


    // $ANTLR start "ruleBlockRule"
    // InternalAsmetaL.g:10117:1: ruleBlockRule returns [EObject current=null] : (otherlv_0= 'par' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endpar' ) ;
    public final EObject ruleBlockRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_rules_1_0 = null;

        EObject lv_rules_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10123:2: ( (otherlv_0= 'par' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endpar' ) )
            // InternalAsmetaL.g:10124:2: (otherlv_0= 'par' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endpar' )
            {
            // InternalAsmetaL.g:10124:2: (otherlv_0= 'par' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endpar' )
            // InternalAsmetaL.g:10125:3: otherlv_0= 'par' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endpar'
            {
            otherlv_0=(Token)match(input,131,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBlockRuleAccess().getParKeyword_0());
              		
            }
            // InternalAsmetaL.g:10129:3: ( (lv_rules_1_0= ruleRule ) )
            // InternalAsmetaL.g:10130:4: (lv_rules_1_0= ruleRule )
            {
            // InternalAsmetaL.g:10130:4: (lv_rules_1_0= ruleRule )
            // InternalAsmetaL.g:10131:5: lv_rules_1_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlockRuleAccess().getRulesRuleParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_44);
            lv_rules_1_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlockRuleRule());
              					}
              					add(
              						current,
              						"rules",
              						lv_rules_1_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10148:3: ( (lv_rules_2_0= ruleRule ) )+
            int cnt160=0;
            loop160:
            do {
                int alt160=2;
                int LA160_0 = input.LA(1);

                if ( ((LA160_0>=RULE_ID && LA160_0<=RULE_ENUM_ID)||LA160_0==57||LA160_0==84||(LA160_0>=89 && LA160_0<=96)||LA160_0==111||LA160_0==115||(LA160_0>=124 && LA160_0<=125)||LA160_0==129||LA160_0==131||LA160_0==133||(LA160_0>=136 && LA160_0<=137)||LA160_0==139||LA160_0==142||LA160_0==144) ) {
                    alt160=1;
                }


                switch (alt160) {
            	case 1 :
            	    // InternalAsmetaL.g:10149:4: (lv_rules_2_0= ruleRule )
            	    {
            	    // InternalAsmetaL.g:10149:4: (lv_rules_2_0= ruleRule )
            	    // InternalAsmetaL.g:10150:5: lv_rules_2_0= ruleRule
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBlockRuleAccess().getRulesRuleParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_110);
            	    lv_rules_2_0=ruleRule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBlockRuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"rules",
            	      						lv_rules_2_0,
            	      						"org.asmeta.xt.AsmetaL.Rule");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt160 >= 1 ) break loop160;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(160, input);
                        throw eee;
                }
                cnt160++;
            } while (true);

            otherlv_3=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getBlockRuleAccess().getEndparKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlockRule"


    // $ANTLR start "entryRuleConditionalRule"
    // InternalAsmetaL.g:10175:1: entryRuleConditionalRule returns [EObject current=null] : iv_ruleConditionalRule= ruleConditionalRule EOF ;
    public final EObject entryRuleConditionalRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalRule = null;


        try {
            // InternalAsmetaL.g:10175:56: (iv_ruleConditionalRule= ruleConditionalRule EOF )
            // InternalAsmetaL.g:10176:2: iv_ruleConditionalRule= ruleConditionalRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalRule=ruleConditionalRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalRule"


    // $ANTLR start "ruleConditionalRule"
    // InternalAsmetaL.g:10182:1: ruleConditionalRule returns [EObject current=null] : (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenRule_3_0= ruleRule ) ) (otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) ) )? otherlv_6= 'endif' ) ;
    public final EObject ruleConditionalRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_guard_1_0 = null;

        EObject lv_thenRule_3_0 = null;

        EObject lv_elseRule_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10188:2: ( (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenRule_3_0= ruleRule ) ) (otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) ) )? otherlv_6= 'endif' ) )
            // InternalAsmetaL.g:10189:2: (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenRule_3_0= ruleRule ) ) (otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) ) )? otherlv_6= 'endif' )
            {
            // InternalAsmetaL.g:10189:2: (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenRule_3_0= ruleRule ) ) (otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) ) )? otherlv_6= 'endif' )
            // InternalAsmetaL.g:10190:3: otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenRule_3_0= ruleRule ) ) (otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) ) )? otherlv_6= 'endif'
            {
            otherlv_0=(Token)match(input,111,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConditionalRuleAccess().getIfKeyword_0());
              		
            }
            // InternalAsmetaL.g:10194:3: ( (lv_guard_1_0= ruleTerm ) )
            // InternalAsmetaL.g:10195:4: (lv_guard_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:10195:4: (lv_guard_1_0= ruleTerm )
            // InternalAsmetaL.g:10196:5: lv_guard_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionalRuleAccess().getGuardTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_79);
            lv_guard_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionalRuleRule());
              					}
              					set(
              						current,
              						"guard",
              						lv_guard_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,112,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getConditionalRuleAccess().getThenKeyword_2());
              		
            }
            // InternalAsmetaL.g:10217:3: ( (lv_thenRule_3_0= ruleRule ) )
            // InternalAsmetaL.g:10218:4: (lv_thenRule_3_0= ruleRule )
            {
            // InternalAsmetaL.g:10218:4: (lv_thenRule_3_0= ruleRule )
            // InternalAsmetaL.g:10219:5: lv_thenRule_3_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionalRuleAccess().getThenRuleRuleParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_thenRule_3_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionalRuleRule());
              					}
              					set(
              						current,
              						"thenRule",
              						lv_thenRule_3_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10236:3: (otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==113) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalAsmetaL.g:10237:4: otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) )
                    {
                    otherlv_4=(Token)match(input,113,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getConditionalRuleAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalAsmetaL.g:10241:4: ( (lv_elseRule_5_0= ruleRule ) )
                    // InternalAsmetaL.g:10242:5: (lv_elseRule_5_0= ruleRule )
                    {
                    // InternalAsmetaL.g:10242:5: (lv_elseRule_5_0= ruleRule )
                    // InternalAsmetaL.g:10243:6: lv_elseRule_5_0= ruleRule
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalRuleAccess().getElseRuleRuleParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_81);
                    lv_elseRule_5_0=ruleRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalRuleRule());
                      						}
                      						set(
                      							current,
                      							"elseRule",
                      							lv_elseRule_5_0,
                      							"org.asmeta.xt.AsmetaL.Rule");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getConditionalRuleAccess().getEndifKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalRule"


    // $ANTLR start "entryRuleChooseRule"
    // InternalAsmetaL.g:10269:1: entryRuleChooseRule returns [EObject current=null] : iv_ruleChooseRule= ruleChooseRule EOF ;
    public final EObject entryRuleChooseRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChooseRule = null;


        try {
            // InternalAsmetaL.g:10269:51: (iv_ruleChooseRule= ruleChooseRule EOF )
            // InternalAsmetaL.g:10270:2: iv_ruleChooseRule= ruleChooseRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChooseRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChooseRule=ruleChooseRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChooseRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChooseRule"


    // $ANTLR start "ruleChooseRule"
    // InternalAsmetaL.g:10276:1: ruleChooseRule returns [EObject current=null] : (otherlv_0= 'choose' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )? ) ;
    public final EObject ruleChooseRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_1_0 = null;

        EObject lv_ranges_3_0 = null;

        EObject lv_variable_5_0 = null;

        EObject lv_ranges_7_0 = null;

        EObject lv_guard_9_0 = null;

        EObject lv_doRule_11_0 = null;

        EObject lv_ifnone_13_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10282:2: ( (otherlv_0= 'choose' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )? ) )
            // InternalAsmetaL.g:10283:2: (otherlv_0= 'choose' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )? )
            {
            // InternalAsmetaL.g:10283:2: (otherlv_0= 'choose' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )? )
            // InternalAsmetaL.g:10284:3: otherlv_0= 'choose' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )?
            {
            otherlv_0=(Token)match(input,133,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChooseRuleAccess().getChooseKeyword_0());
              		
            }
            // InternalAsmetaL.g:10288:3: ( (lv_variable_1_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:10289:4: (lv_variable_1_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:10289:4: (lv_variable_1_0= ruleVariableTerm )
            // InternalAsmetaL.g:10290:5: lv_variable_1_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChooseRuleAccess().getVariableVariableTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_1_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChooseRuleRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getChooseRuleAccess().getInKeyword_2());
              		
            }
            // InternalAsmetaL.g:10311:3: ( (lv_ranges_3_0= ruleTerm ) )
            // InternalAsmetaL.g:10312:4: (lv_ranges_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:10312:4: (lv_ranges_3_0= ruleTerm )
            // InternalAsmetaL.g:10313:5: lv_ranges_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChooseRuleAccess().getRangesTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_111);
            lv_ranges_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChooseRuleRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10330:3: (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )*
            loop162:
            do {
                int alt162=2;
                int LA162_0 = input.LA(1);

                if ( (LA162_0==31) ) {
                    alt162=1;
                }


                switch (alt162) {
            	case 1 :
            	    // InternalAsmetaL.g:10331:4: otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getChooseRuleAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:10335:4: ( (lv_variable_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:10336:5: (lv_variable_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:10336:5: (lv_variable_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:10337:6: lv_variable_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getChooseRuleAccess().getVariableVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getChooseRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getChooseRuleAccess().getInKeyword_4_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:10358:4: ( (lv_ranges_7_0= ruleTerm ) )
            	    // InternalAsmetaL.g:10359:5: (lv_ranges_7_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:10359:5: (lv_ranges_7_0= ruleTerm )
            	    // InternalAsmetaL.g:10360:6: lv_ranges_7_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getChooseRuleAccess().getRangesTermParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_111);
            	    lv_ranges_7_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getChooseRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_7_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop162;
                }
            } while (true);

            otherlv_8=(Token)match(input,123,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getChooseRuleAccess().getWithKeyword_5());
              		
            }
            // InternalAsmetaL.g:10382:3: ( (lv_guard_9_0= ruleTerm ) )
            // InternalAsmetaL.g:10383:4: (lv_guard_9_0= ruleTerm )
            {
            // InternalAsmetaL.g:10383:4: (lv_guard_9_0= ruleTerm )
            // InternalAsmetaL.g:10384:5: lv_guard_9_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChooseRuleAccess().getGuardTermParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_112);
            lv_guard_9_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChooseRuleRule());
              					}
              					set(
              						current,
              						"guard",
              						lv_guard_9_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_10=(Token)match(input,134,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getChooseRuleAccess().getDoKeyword_7());
              		
            }
            // InternalAsmetaL.g:10405:3: ( (lv_doRule_11_0= ruleRule ) )
            // InternalAsmetaL.g:10406:4: (lv_doRule_11_0= ruleRule )
            {
            // InternalAsmetaL.g:10406:4: (lv_doRule_11_0= ruleRule )
            // InternalAsmetaL.g:10407:5: lv_doRule_11_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChooseRuleAccess().getDoRuleRuleParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_113);
            lv_doRule_11_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChooseRuleRule());
              					}
              					set(
              						current,
              						"doRule",
              						lv_doRule_11_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10424:3: (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==135) ) {
                int LA163_1 = input.LA(2);

                if ( (synpred253_InternalAsmetaL()) ) {
                    alt163=1;
                }
            }
            switch (alt163) {
                case 1 :
                    // InternalAsmetaL.g:10425:4: otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) )
                    {
                    otherlv_12=(Token)match(input,135,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getChooseRuleAccess().getIfnoneKeyword_9_0());
                      			
                    }
                    // InternalAsmetaL.g:10429:4: ( (lv_ifnone_13_0= ruleRule ) )
                    // InternalAsmetaL.g:10430:5: (lv_ifnone_13_0= ruleRule )
                    {
                    // InternalAsmetaL.g:10430:5: (lv_ifnone_13_0= ruleRule )
                    // InternalAsmetaL.g:10431:6: lv_ifnone_13_0= ruleRule
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChooseRuleAccess().getIfnoneRuleParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ifnone_13_0=ruleRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChooseRuleRule());
                      						}
                      						set(
                      							current,
                      							"ifnone",
                      							lv_ifnone_13_0,
                      							"org.asmeta.xt.AsmetaL.Rule");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChooseRule"


    // $ANTLR start "entryRuleForallRule"
    // InternalAsmetaL.g:10453:1: entryRuleForallRule returns [EObject current=null] : iv_ruleForallRule= ruleForallRule EOF ;
    public final EObject entryRuleForallRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForallRule = null;


        try {
            // InternalAsmetaL.g:10453:51: (iv_ruleForallRule= ruleForallRule EOF )
            // InternalAsmetaL.g:10454:2: iv_ruleForallRule= ruleForallRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForallRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForallRule=ruleForallRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForallRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForallRule"


    // $ANTLR start "ruleForallRule"
    // InternalAsmetaL.g:10460:1: ruleForallRule returns [EObject current=null] : (otherlv_0= 'forall' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) ) ;
    public final EObject ruleForallRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_variable_1_0 = null;

        EObject lv_ranges_3_0 = null;

        EObject lv_variable_5_0 = null;

        EObject lv_ranges_7_0 = null;

        EObject lv_guard_9_0 = null;

        EObject lv_doRule_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10466:2: ( (otherlv_0= 'forall' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:10467:2: (otherlv_0= 'forall' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:10467:2: (otherlv_0= 'forall' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) )
            // InternalAsmetaL.g:10468:3: otherlv_0= 'forall' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) )
            {
            otherlv_0=(Token)match(input,124,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForallRuleAccess().getForallKeyword_0());
              		
            }
            // InternalAsmetaL.g:10472:3: ( (lv_variable_1_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:10473:4: (lv_variable_1_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:10473:4: (lv_variable_1_0= ruleVariableTerm )
            // InternalAsmetaL.g:10474:5: lv_variable_1_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForallRuleAccess().getVariableVariableTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_1_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForallRuleRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getForallRuleAccess().getInKeyword_2());
              		
            }
            // InternalAsmetaL.g:10495:3: ( (lv_ranges_3_0= ruleTerm ) )
            // InternalAsmetaL.g:10496:4: (lv_ranges_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:10496:4: (lv_ranges_3_0= ruleTerm )
            // InternalAsmetaL.g:10497:5: lv_ranges_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForallRuleAccess().getRangesTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_114);
            lv_ranges_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForallRuleRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10514:3: (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )*
            loop164:
            do {
                int alt164=2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==31) ) {
                    alt164=1;
                }


                switch (alt164) {
            	case 1 :
            	    // InternalAsmetaL.g:10515:4: otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getForallRuleAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:10519:4: ( (lv_variable_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:10520:5: (lv_variable_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:10520:5: (lv_variable_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:10521:6: lv_variable_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForallRuleAccess().getVariableVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForallRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,41,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getForallRuleAccess().getInKeyword_4_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:10542:4: ( (lv_ranges_7_0= ruleTerm ) )
            	    // InternalAsmetaL.g:10543:5: (lv_ranges_7_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:10543:5: (lv_ranges_7_0= ruleTerm )
            	    // InternalAsmetaL.g:10544:6: lv_ranges_7_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForallRuleAccess().getRangesTermParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_114);
            	    lv_ranges_7_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForallRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_7_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);

            // InternalAsmetaL.g:10562:3: (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==123) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalAsmetaL.g:10563:4: otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) )
                    {
                    otherlv_8=(Token)match(input,123,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getForallRuleAccess().getWithKeyword_5_0());
                      			
                    }
                    // InternalAsmetaL.g:10567:4: ( (lv_guard_9_0= ruleTerm ) )
                    // InternalAsmetaL.g:10568:5: (lv_guard_9_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:10568:5: (lv_guard_9_0= ruleTerm )
                    // InternalAsmetaL.g:10569:6: lv_guard_9_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForallRuleAccess().getGuardTermParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_112);
                    lv_guard_9_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForallRuleRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_9_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,134,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getForallRuleAccess().getDoKeyword_6());
              		
            }
            // InternalAsmetaL.g:10591:3: ( (lv_doRule_11_0= ruleRule ) )
            // InternalAsmetaL.g:10592:4: (lv_doRule_11_0= ruleRule )
            {
            // InternalAsmetaL.g:10592:4: (lv_doRule_11_0= ruleRule )
            // InternalAsmetaL.g:10593:5: lv_doRule_11_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForallRuleAccess().getDoRuleRuleParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_doRule_11_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForallRuleRule());
              					}
              					set(
              						current,
              						"doRule",
              						lv_doRule_11_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForallRule"


    // $ANTLR start "entryRuleLetRule"
    // InternalAsmetaL.g:10614:1: entryRuleLetRule returns [EObject current=null] : iv_ruleLetRule= ruleLetRule EOF ;
    public final EObject entryRuleLetRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetRule = null;


        try {
            // InternalAsmetaL.g:10614:48: (iv_ruleLetRule= ruleLetRule EOF )
            // InternalAsmetaL.g:10615:2: iv_ruleLetRule= ruleLetRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLetRule=ruleLetRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetRule"


    // $ANTLR start "ruleLetRule"
    // InternalAsmetaL.g:10621:1: ruleLetRule returns [EObject current=null] : (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_initExpression_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_inRule_11_0= ruleRule ) ) otherlv_12= 'endlet' ) ;
    public final EObject ruleLetRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_2_0 = null;

        EObject lv_initExpression_4_0 = null;

        EObject lv_variable_6_0 = null;

        EObject lv_initExpression_8_0 = null;

        EObject lv_inRule_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10627:2: ( (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_initExpression_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_inRule_11_0= ruleRule ) ) otherlv_12= 'endlet' ) )
            // InternalAsmetaL.g:10628:2: (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_initExpression_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_inRule_11_0= ruleRule ) ) otherlv_12= 'endlet' )
            {
            // InternalAsmetaL.g:10628:2: (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_initExpression_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_inRule_11_0= ruleRule ) ) otherlv_12= 'endlet' )
            // InternalAsmetaL.g:10629:3: otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_initExpression_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_inRule_11_0= ruleRule ) ) otherlv_12= 'endlet'
            {
            otherlv_0=(Token)match(input,125,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLetRuleAccess().getLetKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLetRuleAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:10637:3: ( (lv_variable_2_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:10638:4: (lv_variable_2_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:10638:4: (lv_variable_2_0= ruleVariableTerm )
            // InternalAsmetaL.g:10639:5: lv_variable_2_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetRuleAccess().getVariableVariableTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_variable_2_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetRuleRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_2_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLetRuleAccess().getEqualsSignKeyword_3());
              		
            }
            // InternalAsmetaL.g:10660:3: ( (lv_initExpression_4_0= ruleTerm ) )
            // InternalAsmetaL.g:10661:4: (lv_initExpression_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:10661:4: (lv_initExpression_4_0= ruleTerm )
            // InternalAsmetaL.g:10662:5: lv_initExpression_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetRuleAccess().getInitExpressionTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_initExpression_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetRuleRule());
              					}
              					add(
              						current,
              						"initExpression",
              						lv_initExpression_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10679:3: (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) ) )*
            loop166:
            do {
                int alt166=2;
                int LA166_0 = input.LA(1);

                if ( (LA166_0==31) ) {
                    alt166=1;
                }


                switch (alt166) {
            	case 1 :
            	    // InternalAsmetaL.g:10680:4: otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) )
            	    {
            	    otherlv_5=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getLetRuleAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:10684:4: ( (lv_variable_6_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:10685:5: (lv_variable_6_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:10685:5: (lv_variable_6_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:10686:6: lv_variable_6_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLetRuleAccess().getVariableVariableTermParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_26);
            	    lv_variable_6_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLetRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_6_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_7=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getLetRuleAccess().getEqualsSignKeyword_5_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:10707:4: ( (lv_initExpression_8_0= ruleTerm ) )
            	    // InternalAsmetaL.g:10708:5: (lv_initExpression_8_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:10708:5: (lv_initExpression_8_0= ruleTerm )
            	    // InternalAsmetaL.g:10709:6: lv_initExpression_8_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLetRuleAccess().getInitExpressionTermParserRuleCall_5_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_initExpression_8_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLetRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"initExpression",
            	      							lv_initExpression_8_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop166;
                }
            } while (true);

            otherlv_9=(Token)match(input,32,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getLetRuleAccess().getRightParenthesisKeyword_6());
              		
            }
            otherlv_10=(Token)match(input,41,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getLetRuleAccess().getInKeyword_7());
              		
            }
            // InternalAsmetaL.g:10735:3: ( (lv_inRule_11_0= ruleRule ) )
            // InternalAsmetaL.g:10736:4: (lv_inRule_11_0= ruleRule )
            {
            // InternalAsmetaL.g:10736:4: (lv_inRule_11_0= ruleRule )
            // InternalAsmetaL.g:10737:5: lv_inRule_11_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetRuleAccess().getInRuleRuleParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_104);
            lv_inRule_11_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetRuleRule());
              					}
              					set(
              						current,
              						"inRule",
              						lv_inRule_11_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getLetRuleAccess().getEndletKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetRule"


    // $ANTLR start "entryRuleMacroCallRule"
    // InternalAsmetaL.g:10762:1: entryRuleMacroCallRule returns [EObject current=null] : iv_ruleMacroCallRule= ruleMacroCallRule EOF ;
    public final EObject entryRuleMacroCallRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMacroCallRule = null;


        try {
            // InternalAsmetaL.g:10762:54: (iv_ruleMacroCallRule= ruleMacroCallRule EOF )
            // InternalAsmetaL.g:10763:2: iv_ruleMacroCallRule= ruleMacroCallRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMacroCallRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMacroCallRule=ruleMacroCallRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMacroCallRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMacroCallRule"


    // $ANTLR start "ruleMacroCallRule"
    // InternalAsmetaL.g:10769:1: ruleMacroCallRule returns [EObject current=null] : ( ( (lv_name_0_0= ruleextendedName ) ) otherlv_1= '[' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ']' ) ;
    public final EObject ruleMacroCallRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10775:2: ( ( ( (lv_name_0_0= ruleextendedName ) ) otherlv_1= '[' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ']' ) )
            // InternalAsmetaL.g:10776:2: ( ( (lv_name_0_0= ruleextendedName ) ) otherlv_1= '[' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ']' )
            {
            // InternalAsmetaL.g:10776:2: ( ( (lv_name_0_0= ruleextendedName ) ) otherlv_1= '[' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ']' )
            // InternalAsmetaL.g:10777:3: ( (lv_name_0_0= ruleextendedName ) ) otherlv_1= '[' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ']'
            {
            // InternalAsmetaL.g:10777:3: ( (lv_name_0_0= ruleextendedName ) )
            // InternalAsmetaL.g:10778:4: (lv_name_0_0= ruleextendedName )
            {
            // InternalAsmetaL.g:10778:4: (lv_name_0_0= ruleextendedName )
            // InternalAsmetaL.g:10779:5: lv_name_0_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMacroCallRuleAccess().getNameExtendedNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_115);
            lv_name_0_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMacroCallRuleRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,119,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMacroCallRuleAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalAsmetaL.g:10800:3: ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( ((LA168_0>=RULE_ID && LA168_0<=RULE_REAL_NUMBER)||LA168_0==30||LA168_0==43||LA168_0==57||(LA168_0>=61 && LA168_0<=70)||LA168_0==72||(LA168_0>=75 && LA168_0<=80)||(LA168_0>=89 && LA168_0<=95)||LA168_0==100||(LA168_0>=103 && LA168_0<=104)||(LA168_0>=108 && LA168_0<=111)||LA168_0==115||LA168_0==119||LA168_0==125||LA168_0==127||LA168_0==144) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // InternalAsmetaL.g:10801:4: ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )*
                    {
                    // InternalAsmetaL.g:10801:4: ( (lv_parameters_2_0= ruleTerm ) )
                    // InternalAsmetaL.g:10802:5: (lv_parameters_2_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:10802:5: (lv_parameters_2_0= ruleTerm )
                    // InternalAsmetaL.g:10803:6: lv_parameters_2_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMacroCallRuleAccess().getParametersTermParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_87);
                    lv_parameters_2_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMacroCallRuleRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_2_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:10820:4: (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )*
                    loop167:
                    do {
                        int alt167=2;
                        int LA167_0 = input.LA(1);

                        if ( (LA167_0==31) ) {
                            alt167=1;
                        }


                        switch (alt167) {
                    	case 1 :
                    	    // InternalAsmetaL.g:10821:5: otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) )
                    	    {
                    	    otherlv_3=(Token)match(input,31,FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getMacroCallRuleAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:10825:5: ( (lv_parameters_4_0= ruleTerm ) )
                    	    // InternalAsmetaL.g:10826:6: (lv_parameters_4_0= ruleTerm )
                    	    {
                    	    // InternalAsmetaL.g:10826:6: (lv_parameters_4_0= ruleTerm )
                    	    // InternalAsmetaL.g:10827:7: lv_parameters_4_0= ruleTerm
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMacroCallRuleAccess().getParametersTermParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_87);
                    	    lv_parameters_4_0=ruleTerm();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMacroCallRuleRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_4_0,
                    	      								"org.asmeta.xt.AsmetaL.Term");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop167;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMacroCallRuleAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMacroCallRule"


    // $ANTLR start "entryRuleExtendRule"
    // InternalAsmetaL.g:10854:1: entryRuleExtendRule returns [EObject current=null] : iv_ruleExtendRule= ruleExtendRule EOF ;
    public final EObject entryRuleExtendRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendRule = null;


        try {
            // InternalAsmetaL.g:10854:51: (iv_ruleExtendRule= ruleExtendRule EOF )
            // InternalAsmetaL.g:10855:2: iv_ruleExtendRule= ruleExtendRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExtendRule=ruleExtendRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendRule"


    // $ANTLR start "ruleExtendRule"
    // InternalAsmetaL.g:10861:1: ruleExtendRule returns [EObject current=null] : (otherlv_0= 'extend' ( (lv_extendedDomain_1_0= rulegetDomainByID ) ) otherlv_2= 'with' ( (lv_boundVar_3_0= ruleVariableTerm ) ) (otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) ) )* otherlv_6= 'do' ( (lv_doRule_7_0= ruleRule ) ) ) ;
    public final EObject ruleExtendRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_extendedDomain_1_0 = null;

        EObject lv_boundVar_3_0 = null;

        EObject lv_boundVar_5_0 = null;

        EObject lv_doRule_7_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10867:2: ( (otherlv_0= 'extend' ( (lv_extendedDomain_1_0= rulegetDomainByID ) ) otherlv_2= 'with' ( (lv_boundVar_3_0= ruleVariableTerm ) ) (otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) ) )* otherlv_6= 'do' ( (lv_doRule_7_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:10868:2: (otherlv_0= 'extend' ( (lv_extendedDomain_1_0= rulegetDomainByID ) ) otherlv_2= 'with' ( (lv_boundVar_3_0= ruleVariableTerm ) ) (otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) ) )* otherlv_6= 'do' ( (lv_doRule_7_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:10868:2: (otherlv_0= 'extend' ( (lv_extendedDomain_1_0= rulegetDomainByID ) ) otherlv_2= 'with' ( (lv_boundVar_3_0= ruleVariableTerm ) ) (otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) ) )* otherlv_6= 'do' ( (lv_doRule_7_0= ruleRule ) ) )
            // InternalAsmetaL.g:10869:3: otherlv_0= 'extend' ( (lv_extendedDomain_1_0= rulegetDomainByID ) ) otherlv_2= 'with' ( (lv_boundVar_3_0= ruleVariableTerm ) ) (otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) ) )* otherlv_6= 'do' ( (lv_doRule_7_0= ruleRule ) )
            {
            otherlv_0=(Token)match(input,136,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExtendRuleAccess().getExtendKeyword_0());
              		
            }
            // InternalAsmetaL.g:10873:3: ( (lv_extendedDomain_1_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:10874:4: (lv_extendedDomain_1_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:10874:4: (lv_extendedDomain_1_0= rulegetDomainByID )
            // InternalAsmetaL.g:10875:5: lv_extendedDomain_1_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExtendRuleAccess().getExtendedDomainGetDomainByIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_116);
            lv_extendedDomain_1_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExtendRuleRule());
              					}
              					set(
              						current,
              						"extendedDomain",
              						lv_extendedDomain_1_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,123,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getExtendRuleAccess().getWithKeyword_2());
              		
            }
            // InternalAsmetaL.g:10896:3: ( (lv_boundVar_3_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:10897:4: (lv_boundVar_3_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:10897:4: (lv_boundVar_3_0= ruleVariableTerm )
            // InternalAsmetaL.g:10898:5: lv_boundVar_3_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExtendRuleAccess().getBoundVarVariableTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_117);
            lv_boundVar_3_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExtendRuleRule());
              					}
              					add(
              						current,
              						"boundVar",
              						lv_boundVar_3_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10915:3: (otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) ) )*
            loop169:
            do {
                int alt169=2;
                int LA169_0 = input.LA(1);

                if ( (LA169_0==31) ) {
                    alt169=1;
                }


                switch (alt169) {
            	case 1 :
            	    // InternalAsmetaL.g:10916:4: otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,31,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getExtendRuleAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:10920:4: ( (lv_boundVar_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:10921:5: (lv_boundVar_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:10921:5: (lv_boundVar_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:10922:6: lv_boundVar_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExtendRuleAccess().getBoundVarVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_boundVar_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExtendRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"boundVar",
            	      							lv_boundVar_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop169;
                }
            } while (true);

            otherlv_6=(Token)match(input,134,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getExtendRuleAccess().getDoKeyword_5());
              		
            }
            // InternalAsmetaL.g:10944:3: ( (lv_doRule_7_0= ruleRule ) )
            // InternalAsmetaL.g:10945:4: (lv_doRule_7_0= ruleRule )
            {
            // InternalAsmetaL.g:10945:4: (lv_doRule_7_0= ruleRule )
            // InternalAsmetaL.g:10946:5: lv_doRule_7_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExtendRuleAccess().getDoRuleRuleParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_doRule_7_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExtendRuleRule());
              					}
              					set(
              						current,
              						"doRule",
              						lv_doRule_7_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendRule"


    // $ANTLR start "entryRuleTurboRule"
    // InternalAsmetaL.g:10967:1: entryRuleTurboRule returns [EObject current=null] : iv_ruleTurboRule= ruleTurboRule EOF ;
    public final EObject entryRuleTurboRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTurboRule = null;


        try {
            // InternalAsmetaL.g:10967:50: (iv_ruleTurboRule= ruleTurboRule EOF )
            // InternalAsmetaL.g:10968:2: iv_ruleTurboRule= ruleTurboRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTurboRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTurboRule=ruleTurboRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTurboRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTurboRule"


    // $ANTLR start "ruleTurboRule"
    // InternalAsmetaL.g:10974:1: ruleTurboRule returns [EObject current=null] : (this_SeqRule_0= ruleSeqRule | this_IterateRule_1= ruleIterateRule | this_TurboCallRule_2= ruleTurboCallRule | this_TurboLocalStateRule_3= ruleTurboLocalStateRule ) ;
    public final EObject ruleTurboRule() throws RecognitionException {
        EObject current = null;

        EObject this_SeqRule_0 = null;

        EObject this_IterateRule_1 = null;

        EObject this_TurboCallRule_2 = null;

        EObject this_TurboLocalStateRule_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10980:2: ( (this_SeqRule_0= ruleSeqRule | this_IterateRule_1= ruleIterateRule | this_TurboCallRule_2= ruleTurboCallRule | this_TurboLocalStateRule_3= ruleTurboLocalStateRule ) )
            // InternalAsmetaL.g:10981:2: (this_SeqRule_0= ruleSeqRule | this_IterateRule_1= ruleIterateRule | this_TurboCallRule_2= ruleTurboCallRule | this_TurboLocalStateRule_3= ruleTurboLocalStateRule )
            {
            // InternalAsmetaL.g:10981:2: (this_SeqRule_0= ruleSeqRule | this_IterateRule_1= ruleIterateRule | this_TurboCallRule_2= ruleTurboCallRule | this_TurboLocalStateRule_3= ruleTurboLocalStateRule )
            int alt170=4;
            switch ( input.LA(1) ) {
            case 137:
                {
                alt170=1;
                }
                break;
            case 139:
                {
                alt170=2;
                }
                break;
            case RULE_RULE_ID:
                {
                alt170=3;
                }
                break;
            case 57:
            case 84:
                {
                alt170=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }

            switch (alt170) {
                case 1 :
                    // InternalAsmetaL.g:10982:3: this_SeqRule_0= ruleSeqRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTurboRuleAccess().getSeqRuleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SeqRule_0=ruleSeqRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SeqRule_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:10994:3: this_IterateRule_1= ruleIterateRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTurboRuleAccess().getIterateRuleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IterateRule_1=ruleIterateRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IterateRule_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:11006:3: this_TurboCallRule_2= ruleTurboCallRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTurboRuleAccess().getTurboCallRuleParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TurboCallRule_2=ruleTurboCallRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TurboCallRule_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:11018:3: this_TurboLocalStateRule_3= ruleTurboLocalStateRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTurboRuleAccess().getTurboLocalStateRuleParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TurboLocalStateRule_3=ruleTurboLocalStateRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TurboLocalStateRule_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTurboRule"


    // $ANTLR start "entryRuleSeqRule"
    // InternalAsmetaL.g:11033:1: entryRuleSeqRule returns [EObject current=null] : iv_ruleSeqRule= ruleSeqRule EOF ;
    public final EObject entryRuleSeqRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSeqRule = null;


        try {
            // InternalAsmetaL.g:11033:48: (iv_ruleSeqRule= ruleSeqRule EOF )
            // InternalAsmetaL.g:11034:2: iv_ruleSeqRule= ruleSeqRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSeqRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSeqRule=ruleSeqRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSeqRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSeqRule"


    // $ANTLR start "ruleSeqRule"
    // InternalAsmetaL.g:11040:1: ruleSeqRule returns [EObject current=null] : (otherlv_0= 'seq' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endseq' ) ;
    public final EObject ruleSeqRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_rules_1_0 = null;

        EObject lv_rules_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11046:2: ( (otherlv_0= 'seq' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endseq' ) )
            // InternalAsmetaL.g:11047:2: (otherlv_0= 'seq' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endseq' )
            {
            // InternalAsmetaL.g:11047:2: (otherlv_0= 'seq' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endseq' )
            // InternalAsmetaL.g:11048:3: otherlv_0= 'seq' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endseq'
            {
            otherlv_0=(Token)match(input,137,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSeqRuleAccess().getSeqKeyword_0());
              		
            }
            // InternalAsmetaL.g:11052:3: ( (lv_rules_1_0= ruleRule ) )
            // InternalAsmetaL.g:11053:4: (lv_rules_1_0= ruleRule )
            {
            // InternalAsmetaL.g:11053:4: (lv_rules_1_0= ruleRule )
            // InternalAsmetaL.g:11054:5: lv_rules_1_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSeqRuleAccess().getRulesRuleParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_44);
            lv_rules_1_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSeqRuleRule());
              					}
              					add(
              						current,
              						"rules",
              						lv_rules_1_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:11071:3: ( (lv_rules_2_0= ruleRule ) )+
            int cnt171=0;
            loop171:
            do {
                int alt171=2;
                int LA171_0 = input.LA(1);

                if ( ((LA171_0>=RULE_ID && LA171_0<=RULE_ENUM_ID)||LA171_0==57||LA171_0==84||(LA171_0>=89 && LA171_0<=96)||LA171_0==111||LA171_0==115||(LA171_0>=124 && LA171_0<=125)||LA171_0==129||LA171_0==131||LA171_0==133||(LA171_0>=136 && LA171_0<=137)||LA171_0==139||LA171_0==142||LA171_0==144) ) {
                    alt171=1;
                }


                switch (alt171) {
            	case 1 :
            	    // InternalAsmetaL.g:11072:4: (lv_rules_2_0= ruleRule )
            	    {
            	    // InternalAsmetaL.g:11072:4: (lv_rules_2_0= ruleRule )
            	    // InternalAsmetaL.g:11073:5: lv_rules_2_0= ruleRule
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSeqRuleAccess().getRulesRuleParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_rules_2_0=ruleRule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSeqRuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"rules",
            	      						lv_rules_2_0,
            	      						"org.asmeta.xt.AsmetaL.Rule");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt171 >= 1 ) break loop171;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(171, input);
                        throw eee;
                }
                cnt171++;
            } while (true);

            otherlv_3=(Token)match(input,138,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSeqRuleAccess().getEndseqKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSeqRule"


    // $ANTLR start "entryRuleIterateRule"
    // InternalAsmetaL.g:11098:1: entryRuleIterateRule returns [EObject current=null] : iv_ruleIterateRule= ruleIterateRule EOF ;
    public final EObject entryRuleIterateRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIterateRule = null;


        try {
            // InternalAsmetaL.g:11098:52: (iv_ruleIterateRule= ruleIterateRule EOF )
            // InternalAsmetaL.g:11099:2: iv_ruleIterateRule= ruleIterateRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIterateRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIterateRule=ruleIterateRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIterateRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIterateRule"


    // $ANTLR start "ruleIterateRule"
    // InternalAsmetaL.g:11105:1: ruleIterateRule returns [EObject current=null] : (otherlv_0= 'iterate' ( (lv_rule_1_0= ruleRule ) ) otherlv_2= 'enditerate' ) ;
    public final EObject ruleIterateRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_rule_1_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11111:2: ( (otherlv_0= 'iterate' ( (lv_rule_1_0= ruleRule ) ) otherlv_2= 'enditerate' ) )
            // InternalAsmetaL.g:11112:2: (otherlv_0= 'iterate' ( (lv_rule_1_0= ruleRule ) ) otherlv_2= 'enditerate' )
            {
            // InternalAsmetaL.g:11112:2: (otherlv_0= 'iterate' ( (lv_rule_1_0= ruleRule ) ) otherlv_2= 'enditerate' )
            // InternalAsmetaL.g:11113:3: otherlv_0= 'iterate' ( (lv_rule_1_0= ruleRule ) ) otherlv_2= 'enditerate'
            {
            otherlv_0=(Token)match(input,139,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIterateRuleAccess().getIterateKeyword_0());
              		
            }
            // InternalAsmetaL.g:11117:3: ( (lv_rule_1_0= ruleRule ) )
            // InternalAsmetaL.g:11118:4: (lv_rule_1_0= ruleRule )
            {
            // InternalAsmetaL.g:11118:4: (lv_rule_1_0= ruleRule )
            // InternalAsmetaL.g:11119:5: lv_rule_1_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIterateRuleAccess().getRuleRuleParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_119);
            lv_rule_1_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIterateRuleRule());
              					}
              					set(
              						current,
              						"rule",
              						lv_rule_1_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIterateRuleAccess().getEnditerateKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIterateRule"


    // $ANTLR start "entryRuleTurboCallRule"
    // InternalAsmetaL.g:11144:1: entryRuleTurboCallRule returns [EObject current=null] : iv_ruleTurboCallRule= ruleTurboCallRule EOF ;
    public final EObject entryRuleTurboCallRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTurboCallRule = null;


        try {
            // InternalAsmetaL.g:11144:54: (iv_ruleTurboCallRule= ruleTurboCallRule EOF )
            // InternalAsmetaL.g:11145:2: iv_ruleTurboCallRule= ruleTurboCallRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTurboCallRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTurboCallRule=ruleTurboCallRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTurboCallRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTurboCallRule"


    // $ANTLR start "ruleTurboCallRule"
    // InternalAsmetaL.g:11151:1: ruleTurboCallRule returns [EObject current=null] : ( ( (lv_calledRuleName_0_0= RULE_RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleTurboCallRule() throws RecognitionException {
        EObject current = null;

        Token lv_calledRuleName_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11157:2: ( ( ( (lv_calledRuleName_0_0= RULE_RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ')' ) )
            // InternalAsmetaL.g:11158:2: ( ( (lv_calledRuleName_0_0= RULE_RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ')' )
            {
            // InternalAsmetaL.g:11158:2: ( ( (lv_calledRuleName_0_0= RULE_RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ')' )
            // InternalAsmetaL.g:11159:3: ( (lv_calledRuleName_0_0= RULE_RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ')'
            {
            // InternalAsmetaL.g:11159:3: ( (lv_calledRuleName_0_0= RULE_RULE_ID ) )
            // InternalAsmetaL.g:11160:4: (lv_calledRuleName_0_0= RULE_RULE_ID )
            {
            // InternalAsmetaL.g:11160:4: (lv_calledRuleName_0_0= RULE_RULE_ID )
            // InternalAsmetaL.g:11161:5: lv_calledRuleName_0_0= RULE_RULE_ID
            {
            lv_calledRuleName_0_0=(Token)match(input,RULE_RULE_ID,FOLLOW_50); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_calledRuleName_0_0, grammarAccess.getTurboCallRuleAccess().getCalledRuleNameRULE_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTurboCallRuleRule());
              					}
              					setWithLastConsumed(
              						current,
              						"calledRuleName",
              						lv_calledRuleName_0_0,
              						"org.asmeta.xt.AsmetaL.RULE_ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,30,FOLLOW_120); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTurboCallRuleAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:11181:3: ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )?
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( ((LA173_0>=RULE_ID && LA173_0<=RULE_REAL_NUMBER)||LA173_0==30||LA173_0==43||LA173_0==57||(LA173_0>=61 && LA173_0<=70)||LA173_0==72||(LA173_0>=75 && LA173_0<=80)||(LA173_0>=89 && LA173_0<=95)||LA173_0==100||(LA173_0>=103 && LA173_0<=104)||(LA173_0>=108 && LA173_0<=111)||LA173_0==115||LA173_0==119||LA173_0==125||LA173_0==127||LA173_0==144) ) {
                alt173=1;
            }
            switch (alt173) {
                case 1 :
                    // InternalAsmetaL.g:11182:4: ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )*
                    {
                    // InternalAsmetaL.g:11182:4: ( (lv_parameters_2_0= ruleTerm ) )
                    // InternalAsmetaL.g:11183:5: (lv_parameters_2_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:11183:5: (lv_parameters_2_0= ruleTerm )
                    // InternalAsmetaL.g:11184:6: lv_parameters_2_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTurboCallRuleAccess().getParametersTermParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_parameters_2_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTurboCallRuleRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_2_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:11201:4: (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )*
                    loop172:
                    do {
                        int alt172=2;
                        int LA172_0 = input.LA(1);

                        if ( (LA172_0==31) ) {
                            alt172=1;
                        }


                        switch (alt172) {
                    	case 1 :
                    	    // InternalAsmetaL.g:11202:5: otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) )
                    	    {
                    	    otherlv_3=(Token)match(input,31,FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getTurboCallRuleAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:11206:5: ( (lv_parameters_4_0= ruleTerm ) )
                    	    // InternalAsmetaL.g:11207:6: (lv_parameters_4_0= ruleTerm )
                    	    {
                    	    // InternalAsmetaL.g:11207:6: (lv_parameters_4_0= ruleTerm )
                    	    // InternalAsmetaL.g:11208:7: lv_parameters_4_0= ruleTerm
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTurboCallRuleAccess().getParametersTermParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_4_0=ruleTerm();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTurboCallRuleRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_4_0,
                    	      								"org.asmeta.xt.AsmetaL.Term");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop172;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,32,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTurboCallRuleAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTurboCallRule"


    // $ANTLR start "entryRuleTurboReturnRule"
    // InternalAsmetaL.g:11235:1: entryRuleTurboReturnRule returns [EObject current=null] : iv_ruleTurboReturnRule= ruleTurboReturnRule EOF ;
    public final EObject entryRuleTurboReturnRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTurboReturnRule = null;


        try {
            // InternalAsmetaL.g:11235:56: (iv_ruleTurboReturnRule= ruleTurboReturnRule EOF )
            // InternalAsmetaL.g:11236:2: iv_ruleTurboReturnRule= ruleTurboReturnRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTurboReturnRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTurboReturnRule=ruleTurboReturnRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTurboReturnRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTurboReturnRule"


    // $ANTLR start "ruleTurboReturnRule"
    // InternalAsmetaL.g:11242:1: ruleTurboReturnRule returns [EObject current=null] : ( ( ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= '<-' ( (lv_updateRule_2_0= ruleTurboCallRule ) ) ) ;
    public final EObject ruleTurboReturnRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_location_0_1 = null;

        EObject lv_location_0_2 = null;

        EObject lv_updateRule_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11248:2: ( ( ( ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= '<-' ( (lv_updateRule_2_0= ruleTurboCallRule ) ) ) )
            // InternalAsmetaL.g:11249:2: ( ( ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= '<-' ( (lv_updateRule_2_0= ruleTurboCallRule ) ) )
            {
            // InternalAsmetaL.g:11249:2: ( ( ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= '<-' ( (lv_updateRule_2_0= ruleTurboCallRule ) ) )
            // InternalAsmetaL.g:11250:3: ( ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= '<-' ( (lv_updateRule_2_0= ruleTurboCallRule ) )
            {
            // InternalAsmetaL.g:11250:3: ( ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) ) )
            // InternalAsmetaL.g:11251:4: ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) )
            {
            // InternalAsmetaL.g:11251:4: ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) )
            // InternalAsmetaL.g:11252:5: (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm )
            {
            // InternalAsmetaL.g:11252:5: (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm )
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( ((LA174_0>=RULE_ID && LA174_0<=RULE_ENUM_ID)||(LA174_0>=89 && LA174_0<=95)) ) {
                alt174=1;
            }
            else if ( (LA174_0==144) ) {
                alt174=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;
            }
            switch (alt174) {
                case 1 :
                    // InternalAsmetaL.g:11253:6: lv_location_0_1= ruleFunctionTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTurboReturnRuleAccess().getLocationFunctionTermParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_121);
                    lv_location_0_1=ruleFunctionTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTurboReturnRuleRule());
                      						}
                      						set(
                      							current,
                      							"location",
                      							lv_location_0_1,
                      							"org.asmeta.xt.AsmetaL.FunctionTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:11269:6: lv_location_0_2= ruleVariableTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTurboReturnRuleAccess().getLocationVariableTermParserRuleCall_0_0_1());
                      					
                    }
                    pushFollow(FOLLOW_121);
                    lv_location_0_2=ruleVariableTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTurboReturnRuleRule());
                      						}
                      						set(
                      							current,
                      							"location",
                      							lv_location_0_2,
                      							"org.asmeta.xt.AsmetaL.VariableTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_1=(Token)match(input,141,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTurboReturnRuleAccess().getLessThanSignHyphenMinusKeyword_1());
              		
            }
            // InternalAsmetaL.g:11291:3: ( (lv_updateRule_2_0= ruleTurboCallRule ) )
            // InternalAsmetaL.g:11292:4: (lv_updateRule_2_0= ruleTurboCallRule )
            {
            // InternalAsmetaL.g:11292:4: (lv_updateRule_2_0= ruleTurboCallRule )
            // InternalAsmetaL.g:11293:5: lv_updateRule_2_0= ruleTurboCallRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTurboReturnRuleAccess().getUpdateRuleTurboCallRuleParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_updateRule_2_0=ruleTurboCallRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTurboReturnRuleRule());
              					}
              					set(
              						current,
              						"updateRule",
              						lv_updateRule_2_0,
              						"org.asmeta.xt.AsmetaL.TurboCallRule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTurboReturnRule"


    // $ANTLR start "entryRuleTurboLocalStateRule"
    // InternalAsmetaL.g:11314:1: entryRuleTurboLocalStateRule returns [EObject current=null] : iv_ruleTurboLocalStateRule= ruleTurboLocalStateRule EOF ;
    public final EObject entryRuleTurboLocalStateRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTurboLocalStateRule = null;


        try {
            // InternalAsmetaL.g:11314:60: (iv_ruleTurboLocalStateRule= ruleTurboLocalStateRule EOF )
            // InternalAsmetaL.g:11315:2: iv_ruleTurboLocalStateRule= ruleTurboLocalStateRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTurboLocalStateRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTurboLocalStateRule=ruleTurboLocalStateRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTurboLocalStateRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTurboLocalStateRule"


    // $ANTLR start "ruleTurboLocalStateRule"
    // InternalAsmetaL.g:11321:1: ruleTurboLocalStateRule returns [EObject current=null] : ( ( (lv_localFunction_0_0= ruleLocalFunction ) ) otherlv_1= '[' ( (lv_init_2_0= ruleRule ) ) otherlv_3= ']' ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )* ( (lv_body_8_0= ruleRule ) ) ) ;
    public final EObject ruleTurboLocalStateRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_localFunction_0_0 = null;

        EObject lv_init_2_0 = null;

        EObject lv_localFunction_4_0 = null;

        EObject lv_init_6_0 = null;

        EObject lv_body_8_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11327:2: ( ( ( (lv_localFunction_0_0= ruleLocalFunction ) ) otherlv_1= '[' ( (lv_init_2_0= ruleRule ) ) otherlv_3= ']' ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )* ( (lv_body_8_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:11328:2: ( ( (lv_localFunction_0_0= ruleLocalFunction ) ) otherlv_1= '[' ( (lv_init_2_0= ruleRule ) ) otherlv_3= ']' ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )* ( (lv_body_8_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:11328:2: ( ( (lv_localFunction_0_0= ruleLocalFunction ) ) otherlv_1= '[' ( (lv_init_2_0= ruleRule ) ) otherlv_3= ']' ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )* ( (lv_body_8_0= ruleRule ) ) )
            // InternalAsmetaL.g:11329:3: ( (lv_localFunction_0_0= ruleLocalFunction ) ) otherlv_1= '[' ( (lv_init_2_0= ruleRule ) ) otherlv_3= ']' ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )* ( (lv_body_8_0= ruleRule ) )
            {
            // InternalAsmetaL.g:11329:3: ( (lv_localFunction_0_0= ruleLocalFunction ) )
            // InternalAsmetaL.g:11330:4: (lv_localFunction_0_0= ruleLocalFunction )
            {
            // InternalAsmetaL.g:11330:4: (lv_localFunction_0_0= ruleLocalFunction )
            // InternalAsmetaL.g:11331:5: lv_localFunction_0_0= ruleLocalFunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionLocalFunctionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_115);
            lv_localFunction_0_0=ruleLocalFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
              					}
              					add(
              						current,
              						"localFunction",
              						lv_localFunction_0_0,
              						"org.asmeta.xt.AsmetaL.LocalFunction");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,119,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTurboLocalStateRuleAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalAsmetaL.g:11352:3: ( (lv_init_2_0= ruleRule ) )
            // InternalAsmetaL.g:11353:4: (lv_init_2_0= ruleRule )
            {
            // InternalAsmetaL.g:11353:4: (lv_init_2_0= ruleRule )
            // InternalAsmetaL.g:11354:5: lv_init_2_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getInitRuleParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_89);
            lv_init_2_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
              					}
              					add(
              						current,
              						"init",
              						lv_init_2_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,120,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTurboLocalStateRuleAccess().getRightSquareBracketKeyword_3());
              		
            }
            // InternalAsmetaL.g:11375:3: ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )*
            loop175:
            do {
                int alt175=2;
                alt175 = dfa175.predict(input);
                switch (alt175) {
            	case 1 :
            	    // InternalAsmetaL.g:11376:4: ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']'
            	    {
            	    // InternalAsmetaL.g:11376:4: ( (lv_localFunction_4_0= ruleLocalFunction ) )
            	    // InternalAsmetaL.g:11377:5: (lv_localFunction_4_0= ruleLocalFunction )
            	    {
            	    // InternalAsmetaL.g:11377:5: (lv_localFunction_4_0= ruleLocalFunction )
            	    // InternalAsmetaL.g:11378:6: lv_localFunction_4_0= ruleLocalFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionLocalFunctionParserRuleCall_4_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_115);
            	    lv_localFunction_4_0=ruleLocalFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"localFunction",
            	      							lv_localFunction_4_0,
            	      							"org.asmeta.xt.AsmetaL.LocalFunction");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_5=(Token)match(input,119,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getTurboLocalStateRuleAccess().getLeftSquareBracketKeyword_4_1());
            	      			
            	    }
            	    // InternalAsmetaL.g:11399:4: ( (lv_init_6_0= ruleRule ) )
            	    // InternalAsmetaL.g:11400:5: (lv_init_6_0= ruleRule )
            	    {
            	    // InternalAsmetaL.g:11400:5: (lv_init_6_0= ruleRule )
            	    // InternalAsmetaL.g:11401:6: lv_init_6_0= ruleRule
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getInitRuleParserRuleCall_4_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_init_6_0=ruleRule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"init",
            	      							lv_init_6_0,
            	      							"org.asmeta.xt.AsmetaL.Rule");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_7=(Token)match(input,120,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getTurboLocalStateRuleAccess().getRightSquareBracketKeyword_4_3());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);

            // InternalAsmetaL.g:11423:3: ( (lv_body_8_0= ruleRule ) )
            // InternalAsmetaL.g:11424:4: (lv_body_8_0= ruleRule )
            {
            // InternalAsmetaL.g:11424:4: (lv_body_8_0= ruleRule )
            // InternalAsmetaL.g:11425:5: lv_body_8_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getBodyRuleParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_8_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_8_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTurboLocalStateRule"


    // $ANTLR start "entryRuleDerivedRule"
    // InternalAsmetaL.g:11446:1: entryRuleDerivedRule returns [EObject current=null] : iv_ruleDerivedRule= ruleDerivedRule EOF ;
    public final EObject entryRuleDerivedRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDerivedRule = null;


        try {
            // InternalAsmetaL.g:11446:52: (iv_ruleDerivedRule= ruleDerivedRule EOF )
            // InternalAsmetaL.g:11447:2: iv_ruleDerivedRule= ruleDerivedRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDerivedRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDerivedRule=ruleDerivedRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDerivedRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDerivedRule"


    // $ANTLR start "ruleDerivedRule"
    // InternalAsmetaL.g:11453:1: ruleDerivedRule returns [EObject current=null] : (this_BasicDerivedRule_0= ruleBasicDerivedRule | this_TurboDerivedRule_1= ruleTurboDerivedRule ) ;
    public final EObject ruleDerivedRule() throws RecognitionException {
        EObject current = null;

        EObject this_BasicDerivedRule_0 = null;

        EObject this_TurboDerivedRule_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11459:2: ( (this_BasicDerivedRule_0= ruleBasicDerivedRule | this_TurboDerivedRule_1= ruleTurboDerivedRule ) )
            // InternalAsmetaL.g:11460:2: (this_BasicDerivedRule_0= ruleBasicDerivedRule | this_TurboDerivedRule_1= ruleTurboDerivedRule )
            {
            // InternalAsmetaL.g:11460:2: (this_BasicDerivedRule_0= ruleBasicDerivedRule | this_TurboDerivedRule_1= ruleTurboDerivedRule )
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==115) ) {
                alt176=1;
            }
            else if ( (LA176_0==96||LA176_0==142) ) {
                alt176=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 176, 0, input);

                throw nvae;
            }
            switch (alt176) {
                case 1 :
                    // InternalAsmetaL.g:11461:3: this_BasicDerivedRule_0= ruleBasicDerivedRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDerivedRuleAccess().getBasicDerivedRuleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BasicDerivedRule_0=ruleBasicDerivedRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BasicDerivedRule_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:11473:3: this_TurboDerivedRule_1= ruleTurboDerivedRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDerivedRuleAccess().getTurboDerivedRuleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TurboDerivedRule_1=ruleTurboDerivedRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TurboDerivedRule_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDerivedRule"


    // $ANTLR start "entryRuleBasicDerivedRule"
    // InternalAsmetaL.g:11488:1: entryRuleBasicDerivedRule returns [EObject current=null] : iv_ruleBasicDerivedRule= ruleBasicDerivedRule EOF ;
    public final EObject entryRuleBasicDerivedRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasicDerivedRule = null;


        try {
            // InternalAsmetaL.g:11488:57: (iv_ruleBasicDerivedRule= ruleBasicDerivedRule EOF )
            // InternalAsmetaL.g:11489:2: iv_ruleBasicDerivedRule= ruleBasicDerivedRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicDerivedRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicDerivedRule=ruleBasicDerivedRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicDerivedRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicDerivedRule"


    // $ANTLR start "ruleBasicDerivedRule"
    // InternalAsmetaL.g:11495:1: ruleBasicDerivedRule returns [EObject current=null] : this_CaseRule_0= ruleCaseRule ;
    public final EObject ruleBasicDerivedRule() throws RecognitionException {
        EObject current = null;

        EObject this_CaseRule_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11501:2: (this_CaseRule_0= ruleCaseRule )
            // InternalAsmetaL.g:11502:2: this_CaseRule_0= ruleCaseRule
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBasicDerivedRuleAccess().getCaseRuleParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_CaseRule_0=ruleCaseRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_CaseRule_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicDerivedRule"


    // $ANTLR start "entryRuleCaseRule"
    // InternalAsmetaL.g:11516:1: entryRuleCaseRule returns [EObject current=null] : iv_ruleCaseRule= ruleCaseRule EOF ;
    public final EObject entryRuleCaseRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseRule = null;


        try {
            // InternalAsmetaL.g:11516:49: (iv_ruleCaseRule= ruleCaseRule EOF )
            // InternalAsmetaL.g:11517:2: iv_ruleCaseRule= ruleCaseRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseRule=ruleCaseRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCaseRule"


    // $ANTLR start "ruleCaseRule"
    // InternalAsmetaL.g:11523:1: ruleCaseRule returns [EObject current=null] : (otherlv_0= 'switch' ( (lv_term_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) ) )? otherlv_8= 'endswitch' ) ;
    public final EObject ruleCaseRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_term_1_0 = null;

        EObject lv_caseTerm_3_0 = null;

        EObject lv_caseBranch_5_0 = null;

        EObject lv_otherwiseBranch_7_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11529:2: ( (otherlv_0= 'switch' ( (lv_term_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) ) )? otherlv_8= 'endswitch' ) )
            // InternalAsmetaL.g:11530:2: (otherlv_0= 'switch' ( (lv_term_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) ) )? otherlv_8= 'endswitch' )
            {
            // InternalAsmetaL.g:11530:2: (otherlv_0= 'switch' ( (lv_term_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) ) )? otherlv_8= 'endswitch' )
            // InternalAsmetaL.g:11531:3: otherlv_0= 'switch' ( (lv_term_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) ) )? otherlv_8= 'endswitch'
            {
            otherlv_0=(Token)match(input,115,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getCaseRuleAccess().getSwitchKeyword_0());
              		
            }
            // InternalAsmetaL.g:11535:3: ( (lv_term_1_0= ruleTerm ) )
            // InternalAsmetaL.g:11536:4: (lv_term_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:11536:4: (lv_term_1_0= ruleTerm )
            // InternalAsmetaL.g:11537:5: lv_term_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCaseRuleAccess().getTermTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_82);
            lv_term_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCaseRuleRule());
              					}
              					set(
              						current,
              						"term",
              						lv_term_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:11554:3: (otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) ) )+
            int cnt177=0;
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==116) ) {
                    alt177=1;
                }


                switch (alt177) {
            	case 1 :
            	    // InternalAsmetaL.g:11555:4: otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) )
            	    {
            	    otherlv_2=(Token)match(input,116,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getCaseRuleAccess().getCaseKeyword_2_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:11559:4: ( (lv_caseTerm_3_0= ruleTerm ) )
            	    // InternalAsmetaL.g:11560:5: (lv_caseTerm_3_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:11560:5: (lv_caseTerm_3_0= ruleTerm )
            	    // InternalAsmetaL.g:11561:6: lv_caseTerm_3_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCaseRuleAccess().getCaseTermTermParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_caseTerm_3_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCaseRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"caseTerm",
            	      							lv_caseTerm_3_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,36,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getCaseRuleAccess().getColonKeyword_2_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:11582:4: ( (lv_caseBranch_5_0= ruleRule ) )
            	    // InternalAsmetaL.g:11583:5: (lv_caseBranch_5_0= ruleRule )
            	    {
            	    // InternalAsmetaL.g:11583:5: (lv_caseBranch_5_0= ruleRule )
            	    // InternalAsmetaL.g:11584:6: lv_caseBranch_5_0= ruleRule
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCaseRuleAccess().getCaseBranchRuleParserRuleCall_2_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_caseBranch_5_0=ruleRule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCaseRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"caseBranch",
            	      							lv_caseBranch_5_0,
            	      							"org.asmeta.xt.AsmetaL.Rule");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt177 >= 1 ) break loop177;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(177, input);
                        throw eee;
                }
                cnt177++;
            } while (true);

            // InternalAsmetaL.g:11602:3: (otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) ) )?
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==117) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    // InternalAsmetaL.g:11603:4: otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) )
                    {
                    otherlv_6=(Token)match(input,117,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getCaseRuleAccess().getOtherwiseKeyword_3_0());
                      			
                    }
                    // InternalAsmetaL.g:11607:4: ( (lv_otherwiseBranch_7_0= ruleRule ) )
                    // InternalAsmetaL.g:11608:5: (lv_otherwiseBranch_7_0= ruleRule )
                    {
                    // InternalAsmetaL.g:11608:5: (lv_otherwiseBranch_7_0= ruleRule )
                    // InternalAsmetaL.g:11609:6: lv_otherwiseBranch_7_0= ruleRule
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCaseRuleAccess().getOtherwiseBranchRuleParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_84);
                    lv_otherwiseBranch_7_0=ruleRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCaseRuleRule());
                      						}
                      						set(
                      							current,
                      							"otherwiseBranch",
                      							lv_otherwiseBranch_7_0,
                      							"org.asmeta.xt.AsmetaL.Rule");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getCaseRuleAccess().getEndswitchKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCaseRule"


    // $ANTLR start "entryRuleTurboDerivedRule"
    // InternalAsmetaL.g:11635:1: entryRuleTurboDerivedRule returns [EObject current=null] : iv_ruleTurboDerivedRule= ruleTurboDerivedRule EOF ;
    public final EObject entryRuleTurboDerivedRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTurboDerivedRule = null;


        try {
            // InternalAsmetaL.g:11635:57: (iv_ruleTurboDerivedRule= ruleTurboDerivedRule EOF )
            // InternalAsmetaL.g:11636:2: iv_ruleTurboDerivedRule= ruleTurboDerivedRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTurboDerivedRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTurboDerivedRule=ruleTurboDerivedRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTurboDerivedRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTurboDerivedRule"


    // $ANTLR start "ruleTurboDerivedRule"
    // InternalAsmetaL.g:11642:1: ruleTurboDerivedRule returns [EObject current=null] : (this_RecursiveWhileRule_0= ruleRecursiveWhileRule | this_IterativeWhileRule_1= ruleIterativeWhileRule ) ;
    public final EObject ruleTurboDerivedRule() throws RecognitionException {
        EObject current = null;

        EObject this_RecursiveWhileRule_0 = null;

        EObject this_IterativeWhileRule_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11648:2: ( (this_RecursiveWhileRule_0= ruleRecursiveWhileRule | this_IterativeWhileRule_1= ruleIterativeWhileRule ) )
            // InternalAsmetaL.g:11649:2: (this_RecursiveWhileRule_0= ruleRecursiveWhileRule | this_IterativeWhileRule_1= ruleIterativeWhileRule )
            {
            // InternalAsmetaL.g:11649:2: (this_RecursiveWhileRule_0= ruleRecursiveWhileRule | this_IterativeWhileRule_1= ruleIterativeWhileRule )
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==142) ) {
                alt179=1;
            }
            else if ( (LA179_0==96) ) {
                alt179=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }
            switch (alt179) {
                case 1 :
                    // InternalAsmetaL.g:11650:3: this_RecursiveWhileRule_0= ruleRecursiveWhileRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTurboDerivedRuleAccess().getRecursiveWhileRuleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RecursiveWhileRule_0=ruleRecursiveWhileRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RecursiveWhileRule_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:11662:3: this_IterativeWhileRule_1= ruleIterativeWhileRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTurboDerivedRuleAccess().getIterativeWhileRuleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IterativeWhileRule_1=ruleIterativeWhileRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IterativeWhileRule_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTurboDerivedRule"


    // $ANTLR start "entryRuleRecursiveWhileRule"
    // InternalAsmetaL.g:11677:1: entryRuleRecursiveWhileRule returns [EObject current=null] : iv_ruleRecursiveWhileRule= ruleRecursiveWhileRule EOF ;
    public final EObject entryRuleRecursiveWhileRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecursiveWhileRule = null;


        try {
            // InternalAsmetaL.g:11677:59: (iv_ruleRecursiveWhileRule= ruleRecursiveWhileRule EOF )
            // InternalAsmetaL.g:11678:2: iv_ruleRecursiveWhileRule= ruleRecursiveWhileRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecursiveWhileRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRecursiveWhileRule=ruleRecursiveWhileRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRecursiveWhileRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRecursiveWhileRule"


    // $ANTLR start "ruleRecursiveWhileRule"
    // InternalAsmetaL.g:11684:1: ruleRecursiveWhileRule returns [EObject current=null] : (otherlv_0= 'whilerec' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) ) ;
    public final EObject ruleRecursiveWhileRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_guard_1_0 = null;

        EObject lv_rule_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11690:2: ( (otherlv_0= 'whilerec' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:11691:2: (otherlv_0= 'whilerec' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:11691:2: (otherlv_0= 'whilerec' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) )
            // InternalAsmetaL.g:11692:3: otherlv_0= 'whilerec' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) )
            {
            otherlv_0=(Token)match(input,142,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRecursiveWhileRuleAccess().getWhilerecKeyword_0());
              		
            }
            // InternalAsmetaL.g:11696:3: ( (lv_guard_1_0= ruleTerm ) )
            // InternalAsmetaL.g:11697:4: (lv_guard_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:11697:4: (lv_guard_1_0= ruleTerm )
            // InternalAsmetaL.g:11698:5: lv_guard_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRecursiveWhileRuleAccess().getGuardTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_112);
            lv_guard_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRecursiveWhileRuleRule());
              					}
              					set(
              						current,
              						"guard",
              						lv_guard_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,134,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRecursiveWhileRuleAccess().getDoKeyword_2());
              		
            }
            // InternalAsmetaL.g:11719:3: ( (lv_rule_3_0= ruleRule ) )
            // InternalAsmetaL.g:11720:4: (lv_rule_3_0= ruleRule )
            {
            // InternalAsmetaL.g:11720:4: (lv_rule_3_0= ruleRule )
            // InternalAsmetaL.g:11721:5: lv_rule_3_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRecursiveWhileRuleAccess().getRuleRuleParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_rule_3_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRecursiveWhileRuleRule());
              					}
              					set(
              						current,
              						"rule",
              						lv_rule_3_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRecursiveWhileRule"


    // $ANTLR start "entryRuleIterativeWhileRule"
    // InternalAsmetaL.g:11742:1: entryRuleIterativeWhileRule returns [EObject current=null] : iv_ruleIterativeWhileRule= ruleIterativeWhileRule EOF ;
    public final EObject entryRuleIterativeWhileRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIterativeWhileRule = null;


        try {
            // InternalAsmetaL.g:11742:59: (iv_ruleIterativeWhileRule= ruleIterativeWhileRule EOF )
            // InternalAsmetaL.g:11743:2: iv_ruleIterativeWhileRule= ruleIterativeWhileRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIterativeWhileRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIterativeWhileRule=ruleIterativeWhileRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIterativeWhileRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIterativeWhileRule"


    // $ANTLR start "ruleIterativeWhileRule"
    // InternalAsmetaL.g:11749:1: ruleIterativeWhileRule returns [EObject current=null] : (otherlv_0= 'while' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) ) ;
    public final EObject ruleIterativeWhileRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_guard_1_0 = null;

        EObject lv_rule_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11755:2: ( (otherlv_0= 'while' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:11756:2: (otherlv_0= 'while' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:11756:2: (otherlv_0= 'while' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) )
            // InternalAsmetaL.g:11757:3: otherlv_0= 'while' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) )
            {
            otherlv_0=(Token)match(input,96,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIterativeWhileRuleAccess().getWhileKeyword_0());
              		
            }
            // InternalAsmetaL.g:11761:3: ( (lv_guard_1_0= ruleTerm ) )
            // InternalAsmetaL.g:11762:4: (lv_guard_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:11762:4: (lv_guard_1_0= ruleTerm )
            // InternalAsmetaL.g:11763:5: lv_guard_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIterativeWhileRuleAccess().getGuardTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_112);
            lv_guard_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIterativeWhileRuleRule());
              					}
              					set(
              						current,
              						"guard",
              						lv_guard_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,134,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIterativeWhileRuleAccess().getDoKeyword_2());
              		
            }
            // InternalAsmetaL.g:11784:3: ( (lv_rule_3_0= ruleRule ) )
            // InternalAsmetaL.g:11785:4: (lv_rule_3_0= ruleRule )
            {
            // InternalAsmetaL.g:11785:4: (lv_rule_3_0= ruleRule )
            // InternalAsmetaL.g:11786:5: lv_rule_3_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIterativeWhileRuleAccess().getRuleRuleParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_rule_3_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIterativeWhileRuleRule());
              					}
              					set(
              						current,
              						"rule",
              						lv_rule_3_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIterativeWhileRule"


    // $ANTLR start "entryRulenameofDomain"
    // InternalAsmetaL.g:11807:1: entryRulenameofDomain returns [EObject current=null] : iv_rulenameofDomain= rulenameofDomain EOF ;
    public final EObject entryRulenameofDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_rulenameofDomain = null;


        try {
            // InternalAsmetaL.g:11807:53: (iv_rulenameofDomain= rulenameofDomain EOF )
            // InternalAsmetaL.g:11808:2: iv_rulenameofDomain= rulenameofDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameofDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulenameofDomain=rulenameofDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulenameofDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulenameofDomain"


    // $ANTLR start "rulenameofDomain"
    // InternalAsmetaL.g:11814:1: rulenameofDomain returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject rulenameofDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:11820:2: ( ( (lv_name_0_0= RULE_ID ) ) )
            // InternalAsmetaL.g:11821:2: ( (lv_name_0_0= RULE_ID ) )
            {
            // InternalAsmetaL.g:11821:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalAsmetaL.g:11822:3: (lv_name_0_0= RULE_ID )
            {
            // InternalAsmetaL.g:11822:3: (lv_name_0_0= RULE_ID )
            // InternalAsmetaL.g:11823:4: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getNameofDomainAccess().getNameIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNameofDomainRule());
              				}
              				setWithLastConsumed(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.asmeta.xt.AsmetaL.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulenameofDomain"


    // $ANTLR start "entryRuleMOD_ID"
    // InternalAsmetaL.g:11842:1: entryRuleMOD_ID returns [String current=null] : iv_ruleMOD_ID= ruleMOD_ID EOF ;
    public final String entryRuleMOD_ID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMOD_ID = null;


        try {
            // InternalAsmetaL.g:11842:46: (iv_ruleMOD_ID= ruleMOD_ID EOF )
            // InternalAsmetaL.g:11843:2: iv_ruleMOD_ID= ruleMOD_ID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMOD_IDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMOD_ID=ruleMOD_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMOD_ID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMOD_ID"


    // $ANTLR start "ruleMOD_ID"
    // InternalAsmetaL.g:11849:1: ruleMOD_ID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (this_MAIUSC_ID_0= RULE_MAIUSC_ID kw= ':' this_PATH_SEP_2= RULE_PATH_SEP ) | ( (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID ) | (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )* | (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )* ) )? ( (this_ENUM_ID_9= RULE_ENUM_ID | this_ID_10= RULE_ID ) this_PATH_SEP_11= RULE_PATH_SEP )* (this_ENUM_ID_12= RULE_ENUM_ID | this_ID_13= RULE_ID ) (kw= '.' (this_ENUM_ID_15= RULE_ENUM_ID | this_ID_16= RULE_ID | kw= 'asm' ) )? ) ;
    public final AntlrDatatypeRuleToken ruleMOD_ID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_MAIUSC_ID_0=null;
        Token kw=null;
        Token this_PATH_SEP_2=null;
        Token this_ENUM_ID_3=null;
        Token this_ID_4=null;
        Token this_PATH_SEP_6=null;
        Token this_PATH_SEP_8=null;
        Token this_ENUM_ID_9=null;
        Token this_ID_10=null;
        Token this_PATH_SEP_11=null;
        Token this_ENUM_ID_12=null;
        Token this_ID_13=null;
        Token this_ENUM_ID_15=null;
        Token this_ID_16=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:11855:2: ( ( ( (this_MAIUSC_ID_0= RULE_MAIUSC_ID kw= ':' this_PATH_SEP_2= RULE_PATH_SEP ) | ( (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID ) | (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )* | (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )* ) )? ( (this_ENUM_ID_9= RULE_ENUM_ID | this_ID_10= RULE_ID ) this_PATH_SEP_11= RULE_PATH_SEP )* (this_ENUM_ID_12= RULE_ENUM_ID | this_ID_13= RULE_ID ) (kw= '.' (this_ENUM_ID_15= RULE_ENUM_ID | this_ID_16= RULE_ID | kw= 'asm' ) )? ) )
            // InternalAsmetaL.g:11856:2: ( ( (this_MAIUSC_ID_0= RULE_MAIUSC_ID kw= ':' this_PATH_SEP_2= RULE_PATH_SEP ) | ( (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID ) | (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )* | (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )* ) )? ( (this_ENUM_ID_9= RULE_ENUM_ID | this_ID_10= RULE_ID ) this_PATH_SEP_11= RULE_PATH_SEP )* (this_ENUM_ID_12= RULE_ENUM_ID | this_ID_13= RULE_ID ) (kw= '.' (this_ENUM_ID_15= RULE_ENUM_ID | this_ID_16= RULE_ID | kw= 'asm' ) )? )
            {
            // InternalAsmetaL.g:11856:2: ( ( (this_MAIUSC_ID_0= RULE_MAIUSC_ID kw= ':' this_PATH_SEP_2= RULE_PATH_SEP ) | ( (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID ) | (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )* | (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )* ) )? ( (this_ENUM_ID_9= RULE_ENUM_ID | this_ID_10= RULE_ID ) this_PATH_SEP_11= RULE_PATH_SEP )* (this_ENUM_ID_12= RULE_ENUM_ID | this_ID_13= RULE_ID ) (kw= '.' (this_ENUM_ID_15= RULE_ENUM_ID | this_ID_16= RULE_ID | kw= 'asm' ) )? )
            // InternalAsmetaL.g:11857:3: ( (this_MAIUSC_ID_0= RULE_MAIUSC_ID kw= ':' this_PATH_SEP_2= RULE_PATH_SEP ) | ( (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID ) | (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )* | (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )* ) )? ( (this_ENUM_ID_9= RULE_ENUM_ID | this_ID_10= RULE_ID ) this_PATH_SEP_11= RULE_PATH_SEP )* (this_ENUM_ID_12= RULE_ENUM_ID | this_ID_13= RULE_ID ) (kw= '.' (this_ENUM_ID_15= RULE_ENUM_ID | this_ID_16= RULE_ID | kw= 'asm' ) )?
            {
            // InternalAsmetaL.g:11857:3: ( (this_MAIUSC_ID_0= RULE_MAIUSC_ID kw= ':' this_PATH_SEP_2= RULE_PATH_SEP ) | ( (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID ) | (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )* | (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )* ) )?
            int alt184=3;
            switch ( input.LA(1) ) {
                case RULE_MAIUSC_ID:
                    {
                    alt184=1;
                    }
                    break;
                case RULE_ENUM_ID:
                    {
                    int LA184_2 = input.LA(2);

                    if ( (synpred278_InternalAsmetaL()) ) {
                        alt184=2;
                    }
                    }
                    break;
                case RULE_ID:
                    {
                    int LA184_3 = input.LA(2);

                    if ( (synpred278_InternalAsmetaL()) ) {
                        alt184=2;
                    }
                    }
                    break;
                case 107:
                case 143:
                    {
                    alt184=2;
                    }
                    break;
            }

            switch (alt184) {
                case 1 :
                    // InternalAsmetaL.g:11858:4: (this_MAIUSC_ID_0= RULE_MAIUSC_ID kw= ':' this_PATH_SEP_2= RULE_PATH_SEP )
                    {
                    // InternalAsmetaL.g:11858:4: (this_MAIUSC_ID_0= RULE_MAIUSC_ID kw= ':' this_PATH_SEP_2= RULE_PATH_SEP )
                    // InternalAsmetaL.g:11859:5: this_MAIUSC_ID_0= RULE_MAIUSC_ID kw= ':' this_PATH_SEP_2= RULE_PATH_SEP
                    {
                    this_MAIUSC_ID_0=(Token)match(input,RULE_MAIUSC_ID,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current.merge(this_MAIUSC_ID_0);
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newLeafNode(this_MAIUSC_ID_0, grammarAccess.getMOD_IDAccess().getMAIUSC_IDTerminalRuleCall_0_0_0());
                      				
                    }
                    kw=(Token)match(input,36,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current.merge(kw);
                      					newLeafNode(kw, grammarAccess.getMOD_IDAccess().getColonKeyword_0_0_1());
                      				
                    }
                    this_PATH_SEP_2=(Token)match(input,RULE_PATH_SEP,FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					current.merge(this_PATH_SEP_2);
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					newLeafNode(this_PATH_SEP_2, grammarAccess.getMOD_IDAccess().getPATH_SEPTerminalRuleCall_0_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:11880:4: ( (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID ) | (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )* | (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )* )
                    {
                    // InternalAsmetaL.g:11880:4: ( (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID ) | (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )* | (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )* )
                    int alt183=3;
                    switch ( input.LA(1) ) {
                    case RULE_ENUM_ID:
                        {
                        int LA183_1 = input.LA(2);

                        if ( (LA183_1==RULE_ID||LA183_1==RULE_ENUM_ID) ) {
                            alt183=1;
                        }
                        else if ( (synpred276_InternalAsmetaL()) ) {
                            alt183=2;
                        }
                        else if ( (true) ) {
                            alt183=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 183, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_ID:
                        {
                        int LA183_2 = input.LA(2);

                        if ( (LA183_2==RULE_ID||LA183_2==RULE_ENUM_ID) ) {
                            alt183=1;
                        }
                        else if ( (synpred276_InternalAsmetaL()) ) {
                            alt183=2;
                        }
                        else if ( (true) ) {
                            alt183=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 183, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 143:
                        {
                        alt183=2;
                        }
                        break;
                    case 107:
                        {
                        alt183=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 183, 0, input);

                        throw nvae;
                    }

                    switch (alt183) {
                        case 1 :
                            // InternalAsmetaL.g:11881:5: (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID )
                            {
                            // InternalAsmetaL.g:11881:5: (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID )
                            int alt180=2;
                            int LA180_0 = input.LA(1);

                            if ( (LA180_0==RULE_ENUM_ID) ) {
                                alt180=1;
                            }
                            else if ( (LA180_0==RULE_ID) ) {
                                alt180=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 180, 0, input);

                                throw nvae;
                            }
                            switch (alt180) {
                                case 1 :
                                    // InternalAsmetaL.g:11882:6: this_ENUM_ID_3= RULE_ENUM_ID
                                    {
                                    this_ENUM_ID_3=(Token)match(input,RULE_ENUM_ID,FOLLOW_123); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_ENUM_ID_3);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_ENUM_ID_3, grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_0_1_0_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalAsmetaL.g:11890:6: this_ID_4= RULE_ID
                                    {
                                    this_ID_4=(Token)match(input,RULE_ID,FOLLOW_123); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(this_ID_4);
                                      					
                                    }
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(this_ID_4, grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_0_1_0_1());
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:11899:5: (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )*
                            {
                            // InternalAsmetaL.g:11899:5: (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )*
                            loop181:
                            do {
                                int alt181=2;
                                int LA181_0 = input.LA(1);

                                if ( (LA181_0==143) ) {
                                    alt181=1;
                                }


                                switch (alt181) {
                            	case 1 :
                            	    // InternalAsmetaL.g:11900:6: kw= '..' this_PATH_SEP_6= RULE_PATH_SEP
                            	    {
                            	    kw=(Token)match(input,143,FOLLOW_122); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						current.merge(kw);
                            	      						newLeafNode(kw, grammarAccess.getMOD_IDAccess().getFullStopFullStopKeyword_0_1_1_0());
                            	      					
                            	    }
                            	    this_PATH_SEP_6=(Token)match(input,RULE_PATH_SEP,FOLLOW_124); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						current.merge(this_PATH_SEP_6);
                            	      					
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(this_PATH_SEP_6, grammarAccess.getMOD_IDAccess().getPATH_SEPTerminalRuleCall_0_1_1_1());
                            	      					
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop181;
                                }
                            } while (true);


                            }
                            break;
                        case 3 :
                            // InternalAsmetaL.g:11914:5: (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )*
                            {
                            // InternalAsmetaL.g:11914:5: (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )*
                            loop182:
                            do {
                                int alt182=2;
                                int LA182_0 = input.LA(1);

                                if ( (LA182_0==107) ) {
                                    alt182=1;
                                }


                                switch (alt182) {
                            	case 1 :
                            	    // InternalAsmetaL.g:11915:6: kw= '.' this_PATH_SEP_8= RULE_PATH_SEP
                            	    {
                            	    kw=(Token)match(input,107,FOLLOW_122); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						current.merge(kw);
                            	      						newLeafNode(kw, grammarAccess.getMOD_IDAccess().getFullStopKeyword_0_1_2_0());
                            	      					
                            	    }
                            	    this_PATH_SEP_8=(Token)match(input,RULE_PATH_SEP,FOLLOW_125); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						current.merge(this_PATH_SEP_8);
                            	      					
                            	    }
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(this_PATH_SEP_8, grammarAccess.getMOD_IDAccess().getPATH_SEPTerminalRuleCall_0_1_2_1());
                            	      					
                            	    }

                            	    }
                            	    break;

                            	default :
                            	    break loop182;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalAsmetaL.g:11930:3: ( (this_ENUM_ID_9= RULE_ENUM_ID | this_ID_10= RULE_ID ) this_PATH_SEP_11= RULE_PATH_SEP )*
            loop186:
            do {
                int alt186=2;
                int LA186_0 = input.LA(1);

                if ( (LA186_0==RULE_ENUM_ID) ) {
                    int LA186_1 = input.LA(2);

                    if ( (LA186_1==RULE_PATH_SEP) ) {
                        alt186=1;
                    }


                }
                else if ( (LA186_0==RULE_ID) ) {
                    int LA186_2 = input.LA(2);

                    if ( (LA186_2==RULE_PATH_SEP) ) {
                        alt186=1;
                    }


                }


                switch (alt186) {
            	case 1 :
            	    // InternalAsmetaL.g:11931:4: (this_ENUM_ID_9= RULE_ENUM_ID | this_ID_10= RULE_ID ) this_PATH_SEP_11= RULE_PATH_SEP
            	    {
            	    // InternalAsmetaL.g:11931:4: (this_ENUM_ID_9= RULE_ENUM_ID | this_ID_10= RULE_ID )
            	    int alt185=2;
            	    int LA185_0 = input.LA(1);

            	    if ( (LA185_0==RULE_ENUM_ID) ) {
            	        alt185=1;
            	    }
            	    else if ( (LA185_0==RULE_ID) ) {
            	        alt185=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 185, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt185) {
            	        case 1 :
            	            // InternalAsmetaL.g:11932:5: this_ENUM_ID_9= RULE_ENUM_ID
            	            {
            	            this_ENUM_ID_9=(Token)match(input,RULE_ENUM_ID,FOLLOW_122); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_ENUM_ID_9);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_ENUM_ID_9, grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:11940:5: this_ID_10= RULE_ID
            	            {
            	            this_ID_10=(Token)match(input,RULE_ID,FOLLOW_122); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_ID_10);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_ID_10, grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    this_PATH_SEP_11=(Token)match(input,RULE_PATH_SEP,FOLLOW_123); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_PATH_SEP_11);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_PATH_SEP_11, grammarAccess.getMOD_IDAccess().getPATH_SEPTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);

            // InternalAsmetaL.g:11956:3: (this_ENUM_ID_12= RULE_ENUM_ID | this_ID_13= RULE_ID )
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==RULE_ENUM_ID) ) {
                alt187=1;
            }
            else if ( (LA187_0==RULE_ID) ) {
                alt187=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 187, 0, input);

                throw nvae;
            }
            switch (alt187) {
                case 1 :
                    // InternalAsmetaL.g:11957:4: this_ENUM_ID_12= RULE_ENUM_ID
                    {
                    this_ENUM_ID_12=(Token)match(input,RULE_ENUM_ID,FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_ENUM_ID_12);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ENUM_ID_12, grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:11965:4: this_ID_13= RULE_ID
                    {
                    this_ID_13=(Token)match(input,RULE_ID,FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_ID_13);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ID_13, grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:11973:3: (kw= '.' (this_ENUM_ID_15= RULE_ENUM_ID | this_ID_16= RULE_ID | kw= 'asm' ) )?
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==107) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    // InternalAsmetaL.g:11974:4: kw= '.' (this_ENUM_ID_15= RULE_ENUM_ID | this_ID_16= RULE_ID | kw= 'asm' )
                    {
                    kw=(Token)match(input,107,FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getMOD_IDAccess().getFullStopKeyword_3_0());
                      			
                    }
                    // InternalAsmetaL.g:11979:4: (this_ENUM_ID_15= RULE_ENUM_ID | this_ID_16= RULE_ID | kw= 'asm' )
                    int alt188=3;
                    switch ( input.LA(1) ) {
                    case RULE_ENUM_ID:
                        {
                        alt188=1;
                        }
                        break;
                    case RULE_ID:
                        {
                        alt188=2;
                        }
                        break;
                    case 25:
                        {
                        alt188=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 188, 0, input);

                        throw nvae;
                    }

                    switch (alt188) {
                        case 1 :
                            // InternalAsmetaL.g:11980:5: this_ENUM_ID_15= RULE_ENUM_ID
                            {
                            this_ENUM_ID_15=(Token)match(input,RULE_ENUM_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_ENUM_ID_15);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_ENUM_ID_15, grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:11988:5: this_ID_16= RULE_ID
                            {
                            this_ID_16=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_ID_16);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_ID_16, grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_3_1_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalAsmetaL.g:11996:5: kw= 'asm'
                            {
                            kw=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getMOD_IDAccess().getAsmKeyword_3_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMOD_ID"


    // $ANTLR start "entryRuleID_VARIABLE"
    // InternalAsmetaL.g:12007:1: entryRuleID_VARIABLE returns [String current=null] : iv_ruleID_VARIABLE= ruleID_VARIABLE EOF ;
    public final String entryRuleID_VARIABLE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleID_VARIABLE = null;


        try {
            // InternalAsmetaL.g:12007:51: (iv_ruleID_VARIABLE= ruleID_VARIABLE EOF )
            // InternalAsmetaL.g:12008:2: iv_ruleID_VARIABLE= ruleID_VARIABLE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getID_VARIABLERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleID_VARIABLE=ruleID_VARIABLE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleID_VARIABLE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleID_VARIABLE"


    // $ANTLR start "ruleID_VARIABLE"
    // InternalAsmetaL.g:12014:1: ruleID_VARIABLE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '$' (this_ID_1= RULE_ID | kw= 'rule' | kw= 'agent' | kw= 'seq' ) ) ;
    public final AntlrDatatypeRuleToken ruleID_VARIABLE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:12020:2: ( (kw= '$' (this_ID_1= RULE_ID | kw= 'rule' | kw= 'agent' | kw= 'seq' ) ) )
            // InternalAsmetaL.g:12021:2: (kw= '$' (this_ID_1= RULE_ID | kw= 'rule' | kw= 'agent' | kw= 'seq' ) )
            {
            // InternalAsmetaL.g:12021:2: (kw= '$' (this_ID_1= RULE_ID | kw= 'rule' | kw= 'agent' | kw= 'seq' ) )
            // InternalAsmetaL.g:12022:3: kw= '$' (this_ID_1= RULE_ID | kw= 'rule' | kw= 'agent' | kw= 'seq' )
            {
            kw=(Token)match(input,144,FOLLOW_128); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getID_VARIABLEAccess().getDollarSignKeyword_0());
              		
            }
            // InternalAsmetaL.g:12027:3: (this_ID_1= RULE_ID | kw= 'rule' | kw= 'agent' | kw= 'seq' )
            int alt190=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt190=1;
                }
                break;
            case 46:
                {
                alt190=2;
                }
                break;
            case 42:
                {
                alt190=3;
                }
                break;
            case 137:
                {
                alt190=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 190, 0, input);

                throw nvae;
            }

            switch (alt190) {
                case 1 :
                    // InternalAsmetaL.g:12028:4: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ID_1, grammarAccess.getID_VARIABLEAccess().getIDTerminalRuleCall_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:12036:4: kw= 'rule'
                    {
                    kw=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getID_VARIABLEAccess().getRuleKeyword_1_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:12042:4: kw= 'agent'
                    {
                    kw=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getID_VARIABLEAccess().getAgentKeyword_1_2());
                      			
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:12048:4: kw= 'seq'
                    {
                    kw=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getID_VARIABLEAccess().getSeqKeyword_1_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleID_VARIABLE"

    // $ANTLR start synpred87_InternalAsmetaL
    public final void synpred87_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_domain_3_0 = null;


        // InternalAsmetaL.g:4286:4: ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )
        // InternalAsmetaL.g:4286:4: ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->'
        {
        // InternalAsmetaL.g:4286:4: ( (lv_domain_3_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4287:5: (lv_domain_3_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4287:5: (lv_domain_3_0= rulegetDomainByID )
        // InternalAsmetaL.g:4288:6: lv_domain_3_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDerivedFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_3_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,82,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_InternalAsmetaL

    // $ANTLR start synpred88_InternalAsmetaL
    public final void synpred88_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_domain_3_0 = null;


        // InternalAsmetaL.g:4376:4: ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )
        // InternalAsmetaL.g:4376:4: ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->'
        {
        // InternalAsmetaL.g:4376:4: ( (lv_domain_3_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4377:5: (lv_domain_3_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4377:5: (lv_domain_3_0= rulegetDomainByID )
        // InternalAsmetaL.g:4378:6: lv_domain_3_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStaticFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_3_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,82,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred88_InternalAsmetaL

    // $ANTLR start synpred94_InternalAsmetaL
    public final void synpred94_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_domain_4_0 = null;


        // InternalAsmetaL.g:4558:4: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )
        // InternalAsmetaL.g:4558:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
        {
        // InternalAsmetaL.g:4558:4: ( (lv_domain_4_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4559:5: (lv_domain_4_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4559:5: (lv_domain_4_0= rulegetDomainByID )
        // InternalAsmetaL.g:4560:6: lv_domain_4_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLocalFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_4_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,82,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred94_InternalAsmetaL

    // $ANTLR start synpred96_InternalAsmetaL
    public final void synpred96_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_domain_4_0 = null;


        // InternalAsmetaL.g:4662:4: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )
        // InternalAsmetaL.g:4662:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
        {
        // InternalAsmetaL.g:4662:4: ( (lv_domain_4_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4663:5: (lv_domain_4_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4663:5: (lv_domain_4_0= rulegetDomainByID )
        // InternalAsmetaL.g:4664:6: lv_domain_4_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getControlledFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_4_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,82,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred96_InternalAsmetaL

    // $ANTLR start synpred98_InternalAsmetaL
    public final void synpred98_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_domain_4_0 = null;


        // InternalAsmetaL.g:4766:4: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )
        // InternalAsmetaL.g:4766:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
        {
        // InternalAsmetaL.g:4766:4: ( (lv_domain_4_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4767:5: (lv_domain_4_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4767:5: (lv_domain_4_0= rulegetDomainByID )
        // InternalAsmetaL.g:4768:6: lv_domain_4_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSharedFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_4_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,82,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred98_InternalAsmetaL

    // $ANTLR start synpred100_InternalAsmetaL
    public final void synpred100_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_domain_4_0 = null;


        // InternalAsmetaL.g:4870:4: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )
        // InternalAsmetaL.g:4870:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
        {
        // InternalAsmetaL.g:4870:4: ( (lv_domain_4_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4871:5: (lv_domain_4_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4871:5: (lv_domain_4_0= rulegetDomainByID )
        // InternalAsmetaL.g:4872:6: lv_domain_4_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMonitoredFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_4_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,82,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred100_InternalAsmetaL

    // $ANTLR start synpred102_InternalAsmetaL
    public final void synpred102_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_domain_4_0 = null;


        // InternalAsmetaL.g:4974:4: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )
        // InternalAsmetaL.g:4974:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
        {
        // InternalAsmetaL.g:4974:4: ( (lv_domain_4_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4975:5: (lv_domain_4_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4975:5: (lv_domain_4_0= rulegetDomainByID )
        // InternalAsmetaL.g:4976:6: lv_domain_4_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getOutFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_4_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,82,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred102_InternalAsmetaL

    // $ANTLR start synpred116_InternalAsmetaL
    public final void synpred116_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_Expression_0 = null;


        // InternalAsmetaL.g:5198:3: (this_Expression_0= ruleExpression )
        // InternalAsmetaL.g:5198:3: this_Expression_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_Expression_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred116_InternalAsmetaL

    // $ANTLR start synpred117_InternalAsmetaL
    public final void synpred117_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_DomainTerm_1 = null;


        // InternalAsmetaL.g:5210:3: (this_DomainTerm_1= ruleDomainTerm )
        // InternalAsmetaL.g:5210:3: this_DomainTerm_1= ruleDomainTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_DomainTerm_1=ruleDomainTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred117_InternalAsmetaL

    // $ANTLR start synpred121_InternalAsmetaL
    public final void synpred121_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject lv_right_3_0 = null;


        // InternalAsmetaL.g:5320:4: ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )
        // InternalAsmetaL.g:5320:4: ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) )
        {
        // InternalAsmetaL.g:5320:4: ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) )
        // InternalAsmetaL.g:5321:5: ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) )
        {
        // InternalAsmetaL.g:5335:5: ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) )
        // InternalAsmetaL.g:5336:6: () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) )
        {
        // InternalAsmetaL.g:5336:6: ()
        // InternalAsmetaL.g:5337:7: 
        {
        if ( state.backtracking==0 ) {

          							/* */
          						
        }

        }

        // InternalAsmetaL.g:5346:6: ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) )
        // InternalAsmetaL.g:5347:7: ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) )
        {
        // InternalAsmetaL.g:5347:7: ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) )
        // InternalAsmetaL.g:5348:8: (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' )
        {
        // InternalAsmetaL.g:5348:8: (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' )
        int alt209=2;
        int LA209_0 = input.LA(1);

        if ( (LA209_0==95) ) {
            alt209=1;
        }
        else if ( (LA209_0==94) ) {
            alt209=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 209, 0, input);

            throw nvae;
        }
        switch (alt209) {
            case 1 :
                // InternalAsmetaL.g:5349:9: lv_op_2_1= 'implies'
                {
                lv_op_2_1=(Token)match(input,95,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalAsmetaL.g:5360:9: lv_op_2_2= 'iff'
                {
                lv_op_2_2=(Token)match(input,94,FOLLOW_68); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }

        // InternalAsmetaL.g:5375:4: ( (lv_right_3_0= ruleXorOrExpression ) )
        // InternalAsmetaL.g:5376:5: (lv_right_3_0= ruleXorOrExpression )
        {
        // InternalAsmetaL.g:5376:5: (lv_right_3_0= ruleXorOrExpression )
        // InternalAsmetaL.g:5377:6: lv_right_3_0= ruleXorOrExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getImpliesIffExpressionAccess().getRightXorOrExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_right_3_0=ruleXorOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred121_InternalAsmetaL

    // $ANTLR start synpred125_InternalAsmetaL
    public final void synpred125_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject lv_right_3_0 = null;


        // InternalAsmetaL.g:5426:4: ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )
        // InternalAsmetaL.g:5426:4: ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) )
        {
        // InternalAsmetaL.g:5426:4: ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) )
        // InternalAsmetaL.g:5427:5: ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) )
        {
        // InternalAsmetaL.g:5441:5: ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) )
        // InternalAsmetaL.g:5442:6: () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) )
        {
        // InternalAsmetaL.g:5442:6: ()
        // InternalAsmetaL.g:5443:7: 
        {
        if ( state.backtracking==0 ) {

          							/* */
          						
        }

        }

        // InternalAsmetaL.g:5452:6: ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) )
        // InternalAsmetaL.g:5453:7: ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) )
        {
        // InternalAsmetaL.g:5453:7: ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) )
        // InternalAsmetaL.g:5454:8: (lv_op_2_1= 'xor' | lv_op_2_2= 'or' )
        {
        // InternalAsmetaL.g:5454:8: (lv_op_2_1= 'xor' | lv_op_2_2= 'or' )
        int alt210=2;
        int LA210_0 = input.LA(1);

        if ( (LA210_0==92) ) {
            alt210=1;
        }
        else if ( (LA210_0==90) ) {
            alt210=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 210, 0, input);

            throw nvae;
        }
        switch (alt210) {
            case 1 :
                // InternalAsmetaL.g:5455:9: lv_op_2_1= 'xor'
                {
                lv_op_2_1=(Token)match(input,92,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalAsmetaL.g:5466:9: lv_op_2_2= 'or'
                {
                lv_op_2_2=(Token)match(input,90,FOLLOW_68); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }

        // InternalAsmetaL.g:5481:4: ( (lv_right_3_0= ruleAndExpression ) )
        // InternalAsmetaL.g:5482:5: (lv_right_3_0= ruleAndExpression )
        {
        // InternalAsmetaL.g:5482:5: (lv_right_3_0= ruleAndExpression )
        // InternalAsmetaL.g:5483:6: lv_right_3_0= ruleAndExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getXorOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_right_3_0=ruleAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred125_InternalAsmetaL

    // $ANTLR start synpred127_InternalAsmetaL
    public final void synpred127_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_op_2_0=null;
        EObject lv_right_3_0 = null;


        // InternalAsmetaL.g:5532:4: ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )
        // InternalAsmetaL.g:5532:4: ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) )
        {
        // InternalAsmetaL.g:5532:4: ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) )
        // InternalAsmetaL.g:5533:5: ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) )
        {
        // InternalAsmetaL.g:5543:5: ( () ( (lv_op_2_0= 'and' ) ) )
        // InternalAsmetaL.g:5544:6: () ( (lv_op_2_0= 'and' ) )
        {
        // InternalAsmetaL.g:5544:6: ()
        // InternalAsmetaL.g:5545:7: 
        {
        if ( state.backtracking==0 ) {

          							/* */
          						
        }

        }

        // InternalAsmetaL.g:5554:6: ( (lv_op_2_0= 'and' ) )
        // InternalAsmetaL.g:5555:7: (lv_op_2_0= 'and' )
        {
        // InternalAsmetaL.g:5555:7: (lv_op_2_0= 'and' )
        // InternalAsmetaL.g:5556:8: lv_op_2_0= 'and'
        {
        lv_op_2_0=(Token)match(input,89,FOLLOW_68); if (state.failed) return ;

        }


        }


        }


        }

        // InternalAsmetaL.g:5570:4: ( (lv_right_3_0= ruleEqualityExpression ) )
        // InternalAsmetaL.g:5571:5: (lv_right_3_0= ruleEqualityExpression )
        {
        // InternalAsmetaL.g:5571:5: (lv_right_3_0= ruleEqualityExpression )
        // InternalAsmetaL.g:5572:6: lv_right_3_0= ruleEqualityExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_right_3_0=ruleEqualityExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred127_InternalAsmetaL

    // $ANTLR start synpred139_InternalAsmetaL
    public final void synpred139_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject lv_right_3_0 = null;


        // InternalAsmetaL.g:5727:4: ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )
        // InternalAsmetaL.g:5727:4: ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) )
        {
        // InternalAsmetaL.g:5727:4: ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) )
        // InternalAsmetaL.g:5728:5: ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) )
        {
        // InternalAsmetaL.g:5746:5: ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) )
        // InternalAsmetaL.g:5747:6: () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) )
        {
        // InternalAsmetaL.g:5747:6: ()
        // InternalAsmetaL.g:5748:7: 
        {
        if ( state.backtracking==0 ) {

          							/* */
          						
        }

        }

        // InternalAsmetaL.g:5757:6: ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) )
        // InternalAsmetaL.g:5758:7: ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) )
        {
        // InternalAsmetaL.g:5758:7: ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) )
        // InternalAsmetaL.g:5759:8: (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' )
        {
        // InternalAsmetaL.g:5759:8: (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' )
        int alt212=4;
        switch ( input.LA(1) ) {
        case 99:
            {
            alt212=1;
            }
            break;
        case 100:
            {
            alt212=2;
            }
            break;
        case 101:
            {
            alt212=3;
            }
            break;
        case 102:
            {
            alt212=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 212, 0, input);

            throw nvae;
        }

        switch (alt212) {
            case 1 :
                // InternalAsmetaL.g:5760:9: lv_op_2_1= '>'
                {
                lv_op_2_1=(Token)match(input,99,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalAsmetaL.g:5771:9: lv_op_2_2= '<'
                {
                lv_op_2_2=(Token)match(input,100,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalAsmetaL.g:5782:9: lv_op_2_3= '>='
                {
                lv_op_2_3=(Token)match(input,101,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 4 :
                // InternalAsmetaL.g:5793:9: lv_op_2_4= '<='
                {
                lv_op_2_4=(Token)match(input,102,FOLLOW_68); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }

        // InternalAsmetaL.g:5808:4: ( (lv_right_3_0= ruleAdditiveExpression ) )
        // InternalAsmetaL.g:5809:5: (lv_right_3_0= ruleAdditiveExpression )
        {
        // InternalAsmetaL.g:5809:5: (lv_right_3_0= ruleAdditiveExpression )
        // InternalAsmetaL.g:5810:6: lv_right_3_0= ruleAdditiveExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getCompareExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_right_3_0=ruleAdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred139_InternalAsmetaL

    // $ANTLR start synpred149_InternalAsmetaL
    public final void synpred149_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        EObject lv_right_3_0 = null;


        // InternalAsmetaL.g:5965:4: ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )
        // InternalAsmetaL.g:5965:4: ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) )
        {
        // InternalAsmetaL.g:5965:4: ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) )
        // InternalAsmetaL.g:5966:5: ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) )
        {
        // InternalAsmetaL.g:5982:5: ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) )
        // InternalAsmetaL.g:5983:6: () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) )
        {
        // InternalAsmetaL.g:5983:6: ()
        // InternalAsmetaL.g:5984:7: 
        {
        if ( state.backtracking==0 ) {

          							/* */
          						
        }

        }

        // InternalAsmetaL.g:5993:6: ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) )
        // InternalAsmetaL.g:5994:7: ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) )
        {
        // InternalAsmetaL.g:5994:7: ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) )
        // InternalAsmetaL.g:5995:8: (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' )
        {
        // InternalAsmetaL.g:5995:8: (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' )
        int alt214=3;
        switch ( input.LA(1) ) {
        case 34:
            {
            alt214=1;
            }
            break;
        case 105:
            {
            alt214=2;
            }
            break;
        case 93:
            {
            alt214=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 214, 0, input);

            throw nvae;
        }

        switch (alt214) {
            case 1 :
                // InternalAsmetaL.g:5996:9: lv_op_2_1= '*'
                {
                lv_op_2_1=(Token)match(input,34,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalAsmetaL.g:6007:9: lv_op_2_2= '/'
                {
                lv_op_2_2=(Token)match(input,105,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalAsmetaL.g:6018:9: lv_op_2_3= 'mod'
                {
                lv_op_2_3=(Token)match(input,93,FOLLOW_68); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }

        // InternalAsmetaL.g:6033:4: ( (lv_right_3_0= rulePowerExpression ) )
        // InternalAsmetaL.g:6034:5: (lv_right_3_0= rulePowerExpression )
        {
        // InternalAsmetaL.g:6034:5: (lv_right_3_0= rulePowerExpression )
        // InternalAsmetaL.g:6035:6: lv_right_3_0= rulePowerExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightPowerExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_right_3_0=rulePowerExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred149_InternalAsmetaL

    // $ANTLR start synpred154_InternalAsmetaL
    public final void synpred154_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_op_0_1=null;
        Token lv_op_0_2=null;
        Token lv_op_0_3=null;
        EObject lv_operand_1_0 = null;


        // InternalAsmetaL.g:6161:3: ( ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) ) )
        // InternalAsmetaL.g:6161:3: ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) )
        {
        // InternalAsmetaL.g:6161:3: ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) )
        // InternalAsmetaL.g:6162:4: ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) )
        {
        // InternalAsmetaL.g:6162:4: ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) )
        // InternalAsmetaL.g:6163:5: ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) )
        {
        // InternalAsmetaL.g:6163:5: ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) )
        // InternalAsmetaL.g:6164:6: (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' )
        {
        // InternalAsmetaL.g:6164:6: (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' )
        int alt215=3;
        switch ( input.LA(1) ) {
        case 91:
            {
            alt215=1;
            }
            break;
        case 103:
            {
            alt215=2;
            }
            break;
        case 104:
            {
            alt215=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 215, 0, input);

            throw nvae;
        }

        switch (alt215) {
            case 1 :
                // InternalAsmetaL.g:6165:7: lv_op_0_1= 'not'
                {
                lv_op_0_1=(Token)match(input,91,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalAsmetaL.g:6176:7: lv_op_0_2= '+'
                {
                lv_op_0_2=(Token)match(input,103,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalAsmetaL.g:6187:7: lv_op_0_3= '-'
                {
                lv_op_0_3=(Token)match(input,104,FOLLOW_68); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalAsmetaL.g:6200:4: ( (lv_operand_1_0= ruleUnaryOperation ) )
        // InternalAsmetaL.g:6201:5: (lv_operand_1_0= ruleUnaryOperation )
        {
        // InternalAsmetaL.g:6201:5: (lv_operand_1_0= ruleUnaryOperation )
        // InternalAsmetaL.g:6202:6: lv_operand_1_0= ruleUnaryOperation
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getUnaryOperationAccess().getOperandUnaryOperationParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operand_1_0=ruleUnaryOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred154_InternalAsmetaL

    // $ANTLR start synpred155_InternalAsmetaL
    public final void synpred155_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_basicExpr_2 = null;


        // InternalAsmetaL.g:6221:3: (this_basicExpr_2= rulebasicExpr )
        // InternalAsmetaL.g:6221:3: this_basicExpr_2= rulebasicExpr
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_basicExpr_2=rulebasicExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred155_InternalAsmetaL

    // $ANTLR start synpred157_InternalAsmetaL
    public final void synpred157_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_FunctionTerm_0 = null;


        // InternalAsmetaL.g:6343:3: (this_FunctionTerm_0= ruleFunctionTerm )
        // InternalAsmetaL.g:6343:3: this_FunctionTerm_0= ruleFunctionTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_FunctionTerm_0=ruleFunctionTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred157_InternalAsmetaL

    // $ANTLR start synpred173_InternalAsmetaL
    public final void synpred173_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_symbol_0_1=null;

        // InternalAsmetaL.g:7053:5: (lv_symbol_0_1= RULE_NUMBER_TOKEN )
        // InternalAsmetaL.g:7053:5: lv_symbol_0_1= RULE_NUMBER_TOKEN
        {
        lv_symbol_0_1=(Token)match(input,RULE_NUMBER_TOKEN,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred173_InternalAsmetaL

    // $ANTLR start synpred180_InternalAsmetaL
    public final void synpred180_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_TupleTerm_2 = null;


        // InternalAsmetaL.g:7206:3: (this_TupleTerm_2= ruleTupleTerm )
        // InternalAsmetaL.g:7206:3: this_TupleTerm_2= ruleTupleTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_TupleTerm_2=ruleTupleTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred180_InternalAsmetaL

    // $ANTLR start synpred181_InternalAsmetaL
    public final void synpred181_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_VariableBindingTerm_3 = null;


        // InternalAsmetaL.g:7218:3: (this_VariableBindingTerm_3= ruleVariableBindingTerm )
        // InternalAsmetaL.g:7218:3: this_VariableBindingTerm_3= ruleVariableBindingTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_VariableBindingTerm_3=ruleVariableBindingTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred181_InternalAsmetaL

    // $ANTLR start synpred182_InternalAsmetaL
    public final void synpred182_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_CollectionTerm_4 = null;


        // InternalAsmetaL.g:7230:3: (this_CollectionTerm_4= ruleCollectionTerm )
        // InternalAsmetaL.g:7230:3: this_CollectionTerm_4= ruleCollectionTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_CollectionTerm_4=ruleCollectionTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred182_InternalAsmetaL

    // $ANTLR start synpred188_InternalAsmetaL
    public final void synpred188_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_MapTerm_1 = null;


        // InternalAsmetaL.g:7568:3: (this_MapTerm_1= ruleMapTerm )
        // InternalAsmetaL.g:7568:3: this_MapTerm_1= ruleMapTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_MapTerm_1=ruleMapTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred188_InternalAsmetaL

    // $ANTLR start synpred189_InternalAsmetaL
    public final void synpred189_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_SetTerm_2 = null;


        // InternalAsmetaL.g:7580:3: (this_SetTerm_2= ruleSetTerm )
        // InternalAsmetaL.g:7580:3: this_SetTerm_2= ruleSetTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_SetTerm_2=ruleSetTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred189_InternalAsmetaL

    // $ANTLR start synpred221_InternalAsmetaL
    public final void synpred221_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_SetCT_0 = null;


        // InternalAsmetaL.g:8873:3: (this_SetCT_0= ruleSetCT )
        // InternalAsmetaL.g:8873:3: this_SetCT_0= ruleSetCT
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_SetCT_0=ruleSetCT();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred221_InternalAsmetaL

    // $ANTLR start synpred222_InternalAsmetaL
    public final void synpred222_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_MapCT_1 = null;


        // InternalAsmetaL.g:8885:3: (this_MapCT_1= ruleMapCT )
        // InternalAsmetaL.g:8885:3: this_MapCT_1= ruleMapCT
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_MapCT_1=ruleMapCT();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred222_InternalAsmetaL

    // $ANTLR start synpred234_InternalAsmetaL
    public final void synpred234_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_UpdateRule_0 = null;


        // InternalAsmetaL.g:9699:3: (this_UpdateRule_0= ruleUpdateRule )
        // InternalAsmetaL.g:9699:3: this_UpdateRule_0= ruleUpdateRule
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_UpdateRule_0=ruleUpdateRule();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred234_InternalAsmetaL

    // $ANTLR start synpred235_InternalAsmetaL
    public final void synpred235_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_TurboReturnRule_1 = null;


        // InternalAsmetaL.g:9711:3: (this_TurboReturnRule_1= ruleTurboReturnRule )
        // InternalAsmetaL.g:9711:3: this_TurboReturnRule_1= ruleTurboReturnRule
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_TurboReturnRule_1=ruleTurboReturnRule();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred235_InternalAsmetaL

    // $ANTLR start synpred236_InternalAsmetaL
    public final void synpred236_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_BasicRule_2 = null;


        // InternalAsmetaL.g:9723:3: (this_BasicRule_2= ruleBasicRule )
        // InternalAsmetaL.g:9723:3: this_BasicRule_2= ruleBasicRule
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_BasicRule_2=ruleBasicRule();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred236_InternalAsmetaL

    // $ANTLR start synpred237_InternalAsmetaL
    public final void synpred237_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_TermAsRule_3 = null;


        // InternalAsmetaL.g:9735:3: (this_TermAsRule_3= ruleTermAsRule )
        // InternalAsmetaL.g:9735:3: this_TermAsRule_3= ruleTermAsRule
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_TermAsRule_3=ruleTermAsRule();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred237_InternalAsmetaL

    // $ANTLR start synpred238_InternalAsmetaL
    public final void synpred238_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_TurboRule_4 = null;


        // InternalAsmetaL.g:9747:3: (this_TurboRule_4= ruleTurboRule )
        // InternalAsmetaL.g:9747:3: this_TurboRule_4= ruleTurboRule
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_TurboRule_4=ruleTurboRule();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred238_InternalAsmetaL

    // $ANTLR start synpred253_InternalAsmetaL
    public final void synpred253_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        EObject lv_ifnone_13_0 = null;


        // InternalAsmetaL.g:10425:4: (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )
        // InternalAsmetaL.g:10425:4: otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) )
        {
        otherlv_12=(Token)match(input,135,FOLLOW_44); if (state.failed) return ;
        // InternalAsmetaL.g:10429:4: ( (lv_ifnone_13_0= ruleRule ) )
        // InternalAsmetaL.g:10430:5: (lv_ifnone_13_0= ruleRule )
        {
        // InternalAsmetaL.g:10430:5: (lv_ifnone_13_0= ruleRule )
        // InternalAsmetaL.g:10431:6: lv_ifnone_13_0= ruleRule
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getChooseRuleAccess().getIfnoneRuleParserRuleCall_9_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_ifnone_13_0=ruleRule();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred253_InternalAsmetaL

    // $ANTLR start synpred267_InternalAsmetaL
    public final void synpred267_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_localFunction_4_0 = null;

        EObject lv_init_6_0 = null;


        // InternalAsmetaL.g:11376:4: ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )
        // InternalAsmetaL.g:11376:4: ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']'
        {
        // InternalAsmetaL.g:11376:4: ( (lv_localFunction_4_0= ruleLocalFunction ) )
        // InternalAsmetaL.g:11377:5: (lv_localFunction_4_0= ruleLocalFunction )
        {
        // InternalAsmetaL.g:11377:5: (lv_localFunction_4_0= ruleLocalFunction )
        // InternalAsmetaL.g:11378:6: lv_localFunction_4_0= ruleLocalFunction
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionLocalFunctionParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_115);
        lv_localFunction_4_0=ruleLocalFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,119,FOLLOW_44); if (state.failed) return ;
        // InternalAsmetaL.g:11399:4: ( (lv_init_6_0= ruleRule ) )
        // InternalAsmetaL.g:11400:5: (lv_init_6_0= ruleRule )
        {
        // InternalAsmetaL.g:11400:5: (lv_init_6_0= ruleRule )
        // InternalAsmetaL.g:11401:6: lv_init_6_0= ruleRule
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getInitRuleParserRuleCall_4_2_0());
          					
        }
        pushFollow(FOLLOW_89);
        lv_init_6_0=ruleRule();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,120,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred267_InternalAsmetaL

    // $ANTLR start synpred276_InternalAsmetaL
    public final void synpred276_InternalAsmetaL_fragment() throws RecognitionException {   
        Token kw=null;
        Token this_PATH_SEP_6=null;

        // InternalAsmetaL.g:11899:5: ( (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )* )
        // InternalAsmetaL.g:11899:5: (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )*
        {
        // InternalAsmetaL.g:11899:5: (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )*
        loop236:
        do {
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==143) ) {
                alt236=1;
            }


            switch (alt236) {
        	case 1 :
        	    // InternalAsmetaL.g:11900:6: kw= '..' this_PATH_SEP_6= RULE_PATH_SEP
        	    {
        	    kw=(Token)match(input,143,FOLLOW_122); if (state.failed) return ;
        	    this_PATH_SEP_6=(Token)match(input,RULE_PATH_SEP,FOLLOW_129); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop236;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred276_InternalAsmetaL

    // $ANTLR start synpred278_InternalAsmetaL
    public final void synpred278_InternalAsmetaL_fragment() throws RecognitionException {   
        Token this_ENUM_ID_3=null;
        Token this_ID_4=null;
        Token kw=null;
        Token this_PATH_SEP_6=null;
        Token this_PATH_SEP_8=null;

        // InternalAsmetaL.g:11880:4: ( ( (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID ) | (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )* | (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )* ) )
        // InternalAsmetaL.g:11880:4: ( (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID ) | (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )* | (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )* )
        {
        // InternalAsmetaL.g:11880:4: ( (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID ) | (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )* | (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )* )
        int alt240=3;
        switch ( input.LA(1) ) {
        case RULE_ID:
        case RULE_ENUM_ID:
            {
            alt240=1;
            }
            break;
        case 143:
            {
            alt240=2;
            }
            break;
        case EOF:
            {
            int LA240_3 = input.LA(2);

            if ( (synpred276_InternalAsmetaL()) ) {
                alt240=2;
            }
            else if ( (true) ) {
                alt240=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 240, 3, input);

                throw nvae;
            }
            }
            break;
        case 107:
            {
            alt240=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 240, 0, input);

            throw nvae;
        }

        switch (alt240) {
            case 1 :
                // InternalAsmetaL.g:11881:5: (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID )
                {
                // InternalAsmetaL.g:11881:5: (this_ENUM_ID_3= RULE_ENUM_ID | this_ID_4= RULE_ID )
                int alt237=2;
                int LA237_0 = input.LA(1);

                if ( (LA237_0==RULE_ENUM_ID) ) {
                    alt237=1;
                }
                else if ( (LA237_0==RULE_ID) ) {
                    alt237=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 237, 0, input);

                    throw nvae;
                }
                switch (alt237) {
                    case 1 :
                        // InternalAsmetaL.g:11882:6: this_ENUM_ID_3= RULE_ENUM_ID
                        {
                        this_ENUM_ID_3=(Token)match(input,RULE_ENUM_ID,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalAsmetaL.g:11890:6: this_ID_4= RULE_ID
                        {
                        this_ID_4=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }
                break;
            case 2 :
                // InternalAsmetaL.g:11899:5: (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )*
                {
                // InternalAsmetaL.g:11899:5: (kw= '..' this_PATH_SEP_6= RULE_PATH_SEP )*
                loop238:
                do {
                    int alt238=2;
                    int LA238_0 = input.LA(1);

                    if ( (LA238_0==143) ) {
                        alt238=1;
                    }


                    switch (alt238) {
                	case 1 :
                	    // InternalAsmetaL.g:11900:6: kw= '..' this_PATH_SEP_6= RULE_PATH_SEP
                	    {
                	    kw=(Token)match(input,143,FOLLOW_122); if (state.failed) return ;
                	    this_PATH_SEP_6=(Token)match(input,RULE_PATH_SEP,FOLLOW_129); if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    break loop238;
                    }
                } while (true);


                }
                break;
            case 3 :
                // InternalAsmetaL.g:11914:5: (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )*
                {
                // InternalAsmetaL.g:11914:5: (kw= '.' this_PATH_SEP_8= RULE_PATH_SEP )*
                loop239:
                do {
                    int alt239=2;
                    int LA239_0 = input.LA(1);

                    if ( (LA239_0==107) ) {
                        alt239=1;
                    }


                    switch (alt239) {
                	case 1 :
                	    // InternalAsmetaL.g:11915:6: kw= '.' this_PATH_SEP_8= RULE_PATH_SEP
                	    {
                	    kw=(Token)match(input,107,FOLLOW_122); if (state.failed) return ;
                	    this_PATH_SEP_8=(Token)match(input,RULE_PATH_SEP,FOLLOW_126); if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    break loop239;
                    }
                } while (true);


                }
                break;

        }


        }
    }
    // $ANTLR end synpred278_InternalAsmetaL

    // Delegated rules

    public final boolean synpred278_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred157_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred157_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred154_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred154_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred253_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred253_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred222_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred222_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred234_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred234_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred96_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred96_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred267_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred267_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred235_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred235_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred173_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred173_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred139_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred139_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA69 dfa69 = new DFA69(this);
    protected DFA70 dfa70 = new DFA70(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA75 dfa75 = new DFA75(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA79 dfa79 = new DFA79(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA85 dfa85 = new DFA85(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA98 dfa98 = new DFA98(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA103 dfa103 = new DFA103(this);
    protected DFA114 dfa114 = new DFA114(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA175 dfa175 = new DFA175(this);
    static final String dfa_1s = "\26\uffff";
    static final String dfa_2s = "\1\5\23\0\2\uffff";
    static final String dfa_3s = "\1\120\23\0\2\uffff";
    static final String dfa_4s = "\24\uffff\1\1\1\2";
    static final String dfa_5s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\2\uffff}>";
    static final String[] dfa_6s = {
            "\1\7\45\uffff\1\22\15\uffff\1\20\3\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\21\1\23\4\uffff\1\1\1\2\1\3\1\4\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA69 extends DFA {

        public DFA69(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 69;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4285:3: ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA69_1 = input.LA(1);

                         
                        int index69_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA69_2 = input.LA(1);

                         
                        int index69_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA69_3 = input.LA(1);

                         
                        int index69_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA69_4 = input.LA(1);

                         
                        int index69_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA69_5 = input.LA(1);

                         
                        int index69_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA69_6 = input.LA(1);

                         
                        int index69_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA69_7 = input.LA(1);

                         
                        int index69_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA69_8 = input.LA(1);

                         
                        int index69_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA69_9 = input.LA(1);

                         
                        int index69_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA69_10 = input.LA(1);

                         
                        int index69_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA69_11 = input.LA(1);

                         
                        int index69_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA69_12 = input.LA(1);

                         
                        int index69_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA69_13 = input.LA(1);

                         
                        int index69_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA69_14 = input.LA(1);

                         
                        int index69_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA69_15 = input.LA(1);

                         
                        int index69_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA69_16 = input.LA(1);

                         
                        int index69_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA69_17 = input.LA(1);

                         
                        int index69_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA69_18 = input.LA(1);

                         
                        int index69_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA69_19 = input.LA(1);

                         
                        int index69_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index69_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 69, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4375:3: ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA70_1 = input.LA(1);

                         
                        int index70_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA70_2 = input.LA(1);

                         
                        int index70_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA70_3 = input.LA(1);

                         
                        int index70_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA70_4 = input.LA(1);

                         
                        int index70_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA70_5 = input.LA(1);

                         
                        int index70_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA70_6 = input.LA(1);

                         
                        int index70_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA70_7 = input.LA(1);

                         
                        int index70_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA70_8 = input.LA(1);

                         
                        int index70_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA70_9 = input.LA(1);

                         
                        int index70_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA70_10 = input.LA(1);

                         
                        int index70_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA70_11 = input.LA(1);

                         
                        int index70_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA70_12 = input.LA(1);

                         
                        int index70_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA70_13 = input.LA(1);

                         
                        int index70_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA70_14 = input.LA(1);

                         
                        int index70_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA70_15 = input.LA(1);

                         
                        int index70_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA70_16 = input.LA(1);

                         
                        int index70_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA70_17 = input.LA(1);

                         
                        int index70_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA70_18 = input.LA(1);

                         
                        int index70_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA70_19 = input.LA(1);

                         
                        int index70_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 70, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4557:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_1 = input.LA(1);

                         
                        int index73_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA73_2 = input.LA(1);

                         
                        int index73_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA73_3 = input.LA(1);

                         
                        int index73_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA73_4 = input.LA(1);

                         
                        int index73_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA73_5 = input.LA(1);

                         
                        int index73_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA73_6 = input.LA(1);

                         
                        int index73_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA73_7 = input.LA(1);

                         
                        int index73_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA73_8 = input.LA(1);

                         
                        int index73_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA73_9 = input.LA(1);

                         
                        int index73_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA73_10 = input.LA(1);

                         
                        int index73_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA73_11 = input.LA(1);

                         
                        int index73_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA73_12 = input.LA(1);

                         
                        int index73_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA73_13 = input.LA(1);

                         
                        int index73_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA73_14 = input.LA(1);

                         
                        int index73_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA73_15 = input.LA(1);

                         
                        int index73_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA73_16 = input.LA(1);

                         
                        int index73_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA73_17 = input.LA(1);

                         
                        int index73_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA73_18 = input.LA(1);

                         
                        int index73_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA73_19 = input.LA(1);

                         
                        int index73_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred94_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index73_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4661:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA75_1 = input.LA(1);

                         
                        int index75_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA75_2 = input.LA(1);

                         
                        int index75_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA75_3 = input.LA(1);

                         
                        int index75_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA75_4 = input.LA(1);

                         
                        int index75_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA75_5 = input.LA(1);

                         
                        int index75_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA75_6 = input.LA(1);

                         
                        int index75_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA75_7 = input.LA(1);

                         
                        int index75_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA75_8 = input.LA(1);

                         
                        int index75_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA75_9 = input.LA(1);

                         
                        int index75_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA75_10 = input.LA(1);

                         
                        int index75_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA75_11 = input.LA(1);

                         
                        int index75_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA75_12 = input.LA(1);

                         
                        int index75_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA75_13 = input.LA(1);

                         
                        int index75_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA75_14 = input.LA(1);

                         
                        int index75_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA75_15 = input.LA(1);

                         
                        int index75_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA75_16 = input.LA(1);

                         
                        int index75_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA75_17 = input.LA(1);

                         
                        int index75_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA75_18 = input.LA(1);

                         
                        int index75_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA75_19 = input.LA(1);

                         
                        int index75_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred96_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index75_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4765:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_1 = input.LA(1);

                         
                        int index77_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA77_2 = input.LA(1);

                         
                        int index77_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA77_3 = input.LA(1);

                         
                        int index77_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA77_4 = input.LA(1);

                         
                        int index77_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA77_5 = input.LA(1);

                         
                        int index77_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA77_6 = input.LA(1);

                         
                        int index77_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA77_7 = input.LA(1);

                         
                        int index77_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA77_8 = input.LA(1);

                         
                        int index77_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA77_9 = input.LA(1);

                         
                        int index77_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA77_10 = input.LA(1);

                         
                        int index77_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA77_11 = input.LA(1);

                         
                        int index77_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA77_12 = input.LA(1);

                         
                        int index77_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA77_13 = input.LA(1);

                         
                        int index77_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA77_14 = input.LA(1);

                         
                        int index77_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA77_15 = input.LA(1);

                         
                        int index77_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA77_16 = input.LA(1);

                         
                        int index77_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA77_17 = input.LA(1);

                         
                        int index77_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA77_18 = input.LA(1);

                         
                        int index77_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA77_19 = input.LA(1);

                         
                        int index77_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index77_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA79 extends DFA {

        public DFA79(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 79;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4869:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA79_1 = input.LA(1);

                         
                        int index79_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA79_2 = input.LA(1);

                         
                        int index79_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA79_3 = input.LA(1);

                         
                        int index79_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA79_4 = input.LA(1);

                         
                        int index79_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA79_5 = input.LA(1);

                         
                        int index79_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA79_6 = input.LA(1);

                         
                        int index79_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA79_7 = input.LA(1);

                         
                        int index79_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA79_8 = input.LA(1);

                         
                        int index79_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA79_9 = input.LA(1);

                         
                        int index79_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA79_10 = input.LA(1);

                         
                        int index79_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA79_11 = input.LA(1);

                         
                        int index79_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA79_12 = input.LA(1);

                         
                        int index79_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA79_13 = input.LA(1);

                         
                        int index79_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA79_14 = input.LA(1);

                         
                        int index79_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA79_15 = input.LA(1);

                         
                        int index79_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA79_16 = input.LA(1);

                         
                        int index79_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA79_17 = input.LA(1);

                         
                        int index79_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA79_18 = input.LA(1);

                         
                        int index79_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA79_19 = input.LA(1);

                         
                        int index79_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred100_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index79_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 79, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4973:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA81_2 = input.LA(1);

                         
                        int index81_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA81_3 = input.LA(1);

                         
                        int index81_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA81_4 = input.LA(1);

                         
                        int index81_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA81_5 = input.LA(1);

                         
                        int index81_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA81_6 = input.LA(1);

                         
                        int index81_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA81_7 = input.LA(1);

                         
                        int index81_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA81_8 = input.LA(1);

                         
                        int index81_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA81_9 = input.LA(1);

                         
                        int index81_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA81_10 = input.LA(1);

                         
                        int index81_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA81_11 = input.LA(1);

                         
                        int index81_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA81_12 = input.LA(1);

                         
                        int index81_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA81_13 = input.LA(1);

                         
                        int index81_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA81_14 = input.LA(1);

                         
                        int index81_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA81_15 = input.LA(1);

                         
                        int index81_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA81_16 = input.LA(1);

                         
                        int index81_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA81_17 = input.LA(1);

                         
                        int index81_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA81_18 = input.LA(1);

                         
                        int index81_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA81_19 = input.LA(1);

                         
                        int index81_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred102_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index81_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\61\uffff";
    static final String dfa_8s = "\1\5\4\uffff\1\0\21\uffff\1\0\31\uffff";
    static final String dfa_9s = "\1\u0090\4\uffff\1\0\21\uffff\1\0\31\uffff";
    static final String dfa_10s = "\1\uffff\1\1\26\uffff\1\2\21\uffff\1\3\6\uffff";
    static final String dfa_11s = "\5\uffff\1\0\21\uffff\1\1\31\uffff}>";
    static final String[] dfa_12s = {
            "\1\5\10\1\20\uffff\1\27\14\uffff\1\30\15\uffff\1\30\3\uffff\12\30\1\uffff\1\52\2\uffff\6\30\10\uffff\7\1\4\uffff\1\52\2\uffff\2\1\3\uffff\3\1\1\52\3\uffff\1\52\3\uffff\1\52\5\uffff\1\52\1\uffff\1\52\20\uffff\1\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA85 extends DFA {

        public DFA85(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 85;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "5197:2: (this_Expression_0= ruleExpression | this_DomainTerm_1= ruleDomainTerm | this_ExtendedTerm_2= ruleExtendedTerm )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA85_5 = input.LA(1);

                         
                        int index85_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalAsmetaL()) ) {s = 1;}

                        else if ( (synpred117_InternalAsmetaL()) ) {s = 24;}

                         
                        input.seek(index85_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA85_23 = input.LA(1);

                         
                        int index85_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalAsmetaL()) ) {s = 1;}

                        else if ( (true) ) {s = 42;}

                         
                        input.seek(index85_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 85, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\102\uffff";
    static final String dfa_14s = "\1\1\101\uffff";
    static final String dfa_15s = "\1\5\52\uffff\2\0\25\uffff";
    static final String dfa_16s = "\1\u0090\52\uffff\2\0\25\uffff";
    static final String dfa_17s = "\1\uffff\1\2\77\uffff\1\1";
    static final String dfa_18s = "\53\uffff\1\0\1\1\25\uffff}>";
    static final String[] dfa_19s = {
            "\3\1\23\uffff\2\1\2\uffff\2\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\10\1\17\uffff\2\1\7\uffff\1\1\1\uffff\1\1\4\uffff\5\1\1\53\1\54\1\1\2\uffff\1\1\13\uffff\10\1\1\uffff\1\1\2\uffff\4\1\2\uffff\1\1\1\uffff\12\1\1\uffff\1\1\1\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "()* loopback of 5319:3: ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_43 = input.LA(1);

                         
                        int index87_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalAsmetaL()) ) {s = 65;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index87_43);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA87_44 = input.LA(1);

                         
                        int index87_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalAsmetaL()) ) {s = 65;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index87_44);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\1\5\50\uffff\1\0\1\uffff\1\0\26\uffff";
    static final String dfa_21s = "\1\u0090\50\uffff\1\0\1\uffff\1\0\26\uffff";
    static final String dfa_22s = "\51\uffff\1\0\1\uffff\1\1\26\uffff}>";
    static final String[] dfa_23s = {
            "\3\1\23\uffff\2\1\2\uffff\2\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\10\1\17\uffff\2\1\7\uffff\1\1\1\uffff\1\1\4\uffff\1\1\1\51\1\1\1\53\4\1\2\uffff\1\1\13\uffff\10\1\1\uffff\1\1\2\uffff\4\1\2\uffff\1\1\1\uffff\12\1\1\uffff\1\1\1\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[][] dfa_23 = unpackEncodedStringArray(dfa_23s);

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_17;
            this.special = dfa_22;
            this.transition = dfa_23;
        }
        public String getDescription() {
            return "()* loopback of 5425:3: ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA89_41 = input.LA(1);

                         
                        int index89_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalAsmetaL()) ) {s = 65;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index89_41);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA89_43 = input.LA(1);

                         
                        int index89_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred125_InternalAsmetaL()) ) {s = 65;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index89_43);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 89, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_24s = "\1\5\51\uffff\1\0\27\uffff";
    static final String dfa_25s = "\1\u0090\51\uffff\1\0\27\uffff";
    static final String dfa_26s = "\52\uffff\1\0\27\uffff}>";
    static final String[] dfa_27s = {
            "\3\1\23\uffff\2\1\2\uffff\2\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\10\1\17\uffff\2\1\7\uffff\1\1\1\uffff\1\1\4\uffff\1\52\7\1\2\uffff\1\1\13\uffff\10\1\1\uffff\1\1\2\uffff\4\1\2\uffff\1\1\1\uffff\12\1\1\uffff\1\1\1\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_24;
            this.max = dfa_25;
            this.accept = dfa_17;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "()* loopback of 5531:3: ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_42 = input.LA(1);

                         
                        int index90_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalAsmetaL()) ) {s = 65;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index90_42);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\1\1\1\uffff\1\1\3\uffff\1\3\17\uffff";
    static final String dfa_29s = "\1\5\1\uffff\1\5\1\uffff\1\36\1\0\1\5\7\0\2\5\6\0";
    static final String dfa_30s = "\1\u0090\1\uffff\1\u0090\1\uffff\1\167\1\0\1\u0090\7\0\1\u0089\1\137\6\0";
    static final String dfa_31s = "\1\uffff\1\2\1\uffff\1\1\22\uffff";
    static final String dfa_32s = "\5\uffff\1\0\1\uffff\1\3\1\4\1\14\1\5\1\6\1\7\1\10\2\uffff\1\1\1\2\1\12\1\13\1\15\1\11}>";
    static final String[] dfa_33s = {
            "\3\1\23\uffff\2\1\2\uffff\2\1\3\uffff\5\1\1\uffff\1\1\2\uffff\4\1\1\uffff\10\1\17\uffff\2\1\7\uffff\1\1\1\uffff\1\1\4\uffff\10\1\1\uffff\1\1\1\2\3\3\10\uffff\10\1\1\uffff\1\1\2\uffff\4\1\2\uffff\1\1\1\uffff\12\1\1\uffff\1\1\1\uffff\1\1",
            "",
            "\1\5\1\4\1\6\6\3\15\uffff\2\1\1\uffff\1\3\2\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\10\1\17\uffff\2\1\7\uffff\1\1\1\uffff\1\1\4\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\1\2\uffff\1\1\3\uffff\2\3\3\uffff\3\3\10\1\1\uffff\1\1\2\uffff\4\1\2\uffff\1\1\1\uffff\12\1\1\uffff\1\1\1\uffff\1\16",
            "",
            "\1\1\114\uffff\1\17\13\uffff\1\1",
            "\1\uffff",
            "\3\3\23\uffff\2\3\2\uffff\2\3\1\uffff\1\3\1\uffff\5\3\1\uffff\1\3\2\uffff\4\3\1\uffff\10\3\17\uffff\2\3\7\uffff\1\3\1\uffff\1\3\4\uffff\10\3\1\uffff\11\3\1\17\3\uffff\10\3\1\1\1\3\2\uffff\4\3\2\uffff\1\3\1\uffff\12\3\1\uffff\1\3\1\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\20\44\uffff\1\22\3\uffff\1\21\132\uffff\1\23",
            "\1\24\123\uffff\1\7\1\10\1\25\1\12\1\13\1\14\1\15",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = dfa_1;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 5726:3: ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA94_5 = input.LA(1);

                         
                        int index94_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA94_16 = input.LA(1);

                         
                        int index94_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_16);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA94_17 = input.LA(1);

                         
                        int index94_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_17);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA94_7 = input.LA(1);

                         
                        int index94_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA94_8 = input.LA(1);

                         
                        int index94_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA94_10 = input.LA(1);

                         
                        int index94_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA94_11 = input.LA(1);

                         
                        int index94_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA94_12 = input.LA(1);

                         
                        int index94_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_12);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA94_13 = input.LA(1);

                         
                        int index94_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_13);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA94_21 = input.LA(1);

                         
                        int index94_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_21);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA94_18 = input.LA(1);

                         
                        int index94_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_18);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA94_19 = input.LA(1);

                         
                        int index94_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_19);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA94_9 = input.LA(1);

                         
                        int index94_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_9);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA94_20 = input.LA(1);

                         
                        int index94_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred139_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index94_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 94, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\112\uffff";
    static final String dfa_35s = "\1\1\111\uffff";
    static final String dfa_36s = "\1\5\62\uffff\1\0\26\uffff";
    static final String dfa_37s = "\1\u0090\62\uffff\1\0\26\uffff";
    static final String dfa_38s = "\1\uffff\1\2\106\uffff\1\1\1\uffff";
    static final String dfa_39s = "\63\uffff\1\0\26\uffff}>";
    static final String[] dfa_40s = {
            "\3\1\23\uffff\2\1\2\uffff\2\1\1\uffff\1\110\1\uffff\5\1\1\uffff\1\1\2\uffff\4\1\1\uffff\10\1\17\uffff\2\1\7\uffff\1\1\1\uffff\1\1\4\uffff\4\1\1\63\3\1\1\uffff\7\1\1\110\5\uffff\10\1\1\uffff\1\1\2\uffff\4\1\2\uffff\1\1\1\uffff\12\1\1\uffff\1\1\1\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA98 extends DFA {

        public DFA98(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 98;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "()* loopback of 5964:3: ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA98_51 = input.LA(1);

                         
                        int index98_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred149_InternalAsmetaL()) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index98_51);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 98, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\32\uffff";
    static final String dfa_42s = "\1\5\3\0\23\uffff\1\0\2\uffff";
    static final String dfa_43s = "\1\u0090\3\0\23\uffff\1\0\2\uffff";
    static final String dfa_44s = "\4\uffff\1\2\23\uffff\1\1\1\3";
    static final String dfa_45s = "\1\uffff\1\0\1\1\1\2\23\uffff\1\3\2\uffff}>";
    static final String[] dfa_46s = {
            "\11\4\20\uffff\1\27\72\uffff\2\4\1\1\4\4\7\uffff\1\2\1\3\3\uffff\3\4\41\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_41;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "6160:2: ( ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) ) | this_basicExpr_2= rulebasicExpr | this_ParenthesizedExpression_3= ruleParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_1 = input.LA(1);

                         
                        int index101_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalAsmetaL()) ) {s = 24;}

                        else if ( (synpred155_InternalAsmetaL()) ) {s = 4;}

                         
                        input.seek(index101_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA101_2 = input.LA(1);

                         
                        int index101_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalAsmetaL()) ) {s = 24;}

                        else if ( (synpred155_InternalAsmetaL()) ) {s = 4;}

                         
                        input.seek(index101_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA101_3 = input.LA(1);

                         
                        int index101_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred154_InternalAsmetaL()) ) {s = 24;}

                        else if ( (synpred155_InternalAsmetaL()) ) {s = 4;}

                         
                        input.seek(index101_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA101_23 = input.LA(1);

                         
                        int index101_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalAsmetaL()) ) {s = 4;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index101_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_47s = "\21\uffff";
    static final String dfa_48s = "\3\uffff\1\13\15\uffff";
    static final String dfa_49s = "\1\5\1\153\1\0\1\5\7\0\2\uffff\1\5\2\uffff\1\0";
    static final String dfa_50s = "\1\u0090\1\153\1\0\1\u0090\7\0\2\uffff\1\137\2\uffff\1\0";
    static final String dfa_51s = "\13\uffff\1\2\1\3\1\uffff\1\1\1\4\1\uffff";
    static final String dfa_52s = "\2\uffff\1\6\1\uffff\1\7\1\4\1\2\1\0\1\10\1\5\1\1\5\uffff\1\3}>";
    static final String[] dfa_53s = {
            "\1\2\1\1\1\3\6\13\113\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\7\uffff\2\13\3\uffff\3\13\41\uffff\1\14",
            "\1\15",
            "\1\uffff",
            "\3\13\23\uffff\2\13\2\uffff\2\13\1\uffff\1\13\1\uffff\5\13\1\uffff\1\13\2\uffff\4\13\1\uffff\10\13\17\uffff\2\13\7\uffff\1\13\1\uffff\1\13\4\uffff\10\13\1\uffff\11\13\1\15\3\uffff\10\13\1\uffff\1\13\2\uffff\4\13\2\uffff\1\13\1\uffff\12\13\1\uffff\1\13\1\uffff\1\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\20\123\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12",
            "",
            "",
            "\1\uffff"
    };

    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA103 extends DFA {

        public DFA103(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 103;
            this.eot = dfa_47;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "6342:2: (this_FunctionTerm_0= ruleFunctionTerm | this_ConstantTerm_1= ruleConstantTerm | this_VariableTerm_2= ruleVariableTerm | this_LocationTerm_3= ruleLocationTerm )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA103_7 = input.LA(1);

                         
                        int index103_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index103_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA103_10 = input.LA(1);

                         
                        int index103_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index103_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA103_6 = input.LA(1);

                         
                        int index103_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index103_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA103_16 = input.LA(1);

                         
                        int index103_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index103_16);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA103_5 = input.LA(1);

                         
                        int index103_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index103_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA103_9 = input.LA(1);

                         
                        int index103_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index103_9);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA103_2 = input.LA(1);

                         
                        int index103_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index103_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA103_4 = input.LA(1);

                         
                        int index103_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index103_4);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA103_8 = input.LA(1);

                         
                        int index103_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred157_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index103_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 103, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\13\uffff";
    static final String dfa_55s = "\1\36\2\uffff\1\0\1\uffff\3\0\3\uffff";
    static final String dfa_56s = "\1\177\2\uffff\1\0\1\uffff\3\0\3\uffff";
    static final String dfa_57s = "\1\uffff\1\1\1\2\1\uffff\1\4\3\uffff\1\6\1\3\1\5";
    static final String dfa_58s = "\3\uffff\1\0\1\uffff\1\1\1\2\1\3\3\uffff}>";
    static final String[] dfa_59s = {
            "\1\3\51\uffff\1\5\33\uffff\1\7\12\uffff\1\1\3\uffff\1\2\3\uffff\1\6\5\uffff\1\4\1\uffff\1\10",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[][] dfa_59 = unpackEncodedStringArray(dfa_59s);

    class DFA114 extends DFA {

        public DFA114(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 114;
            this.eot = dfa_54;
            this.eof = dfa_54;
            this.min = dfa_55;
            this.max = dfa_56;
            this.accept = dfa_57;
            this.special = dfa_58;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "7181:2: (this_ConditionalTerm_0= ruleConditionalTerm | this_CaseTerm_1= ruleCaseTerm | this_TupleTerm_2= ruleTupleTerm | this_VariableBindingTerm_3= ruleVariableBindingTerm | this_CollectionTerm_4= ruleCollectionTerm | this_RuleAsTerm_5= ruleRuleAsTerm )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA114_3 = input.LA(1);

                         
                        int index114_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred180_InternalAsmetaL()) ) {s = 9;}

                        else if ( (synpred181_InternalAsmetaL()) ) {s = 4;}

                         
                        input.seek(index114_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA114_5 = input.LA(1);

                         
                        int index114_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred181_InternalAsmetaL()) ) {s = 4;}

                        else if ( (synpred182_InternalAsmetaL()) ) {s = 10;}

                         
                        input.seek(index114_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA114_6 = input.LA(1);

                         
                        int index114_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred181_InternalAsmetaL()) ) {s = 4;}

                        else if ( (synpred182_InternalAsmetaL()) ) {s = 10;}

                         
                        input.seek(index114_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA114_7 = input.LA(1);

                         
                        int index114_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred181_InternalAsmetaL()) ) {s = 4;}

                        else if ( (synpred182_InternalAsmetaL()) ) {s = 10;}

                         
                        input.seek(index114_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 114, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_60s = "\35\uffff";
    static final String dfa_61s = "\1\5\13\0\21\uffff";
    static final String dfa_62s = "\1\u0090\13\0\21\uffff";
    static final String dfa_63s = "\14\uffff\1\3\6\uffff\1\5\3\uffff\1\6\2\uffff\1\1\1\2\1\4";
    static final String dfa_64s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\21\uffff}>";
    static final String[] dfa_65s = {
            "\1\2\1\1\1\3\61\uffff\1\23\32\uffff\1\23\4\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\27\16\uffff\1\14\3\uffff\1\27\10\uffff\2\14\3\uffff\1\14\1\uffff\1\14\1\uffff\1\14\2\uffff\1\14\1\23\1\uffff\1\23\2\uffff\1\27\1\uffff\1\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
            this.eot = dfa_60;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "9698:2: (this_UpdateRule_0= ruleUpdateRule | this_TurboReturnRule_1= ruleTurboReturnRule | this_BasicRule_2= ruleBasicRule | this_TermAsRule_3= ruleTermAsRule | this_TurboRule_4= ruleTurboRule | this_DerivedRule_5= ruleDerivedRule )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA154_1 = input.LA(1);

                         
                        int index154_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred235_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 12;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 28;}

                        else if ( (synpred238_InternalAsmetaL()) ) {s = 19;}

                         
                        input.seek(index154_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA154_2 = input.LA(1);

                         
                        int index154_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred235_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 12;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index154_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA154_3 = input.LA(1);

                         
                        int index154_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred235_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 12;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index154_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA154_4 = input.LA(1);

                         
                        int index154_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred235_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index154_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA154_5 = input.LA(1);

                         
                        int index154_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred235_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index154_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA154_6 = input.LA(1);

                         
                        int index154_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred235_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index154_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA154_7 = input.LA(1);

                         
                        int index154_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred235_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index154_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA154_8 = input.LA(1);

                         
                        int index154_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred235_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index154_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA154_9 = input.LA(1);

                         
                        int index154_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred235_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index154_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA154_10 = input.LA(1);

                         
                        int index154_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred235_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index154_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA154_11 = input.LA(1);

                         
                        int index154_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred235_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index154_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 154, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_66s = "\33\uffff";
    static final String dfa_67s = "\1\5\24\uffff\2\0\4\uffff";
    static final String dfa_68s = "\1\u0090\24\uffff\2\0\4\uffff";
    static final String dfa_69s = "\1\uffff\1\2\30\uffff\1\1";
    static final String dfa_70s = "\25\uffff\1\0\1\1\4\uffff}>";
    static final String[] dfa_71s = {
            "\3\1\61\uffff\1\25\32\uffff\1\26\4\uffff\10\1\16\uffff\1\1\3\uffff\1\1\10\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\2\1\1\uffff\1\1\2\uffff\1\1\1\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA175 extends DFA {

        public DFA175(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 175;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "()* loopback of 11375:3: ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA175_21 = input.LA(1);

                         
                        int index175_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalAsmetaL()) ) {s = 26;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index175_21);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA175_22 = input.LA(1);

                         
                        int index175_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalAsmetaL()) ) {s = 26;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index175_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 175, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000006000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x00000000080000B0L,0x0000000300000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000A20000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000002018000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000600000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000002010000002L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000002010000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x00000000000040B0L,0x0000080000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x00000000000000E0L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000180000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x00000004000000E0L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000080000002L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x1A00004000000002L,0x0000000001FBF8A0L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0200000000000002L,0x0000000001FA0000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000054000000002L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000050000000002L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0xE200080040003FE0L,0xA088F190FE01F97FL,0x0000000000010000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x00000000000000E0L,0x00000000FE000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000008040000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0xE200080000000020L,0x000000000001F87FL});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000080000000020L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x01FDE14000000002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x01FDE10000000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x01FDE00000000002L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x01FD000000000002L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x00FD000000000002L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x003D000000000002L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000028040000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000028000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0200000000003FE0L,0x3008F181FFF80000L,0x0000000000014B2AL});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0002000000000020L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000001080000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0xE200080100000020L,0x000000000001F87FL});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0xE000000000000020L,0x000000000000001FL});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000002L,0x00000000C0000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000040003FE0L,0x00007180FE000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000002L,0x0000000014000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000008000000002L,0x0000000400000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000002L,0x0000007800000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000002L,0x0000018000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000400000002L,0x0000020020000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0006000000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0070000000000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0xE200080040003FE0L,0xA188F190FE01F97FL,0x0000000000010000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000001080000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000080000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000003F80L,0x0000718000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0xE200080040003FE0L,0xA088F190FE05F97FL,0x0000000000010000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0xE200080040003FE0L,0xA088F190FE01FD7FL,0x0000000000010000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000001080000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000003FE0L,0x00007188FE000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000001080000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000003FE0L,0x00007180FE000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000080000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000180000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000001080000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x0080000000000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0200000000003FE0L,0x3008F181FFF80000L,0x0000000000014B3AL});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000080000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000080000000L,0x0800000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0200000000003FE0L,0x3008F181FFF80000L,0x0000000000014F2AL});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0xE200080140003FE0L,0xA088F190FE01F97FL,0x0000000000010000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x00000000000000A0L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x00000000000000A0L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x00000000000000A0L,0x0000080000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x00000000020000A0L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000440000000020L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000008000L});

}