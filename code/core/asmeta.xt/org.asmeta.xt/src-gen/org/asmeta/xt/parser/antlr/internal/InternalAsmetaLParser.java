package org.asmeta.xt.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.asmeta.xt.services.AsmetaLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalAsmetaLParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_RULE_ID", "RULE_ENUM_ID", "RULE_COMPLEX_NUMBER", "RULE_NATNUMBER", "RULE_CHAR_LITERAL", "RULE_STRING_LITERAL", "RULE_NUMBER_TOKEN", "RULE_REAL_NUMBER", "RULE_DIGIT", "RULE_MAIUSC_ID", "RULE_MIN_ID", "RULE_ACCENT_CHR", "RULE_SPECIAL_CHAR", "RULE_WS", "RULE_IMMAGINARY_NUMBER", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "'asyncr'", "'asm'", "'module'", "'main'", "'default'", "'import'", "'('", "','", "')'", "'export'", "'*'", "'signature'", "':'", "'init'", "'domain'", "'='", "'function'", "'in'", "'agent'", "'Agent'", "'definitions'", "'macro'", "'rule'", "'turbo'", "'invariant'", "'over'", "'CTLSPEC'", "'ctlspec'", "'LTLSPEC'", "'ltlspec'", "'JUSTICE'", "'COMPASSION'", "'INVAR'", "'dynamic'", "'subsetof'", "'anydomain'", "'basic'", "'Integer'", "'Real'", "'String'", "'Natural'", "'Char'", "'Complex'", "'Boolean'", "'Undef'", "'abstract'", "'Reserve'", "'enum'", "'{'", "'|'", "'}'", "'Rule'", "'Prod'", "'Seq'", "'Powerset'", "'Bag'", "'Map'", "'derived'", "'->'", "'static'", "'local'", "'controlled'", "'shared'", "'monitored'", "'out'", "'and'", "'or'", "'not'", "'xor'", "'mod'", "'iff'", "'implies'", "'while'", "'for'", "'!='", "'>'", "'<'", "'>='", "'<='", "'+'", "'-'", "'/'", "'^'", "'.'", "'true'", "'false'", "'undef'", "'if'", "'then'", "'else'", "'endif'", "'switch'", "'case'", "'otherwise'", "'endswitch'", "'['", "']'", "'exist'", "'unique'", "'with'", "'forall'", "'let'", "'endlet'", "'<<'", "'>>'", "'skip'", "':='", "'par'", "'endpar'", "'choose'", "'do'", "'ifnone'", "'extend'", "'seq'", "'endseq'", "'iterate'", "'enditerate'", "'<-'", "'whilerec'", "'../'", "'./'", "'$'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__50=50;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int RULE_REAL_NUMBER=13;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=5;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_DIGIT=14;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=21;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int RULE_RULE_ID=6;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int RULE_SPECIAL_CHAR=18;
    public static final int RULE_ENUM_ID=7;
    public static final int RULE_MIN_ID=16;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_MAIUSC_ID=15;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_NATNUMBER=9;
    public static final int RULE_IMMAGINARY_NUMBER=20;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int RULE_NUMBER_TOKEN=12;
    public static final int RULE_ACCENT_CHR=17;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=4;
    public static final int RULE_STRING_LITERAL=11;
    public static final int RULE_SL_COMMENT=22;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=19;
    public static final int RULE_COMPLEX_NUMBER=8;
    public static final int RULE_CHAR_LITERAL=10;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalAsmetaLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalAsmetaLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalAsmetaLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalAsmetaL.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private AsmetaLGrammarAccess grammarAccess;

        public InternalAsmetaLParser(TokenStream input, AsmetaLGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Asm";
       	}

       	@Override
       	protected AsmetaLGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleAsm"
    // InternalAsmetaL.g:70:1: entryRuleAsm returns [EObject current=null] : iv_ruleAsm= ruleAsm EOF ;
    public final EObject entryRuleAsm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAsm = null;


        try {
            // InternalAsmetaL.g:70:44: (iv_ruleAsm= ruleAsm EOF )
            // InternalAsmetaL.g:71:2: iv_ruleAsm= ruleAsm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAsmRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAsm=ruleAsm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAsm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAsm"


    // $ANTLR start "ruleAsm"
    // InternalAsmetaL.g:77:1: ruleAsm returns [EObject current=null] : ( ( (lv_isAsynchr_0_0= 'asyncr' ) )? ( ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) ) ) ( ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) ) ) ( (lv_headerSection_3_0= ruleHeader ) ) ( (lv_bodySection_4_0= ruleBody ) ) (otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) ) )? ( ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )* )? )? ;
    public final EObject ruleAsm() throws RecognitionException {
        EObject current = null;

        Token lv_isAsynchr_0_0=null;
        Token lv_type_1_1=null;
        Token lv_type_1_2=null;
        Token lv_name_2_2=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_name_2_1 = null;

        EObject lv_headerSection_3_0 = null;

        EObject lv_bodySection_4_0 = null;

        EObject lv_mainrule_6_0 = null;

        EObject lv_initialState_7_0 = null;

        EObject lv_defaultInitialState_9_0 = null;

        EObject lv_initialState_10_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:83:2: ( ( ( (lv_isAsynchr_0_0= 'asyncr' ) )? ( ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) ) ) ( ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) ) ) ( (lv_headerSection_3_0= ruleHeader ) ) ( (lv_bodySection_4_0= ruleBody ) ) (otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) ) )? ( ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )* )? )? )
            // InternalAsmetaL.g:84:2: ( ( (lv_isAsynchr_0_0= 'asyncr' ) )? ( ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) ) ) ( ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) ) ) ( (lv_headerSection_3_0= ruleHeader ) ) ( (lv_bodySection_4_0= ruleBody ) ) (otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) ) )? ( ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )* )? )?
            {
            // InternalAsmetaL.g:84:2: ( ( (lv_isAsynchr_0_0= 'asyncr' ) )? ( ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) ) ) ( ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) ) ) ( (lv_headerSection_3_0= ruleHeader ) ) ( (lv_bodySection_4_0= ruleBody ) ) (otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) ) )? ( ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )* )? )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( ((LA8_0>=23 && LA8_0<=25)) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalAsmetaL.g:85:3: ( (lv_isAsynchr_0_0= 'asyncr' ) )? ( ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) ) ) ( ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) ) ) ( (lv_headerSection_3_0= ruleHeader ) ) ( (lv_bodySection_4_0= ruleBody ) ) (otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) ) )? ( ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )* )?
                    {
                    // InternalAsmetaL.g:85:3: ( (lv_isAsynchr_0_0= 'asyncr' ) )?
                    int alt1=2;
                    int LA1_0 = input.LA(1);

                    if ( (LA1_0==23) ) {
                        alt1=1;
                    }
                    switch (alt1) {
                        case 1 :
                            // InternalAsmetaL.g:86:4: (lv_isAsynchr_0_0= 'asyncr' )
                            {
                            // InternalAsmetaL.g:86:4: (lv_isAsynchr_0_0= 'asyncr' )
                            // InternalAsmetaL.g:87:5: lv_isAsynchr_0_0= 'asyncr'
                            {
                            lv_isAsynchr_0_0=(Token)match(input,23,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(lv_isAsynchr_0_0, grammarAccess.getAsmAccess().getIsAsynchrAsyncrKeyword_0_0());
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					if (current==null) {
                              						current = createModelElement(grammarAccess.getAsmRule());
                              					}
                              					setWithLastConsumed(current, "isAsynchr", lv_isAsynchr_0_0 != null, "asyncr");
                              				
                            }

                            }


                            }
                            break;

                    }

                    // InternalAsmetaL.g:99:3: ( ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) ) )
                    // InternalAsmetaL.g:100:4: ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) )
                    {
                    // InternalAsmetaL.g:100:4: ( (lv_type_1_1= 'asm' | lv_type_1_2= 'module' ) )
                    // InternalAsmetaL.g:101:5: (lv_type_1_1= 'asm' | lv_type_1_2= 'module' )
                    {
                    // InternalAsmetaL.g:101:5: (lv_type_1_1= 'asm' | lv_type_1_2= 'module' )
                    int alt2=2;
                    int LA2_0 = input.LA(1);

                    if ( (LA2_0==24) ) {
                        alt2=1;
                    }
                    else if ( (LA2_0==25) ) {
                        alt2=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 2, 0, input);

                        throw nvae;
                    }
                    switch (alt2) {
                        case 1 :
                            // InternalAsmetaL.g:102:6: lv_type_1_1= 'asm'
                            {
                            lv_type_1_1=(Token)match(input,24,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_type_1_1, grammarAccess.getAsmAccess().getTypeAsmKeyword_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getAsmRule());
                              						}
                              						setWithLastConsumed(current, "type", lv_type_1_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:113:6: lv_type_1_2= 'module'
                            {
                            lv_type_1_2=(Token)match(input,25,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_type_1_2, grammarAccess.getAsmAccess().getTypeModuleKeyword_1_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getAsmRule());
                              						}
                              						setWithLastConsumed(current, "type", lv_type_1_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalAsmetaL.g:126:3: ( ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) ) )
                    // InternalAsmetaL.g:127:4: ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) )
                    {
                    // InternalAsmetaL.g:127:4: ( (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING ) )
                    // InternalAsmetaL.g:128:5: (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING )
                    {
                    // InternalAsmetaL.g:128:5: (lv_name_2_1= ruleextendedNameForAsm | lv_name_2_2= RULE_STRING )
                    int alt3=2;
                    int LA3_0 = input.LA(1);

                    if ( (LA3_0==RULE_ID||LA3_0==RULE_ENUM_ID||LA3_0==26||(LA3_0>=95 && LA3_0<=96)) ) {
                        alt3=1;
                    }
                    else if ( (LA3_0==RULE_STRING) ) {
                        alt3=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 3, 0, input);

                        throw nvae;
                    }
                    switch (alt3) {
                        case 1 :
                            // InternalAsmetaL.g:129:6: lv_name_2_1= ruleextendedNameForAsm
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAsmAccess().getNameExtendedNameForAsmParserRuleCall_2_0_0());
                              					
                            }
                            pushFollow(FOLLOW_5);
                            lv_name_2_1=ruleextendedNameForAsm();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAsmRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_2_1,
                              							"org.asmeta.xt.AsmetaL.extendedNameForAsm");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:145:6: lv_name_2_2= RULE_STRING
                            {
                            lv_name_2_2=(Token)match(input,RULE_STRING,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_name_2_2, grammarAccess.getAsmAccess().getNameSTRINGTerminalRuleCall_2_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getAsmRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"name",
                              							lv_name_2_2,
                              							"org.asmeta.xt.AsmetaL.STRING");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalAsmetaL.g:162:3: ( (lv_headerSection_3_0= ruleHeader ) )
                    // InternalAsmetaL.g:163:4: (lv_headerSection_3_0= ruleHeader )
                    {
                    // InternalAsmetaL.g:163:4: (lv_headerSection_3_0= ruleHeader )
                    // InternalAsmetaL.g:164:5: lv_headerSection_3_0= ruleHeader
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAsmAccess().getHeaderSectionHeaderParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_6);
                    lv_headerSection_3_0=ruleHeader();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAsmRule());
                      					}
                      					set(
                      						current,
                      						"headerSection",
                      						lv_headerSection_3_0,
                      						"org.asmeta.xt.AsmetaL.Header");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAsmetaL.g:181:3: ( (lv_bodySection_4_0= ruleBody ) )
                    // InternalAsmetaL.g:182:4: (lv_bodySection_4_0= ruleBody )
                    {
                    // InternalAsmetaL.g:182:4: (lv_bodySection_4_0= ruleBody )
                    // InternalAsmetaL.g:183:5: lv_bodySection_4_0= ruleBody
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getAsmAccess().getBodySectionBodyParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_7);
                    lv_bodySection_4_0=ruleBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getAsmRule());
                      					}
                      					set(
                      						current,
                      						"bodySection",
                      						lv_bodySection_4_0,
                      						"org.asmeta.xt.AsmetaL.Body");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }

                    // InternalAsmetaL.g:200:3: (otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) ) )?
                    int alt4=2;
                    int LA4_0 = input.LA(1);

                    if ( (LA4_0==26) ) {
                        alt4=1;
                    }
                    switch (alt4) {
                        case 1 :
                            // InternalAsmetaL.g:201:4: otherlv_5= 'main' ( (lv_mainrule_6_0= ruleMacroDeclaration ) )
                            {
                            otherlv_5=(Token)match(input,26,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				newLeafNode(otherlv_5, grammarAccess.getAsmAccess().getMainKeyword_5_0());
                              			
                            }
                            // InternalAsmetaL.g:205:4: ( (lv_mainrule_6_0= ruleMacroDeclaration ) )
                            // InternalAsmetaL.g:206:5: (lv_mainrule_6_0= ruleMacroDeclaration )
                            {
                            // InternalAsmetaL.g:206:5: (lv_mainrule_6_0= ruleMacroDeclaration )
                            // InternalAsmetaL.g:207:6: lv_mainrule_6_0= ruleMacroDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAsmAccess().getMainruleMacroDeclarationParserRuleCall_5_1_0());
                              					
                            }
                            pushFollow(FOLLOW_9);
                            lv_mainrule_6_0=ruleMacroDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAsmRule());
                              						}
                              						set(
                              							current,
                              							"mainrule",
                              							lv_mainrule_6_0,
                              							"org.asmeta.xt.AsmetaL.MacroDeclaration");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalAsmetaL.g:225:3: ( ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )* )?
                    int alt7=2;
                    int LA7_0 = input.LA(1);

                    if ( (LA7_0==27||LA7_0==36) ) {
                        alt7=1;
                    }
                    switch (alt7) {
                        case 1 :
                            // InternalAsmetaL.g:226:4: ( (lv_initialState_7_0= ruleInitialization ) )* otherlv_8= 'default' ( (lv_defaultInitialState_9_0= ruleInitialization ) ) ( (lv_initialState_10_0= ruleInitialization ) )*
                            {
                            // InternalAsmetaL.g:226:4: ( (lv_initialState_7_0= ruleInitialization ) )*
                            loop5:
                            do {
                                int alt5=2;
                                int LA5_0 = input.LA(1);

                                if ( (LA5_0==36) ) {
                                    alt5=1;
                                }


                                switch (alt5) {
                            	case 1 :
                            	    // InternalAsmetaL.g:227:5: (lv_initialState_7_0= ruleInitialization )
                            	    {
                            	    // InternalAsmetaL.g:227:5: (lv_initialState_7_0= ruleInitialization )
                            	    // InternalAsmetaL.g:228:6: lv_initialState_7_0= ruleInitialization
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						newCompositeNode(grammarAccess.getAsmAccess().getInitialStateInitializationParserRuleCall_6_0_0());
                            	      					
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_initialState_7_0=ruleInitialization();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						if (current==null) {
                            	      							current = createModelElementForParent(grammarAccess.getAsmRule());
                            	      						}
                            	      						add(
                            	      							current,
                            	      							"initialState",
                            	      							lv_initialState_7_0,
                            	      							"org.asmeta.xt.AsmetaL.Initialization");
                            	      						afterParserOrEnumRuleCall();
                            	      					
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop5;
                                }
                            } while (true);

                            otherlv_8=(Token)match(input,27,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				newLeafNode(otherlv_8, grammarAccess.getAsmAccess().getDefaultKeyword_6_1());
                              			
                            }
                            // InternalAsmetaL.g:249:4: ( (lv_defaultInitialState_9_0= ruleInitialization ) )
                            // InternalAsmetaL.g:250:5: (lv_defaultInitialState_9_0= ruleInitialization )
                            {
                            // InternalAsmetaL.g:250:5: (lv_defaultInitialState_9_0= ruleInitialization )
                            // InternalAsmetaL.g:251:6: lv_defaultInitialState_9_0= ruleInitialization
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAsmAccess().getDefaultInitialStateInitializationParserRuleCall_6_2_0());
                              					
                            }
                            pushFollow(FOLLOW_12);
                            lv_defaultInitialState_9_0=ruleInitialization();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAsmRule());
                              						}
                              						set(
                              							current,
                              							"defaultInitialState",
                              							lv_defaultInitialState_9_0,
                              							"org.asmeta.xt.AsmetaL.Initialization");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }

                            // InternalAsmetaL.g:268:4: ( (lv_initialState_10_0= ruleInitialization ) )*
                            loop6:
                            do {
                                int alt6=2;
                                int LA6_0 = input.LA(1);

                                if ( (LA6_0==36) ) {
                                    alt6=1;
                                }


                                switch (alt6) {
                            	case 1 :
                            	    // InternalAsmetaL.g:269:5: (lv_initialState_10_0= ruleInitialization )
                            	    {
                            	    // InternalAsmetaL.g:269:5: (lv_initialState_10_0= ruleInitialization )
                            	    // InternalAsmetaL.g:270:6: lv_initialState_10_0= ruleInitialization
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						newCompositeNode(grammarAccess.getAsmAccess().getInitialStateInitializationParserRuleCall_6_3_0());
                            	      					
                            	    }
                            	    pushFollow(FOLLOW_12);
                            	    lv_initialState_10_0=ruleInitialization();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						if (current==null) {
                            	      							current = createModelElementForParent(grammarAccess.getAsmRule());
                            	      						}
                            	      						add(
                            	      							current,
                            	      							"initialState",
                            	      							lv_initialState_10_0,
                            	      							"org.asmeta.xt.AsmetaL.Initialization");
                            	      						afterParserOrEnumRuleCall();
                            	      					
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop6;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAsm"


    // $ANTLR start "entryRuleHeader"
    // InternalAsmetaL.g:292:1: entryRuleHeader returns [EObject current=null] : iv_ruleHeader= ruleHeader EOF ;
    public final EObject entryRuleHeader() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHeader = null;


        try {
            // InternalAsmetaL.g:292:47: (iv_ruleHeader= ruleHeader EOF )
            // InternalAsmetaL.g:293:2: iv_ruleHeader= ruleHeader EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHeaderRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHeader=ruleHeader();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHeader; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHeader"


    // $ANTLR start "ruleHeader"
    // InternalAsmetaL.g:299:1: ruleHeader returns [EObject current=null] : ( ( (lv_importClause_0_0= ruleImportClause ) )* ( (lv_exportClause_1_0= ruleExportClause ) )? ( (lv_signature_2_0= ruleSignature ) ) ) ;
    public final EObject ruleHeader() throws RecognitionException {
        EObject current = null;

        EObject lv_importClause_0_0 = null;

        EObject lv_exportClause_1_0 = null;

        EObject lv_signature_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:305:2: ( ( ( (lv_importClause_0_0= ruleImportClause ) )* ( (lv_exportClause_1_0= ruleExportClause ) )? ( (lv_signature_2_0= ruleSignature ) ) ) )
            // InternalAsmetaL.g:306:2: ( ( (lv_importClause_0_0= ruleImportClause ) )* ( (lv_exportClause_1_0= ruleExportClause ) )? ( (lv_signature_2_0= ruleSignature ) ) )
            {
            // InternalAsmetaL.g:306:2: ( ( (lv_importClause_0_0= ruleImportClause ) )* ( (lv_exportClause_1_0= ruleExportClause ) )? ( (lv_signature_2_0= ruleSignature ) ) )
            // InternalAsmetaL.g:307:3: ( (lv_importClause_0_0= ruleImportClause ) )* ( (lv_exportClause_1_0= ruleExportClause ) )? ( (lv_signature_2_0= ruleSignature ) )
            {
            // InternalAsmetaL.g:307:3: ( (lv_importClause_0_0= ruleImportClause ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==28) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // InternalAsmetaL.g:308:4: (lv_importClause_0_0= ruleImportClause )
            	    {
            	    // InternalAsmetaL.g:308:4: (lv_importClause_0_0= ruleImportClause )
            	    // InternalAsmetaL.g:309:5: lv_importClause_0_0= ruleImportClause
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getHeaderAccess().getImportClauseImportClauseParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_importClause_0_0=ruleImportClause();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getHeaderRule());
            	      					}
            	      					add(
            	      						current,
            	      						"importClause",
            	      						lv_importClause_0_0,
            	      						"org.asmeta.xt.AsmetaL.ImportClause");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            // InternalAsmetaL.g:326:3: ( (lv_exportClause_1_0= ruleExportClause ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==32) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalAsmetaL.g:327:4: (lv_exportClause_1_0= ruleExportClause )
                    {
                    // InternalAsmetaL.g:327:4: (lv_exportClause_1_0= ruleExportClause )
                    // InternalAsmetaL.g:328:5: lv_exportClause_1_0= ruleExportClause
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getHeaderAccess().getExportClauseExportClauseParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_5);
                    lv_exportClause_1_0=ruleExportClause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getHeaderRule());
                      					}
                      					set(
                      						current,
                      						"exportClause",
                      						lv_exportClause_1_0,
                      						"org.asmeta.xt.AsmetaL.ExportClause");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalAsmetaL.g:345:3: ( (lv_signature_2_0= ruleSignature ) )
            // InternalAsmetaL.g:346:4: (lv_signature_2_0= ruleSignature )
            {
            // InternalAsmetaL.g:346:4: (lv_signature_2_0= ruleSignature )
            // InternalAsmetaL.g:347:5: lv_signature_2_0= ruleSignature
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getHeaderAccess().getSignatureSignatureParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_signature_2_0=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getHeaderRule());
              					}
              					set(
              						current,
              						"signature",
              						lv_signature_2_0,
              						"org.asmeta.xt.AsmetaL.Signature");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHeader"


    // $ANTLR start "entryRuleImportClause"
    // InternalAsmetaL.g:368:1: entryRuleImportClause returns [EObject current=null] : iv_ruleImportClause= ruleImportClause EOF ;
    public final EObject entryRuleImportClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImportClause = null;


        try {
            // InternalAsmetaL.g:368:53: (iv_ruleImportClause= ruleImportClause EOF )
            // InternalAsmetaL.g:369:2: iv_ruleImportClause= ruleImportClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImportClause=ruleImportClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImportClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImportClause"


    // $ANTLR start "ruleImportClause"
    // InternalAsmetaL.g:375:1: ruleImportClause returns [EObject current=null] : (otherlv_0= 'import' ( ( (lv_moduleName_1_1= ruleMODULE_ID | lv_moduleName_1_2= RULE_STRING ) ) ) (otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')' )? ) ;
    public final EObject ruleImportClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_moduleName_1_2=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_moduleName_1_1 = null;

        EObject lv_importedList_3_0 = null;

        EObject lv_importedList_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:381:2: ( (otherlv_0= 'import' ( ( (lv_moduleName_1_1= ruleMODULE_ID | lv_moduleName_1_2= RULE_STRING ) ) ) (otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')' )? ) )
            // InternalAsmetaL.g:382:2: (otherlv_0= 'import' ( ( (lv_moduleName_1_1= ruleMODULE_ID | lv_moduleName_1_2= RULE_STRING ) ) ) (otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')' )? )
            {
            // InternalAsmetaL.g:382:2: (otherlv_0= 'import' ( ( (lv_moduleName_1_1= ruleMODULE_ID | lv_moduleName_1_2= RULE_STRING ) ) ) (otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')' )? )
            // InternalAsmetaL.g:383:3: otherlv_0= 'import' ( ( (lv_moduleName_1_1= ruleMODULE_ID | lv_moduleName_1_2= RULE_STRING ) ) ) (otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')' )?
            {
            otherlv_0=(Token)match(input,28,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getImportClauseAccess().getImportKeyword_0());
              		
            }
            // InternalAsmetaL.g:387:3: ( ( (lv_moduleName_1_1= ruleMODULE_ID | lv_moduleName_1_2= RULE_STRING ) ) )
            // InternalAsmetaL.g:388:4: ( (lv_moduleName_1_1= ruleMODULE_ID | lv_moduleName_1_2= RULE_STRING ) )
            {
            // InternalAsmetaL.g:388:4: ( (lv_moduleName_1_1= ruleMODULE_ID | lv_moduleName_1_2= RULE_STRING ) )
            // InternalAsmetaL.g:389:5: (lv_moduleName_1_1= ruleMODULE_ID | lv_moduleName_1_2= RULE_STRING )
            {
            // InternalAsmetaL.g:389:5: (lv_moduleName_1_1= ruleMODULE_ID | lv_moduleName_1_2= RULE_STRING )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ID||LA11_0==RULE_ENUM_ID||(LA11_0>=142 && LA11_0<=143)) ) {
                alt11=1;
            }
            else if ( (LA11_0==RULE_STRING) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalAsmetaL.g:390:6: lv_moduleName_1_1= ruleMODULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportClauseAccess().getModuleNameMODULE_IDParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_moduleName_1_1=ruleMODULE_ID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportClauseRule());
                      						}
                      						set(
                      							current,
                      							"moduleName",
                      							lv_moduleName_1_1,
                      							"org.asmeta.xt.AsmetaL.MODULE_ID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:406:6: lv_moduleName_1_2= RULE_STRING
                    {
                    lv_moduleName_1_2=(Token)match(input,RULE_STRING,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_moduleName_1_2, grammarAccess.getImportClauseAccess().getModuleNameSTRINGTerminalRuleCall_1_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getImportClauseRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"moduleName",
                      							lv_moduleName_1_2,
                      							"org.asmeta.xt.AsmetaL.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalAsmetaL.g:423:3: (otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')' )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==29) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalAsmetaL.g:424:4: otherlv_2= '(' ( (lv_importedList_3_0= ruleimportData ) ) (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,29,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportClauseAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalAsmetaL.g:428:4: ( (lv_importedList_3_0= ruleimportData ) )
                    // InternalAsmetaL.g:429:5: (lv_importedList_3_0= ruleimportData )
                    {
                    // InternalAsmetaL.g:429:5: (lv_importedList_3_0= ruleimportData )
                    // InternalAsmetaL.g:430:6: lv_importedList_3_0= ruleimportData
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportClauseAccess().getImportedListImportDataParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_importedList_3_0=ruleimportData();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportClauseRule());
                      						}
                      						add(
                      							current,
                      							"importedList",
                      							lv_importedList_3_0,
                      							"org.asmeta.xt.AsmetaL.importData");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:447:4: (otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) ) )*
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==30) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    // InternalAsmetaL.g:448:5: otherlv_4= ',' ( (lv_importedList_5_0= ruleimportData ) )
                    	    {
                    	    otherlv_4=(Token)match(input,30,FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getImportClauseAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:452:5: ( (lv_importedList_5_0= ruleimportData ) )
                    	    // InternalAsmetaL.g:453:6: (lv_importedList_5_0= ruleimportData )
                    	    {
                    	    // InternalAsmetaL.g:453:6: (lv_importedList_5_0= ruleimportData )
                    	    // InternalAsmetaL.g:454:7: lv_importedList_5_0= ruleimportData
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getImportClauseAccess().getImportedListImportDataParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_importedList_5_0=ruleimportData();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getImportClauseRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"importedList",
                    	      								lv_importedList_5_0,
                    	      								"org.asmeta.xt.AsmetaL.importData");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getImportClauseAccess().getRightParenthesisKeyword_2_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImportClause"


    // $ANTLR start "entryRuleimportData"
    // InternalAsmetaL.g:481:1: entryRuleimportData returns [EObject current=null] : iv_ruleimportData= ruleimportData EOF ;
    public final EObject entryRuleimportData() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleimportData = null;


        try {
            // InternalAsmetaL.g:481:51: (iv_ruleimportData= ruleimportData EOF )
            // InternalAsmetaL.g:482:2: iv_ruleimportData= ruleimportData EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportDataRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimportData=ruleimportData();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimportData; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimportData"


    // $ANTLR start "ruleimportData"
    // InternalAsmetaL.g:488:1: ruleimportData returns [EObject current=null] : ( (lv_name_0_0= ruleextendedName ) ) ;
    public final EObject ruleimportData() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:494:2: ( ( (lv_name_0_0= ruleextendedName ) ) )
            // InternalAsmetaL.g:495:2: ( (lv_name_0_0= ruleextendedName ) )
            {
            // InternalAsmetaL.g:495:2: ( (lv_name_0_0= ruleextendedName ) )
            // InternalAsmetaL.g:496:3: (lv_name_0_0= ruleextendedName )
            {
            // InternalAsmetaL.g:496:3: (lv_name_0_0= ruleextendedName )
            // InternalAsmetaL.g:497:4: lv_name_0_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getImportDataAccess().getNameExtendedNameParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getImportDataRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.asmeta.xt.AsmetaL.extendedName");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimportData"


    // $ANTLR start "entryRuleExportClause"
    // InternalAsmetaL.g:517:1: entryRuleExportClause returns [EObject current=null] : iv_ruleExportClause= ruleExportClause EOF ;
    public final EObject entryRuleExportClause() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExportClause = null;


        try {
            // InternalAsmetaL.g:517:53: (iv_ruleExportClause= ruleExportClause EOF )
            // InternalAsmetaL.g:518:2: iv_ruleExportClause= ruleExportClause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportClauseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExportClause=ruleExportClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExportClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExportClause"


    // $ANTLR start "ruleExportClause"
    // InternalAsmetaL.g:524:1: ruleExportClause returns [EObject current=null] : (otherlv_0= 'export' ( ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* ) | ( (lv_exportAll_4_0= '*' ) ) ) ) ;
    public final EObject ruleExportClause() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_exportAll_4_0=null;
        AntlrDatatypeRuleToken lv_exportedList_1_0 = null;

        AntlrDatatypeRuleToken lv_exportedList_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:530:2: ( (otherlv_0= 'export' ( ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* ) | ( (lv_exportAll_4_0= '*' ) ) ) ) )
            // InternalAsmetaL.g:531:2: (otherlv_0= 'export' ( ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* ) | ( (lv_exportAll_4_0= '*' ) ) ) )
            {
            // InternalAsmetaL.g:531:2: (otherlv_0= 'export' ( ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* ) | ( (lv_exportAll_4_0= '*' ) ) ) )
            // InternalAsmetaL.g:532:3: otherlv_0= 'export' ( ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* ) | ( (lv_exportAll_4_0= '*' ) ) )
            {
            otherlv_0=(Token)match(input,32,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExportClauseAccess().getExportKeyword_0());
              		
            }
            // InternalAsmetaL.g:536:3: ( ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* ) | ( (lv_exportAll_4_0= '*' ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( ((LA15_0>=RULE_ID && LA15_0<=RULE_ENUM_ID)) ) {
                alt15=1;
            }
            else if ( (LA15_0==33) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalAsmetaL.g:537:4: ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* )
                    {
                    // InternalAsmetaL.g:537:4: ( ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )* )
                    // InternalAsmetaL.g:538:5: ( (lv_exportedList_1_0= ruleextendedName ) ) (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )*
                    {
                    // InternalAsmetaL.g:538:5: ( (lv_exportedList_1_0= ruleextendedName ) )
                    // InternalAsmetaL.g:539:6: (lv_exportedList_1_0= ruleextendedName )
                    {
                    // InternalAsmetaL.g:539:6: (lv_exportedList_1_0= ruleextendedName )
                    // InternalAsmetaL.g:540:7: lv_exportedList_1_0= ruleextendedName
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExportClauseAccess().getExportedListExtendedNameParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_18);
                    lv_exportedList_1_0=ruleextendedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExportClauseRule());
                      							}
                      							add(
                      								current,
                      								"exportedList",
                      								lv_exportedList_1_0,
                      								"org.asmeta.xt.AsmetaL.extendedName");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalAsmetaL.g:557:5: (otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) ) )*
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( (LA14_0==30) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    // InternalAsmetaL.g:558:6: otherlv_2= ',' ( (lv_exportedList_3_0= ruleextendedName ) )
                    	    {
                    	    otherlv_2=(Token)match(input,30,FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_2, grammarAccess.getExportClauseAccess().getCommaKeyword_1_0_1_0());
                    	      					
                    	    }
                    	    // InternalAsmetaL.g:562:6: ( (lv_exportedList_3_0= ruleextendedName ) )
                    	    // InternalAsmetaL.g:563:7: (lv_exportedList_3_0= ruleextendedName )
                    	    {
                    	    // InternalAsmetaL.g:563:7: (lv_exportedList_3_0= ruleextendedName )
                    	    // InternalAsmetaL.g:564:8: lv_exportedList_3_0= ruleextendedName
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getExportClauseAccess().getExportedListExtendedNameParserRuleCall_1_0_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_exportedList_3_0=ruleextendedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getExportClauseRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"exportedList",
                    	      									lv_exportedList_3_0,
                    	      									"org.asmeta.xt.AsmetaL.extendedName");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:584:4: ( (lv_exportAll_4_0= '*' ) )
                    {
                    // InternalAsmetaL.g:584:4: ( (lv_exportAll_4_0= '*' ) )
                    // InternalAsmetaL.g:585:5: (lv_exportAll_4_0= '*' )
                    {
                    // InternalAsmetaL.g:585:5: (lv_exportAll_4_0= '*' )
                    // InternalAsmetaL.g:586:6: lv_exportAll_4_0= '*'
                    {
                    lv_exportAll_4_0=(Token)match(input,33,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_exportAll_4_0, grammarAccess.getExportClauseAccess().getExportAllAsteriskKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExportClauseRule());
                      						}
                      						setWithLastConsumed(current, "exportAll", lv_exportAll_4_0 != null, "*");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExportClause"


    // $ANTLR start "entryRuleSignature"
    // InternalAsmetaL.g:603:1: entryRuleSignature returns [EObject current=null] : iv_ruleSignature= ruleSignature EOF ;
    public final EObject entryRuleSignature() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSignature = null;


        try {
            // InternalAsmetaL.g:603:50: (iv_ruleSignature= ruleSignature EOF )
            // InternalAsmetaL.g:604:2: iv_ruleSignature= ruleSignature EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignatureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignature=ruleSignature();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignature; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSignature"


    // $ANTLR start "ruleSignature"
    // InternalAsmetaL.g:610:1: ruleSignature returns [EObject current=null] : ( () otherlv_1= 'signature' otherlv_2= ':' ( (lv_domain_3_0= ruleDomain ) )* ( (lv_function_4_0= ruleFunction ) )* ) ;
    public final EObject ruleSignature() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_domain_3_0 = null;

        EObject lv_function_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:616:2: ( ( () otherlv_1= 'signature' otherlv_2= ':' ( (lv_domain_3_0= ruleDomain ) )* ( (lv_function_4_0= ruleFunction ) )* ) )
            // InternalAsmetaL.g:617:2: ( () otherlv_1= 'signature' otherlv_2= ':' ( (lv_domain_3_0= ruleDomain ) )* ( (lv_function_4_0= ruleFunction ) )* )
            {
            // InternalAsmetaL.g:617:2: ( () otherlv_1= 'signature' otherlv_2= ':' ( (lv_domain_3_0= ruleDomain ) )* ( (lv_function_4_0= ruleFunction ) )* )
            // InternalAsmetaL.g:618:3: () otherlv_1= 'signature' otherlv_2= ':' ( (lv_domain_3_0= ruleDomain ) )* ( (lv_function_4_0= ruleFunction ) )*
            {
            // InternalAsmetaL.g:618:3: ()
            // InternalAsmetaL.g:619:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSignatureAccess().getSignatureAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,34,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSignatureAccess().getSignatureKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,35,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSignatureAccess().getColonKeyword_2());
              		
            }
            // InternalAsmetaL.g:636:3: ( (lv_domain_3_0= ruleDomain ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==56) ) {
                    int LA16_2 = input.LA(2);

                    if ( (LA16_2==37||LA16_2==68) ) {
                        alt16=1;
                    }


                }
                else if ( (LA16_0==37||(LA16_0>=58 && LA16_0<=59)||LA16_0==68||LA16_0==70||(LA16_0>=74 && LA16_0<=79)) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalAsmetaL.g:637:4: (lv_domain_3_0= ruleDomain )
            	    {
            	    // InternalAsmetaL.g:637:4: (lv_domain_3_0= ruleDomain )
            	    // InternalAsmetaL.g:638:5: lv_domain_3_0= ruleDomain
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSignatureAccess().getDomainDomainParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_domain_3_0=ruleDomain();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSignatureRule());
            	      					}
            	      					add(
            	      						current,
            	      						"domain",
            	      						lv_domain_3_0,
            	      						"org.asmeta.xt.AsmetaL.Domain");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

            // InternalAsmetaL.g:655:3: ( (lv_function_4_0= ruleFunction ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==56||LA17_0==80||(LA17_0>=82 && LA17_0<=87)) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalAsmetaL.g:656:4: (lv_function_4_0= ruleFunction )
            	    {
            	    // InternalAsmetaL.g:656:4: (lv_function_4_0= ruleFunction )
            	    // InternalAsmetaL.g:657:5: lv_function_4_0= ruleFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSignatureAccess().getFunctionFunctionParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_function_4_0=ruleFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSignatureRule());
            	      					}
            	      					add(
            	      						current,
            	      						"function",
            	      						lv_function_4_0,
            	      						"org.asmeta.xt.AsmetaL.Function");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSignature"


    // $ANTLR start "entryRuleInitialization"
    // InternalAsmetaL.g:678:1: entryRuleInitialization returns [EObject current=null] : iv_ruleInitialization= ruleInitialization EOF ;
    public final EObject entryRuleInitialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitialization = null;


        try {
            // InternalAsmetaL.g:678:55: (iv_ruleInitialization= ruleInitialization EOF )
            // InternalAsmetaL.g:679:2: iv_ruleInitialization= ruleInitialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInitialization=ruleInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitialization"


    // $ANTLR start "ruleInitialization"
    // InternalAsmetaL.g:685:1: ruleInitialization returns [EObject current=null] : (otherlv_0= 'init' ( (lv_name_1_0= ruleextendedName ) ) otherlv_2= ':' ( (lv_domainInitialization_3_0= ruleDomainInitialization ) )* ( (lv_functionInitialization_4_0= ruleFunctionInitialization ) )* ( (lv_agentInitialization_5_0= ruleAgentInitialization ) )* ) ;
    public final EObject ruleInitialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_domainInitialization_3_0 = null;

        EObject lv_functionInitialization_4_0 = null;

        EObject lv_agentInitialization_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:691:2: ( (otherlv_0= 'init' ( (lv_name_1_0= ruleextendedName ) ) otherlv_2= ':' ( (lv_domainInitialization_3_0= ruleDomainInitialization ) )* ( (lv_functionInitialization_4_0= ruleFunctionInitialization ) )* ( (lv_agentInitialization_5_0= ruleAgentInitialization ) )* ) )
            // InternalAsmetaL.g:692:2: (otherlv_0= 'init' ( (lv_name_1_0= ruleextendedName ) ) otherlv_2= ':' ( (lv_domainInitialization_3_0= ruleDomainInitialization ) )* ( (lv_functionInitialization_4_0= ruleFunctionInitialization ) )* ( (lv_agentInitialization_5_0= ruleAgentInitialization ) )* )
            {
            // InternalAsmetaL.g:692:2: (otherlv_0= 'init' ( (lv_name_1_0= ruleextendedName ) ) otherlv_2= ':' ( (lv_domainInitialization_3_0= ruleDomainInitialization ) )* ( (lv_functionInitialization_4_0= ruleFunctionInitialization ) )* ( (lv_agentInitialization_5_0= ruleAgentInitialization ) )* )
            // InternalAsmetaL.g:693:3: otherlv_0= 'init' ( (lv_name_1_0= ruleextendedName ) ) otherlv_2= ':' ( (lv_domainInitialization_3_0= ruleDomainInitialization ) )* ( (lv_functionInitialization_4_0= ruleFunctionInitialization ) )* ( (lv_agentInitialization_5_0= ruleAgentInitialization ) )*
            {
            otherlv_0=(Token)match(input,36,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getInitializationAccess().getInitKeyword_0());
              		
            }
            // InternalAsmetaL.g:697:3: ( (lv_name_1_0= ruleextendedName ) )
            // InternalAsmetaL.g:698:4: (lv_name_1_0= ruleextendedName )
            {
            // InternalAsmetaL.g:698:4: (lv_name_1_0= ruleextendedName )
            // InternalAsmetaL.g:699:5: lv_name_1_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInitializationAccess().getNameExtendedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_1_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInitializationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,35,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getInitializationAccess().getColonKeyword_2());
              		
            }
            // InternalAsmetaL.g:720:3: ( (lv_domainInitialization_3_0= ruleDomainInitialization ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==37) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // InternalAsmetaL.g:721:4: (lv_domainInitialization_3_0= ruleDomainInitialization )
            	    {
            	    // InternalAsmetaL.g:721:4: (lv_domainInitialization_3_0= ruleDomainInitialization )
            	    // InternalAsmetaL.g:722:5: lv_domainInitialization_3_0= ruleDomainInitialization
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getInitializationAccess().getDomainInitializationDomainInitializationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_domainInitialization_3_0=ruleDomainInitialization();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getInitializationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"domainInitialization",
            	      						lv_domainInitialization_3_0,
            	      						"org.asmeta.xt.AsmetaL.DomainInitialization");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

            // InternalAsmetaL.g:739:3: ( (lv_functionInitialization_4_0= ruleFunctionInitialization ) )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( (LA19_0==39) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // InternalAsmetaL.g:740:4: (lv_functionInitialization_4_0= ruleFunctionInitialization )
            	    {
            	    // InternalAsmetaL.g:740:4: (lv_functionInitialization_4_0= ruleFunctionInitialization )
            	    // InternalAsmetaL.g:741:5: lv_functionInitialization_4_0= ruleFunctionInitialization
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getInitializationAccess().getFunctionInitializationFunctionInitializationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_functionInitialization_4_0=ruleFunctionInitialization();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getInitializationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"functionInitialization",
            	      						lv_functionInitialization_4_0,
            	      						"org.asmeta.xt.AsmetaL.FunctionInitialization");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);

            // InternalAsmetaL.g:758:3: ( (lv_agentInitialization_5_0= ruleAgentInitialization ) )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==41) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // InternalAsmetaL.g:759:4: (lv_agentInitialization_5_0= ruleAgentInitialization )
            	    {
            	    // InternalAsmetaL.g:759:4: (lv_agentInitialization_5_0= ruleAgentInitialization )
            	    // InternalAsmetaL.g:760:5: lv_agentInitialization_5_0= ruleAgentInitialization
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getInitializationAccess().getAgentInitializationAgentInitializationParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_agentInitialization_5_0=ruleAgentInitialization();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getInitializationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"agentInitialization",
            	      						lv_agentInitialization_5_0,
            	      						"org.asmeta.xt.AsmetaL.AgentInitialization");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitialization"


    // $ANTLR start "entryRuleDomainInitialization"
    // InternalAsmetaL.g:781:1: entryRuleDomainInitialization returns [EObject current=null] : iv_ruleDomainInitialization= ruleDomainInitialization EOF ;
    public final EObject entryRuleDomainInitialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDomainInitialization = null;


        try {
            // InternalAsmetaL.g:781:61: (iv_ruleDomainInitialization= ruleDomainInitialization EOF )
            // InternalAsmetaL.g:782:2: iv_ruleDomainInitialization= ruleDomainInitialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDomainInitializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDomainInitialization=ruleDomainInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDomainInitialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDomainInitialization"


    // $ANTLR start "ruleDomainInitialization"
    // InternalAsmetaL.g:788:1: ruleDomainInitialization returns [EObject current=null] : (otherlv_0= 'domain' ( (lv_initializedDomain_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) ) ;
    public final EObject ruleDomainInitialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_initializedDomain_1_0=null;
        Token otherlv_2=null;
        EObject lv_body_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:794:2: ( (otherlv_0= 'domain' ( (lv_initializedDomain_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:795:2: (otherlv_0= 'domain' ( (lv_initializedDomain_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:795:2: (otherlv_0= 'domain' ( (lv_initializedDomain_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) )
            // InternalAsmetaL.g:796:3: otherlv_0= 'domain' ( (lv_initializedDomain_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDomainInitializationAccess().getDomainKeyword_0());
              		
            }
            // InternalAsmetaL.g:800:3: ( (lv_initializedDomain_1_0= RULE_ID ) )
            // InternalAsmetaL.g:801:4: (lv_initializedDomain_1_0= RULE_ID )
            {
            // InternalAsmetaL.g:801:4: (lv_initializedDomain_1_0= RULE_ID )
            // InternalAsmetaL.g:802:5: lv_initializedDomain_1_0= RULE_ID
            {
            lv_initializedDomain_1_0=(Token)match(input,RULE_ID,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_initializedDomain_1_0, grammarAccess.getDomainInitializationAccess().getInitializedDomainIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDomainInitializationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"initializedDomain",
              						lv_initializedDomain_1_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,38,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDomainInitializationAccess().getEqualsSignKeyword_2());
              		
            }
            // InternalAsmetaL.g:822:3: ( (lv_body_3_0= ruleTerm ) )
            // InternalAsmetaL.g:823:4: (lv_body_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:823:4: (lv_body_3_0= ruleTerm )
            // InternalAsmetaL.g:824:5: lv_body_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDomainInitializationAccess().getBodyTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDomainInitializationRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDomainInitialization"


    // $ANTLR start "entryRuleFunctionInitialization"
    // InternalAsmetaL.g:845:1: entryRuleFunctionInitialization returns [EObject current=null] : iv_ruleFunctionInitialization= ruleFunctionInitialization EOF ;
    public final EObject entryRuleFunctionInitialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionInitialization = null;


        try {
            // InternalAsmetaL.g:845:63: (iv_ruleFunctionInitialization= ruleFunctionInitialization EOF )
            // InternalAsmetaL.g:846:2: iv_ruleFunctionInitialization= ruleFunctionInitialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionInitializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionInitialization=ruleFunctionInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionInitialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionInitialization"


    // $ANTLR start "ruleFunctionInitialization"
    // InternalAsmetaL.g:852:1: ruleFunctionInitialization returns [EObject current=null] : (otherlv_0= 'function' ( (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) ) ;
    public final EObject ruleFunctionInitialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_inizializedFunctionName_1_0 = null;

        AntlrDatatypeRuleToken lv_variables_3_0 = null;

        EObject lv_domain_5_0 = null;

        AntlrDatatypeRuleToken lv_variables_7_0 = null;

        EObject lv_domain_9_0 = null;

        EObject lv_body_12_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:858:2: ( (otherlv_0= 'function' ( (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:859:2: (otherlv_0= 'function' ( (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:859:2: (otherlv_0= 'function' ( (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) )
            // InternalAsmetaL.g:860:3: otherlv_0= 'function' ( (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionInitializationAccess().getFunctionKeyword_0());
              		
            }
            // InternalAsmetaL.g:864:3: ( (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction ) )
            // InternalAsmetaL.g:865:4: (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction )
            {
            // InternalAsmetaL.g:865:4: (lv_inizializedFunctionName_1_0= ruleextendedNameForFunction )
            // InternalAsmetaL.g:866:5: lv_inizializedFunctionName_1_0= ruleextendedNameForFunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionInitializationAccess().getInizializedFunctionNameExtendedNameForFunctionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_29);
            lv_inizializedFunctionName_1_0=ruleextendedNameForFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
              					}
              					set(
              						current,
              						"inizializedFunctionName",
              						lv_inizializedFunctionName_1_0,
              						"org.asmeta.xt.AsmetaL.extendedNameForFunction");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:883:3: (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==29) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalAsmetaL.g:884:4: otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')'
                    {
                    otherlv_2=(Token)match(input,29,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFunctionInitializationAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalAsmetaL.g:888:4: ( (lv_variables_3_0= ruleID_VARIABLE ) )
                    // InternalAsmetaL.g:889:5: (lv_variables_3_0= ruleID_VARIABLE )
                    {
                    // InternalAsmetaL.g:889:5: (lv_variables_3_0= ruleID_VARIABLE )
                    // InternalAsmetaL.g:890:6: lv_variables_3_0= ruleID_VARIABLE
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionInitializationAccess().getVariablesID_VARIABLEParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_variables_3_0=ruleID_VARIABLE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_3_0,
                      							"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,40,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFunctionInitializationAccess().getInKeyword_2_2());
                      			
                    }
                    // InternalAsmetaL.g:911:4: ( (lv_domain_5_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:912:5: (lv_domain_5_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:912:5: (lv_domain_5_0= rulegetDomainByID )
                    // InternalAsmetaL.g:913:6: lv_domain_5_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionInitializationAccess().getDomainGetDomainByIDParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_domain_5_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_5_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:930:4: (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )*
                    loop21:
                    do {
                        int alt21=2;
                        int LA21_0 = input.LA(1);

                        if ( (LA21_0==30) ) {
                            alt21=1;
                        }


                        switch (alt21) {
                    	case 1 :
                    	    // InternalAsmetaL.g:931:5: otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) )
                    	    {
                    	    otherlv_6=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getFunctionInitializationAccess().getCommaKeyword_2_4_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:935:5: ( (lv_variables_7_0= ruleID_VARIABLE ) )
                    	    // InternalAsmetaL.g:936:6: (lv_variables_7_0= ruleID_VARIABLE )
                    	    {
                    	    // InternalAsmetaL.g:936:6: (lv_variables_7_0= ruleID_VARIABLE )
                    	    // InternalAsmetaL.g:937:7: lv_variables_7_0= ruleID_VARIABLE
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionInitializationAccess().getVariablesID_VARIABLEParserRuleCall_2_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_31);
                    	    lv_variables_7_0=ruleID_VARIABLE();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_7_0,
                    	      								"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_8=(Token)match(input,40,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getFunctionInitializationAccess().getInKeyword_2_4_2());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:958:5: ( (lv_domain_9_0= rulegetDomainByID ) )
                    	    // InternalAsmetaL.g:959:6: (lv_domain_9_0= rulegetDomainByID )
                    	    {
                    	    // InternalAsmetaL.g:959:6: (lv_domain_9_0= rulegetDomainByID )
                    	    // InternalAsmetaL.g:960:7: lv_domain_9_0= rulegetDomainByID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionInitializationAccess().getDomainGetDomainByIDParserRuleCall_2_4_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_domain_9_0=rulegetDomainByID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_9_0,
                    	      								"org.asmeta.xt.AsmetaL.getDomainByID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop21;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,31,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getFunctionInitializationAccess().getRightParenthesisKeyword_2_5());
                      			
                    }

                    }
                    break;

            }

            otherlv_11=(Token)match(input,38,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getFunctionInitializationAccess().getEqualsSignKeyword_3());
              		
            }
            // InternalAsmetaL.g:987:3: ( (lv_body_12_0= ruleTerm ) )
            // InternalAsmetaL.g:988:4: (lv_body_12_0= ruleTerm )
            {
            // InternalAsmetaL.g:988:4: (lv_body_12_0= ruleTerm )
            // InternalAsmetaL.g:989:5: lv_body_12_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionInitializationAccess().getBodyTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_12_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_12_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionInitialization"


    // $ANTLR start "entryRuleAgentInitialization"
    // InternalAsmetaL.g:1010:1: entryRuleAgentInitialization returns [EObject current=null] : iv_ruleAgentInitialization= ruleAgentInitialization EOF ;
    public final EObject entryRuleAgentInitialization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAgentInitialization = null;


        try {
            // InternalAsmetaL.g:1010:60: (iv_ruleAgentInitialization= ruleAgentInitialization EOF )
            // InternalAsmetaL.g:1011:2: iv_ruleAgentInitialization= ruleAgentInitialization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAgentInitializationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAgentInitialization=ruleAgentInitialization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAgentInitialization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAgentInitialization"


    // $ANTLR start "ruleAgentInitialization"
    // InternalAsmetaL.g:1017:1: ruleAgentInitialization returns [EObject current=null] : (otherlv_0= 'agent' ( ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) ) ) otherlv_2= ':' ( (lv_program_3_0= ruleMacroCallRule ) ) ) ;
    public final EObject ruleAgentInitialization() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_domainName_1_1=null;
        Token lv_domainName_1_2=null;
        Token otherlv_2=null;
        EObject lv_program_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1023:2: ( (otherlv_0= 'agent' ( ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) ) ) otherlv_2= ':' ( (lv_program_3_0= ruleMacroCallRule ) ) ) )
            // InternalAsmetaL.g:1024:2: (otherlv_0= 'agent' ( ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) ) ) otherlv_2= ':' ( (lv_program_3_0= ruleMacroCallRule ) ) )
            {
            // InternalAsmetaL.g:1024:2: (otherlv_0= 'agent' ( ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) ) ) otherlv_2= ':' ( (lv_program_3_0= ruleMacroCallRule ) ) )
            // InternalAsmetaL.g:1025:3: otherlv_0= 'agent' ( ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) ) ) otherlv_2= ':' ( (lv_program_3_0= ruleMacroCallRule ) )
            {
            otherlv_0=(Token)match(input,41,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAgentInitializationAccess().getAgentKeyword_0());
              		
            }
            // InternalAsmetaL.g:1029:3: ( ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) ) )
            // InternalAsmetaL.g:1030:4: ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) )
            {
            // InternalAsmetaL.g:1030:4: ( (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' ) )
            // InternalAsmetaL.g:1031:5: (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' )
            {
            // InternalAsmetaL.g:1031:5: (lv_domainName_1_1= RULE_ID | lv_domainName_1_2= 'Agent' )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ID) ) {
                alt23=1;
            }
            else if ( (LA23_0==42) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalAsmetaL.g:1032:6: lv_domainName_1_1= RULE_ID
                    {
                    lv_domainName_1_1=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_domainName_1_1, grammarAccess.getAgentInitializationAccess().getDomainNameIDTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAgentInitializationRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"domainName",
                      							lv_domainName_1_1,
                      							"org.asmeta.xt.AsmetaL.ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:1047:6: lv_domainName_1_2= 'Agent'
                    {
                    lv_domainName_1_2=(Token)match(input,42,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_domainName_1_2, grammarAccess.getAgentInitializationAccess().getDomainNameAgentKeyword_1_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAgentInitializationRule());
                      						}
                      						setWithLastConsumed(current, "domainName", lv_domainName_1_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_2=(Token)match(input,35,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAgentInitializationAccess().getColonKeyword_2());
              		
            }
            // InternalAsmetaL.g:1064:3: ( (lv_program_3_0= ruleMacroCallRule ) )
            // InternalAsmetaL.g:1065:4: (lv_program_3_0= ruleMacroCallRule )
            {
            // InternalAsmetaL.g:1065:4: (lv_program_3_0= ruleMacroCallRule )
            // InternalAsmetaL.g:1066:5: lv_program_3_0= ruleMacroCallRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAgentInitializationAccess().getProgramMacroCallRuleParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_program_3_0=ruleMacroCallRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAgentInitializationRule());
              					}
              					set(
              						current,
              						"program",
              						lv_program_3_0,
              						"org.asmeta.xt.AsmetaL.MacroCallRule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAgentInitialization"


    // $ANTLR start "entryRuleBody"
    // InternalAsmetaL.g:1087:1: entryRuleBody returns [EObject current=null] : iv_ruleBody= ruleBody EOF ;
    public final EObject entryRuleBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBody = null;


        try {
            // InternalAsmetaL.g:1087:45: (iv_ruleBody= ruleBody EOF )
            // InternalAsmetaL.g:1088:2: iv_ruleBody= ruleBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBody=ruleBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBody"


    // $ANTLR start "ruleBody"
    // InternalAsmetaL.g:1094:1: ruleBody returns [EObject current=null] : ( () otherlv_1= 'definitions' otherlv_2= ':' ( (lv_domainDefinition_3_0= ruleDomainDefinition ) )* ( (lv_functionDefinition_4_0= ruleFunctionDefinition ) )* ( (lv_ruleDeclaration_5_0= ruleRuleDeclaration ) )* ( (lv_invariantConstraint_6_0= ruleInvariantConstraint ) )* ( (lv_fairnessConstraint_7_0= ruleFairnessConstraint ) )* ( (lv_property_8_0= ruleProperty ) )* ) ;
    public final EObject ruleBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_domainDefinition_3_0 = null;

        EObject lv_functionDefinition_4_0 = null;

        EObject lv_ruleDeclaration_5_0 = null;

        EObject lv_invariantConstraint_6_0 = null;

        EObject lv_fairnessConstraint_7_0 = null;

        EObject lv_property_8_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1100:2: ( ( () otherlv_1= 'definitions' otherlv_2= ':' ( (lv_domainDefinition_3_0= ruleDomainDefinition ) )* ( (lv_functionDefinition_4_0= ruleFunctionDefinition ) )* ( (lv_ruleDeclaration_5_0= ruleRuleDeclaration ) )* ( (lv_invariantConstraint_6_0= ruleInvariantConstraint ) )* ( (lv_fairnessConstraint_7_0= ruleFairnessConstraint ) )* ( (lv_property_8_0= ruleProperty ) )* ) )
            // InternalAsmetaL.g:1101:2: ( () otherlv_1= 'definitions' otherlv_2= ':' ( (lv_domainDefinition_3_0= ruleDomainDefinition ) )* ( (lv_functionDefinition_4_0= ruleFunctionDefinition ) )* ( (lv_ruleDeclaration_5_0= ruleRuleDeclaration ) )* ( (lv_invariantConstraint_6_0= ruleInvariantConstraint ) )* ( (lv_fairnessConstraint_7_0= ruleFairnessConstraint ) )* ( (lv_property_8_0= ruleProperty ) )* )
            {
            // InternalAsmetaL.g:1101:2: ( () otherlv_1= 'definitions' otherlv_2= ':' ( (lv_domainDefinition_3_0= ruleDomainDefinition ) )* ( (lv_functionDefinition_4_0= ruleFunctionDefinition ) )* ( (lv_ruleDeclaration_5_0= ruleRuleDeclaration ) )* ( (lv_invariantConstraint_6_0= ruleInvariantConstraint ) )* ( (lv_fairnessConstraint_7_0= ruleFairnessConstraint ) )* ( (lv_property_8_0= ruleProperty ) )* )
            // InternalAsmetaL.g:1102:3: () otherlv_1= 'definitions' otherlv_2= ':' ( (lv_domainDefinition_3_0= ruleDomainDefinition ) )* ( (lv_functionDefinition_4_0= ruleFunctionDefinition ) )* ( (lv_ruleDeclaration_5_0= ruleRuleDeclaration ) )* ( (lv_invariantConstraint_6_0= ruleInvariantConstraint ) )* ( (lv_fairnessConstraint_7_0= ruleFairnessConstraint ) )* ( (lv_property_8_0= ruleProperty ) )*
            {
            // InternalAsmetaL.g:1102:3: ()
            // InternalAsmetaL.g:1103:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBodyAccess().getBodyAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,43,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBodyAccess().getDefinitionsKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,35,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBodyAccess().getColonKeyword_2());
              		
            }
            // InternalAsmetaL.g:1120:3: ( (lv_domainDefinition_3_0= ruleDomainDefinition ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==37) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalAsmetaL.g:1121:4: (lv_domainDefinition_3_0= ruleDomainDefinition )
            	    {
            	    // InternalAsmetaL.g:1121:4: (lv_domainDefinition_3_0= ruleDomainDefinition )
            	    // InternalAsmetaL.g:1122:5: lv_domainDefinition_3_0= ruleDomainDefinition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBodyAccess().getDomainDefinitionDomainDefinitionParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_domainDefinition_3_0=ruleDomainDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"domainDefinition",
            	      						lv_domainDefinition_3_0,
            	      						"org.asmeta.xt.AsmetaL.DomainDefinition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            // InternalAsmetaL.g:1139:3: ( (lv_functionDefinition_4_0= ruleFunctionDefinition ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==39) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalAsmetaL.g:1140:4: (lv_functionDefinition_4_0= ruleFunctionDefinition )
            	    {
            	    // InternalAsmetaL.g:1140:4: (lv_functionDefinition_4_0= ruleFunctionDefinition )
            	    // InternalAsmetaL.g:1141:5: lv_functionDefinition_4_0= ruleFunctionDefinition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBodyAccess().getFunctionDefinitionFunctionDefinitionParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_35);
            	    lv_functionDefinition_4_0=ruleFunctionDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"functionDefinition",
            	      						lv_functionDefinition_4_0,
            	      						"org.asmeta.xt.AsmetaL.FunctionDefinition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            // InternalAsmetaL.g:1158:3: ( (lv_ruleDeclaration_5_0= ruleRuleDeclaration ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( ((LA26_0>=44 && LA26_0<=46)) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalAsmetaL.g:1159:4: (lv_ruleDeclaration_5_0= ruleRuleDeclaration )
            	    {
            	    // InternalAsmetaL.g:1159:4: (lv_ruleDeclaration_5_0= ruleRuleDeclaration )
            	    // InternalAsmetaL.g:1160:5: lv_ruleDeclaration_5_0= ruleRuleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBodyAccess().getRuleDeclarationRuleDeclarationParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_ruleDeclaration_5_0=ruleRuleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"ruleDeclaration",
            	      						lv_ruleDeclaration_5_0,
            	      						"org.asmeta.xt.AsmetaL.RuleDeclaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            // InternalAsmetaL.g:1177:3: ( (lv_invariantConstraint_6_0= ruleInvariantConstraint ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==55) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // InternalAsmetaL.g:1178:4: (lv_invariantConstraint_6_0= ruleInvariantConstraint )
            	    {
            	    // InternalAsmetaL.g:1178:4: (lv_invariantConstraint_6_0= ruleInvariantConstraint )
            	    // InternalAsmetaL.g:1179:5: lv_invariantConstraint_6_0= ruleInvariantConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBodyAccess().getInvariantConstraintInvariantConstraintParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_37);
            	    lv_invariantConstraint_6_0=ruleInvariantConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"invariantConstraint",
            	      						lv_invariantConstraint_6_0,
            	      						"org.asmeta.xt.AsmetaL.InvariantConstraint");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            // InternalAsmetaL.g:1196:3: ( (lv_fairnessConstraint_7_0= ruleFairnessConstraint ) )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( ((LA28_0>=53 && LA28_0<=54)) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalAsmetaL.g:1197:4: (lv_fairnessConstraint_7_0= ruleFairnessConstraint )
            	    {
            	    // InternalAsmetaL.g:1197:4: (lv_fairnessConstraint_7_0= ruleFairnessConstraint )
            	    // InternalAsmetaL.g:1198:5: lv_fairnessConstraint_7_0= ruleFairnessConstraint
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBodyAccess().getFairnessConstraintFairnessConstraintParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_fairnessConstraint_7_0=ruleFairnessConstraint();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"fairnessConstraint",
            	      						lv_fairnessConstraint_7_0,
            	      						"org.asmeta.xt.AsmetaL.FairnessConstraint");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

            // InternalAsmetaL.g:1215:3: ( (lv_property_8_0= ruleProperty ) )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==47||(LA29_0>=49 && LA29_0<=52)) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalAsmetaL.g:1216:4: (lv_property_8_0= ruleProperty )
            	    {
            	    // InternalAsmetaL.g:1216:4: (lv_property_8_0= ruleProperty )
            	    // InternalAsmetaL.g:1217:5: lv_property_8_0= ruleProperty
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBodyAccess().getPropertyPropertyParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_property_8_0=ruleProperty();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"property",
            	      						lv_property_8_0,
            	      						"org.asmeta.xt.AsmetaL.Property");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBody"


    // $ANTLR start "entryRuleDomainDefinition"
    // InternalAsmetaL.g:1238:1: entryRuleDomainDefinition returns [EObject current=null] : iv_ruleDomainDefinition= ruleDomainDefinition EOF ;
    public final EObject entryRuleDomainDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDomainDefinition = null;


        try {
            // InternalAsmetaL.g:1238:57: (iv_ruleDomainDefinition= ruleDomainDefinition EOF )
            // InternalAsmetaL.g:1239:2: iv_ruleDomainDefinition= ruleDomainDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDomainDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDomainDefinition=ruleDomainDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDomainDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDomainDefinition"


    // $ANTLR start "ruleDomainDefinition"
    // InternalAsmetaL.g:1245:1: ruleDomainDefinition returns [EObject current=null] : (otherlv_0= 'domain' ( (lv_definedDomainName_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) ) ;
    public final EObject ruleDomainDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_definedDomainName_1_0=null;
        Token otherlv_2=null;
        EObject lv_body_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1251:2: ( (otherlv_0= 'domain' ( (lv_definedDomainName_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:1252:2: (otherlv_0= 'domain' ( (lv_definedDomainName_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:1252:2: (otherlv_0= 'domain' ( (lv_definedDomainName_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) ) )
            // InternalAsmetaL.g:1253:3: otherlv_0= 'domain' ( (lv_definedDomainName_1_0= RULE_ID ) ) otherlv_2= '=' ( (lv_body_3_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDomainDefinitionAccess().getDomainKeyword_0());
              		
            }
            // InternalAsmetaL.g:1257:3: ( (lv_definedDomainName_1_0= RULE_ID ) )
            // InternalAsmetaL.g:1258:4: (lv_definedDomainName_1_0= RULE_ID )
            {
            // InternalAsmetaL.g:1258:4: (lv_definedDomainName_1_0= RULE_ID )
            // InternalAsmetaL.g:1259:5: lv_definedDomainName_1_0= RULE_ID
            {
            lv_definedDomainName_1_0=(Token)match(input,RULE_ID,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_definedDomainName_1_0, grammarAccess.getDomainDefinitionAccess().getDefinedDomainNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDomainDefinitionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"definedDomainName",
              						lv_definedDomainName_1_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,38,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDomainDefinitionAccess().getEqualsSignKeyword_2());
              		
            }
            // InternalAsmetaL.g:1279:3: ( (lv_body_3_0= ruleTerm ) )
            // InternalAsmetaL.g:1280:4: (lv_body_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:1280:4: (lv_body_3_0= ruleTerm )
            // InternalAsmetaL.g:1281:5: lv_body_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDomainDefinitionAccess().getBodyTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDomainDefinitionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDomainDefinition"


    // $ANTLR start "entryRuleFunctionDefinition"
    // InternalAsmetaL.g:1302:1: entryRuleFunctionDefinition returns [EObject current=null] : iv_ruleFunctionDefinition= ruleFunctionDefinition EOF ;
    public final EObject entryRuleFunctionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionDefinition = null;


        try {
            // InternalAsmetaL.g:1302:59: (iv_ruleFunctionDefinition= ruleFunctionDefinition EOF )
            // InternalAsmetaL.g:1303:2: iv_ruleFunctionDefinition= ruleFunctionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionDefinition=ruleFunctionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionDefinition"


    // $ANTLR start "ruleFunctionDefinition"
    // InternalAsmetaL.g:1309:1: ruleFunctionDefinition returns [EObject current=null] : (otherlv_0= 'function' ( (lv_definedFunctionName_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) ) ;
    public final EObject ruleFunctionDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_definedFunctionName_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        AntlrDatatypeRuleToken lv_variables_3_0 = null;

        EObject lv_domain_5_0 = null;

        AntlrDatatypeRuleToken lv_variables_7_0 = null;

        EObject lv_domain_9_0 = null;

        EObject lv_body_12_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1315:2: ( (otherlv_0= 'function' ( (lv_definedFunctionName_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:1316:2: (otherlv_0= 'function' ( (lv_definedFunctionName_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:1316:2: (otherlv_0= 'function' ( (lv_definedFunctionName_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) ) )
            // InternalAsmetaL.g:1317:3: otherlv_0= 'function' ( (lv_definedFunctionName_1_0= RULE_ID ) ) (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )? otherlv_11= '=' ( (lv_body_12_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_0());
              		
            }
            // InternalAsmetaL.g:1321:3: ( (lv_definedFunctionName_1_0= RULE_ID ) )
            // InternalAsmetaL.g:1322:4: (lv_definedFunctionName_1_0= RULE_ID )
            {
            // InternalAsmetaL.g:1322:4: (lv_definedFunctionName_1_0= RULE_ID )
            // InternalAsmetaL.g:1323:5: lv_definedFunctionName_1_0= RULE_ID
            {
            lv_definedFunctionName_1_0=(Token)match(input,RULE_ID,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_definedFunctionName_1_0, grammarAccess.getFunctionDefinitionAccess().getDefinedFunctionNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionDefinitionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"definedFunctionName",
              						lv_definedFunctionName_1_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            // InternalAsmetaL.g:1339:3: (otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')' )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==29) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalAsmetaL.g:1340:4: otherlv_2= '(' ( (lv_variables_3_0= ruleID_VARIABLE ) ) otherlv_4= 'in' ( (lv_domain_5_0= rulegetDomainByID ) ) (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )* otherlv_10= ')'
                    {
                    otherlv_2=(Token)match(input,29,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalAsmetaL.g:1344:4: ( (lv_variables_3_0= ruleID_VARIABLE ) )
                    // InternalAsmetaL.g:1345:5: (lv_variables_3_0= ruleID_VARIABLE )
                    {
                    // InternalAsmetaL.g:1345:5: (lv_variables_3_0= ruleID_VARIABLE )
                    // InternalAsmetaL.g:1346:6: lv_variables_3_0= ruleID_VARIABLE
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getVariablesID_VARIABLEParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_variables_3_0=ruleID_VARIABLE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_3_0,
                      							"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,40,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getFunctionDefinitionAccess().getInKeyword_2_2());
                      			
                    }
                    // InternalAsmetaL.g:1367:4: ( (lv_domain_5_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:1368:5: (lv_domain_5_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:1368:5: (lv_domain_5_0= rulegetDomainByID )
                    // InternalAsmetaL.g:1369:6: lv_domain_5_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getDomainGetDomainByIDParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_domain_5_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_5_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:1386:4: (otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) ) )*
                    loop30:
                    do {
                        int alt30=2;
                        int LA30_0 = input.LA(1);

                        if ( (LA30_0==30) ) {
                            alt30=1;
                        }


                        switch (alt30) {
                    	case 1 :
                    	    // InternalAsmetaL.g:1387:5: otherlv_6= ',' ( (lv_variables_7_0= ruleID_VARIABLE ) ) otherlv_8= 'in' ( (lv_domain_9_0= rulegetDomainByID ) )
                    	    {
                    	    otherlv_6=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_6, grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_2_4_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:1391:5: ( (lv_variables_7_0= ruleID_VARIABLE ) )
                    	    // InternalAsmetaL.g:1392:6: (lv_variables_7_0= ruleID_VARIABLE )
                    	    {
                    	    // InternalAsmetaL.g:1392:6: (lv_variables_7_0= ruleID_VARIABLE )
                    	    // InternalAsmetaL.g:1393:7: lv_variables_7_0= ruleID_VARIABLE
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getVariablesID_VARIABLEParserRuleCall_2_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_31);
                    	    lv_variables_7_0=ruleID_VARIABLE();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_7_0,
                    	      								"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_8=(Token)match(input,40,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getFunctionDefinitionAccess().getInKeyword_2_4_2());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:1414:5: ( (lv_domain_9_0= rulegetDomainByID ) )
                    	    // InternalAsmetaL.g:1415:6: (lv_domain_9_0= rulegetDomainByID )
                    	    {
                    	    // InternalAsmetaL.g:1415:6: (lv_domain_9_0= rulegetDomainByID )
                    	    // InternalAsmetaL.g:1416:7: lv_domain_9_0= rulegetDomainByID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getDomainGetDomainByIDParserRuleCall_2_4_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_domain_9_0=rulegetDomainByID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_9_0,
                    	      								"org.asmeta.xt.AsmetaL.getDomainByID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop30;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,31,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_2_5());
                      			
                    }

                    }
                    break;

            }

            otherlv_11=(Token)match(input,38,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getFunctionDefinitionAccess().getEqualsSignKeyword_3());
              		
            }
            // InternalAsmetaL.g:1443:3: ( (lv_body_12_0= ruleTerm ) )
            // InternalAsmetaL.g:1444:4: (lv_body_12_0= ruleTerm )
            {
            // InternalAsmetaL.g:1444:4: (lv_body_12_0= ruleTerm )
            // InternalAsmetaL.g:1445:5: lv_body_12_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getBodyTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_12_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_12_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionDefinition"


    // $ANTLR start "entryRuleRuleDeclaration"
    // InternalAsmetaL.g:1466:1: entryRuleRuleDeclaration returns [EObject current=null] : iv_ruleRuleDeclaration= ruleRuleDeclaration EOF ;
    public final EObject entryRuleRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRuleDeclaration = null;


        try {
            // InternalAsmetaL.g:1466:56: (iv_ruleRuleDeclaration= ruleRuleDeclaration EOF )
            // InternalAsmetaL.g:1467:2: iv_ruleRuleDeclaration= ruleRuleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRuleDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRuleDeclaration=ruleRuleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRuleDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRuleDeclaration"


    // $ANTLR start "ruleRuleDeclaration"
    // InternalAsmetaL.g:1473:1: ruleRuleDeclaration returns [EObject current=null] : (this_MacroDeclaration_0= ruleMacroDeclaration | this_TurboDeclaration_1= ruleTurboDeclaration ) ;
    public final EObject ruleRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_MacroDeclaration_0 = null;

        EObject this_TurboDeclaration_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1479:2: ( (this_MacroDeclaration_0= ruleMacroDeclaration | this_TurboDeclaration_1= ruleTurboDeclaration ) )
            // InternalAsmetaL.g:1480:2: (this_MacroDeclaration_0= ruleMacroDeclaration | this_TurboDeclaration_1= ruleTurboDeclaration )
            {
            // InternalAsmetaL.g:1480:2: (this_MacroDeclaration_0= ruleMacroDeclaration | this_TurboDeclaration_1= ruleTurboDeclaration )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( ((LA32_0>=44 && LA32_0<=45)) ) {
                alt32=1;
            }
            else if ( (LA32_0==46) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // InternalAsmetaL.g:1481:3: this_MacroDeclaration_0= ruleMacroDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleDeclarationAccess().getMacroDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MacroDeclaration_0=ruleMacroDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MacroDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:1493:3: this_TurboDeclaration_1= ruleTurboDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleDeclarationAccess().getTurboDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TurboDeclaration_1=ruleTurboDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TurboDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRuleDeclaration"


    // $ANTLR start "entryRuleMacroDeclaration"
    // InternalAsmetaL.g:1508:1: entryRuleMacroDeclaration returns [EObject current=null] : iv_ruleMacroDeclaration= ruleMacroDeclaration EOF ;
    public final EObject entryRuleMacroDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMacroDeclaration = null;


        try {
            // InternalAsmetaL.g:1508:57: (iv_ruleMacroDeclaration= ruleMacroDeclaration EOF )
            // InternalAsmetaL.g:1509:2: iv_ruleMacroDeclaration= ruleMacroDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMacroDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMacroDeclaration=ruleMacroDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMacroDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMacroDeclaration"


    // $ANTLR start "ruleMacroDeclaration"
    // InternalAsmetaL.g:1515:1: ruleMacroDeclaration returns [EObject current=null] : ( (otherlv_0= 'macro' )? otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) ) ;
    public final EObject ruleMacroDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        AntlrDatatypeRuleToken lv_variables_4_0 = null;

        EObject lv_domain_6_0 = null;

        AntlrDatatypeRuleToken lv_variables_8_0 = null;

        EObject lv_domain_10_0 = null;

        EObject lv_returnedDomain_13_0 = null;

        EObject lv_ruleBody_15_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1521:2: ( ( (otherlv_0= 'macro' )? otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:1522:2: ( (otherlv_0= 'macro' )? otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:1522:2: ( (otherlv_0= 'macro' )? otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) )
            // InternalAsmetaL.g:1523:3: (otherlv_0= 'macro' )? otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) )
            {
            // InternalAsmetaL.g:1523:3: (otherlv_0= 'macro' )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==44) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalAsmetaL.g:1524:4: otherlv_0= 'macro'
                    {
                    otherlv_0=(Token)match(input,44,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getMacroDeclarationAccess().getMacroKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,45,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMacroDeclarationAccess().getRuleKeyword_1());
              		
            }
            // InternalAsmetaL.g:1533:3: ( (lv_name_2_0= RULE_RULE_ID ) )
            // InternalAsmetaL.g:1534:4: (lv_name_2_0= RULE_RULE_ID )
            {
            // InternalAsmetaL.g:1534:4: (lv_name_2_0= RULE_RULE_ID )
            // InternalAsmetaL.g:1535:5: lv_name_2_0= RULE_RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_RULE_ID,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getMacroDeclarationAccess().getNameRULE_IDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMacroDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.RULE_ID");
              				
            }

            }


            }

            // InternalAsmetaL.g:1551:3: (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==29) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalAsmetaL.g:1552:4: otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')'
                    {
                    otherlv_3=(Token)match(input,29,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getMacroDeclarationAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalAsmetaL.g:1556:4: ( (lv_variables_4_0= ruleID_VARIABLE ) )
                    // InternalAsmetaL.g:1557:5: (lv_variables_4_0= ruleID_VARIABLE )
                    {
                    // InternalAsmetaL.g:1557:5: (lv_variables_4_0= ruleID_VARIABLE )
                    // InternalAsmetaL.g:1558:6: lv_variables_4_0= ruleID_VARIABLE
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMacroDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_variables_4_0=ruleID_VARIABLE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_4_0,
                      							"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,40,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getMacroDeclarationAccess().getInKeyword_3_2());
                      			
                    }
                    // InternalAsmetaL.g:1579:4: ( (lv_domain_6_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:1580:5: (lv_domain_6_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:1580:5: (lv_domain_6_0= rulegetDomainByID )
                    // InternalAsmetaL.g:1581:6: lv_domain_6_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMacroDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_3_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_domain_6_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_6_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:1598:4: (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )*
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( (LA34_0==30) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // InternalAsmetaL.g:1599:5: otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) )
                    	    {
                    	    otherlv_7=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getMacroDeclarationAccess().getCommaKeyword_3_4_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:1603:5: ( (lv_variables_8_0= ruleID_VARIABLE ) )
                    	    // InternalAsmetaL.g:1604:6: (lv_variables_8_0= ruleID_VARIABLE )
                    	    {
                    	    // InternalAsmetaL.g:1604:6: (lv_variables_8_0= ruleID_VARIABLE )
                    	    // InternalAsmetaL.g:1605:7: lv_variables_8_0= ruleID_VARIABLE
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMacroDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_31);
                    	    lv_variables_8_0=ruleID_VARIABLE();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_8_0,
                    	      								"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_9=(Token)match(input,40,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getMacroDeclarationAccess().getInKeyword_3_4_2());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:1626:5: ( (lv_domain_10_0= rulegetDomainByID ) )
                    	    // InternalAsmetaL.g:1627:6: (lv_domain_10_0= rulegetDomainByID )
                    	    {
                    	    // InternalAsmetaL.g:1627:6: (lv_domain_10_0= rulegetDomainByID )
                    	    // InternalAsmetaL.g:1628:7: lv_domain_10_0= rulegetDomainByID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMacroDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_4_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_domain_10_0=rulegetDomainByID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_10_0,
                    	      								"org.asmeta.xt.AsmetaL.getDomainByID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop34;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,31,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMacroDeclarationAccess().getRightParenthesisKeyword_3_5());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:1651:3: (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==40) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalAsmetaL.g:1652:4: otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) )
                    {
                    otherlv_12=(Token)match(input,40,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getMacroDeclarationAccess().getInKeyword_4_0());
                      			
                    }
                    // InternalAsmetaL.g:1656:4: ( (lv_returnedDomain_13_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:1657:5: (lv_returnedDomain_13_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:1657:5: (lv_returnedDomain_13_0= rulegetDomainByID )
                    // InternalAsmetaL.g:1658:6: lv_returnedDomain_13_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMacroDeclarationAccess().getReturnedDomainGetDomainByIDParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_26);
                    lv_returnedDomain_13_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"returnedDomain",
                      							lv_returnedDomain_13_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_14=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getMacroDeclarationAccess().getEqualsSignKeyword_5());
              		
            }
            // InternalAsmetaL.g:1680:3: ( (lv_ruleBody_15_0= ruleRule ) )
            // InternalAsmetaL.g:1681:4: (lv_ruleBody_15_0= ruleRule )
            {
            // InternalAsmetaL.g:1681:4: (lv_ruleBody_15_0= ruleRule )
            // InternalAsmetaL.g:1682:5: lv_ruleBody_15_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMacroDeclarationAccess().getRuleBodyRuleParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ruleBody_15_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
              					}
              					set(
              						current,
              						"ruleBody",
              						lv_ruleBody_15_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMacroDeclaration"


    // $ANTLR start "entryRuleTurboDeclaration"
    // InternalAsmetaL.g:1703:1: entryRuleTurboDeclaration returns [EObject current=null] : iv_ruleTurboDeclaration= ruleTurboDeclaration EOF ;
    public final EObject entryRuleTurboDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTurboDeclaration = null;


        try {
            // InternalAsmetaL.g:1703:57: (iv_ruleTurboDeclaration= ruleTurboDeclaration EOF )
            // InternalAsmetaL.g:1704:2: iv_ruleTurboDeclaration= ruleTurboDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTurboDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTurboDeclaration=ruleTurboDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTurboDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTurboDeclaration"


    // $ANTLR start "ruleTurboDeclaration"
    // InternalAsmetaL.g:1710:1: ruleTurboDeclaration returns [EObject current=null] : (otherlv_0= 'turbo' otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) ) ;
    public final EObject ruleTurboDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        AntlrDatatypeRuleToken lv_variables_4_0 = null;

        EObject lv_domain_6_0 = null;

        AntlrDatatypeRuleToken lv_variables_8_0 = null;

        EObject lv_domain_10_0 = null;

        EObject lv_returnedDomain_13_0 = null;

        EObject lv_ruleBody_15_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1716:2: ( (otherlv_0= 'turbo' otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:1717:2: (otherlv_0= 'turbo' otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:1717:2: (otherlv_0= 'turbo' otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) ) )
            // InternalAsmetaL.g:1718:3: otherlv_0= 'turbo' otherlv_1= 'rule' ( (lv_name_2_0= RULE_RULE_ID ) ) (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )? (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )? otherlv_14= '=' ( (lv_ruleBody_15_0= ruleRule ) )
            {
            otherlv_0=(Token)match(input,46,FOLLOW_40); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTurboDeclarationAccess().getTurboKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,45,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTurboDeclarationAccess().getRuleKeyword_1());
              		
            }
            // InternalAsmetaL.g:1726:3: ( (lv_name_2_0= RULE_RULE_ID ) )
            // InternalAsmetaL.g:1727:4: (lv_name_2_0= RULE_RULE_ID )
            {
            // InternalAsmetaL.g:1727:4: (lv_name_2_0= RULE_RULE_ID )
            // InternalAsmetaL.g:1728:5: lv_name_2_0= RULE_RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_RULE_ID,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getTurboDeclarationAccess().getNameRULE_IDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTurboDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.RULE_ID");
              				
            }

            }


            }

            // InternalAsmetaL.g:1744:3: (otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')' )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==29) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalAsmetaL.g:1745:4: otherlv_3= '(' ( (lv_variables_4_0= ruleID_VARIABLE ) ) otherlv_5= 'in' ( (lv_domain_6_0= rulegetDomainByID ) ) (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )* otherlv_11= ')'
                    {
                    otherlv_3=(Token)match(input,29,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTurboDeclarationAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalAsmetaL.g:1749:4: ( (lv_variables_4_0= ruleID_VARIABLE ) )
                    // InternalAsmetaL.g:1750:5: (lv_variables_4_0= ruleID_VARIABLE )
                    {
                    // InternalAsmetaL.g:1750:5: (lv_variables_4_0= ruleID_VARIABLE )
                    // InternalAsmetaL.g:1751:6: lv_variables_4_0= ruleID_VARIABLE
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTurboDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_variables_4_0=ruleID_VARIABLE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"variables",
                      							lv_variables_4_0,
                      							"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,40,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTurboDeclarationAccess().getInKeyword_3_2());
                      			
                    }
                    // InternalAsmetaL.g:1772:4: ( (lv_domain_6_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:1773:5: (lv_domain_6_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:1773:5: (lv_domain_6_0= rulegetDomainByID )
                    // InternalAsmetaL.g:1774:6: lv_domain_6_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTurboDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_3_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_domain_6_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_6_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:1791:4: (otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) ) )*
                    loop37:
                    do {
                        int alt37=2;
                        int LA37_0 = input.LA(1);

                        if ( (LA37_0==30) ) {
                            alt37=1;
                        }


                        switch (alt37) {
                    	case 1 :
                    	    // InternalAsmetaL.g:1792:5: otherlv_7= ',' ( (lv_variables_8_0= ruleID_VARIABLE ) ) otherlv_9= 'in' ( (lv_domain_10_0= rulegetDomainByID ) )
                    	    {
                    	    otherlv_7=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getTurboDeclarationAccess().getCommaKeyword_3_4_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:1796:5: ( (lv_variables_8_0= ruleID_VARIABLE ) )
                    	    // InternalAsmetaL.g:1797:6: (lv_variables_8_0= ruleID_VARIABLE )
                    	    {
                    	    // InternalAsmetaL.g:1797:6: (lv_variables_8_0= ruleID_VARIABLE )
                    	    // InternalAsmetaL.g:1798:7: lv_variables_8_0= ruleID_VARIABLE
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTurboDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_4_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_31);
                    	    lv_variables_8_0=ruleID_VARIABLE();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"variables",
                    	      								lv_variables_8_0,
                    	      								"org.asmeta.xt.AsmetaL.ID_VARIABLE");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_9=(Token)match(input,40,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getTurboDeclarationAccess().getInKeyword_3_4_2());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:1819:5: ( (lv_domain_10_0= rulegetDomainByID ) )
                    	    // InternalAsmetaL.g:1820:6: (lv_domain_10_0= rulegetDomainByID )
                    	    {
                    	    // InternalAsmetaL.g:1820:6: (lv_domain_10_0= rulegetDomainByID )
                    	    // InternalAsmetaL.g:1821:7: lv_domain_10_0= rulegetDomainByID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTurboDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_4_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_domain_10_0=rulegetDomainByID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_10_0,
                    	      								"org.asmeta.xt.AsmetaL.getDomainByID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop37;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,31,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getTurboDeclarationAccess().getRightParenthesisKeyword_3_5());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:1844:3: (otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==40) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalAsmetaL.g:1845:4: otherlv_12= 'in' ( (lv_returnedDomain_13_0= rulegetDomainByID ) )
                    {
                    otherlv_12=(Token)match(input,40,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getTurboDeclarationAccess().getInKeyword_4_0());
                      			
                    }
                    // InternalAsmetaL.g:1849:4: ( (lv_returnedDomain_13_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:1850:5: (lv_returnedDomain_13_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:1850:5: (lv_returnedDomain_13_0= rulegetDomainByID )
                    // InternalAsmetaL.g:1851:6: lv_returnedDomain_13_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTurboDeclarationAccess().getReturnedDomainGetDomainByIDParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_26);
                    lv_returnedDomain_13_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"returnedDomain",
                      							lv_returnedDomain_13_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_14=(Token)match(input,38,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getTurboDeclarationAccess().getEqualsSignKeyword_5());
              		
            }
            // InternalAsmetaL.g:1873:3: ( (lv_ruleBody_15_0= ruleRule ) )
            // InternalAsmetaL.g:1874:4: (lv_ruleBody_15_0= ruleRule )
            {
            // InternalAsmetaL.g:1874:4: (lv_ruleBody_15_0= ruleRule )
            // InternalAsmetaL.g:1875:5: lv_ruleBody_15_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTurboDeclarationAccess().getRuleBodyRuleParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_ruleBody_15_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
              					}
              					set(
              						current,
              						"ruleBody",
              						lv_ruleBody_15_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTurboDeclaration"


    // $ANTLR start "entryRuleProperty"
    // InternalAsmetaL.g:1896:1: entryRuleProperty returns [EObject current=null] : iv_ruleProperty= ruleProperty EOF ;
    public final EObject entryRuleProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProperty = null;


        try {
            // InternalAsmetaL.g:1896:49: (iv_ruleProperty= ruleProperty EOF )
            // InternalAsmetaL.g:1897:2: iv_ruleProperty= ruleProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProperty=ruleProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProperty; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProperty"


    // $ANTLR start "ruleProperty"
    // InternalAsmetaL.g:1903:1: ruleProperty returns [EObject current=null] : (this_Invariant_0= ruleInvariant | this_TemporalProperty_1= ruleTemporalProperty ) ;
    public final EObject ruleProperty() throws RecognitionException {
        EObject current = null;

        EObject this_Invariant_0 = null;

        EObject this_TemporalProperty_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1909:2: ( (this_Invariant_0= ruleInvariant | this_TemporalProperty_1= ruleTemporalProperty ) )
            // InternalAsmetaL.g:1910:2: (this_Invariant_0= ruleInvariant | this_TemporalProperty_1= ruleTemporalProperty )
            {
            // InternalAsmetaL.g:1910:2: (this_Invariant_0= ruleInvariant | this_TemporalProperty_1= ruleTemporalProperty )
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==47) ) {
                alt40=1;
            }
            else if ( ((LA40_0>=49 && LA40_0<=52)) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }
            switch (alt40) {
                case 1 :
                    // InternalAsmetaL.g:1911:3: this_Invariant_0= ruleInvariant
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPropertyAccess().getInvariantParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Invariant_0=ruleInvariant();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Invariant_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:1923:3: this_TemporalProperty_1= ruleTemporalProperty
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPropertyAccess().getTemporalPropertyParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TemporalProperty_1=ruleTemporalProperty();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TemporalProperty_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProperty"


    // $ANTLR start "entryRuleTemporalProperty"
    // InternalAsmetaL.g:1938:1: entryRuleTemporalProperty returns [EObject current=null] : iv_ruleTemporalProperty= ruleTemporalProperty EOF ;
    public final EObject entryRuleTemporalProperty() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTemporalProperty = null;


        try {
            // InternalAsmetaL.g:1938:57: (iv_ruleTemporalProperty= ruleTemporalProperty EOF )
            // InternalAsmetaL.g:1939:2: iv_ruleTemporalProperty= ruleTemporalProperty EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemporalPropertyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemporalProperty=ruleTemporalProperty();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemporalProperty; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTemporalProperty"


    // $ANTLR start "ruleTemporalProperty"
    // InternalAsmetaL.g:1945:1: ruleTemporalProperty returns [EObject current=null] : (this_CtlSpec_0= ruleCtlSpec | this_LtlSpec_1= ruleLtlSpec ) ;
    public final EObject ruleTemporalProperty() throws RecognitionException {
        EObject current = null;

        EObject this_CtlSpec_0 = null;

        EObject this_LtlSpec_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1951:2: ( (this_CtlSpec_0= ruleCtlSpec | this_LtlSpec_1= ruleLtlSpec ) )
            // InternalAsmetaL.g:1952:2: (this_CtlSpec_0= ruleCtlSpec | this_LtlSpec_1= ruleLtlSpec )
            {
            // InternalAsmetaL.g:1952:2: (this_CtlSpec_0= ruleCtlSpec | this_LtlSpec_1= ruleLtlSpec )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( ((LA41_0>=49 && LA41_0<=50)) ) {
                alt41=1;
            }
            else if ( ((LA41_0>=51 && LA41_0<=52)) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalAsmetaL.g:1953:3: this_CtlSpec_0= ruleCtlSpec
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTemporalPropertyAccess().getCtlSpecParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CtlSpec_0=ruleCtlSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CtlSpec_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:1965:3: this_LtlSpec_1= ruleLtlSpec
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTemporalPropertyAccess().getLtlSpecParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LtlSpec_1=ruleLtlSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LtlSpec_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTemporalProperty"


    // $ANTLR start "entryRuleInvariant"
    // InternalAsmetaL.g:1980:1: entryRuleInvariant returns [EObject current=null] : iv_ruleInvariant= ruleInvariant EOF ;
    public final EObject entryRuleInvariant() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvariant = null;


        try {
            // InternalAsmetaL.g:1980:50: (iv_ruleInvariant= ruleInvariant EOF )
            // InternalAsmetaL.g:1981:2: iv_ruleInvariant= ruleInvariant EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvariantRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvariant=ruleInvariant();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvariant; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvariant"


    // $ANTLR start "ruleInvariant"
    // InternalAsmetaL.g:1987:1: ruleInvariant returns [EObject current=null] : (otherlv_0= 'invariant' ( (lv_name_1_0= RULE_ID ) )? otherlv_2= 'over' ( (lv_invar_list_3_0= ruleInvariantElement ) ) (otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) ) )* otherlv_6= ':' ( (lv_body_7_0= ruleTerm ) ) ) ;
    public final EObject ruleInvariant() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_invar_list_3_0 = null;

        EObject lv_invar_list_5_0 = null;

        EObject lv_body_7_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:1993:2: ( (otherlv_0= 'invariant' ( (lv_name_1_0= RULE_ID ) )? otherlv_2= 'over' ( (lv_invar_list_3_0= ruleInvariantElement ) ) (otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) ) )* otherlv_6= ':' ( (lv_body_7_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:1994:2: (otherlv_0= 'invariant' ( (lv_name_1_0= RULE_ID ) )? otherlv_2= 'over' ( (lv_invar_list_3_0= ruleInvariantElement ) ) (otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) ) )* otherlv_6= ':' ( (lv_body_7_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:1994:2: (otherlv_0= 'invariant' ( (lv_name_1_0= RULE_ID ) )? otherlv_2= 'over' ( (lv_invar_list_3_0= ruleInvariantElement ) ) (otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) ) )* otherlv_6= ':' ( (lv_body_7_0= ruleTerm ) ) )
            // InternalAsmetaL.g:1995:3: otherlv_0= 'invariant' ( (lv_name_1_0= RULE_ID ) )? otherlv_2= 'over' ( (lv_invar_list_3_0= ruleInvariantElement ) ) (otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) ) )* otherlv_6= ':' ( (lv_body_7_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,47,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getInvariantAccess().getInvariantKeyword_0());
              		
            }
            // InternalAsmetaL.g:1999:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==RULE_ID) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalAsmetaL.g:2000:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalAsmetaL.g:2000:4: (lv_name_1_0= RULE_ID )
                    // InternalAsmetaL.g:2001:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getInvariantAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getInvariantRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.asmeta.xt.AsmetaL.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,48,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getInvariantAccess().getOverKeyword_2());
              		
            }
            // InternalAsmetaL.g:2021:3: ( (lv_invar_list_3_0= ruleInvariantElement ) )
            // InternalAsmetaL.g:2022:4: (lv_invar_list_3_0= ruleInvariantElement )
            {
            // InternalAsmetaL.g:2022:4: (lv_invar_list_3_0= ruleInvariantElement )
            // InternalAsmetaL.g:2023:5: lv_invar_list_3_0= ruleInvariantElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvariantAccess().getInvar_listInvariantElementParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_48);
            lv_invar_list_3_0=ruleInvariantElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvariantRule());
              					}
              					add(
              						current,
              						"invar_list",
              						lv_invar_list_3_0,
              						"org.asmeta.xt.AsmetaL.InvariantElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:2040:3: (otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==30) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalAsmetaL.g:2041:4: otherlv_4= ',' ( (lv_invar_list_5_0= ruleInvariantElement ) )
            	    {
            	    otherlv_4=(Token)match(input,30,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getInvariantAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:2045:4: ( (lv_invar_list_5_0= ruleInvariantElement ) )
            	    // InternalAsmetaL.g:2046:5: (lv_invar_list_5_0= ruleInvariantElement )
            	    {
            	    // InternalAsmetaL.g:2046:5: (lv_invar_list_5_0= ruleInvariantElement )
            	    // InternalAsmetaL.g:2047:6: lv_invar_list_5_0= ruleInvariantElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getInvariantAccess().getInvar_listInvariantElementParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_48);
            	    lv_invar_list_5_0=ruleInvariantElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getInvariantRule());
            	      						}
            	      						add(
            	      							current,
            	      							"invar_list",
            	      							lv_invar_list_5_0,
            	      							"org.asmeta.xt.AsmetaL.InvariantElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            otherlv_6=(Token)match(input,35,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getInvariantAccess().getColonKeyword_5());
              		
            }
            // InternalAsmetaL.g:2069:3: ( (lv_body_7_0= ruleTerm ) )
            // InternalAsmetaL.g:2070:4: (lv_body_7_0= ruleTerm )
            {
            // InternalAsmetaL.g:2070:4: (lv_body_7_0= ruleTerm )
            // InternalAsmetaL.g:2071:5: lv_body_7_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvariantAccess().getBodyTermParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_7_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvariantRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_7_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvariant"


    // $ANTLR start "entryRuleInvariantElement"
    // InternalAsmetaL.g:2092:1: entryRuleInvariantElement returns [EObject current=null] : iv_ruleInvariantElement= ruleInvariantElement EOF ;
    public final EObject entryRuleInvariantElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvariantElement = null;


        try {
            // InternalAsmetaL.g:2092:57: (iv_ruleInvariantElement= ruleInvariantElement EOF )
            // InternalAsmetaL.g:2093:2: iv_ruleInvariantElement= ruleInvariantElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvariantElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvariantElement=ruleInvariantElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvariantElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvariantElement"


    // $ANTLR start "ruleInvariantElement"
    // InternalAsmetaL.g:2099:1: ruleInvariantElement returns [EObject current=null] : ( ( ( (lv_constrainedName_0_0= RULE_ID ) ) | ( (lv_constrainedDomain_1_0= ruleStandardDomain ) ) ) (otherlv_2= '(' ( (lv_domainList_3_0= rulegetDomainByID ) )? otherlv_4= ')' )? ) ;
    public final EObject ruleInvariantElement() throws RecognitionException {
        EObject current = null;

        Token lv_constrainedName_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_constrainedDomain_1_0 = null;

        EObject lv_domainList_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2105:2: ( ( ( ( (lv_constrainedName_0_0= RULE_ID ) ) | ( (lv_constrainedDomain_1_0= ruleStandardDomain ) ) ) (otherlv_2= '(' ( (lv_domainList_3_0= rulegetDomainByID ) )? otherlv_4= ')' )? ) )
            // InternalAsmetaL.g:2106:2: ( ( ( (lv_constrainedName_0_0= RULE_ID ) ) | ( (lv_constrainedDomain_1_0= ruleStandardDomain ) ) ) (otherlv_2= '(' ( (lv_domainList_3_0= rulegetDomainByID ) )? otherlv_4= ')' )? )
            {
            // InternalAsmetaL.g:2106:2: ( ( ( (lv_constrainedName_0_0= RULE_ID ) ) | ( (lv_constrainedDomain_1_0= ruleStandardDomain ) ) ) (otherlv_2= '(' ( (lv_domainList_3_0= rulegetDomainByID ) )? otherlv_4= ')' )? )
            // InternalAsmetaL.g:2107:3: ( ( (lv_constrainedName_0_0= RULE_ID ) ) | ( (lv_constrainedDomain_1_0= ruleStandardDomain ) ) ) (otherlv_2= '(' ( (lv_domainList_3_0= rulegetDomainByID ) )? otherlv_4= ')' )?
            {
            // InternalAsmetaL.g:2107:3: ( ( (lv_constrainedName_0_0= RULE_ID ) ) | ( (lv_constrainedDomain_1_0= ruleStandardDomain ) ) )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==RULE_ID) ) {
                alt44=1;
            }
            else if ( ((LA44_0>=60 && LA44_0<=67)) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // InternalAsmetaL.g:2108:4: ( (lv_constrainedName_0_0= RULE_ID ) )
                    {
                    // InternalAsmetaL.g:2108:4: ( (lv_constrainedName_0_0= RULE_ID ) )
                    // InternalAsmetaL.g:2109:5: (lv_constrainedName_0_0= RULE_ID )
                    {
                    // InternalAsmetaL.g:2109:5: (lv_constrainedName_0_0= RULE_ID )
                    // InternalAsmetaL.g:2110:6: lv_constrainedName_0_0= RULE_ID
                    {
                    lv_constrainedName_0_0=(Token)match(input,RULE_ID,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_constrainedName_0_0, grammarAccess.getInvariantElementAccess().getConstrainedNameIDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getInvariantElementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"constrainedName",
                      							lv_constrainedName_0_0,
                      							"org.asmeta.xt.AsmetaL.ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2127:4: ( (lv_constrainedDomain_1_0= ruleStandardDomain ) )
                    {
                    // InternalAsmetaL.g:2127:4: ( (lv_constrainedDomain_1_0= ruleStandardDomain ) )
                    // InternalAsmetaL.g:2128:5: (lv_constrainedDomain_1_0= ruleStandardDomain )
                    {
                    // InternalAsmetaL.g:2128:5: (lv_constrainedDomain_1_0= ruleStandardDomain )
                    // InternalAsmetaL.g:2129:6: lv_constrainedDomain_1_0= ruleStandardDomain
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getInvariantElementAccess().getConstrainedDomainStandardDomainParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_14);
                    lv_constrainedDomain_1_0=ruleStandardDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getInvariantElementRule());
                      						}
                      						set(
                      							current,
                      							"constrainedDomain",
                      							lv_constrainedDomain_1_0,
                      							"org.asmeta.xt.AsmetaL.StandardDomain");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalAsmetaL.g:2147:3: (otherlv_2= '(' ( (lv_domainList_3_0= rulegetDomainByID ) )? otherlv_4= ')' )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==29) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalAsmetaL.g:2148:4: otherlv_2= '(' ( (lv_domainList_3_0= rulegetDomainByID ) )? otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,29,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getInvariantElementAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalAsmetaL.g:2152:4: ( (lv_domainList_3_0= rulegetDomainByID ) )?
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==RULE_ID||LA45_0==42||LA45_0==56||(LA45_0>=60 && LA45_0<=69)||(LA45_0>=74 && LA45_0<=79)) ) {
                        alt45=1;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalAsmetaL.g:2153:5: (lv_domainList_3_0= rulegetDomainByID )
                            {
                            // InternalAsmetaL.g:2153:5: (lv_domainList_3_0= rulegetDomainByID )
                            // InternalAsmetaL.g:2154:6: lv_domainList_3_0= rulegetDomainByID
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getInvariantElementAccess().getDomainListGetDomainByIDParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_50);
                            lv_domainList_3_0=rulegetDomainByID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getInvariantElementRule());
                              						}
                              						add(
                              							current,
                              							"domainList",
                              							lv_domainList_3_0,
                              							"org.asmeta.xt.AsmetaL.getDomainByID");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getInvariantElementAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvariantElement"


    // $ANTLR start "entryRuleCtlSpec"
    // InternalAsmetaL.g:2180:1: entryRuleCtlSpec returns [EObject current=null] : iv_ruleCtlSpec= ruleCtlSpec EOF ;
    public final EObject entryRuleCtlSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCtlSpec = null;


        try {
            // InternalAsmetaL.g:2180:48: (iv_ruleCtlSpec= ruleCtlSpec EOF )
            // InternalAsmetaL.g:2181:2: iv_ruleCtlSpec= ruleCtlSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCtlSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCtlSpec=ruleCtlSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCtlSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCtlSpec"


    // $ANTLR start "ruleCtlSpec"
    // InternalAsmetaL.g:2187:1: ruleCtlSpec returns [EObject current=null] : ( (otherlv_0= 'CTLSPEC' | otherlv_1= 'ctlspec' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) ) ;
    public final EObject ruleCtlSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        EObject lv_body_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2193:2: ( ( (otherlv_0= 'CTLSPEC' | otherlv_1= 'ctlspec' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:2194:2: ( (otherlv_0= 'CTLSPEC' | otherlv_1= 'ctlspec' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:2194:2: ( (otherlv_0= 'CTLSPEC' | otherlv_1= 'ctlspec' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) )
            // InternalAsmetaL.g:2195:3: (otherlv_0= 'CTLSPEC' | otherlv_1= 'ctlspec' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) )
            {
            // InternalAsmetaL.g:2195:3: (otherlv_0= 'CTLSPEC' | otherlv_1= 'ctlspec' )
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==49) ) {
                alt47=1;
            }
            else if ( (LA47_0==50) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;
            }
            switch (alt47) {
                case 1 :
                    // InternalAsmetaL.g:2196:4: otherlv_0= 'CTLSPEC'
                    {
                    otherlv_0=(Token)match(input,49,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getCtlSpecAccess().getCTLSPECKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2201:4: otherlv_1= 'ctlspec'
                    {
                    otherlv_1=(Token)match(input,50,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getCtlSpecAccess().getCtlspecKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:2206:3: ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==RULE_ID) ) {
                int LA48_1 = input.LA(2);

                if ( (LA48_1==35) ) {
                    alt48=1;
                }
            }
            switch (alt48) {
                case 1 :
                    // InternalAsmetaL.g:2207:4: ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':'
                    {
                    // InternalAsmetaL.g:2207:4: ( (lv_name_2_0= RULE_ID ) )
                    // InternalAsmetaL.g:2208:5: (lv_name_2_0= RULE_ID )
                    {
                    // InternalAsmetaL.g:2208:5: (lv_name_2_0= RULE_ID )
                    // InternalAsmetaL.g:2209:6: lv_name_2_0= RULE_ID
                    {
                    lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_0, grammarAccess.getCtlSpecAccess().getNameIDTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCtlSpecRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_0,
                      							"org.asmeta.xt.AsmetaL.ID");
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,35,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getCtlSpecAccess().getColonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:2230:3: ( (lv_body_4_0= ruleTerm ) )
            // InternalAsmetaL.g:2231:4: (lv_body_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:2231:4: (lv_body_4_0= ruleTerm )
            // InternalAsmetaL.g:2232:5: lv_body_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCtlSpecAccess().getBodyTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCtlSpecRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCtlSpec"


    // $ANTLR start "entryRuleLtlSpec"
    // InternalAsmetaL.g:2253:1: entryRuleLtlSpec returns [EObject current=null] : iv_ruleLtlSpec= ruleLtlSpec EOF ;
    public final EObject entryRuleLtlSpec() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLtlSpec = null;


        try {
            // InternalAsmetaL.g:2253:48: (iv_ruleLtlSpec= ruleLtlSpec EOF )
            // InternalAsmetaL.g:2254:2: iv_ruleLtlSpec= ruleLtlSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLtlSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLtlSpec=ruleLtlSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLtlSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLtlSpec"


    // $ANTLR start "ruleLtlSpec"
    // InternalAsmetaL.g:2260:1: ruleLtlSpec returns [EObject current=null] : ( (otherlv_0= 'LTLSPEC' | otherlv_1= 'ltlspec' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) ) ;
    public final EObject ruleLtlSpec() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        EObject lv_body_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2266:2: ( ( (otherlv_0= 'LTLSPEC' | otherlv_1= 'ltlspec' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:2267:2: ( (otherlv_0= 'LTLSPEC' | otherlv_1= 'ltlspec' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:2267:2: ( (otherlv_0= 'LTLSPEC' | otherlv_1= 'ltlspec' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) ) )
            // InternalAsmetaL.g:2268:3: (otherlv_0= 'LTLSPEC' | otherlv_1= 'ltlspec' ) ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )? ( (lv_body_4_0= ruleTerm ) )
            {
            // InternalAsmetaL.g:2268:3: (otherlv_0= 'LTLSPEC' | otherlv_1= 'ltlspec' )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==51) ) {
                alt49=1;
            }
            else if ( (LA49_0==52) ) {
                alt49=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // InternalAsmetaL.g:2269:4: otherlv_0= 'LTLSPEC'
                    {
                    otherlv_0=(Token)match(input,51,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getLtlSpecAccess().getLTLSPECKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2274:4: otherlv_1= 'ltlspec'
                    {
                    otherlv_1=(Token)match(input,52,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLtlSpecAccess().getLtlspecKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:2279:3: ( ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':' )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==RULE_ID) ) {
                int LA50_1 = input.LA(2);

                if ( (LA50_1==35) ) {
                    alt50=1;
                }
            }
            switch (alt50) {
                case 1 :
                    // InternalAsmetaL.g:2280:4: ( (lv_name_2_0= RULE_ID ) ) otherlv_3= ':'
                    {
                    // InternalAsmetaL.g:2280:4: ( (lv_name_2_0= RULE_ID ) )
                    // InternalAsmetaL.g:2281:5: (lv_name_2_0= RULE_ID )
                    {
                    // InternalAsmetaL.g:2281:5: (lv_name_2_0= RULE_ID )
                    // InternalAsmetaL.g:2282:6: lv_name_2_0= RULE_ID
                    {
                    lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_0, grammarAccess.getLtlSpecAccess().getNameIDTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLtlSpecRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_0,
                      							"org.asmeta.xt.AsmetaL.ID");
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,35,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getLtlSpecAccess().getColonKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:2303:3: ( (lv_body_4_0= ruleTerm ) )
            // InternalAsmetaL.g:2304:4: (lv_body_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:2304:4: (lv_body_4_0= ruleTerm )
            // InternalAsmetaL.g:2305:5: lv_body_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLtlSpecAccess().getBodyTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLtlSpecRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLtlSpec"


    // $ANTLR start "entryRuleFairnessConstraint"
    // InternalAsmetaL.g:2326:1: entryRuleFairnessConstraint returns [EObject current=null] : iv_ruleFairnessConstraint= ruleFairnessConstraint EOF ;
    public final EObject entryRuleFairnessConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFairnessConstraint = null;


        try {
            // InternalAsmetaL.g:2326:59: (iv_ruleFairnessConstraint= ruleFairnessConstraint EOF )
            // InternalAsmetaL.g:2327:2: iv_ruleFairnessConstraint= ruleFairnessConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFairnessConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFairnessConstraint=ruleFairnessConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFairnessConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFairnessConstraint"


    // $ANTLR start "ruleFairnessConstraint"
    // InternalAsmetaL.g:2333:1: ruleFairnessConstraint returns [EObject current=null] : (this_JusticeConstraint_0= ruleJusticeConstraint | this_CompassionConstraint_1= ruleCompassionConstraint ) ;
    public final EObject ruleFairnessConstraint() throws RecognitionException {
        EObject current = null;

        EObject this_JusticeConstraint_0 = null;

        EObject this_CompassionConstraint_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2339:2: ( (this_JusticeConstraint_0= ruleJusticeConstraint | this_CompassionConstraint_1= ruleCompassionConstraint ) )
            // InternalAsmetaL.g:2340:2: (this_JusticeConstraint_0= ruleJusticeConstraint | this_CompassionConstraint_1= ruleCompassionConstraint )
            {
            // InternalAsmetaL.g:2340:2: (this_JusticeConstraint_0= ruleJusticeConstraint | this_CompassionConstraint_1= ruleCompassionConstraint )
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==53) ) {
                alt51=1;
            }
            else if ( (LA51_0==54) ) {
                alt51=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 51, 0, input);

                throw nvae;
            }
            switch (alt51) {
                case 1 :
                    // InternalAsmetaL.g:2341:3: this_JusticeConstraint_0= ruleJusticeConstraint
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFairnessConstraintAccess().getJusticeConstraintParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JusticeConstraint_0=ruleJusticeConstraint();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JusticeConstraint_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2353:3: this_CompassionConstraint_1= ruleCompassionConstraint
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFairnessConstraintAccess().getCompassionConstraintParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CompassionConstraint_1=ruleCompassionConstraint();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CompassionConstraint_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFairnessConstraint"


    // $ANTLR start "entryRuleJusticeConstraint"
    // InternalAsmetaL.g:2368:1: entryRuleJusticeConstraint returns [EObject current=null] : iv_ruleJusticeConstraint= ruleJusticeConstraint EOF ;
    public final EObject entryRuleJusticeConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJusticeConstraint = null;


        try {
            // InternalAsmetaL.g:2368:58: (iv_ruleJusticeConstraint= ruleJusticeConstraint EOF )
            // InternalAsmetaL.g:2369:2: iv_ruleJusticeConstraint= ruleJusticeConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJusticeConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJusticeConstraint=ruleJusticeConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJusticeConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJusticeConstraint"


    // $ANTLR start "ruleJusticeConstraint"
    // InternalAsmetaL.g:2375:1: ruleJusticeConstraint returns [EObject current=null] : (otherlv_0= 'JUSTICE' ( (lv_body_1_0= ruleTerm ) ) ) ;
    public final EObject ruleJusticeConstraint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_body_1_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2381:2: ( (otherlv_0= 'JUSTICE' ( (lv_body_1_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:2382:2: (otherlv_0= 'JUSTICE' ( (lv_body_1_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:2382:2: (otherlv_0= 'JUSTICE' ( (lv_body_1_0= ruleTerm ) ) )
            // InternalAsmetaL.g:2383:3: otherlv_0= 'JUSTICE' ( (lv_body_1_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,53,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJusticeConstraintAccess().getJUSTICEKeyword_0());
              		
            }
            // InternalAsmetaL.g:2387:3: ( (lv_body_1_0= ruleTerm ) )
            // InternalAsmetaL.g:2388:4: (lv_body_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:2388:4: (lv_body_1_0= ruleTerm )
            // InternalAsmetaL.g:2389:5: lv_body_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJusticeConstraintAccess().getBodyTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJusticeConstraintRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJusticeConstraint"


    // $ANTLR start "entryRuleCompassionConstraint"
    // InternalAsmetaL.g:2410:1: entryRuleCompassionConstraint returns [EObject current=null] : iv_ruleCompassionConstraint= ruleCompassionConstraint EOF ;
    public final EObject entryRuleCompassionConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompassionConstraint = null;


        try {
            // InternalAsmetaL.g:2410:61: (iv_ruleCompassionConstraint= ruleCompassionConstraint EOF )
            // InternalAsmetaL.g:2411:2: iv_ruleCompassionConstraint= ruleCompassionConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompassionConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompassionConstraint=ruleCompassionConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompassionConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompassionConstraint"


    // $ANTLR start "ruleCompassionConstraint"
    // InternalAsmetaL.g:2417:1: ruleCompassionConstraint returns [EObject current=null] : (otherlv_0= 'COMPASSION' otherlv_1= '(' ( (lv_p_2_0= ruleTerm ) ) otherlv_3= ',' ( (lv_q_4_0= ruleTerm ) ) otherlv_5= ')' ) ;
    public final EObject ruleCompassionConstraint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_p_2_0 = null;

        EObject lv_q_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2423:2: ( (otherlv_0= 'COMPASSION' otherlv_1= '(' ( (lv_p_2_0= ruleTerm ) ) otherlv_3= ',' ( (lv_q_4_0= ruleTerm ) ) otherlv_5= ')' ) )
            // InternalAsmetaL.g:2424:2: (otherlv_0= 'COMPASSION' otherlv_1= '(' ( (lv_p_2_0= ruleTerm ) ) otherlv_3= ',' ( (lv_q_4_0= ruleTerm ) ) otherlv_5= ')' )
            {
            // InternalAsmetaL.g:2424:2: (otherlv_0= 'COMPASSION' otherlv_1= '(' ( (lv_p_2_0= ruleTerm ) ) otherlv_3= ',' ( (lv_q_4_0= ruleTerm ) ) otherlv_5= ')' )
            // InternalAsmetaL.g:2425:3: otherlv_0= 'COMPASSION' otherlv_1= '(' ( (lv_p_2_0= ruleTerm ) ) otherlv_3= ',' ( (lv_q_4_0= ruleTerm ) ) otherlv_5= ')'
            {
            otherlv_0=(Token)match(input,54,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getCompassionConstraintAccess().getCOMPASSIONKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,29,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getCompassionConstraintAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:2433:3: ( (lv_p_2_0= ruleTerm ) )
            // InternalAsmetaL.g:2434:4: (lv_p_2_0= ruleTerm )
            {
            // InternalAsmetaL.g:2434:4: (lv_p_2_0= ruleTerm )
            // InternalAsmetaL.g:2435:5: lv_p_2_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompassionConstraintAccess().getPTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_52);
            lv_p_2_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompassionConstraintRule());
              					}
              					set(
              						current,
              						"p",
              						lv_p_2_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,30,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getCompassionConstraintAccess().getCommaKeyword_3());
              		
            }
            // InternalAsmetaL.g:2456:3: ( (lv_q_4_0= ruleTerm ) )
            // InternalAsmetaL.g:2457:4: (lv_q_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:2457:4: (lv_q_4_0= ruleTerm )
            // InternalAsmetaL.g:2458:5: lv_q_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCompassionConstraintAccess().getQTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_50);
            lv_q_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCompassionConstraintRule());
              					}
              					set(
              						current,
              						"q",
              						lv_q_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getCompassionConstraintAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompassionConstraint"


    // $ANTLR start "entryRuleInvariantConstraint"
    // InternalAsmetaL.g:2483:1: entryRuleInvariantConstraint returns [EObject current=null] : iv_ruleInvariantConstraint= ruleInvariantConstraint EOF ;
    public final EObject entryRuleInvariantConstraint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInvariantConstraint = null;


        try {
            // InternalAsmetaL.g:2483:60: (iv_ruleInvariantConstraint= ruleInvariantConstraint EOF )
            // InternalAsmetaL.g:2484:2: iv_ruleInvariantConstraint= ruleInvariantConstraint EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInvariantConstraintRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInvariantConstraint=ruleInvariantConstraint();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInvariantConstraint; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInvariantConstraint"


    // $ANTLR start "ruleInvariantConstraint"
    // InternalAsmetaL.g:2490:1: ruleInvariantConstraint returns [EObject current=null] : (otherlv_0= 'INVAR' ( (lv_body_1_0= ruleTerm ) ) ) ;
    public final EObject ruleInvariantConstraint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_body_1_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2496:2: ( (otherlv_0= 'INVAR' ( (lv_body_1_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:2497:2: (otherlv_0= 'INVAR' ( (lv_body_1_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:2497:2: (otherlv_0= 'INVAR' ( (lv_body_1_0= ruleTerm ) ) )
            // InternalAsmetaL.g:2498:3: otherlv_0= 'INVAR' ( (lv_body_1_0= ruleTerm ) )
            {
            otherlv_0=(Token)match(input,55,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getInvariantConstraintAccess().getINVARKeyword_0());
              		
            }
            // InternalAsmetaL.g:2502:3: ( (lv_body_1_0= ruleTerm ) )
            // InternalAsmetaL.g:2503:4: (lv_body_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:2503:4: (lv_body_1_0= ruleTerm )
            // InternalAsmetaL.g:2504:5: lv_body_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getInvariantConstraintAccess().getBodyTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getInvariantConstraintRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInvariantConstraint"


    // $ANTLR start "entryRuleDomain"
    // InternalAsmetaL.g:2525:1: entryRuleDomain returns [EObject current=null] : iv_ruleDomain= ruleDomain EOF ;
    public final EObject entryRuleDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDomain = null;


        try {
            // InternalAsmetaL.g:2525:47: (iv_ruleDomain= ruleDomain EOF )
            // InternalAsmetaL.g:2526:2: iv_ruleDomain= ruleDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDomain=ruleDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDomain"


    // $ANTLR start "ruleDomain"
    // InternalAsmetaL.g:2532:1: ruleDomain returns [EObject current=null] : (this_ConcreteDomain_0= ruleConcreteDomain | this_TypeDomain_1= ruleTypeDomain ) ;
    public final EObject ruleDomain() throws RecognitionException {
        EObject current = null;

        EObject this_ConcreteDomain_0 = null;

        EObject this_TypeDomain_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2538:2: ( (this_ConcreteDomain_0= ruleConcreteDomain | this_TypeDomain_1= ruleTypeDomain ) )
            // InternalAsmetaL.g:2539:2: (this_ConcreteDomain_0= ruleConcreteDomain | this_TypeDomain_1= ruleTypeDomain )
            {
            // InternalAsmetaL.g:2539:2: (this_ConcreteDomain_0= ruleConcreteDomain | this_TypeDomain_1= ruleTypeDomain )
            int alt52=2;
            switch ( input.LA(1) ) {
            case 56:
                {
                int LA52_1 = input.LA(2);

                if ( (LA52_1==37) ) {
                    alt52=1;
                }
                else if ( (LA52_1==68) ) {
                    alt52=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 1, input);

                    throw nvae;
                }
                }
                break;
            case 37:
                {
                alt52=1;
                }
                break;
            case 58:
            case 59:
            case 68:
            case 70:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
                {
                alt52=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }

            switch (alt52) {
                case 1 :
                    // InternalAsmetaL.g:2540:3: this_ConcreteDomain_0= ruleConcreteDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDomainAccess().getConcreteDomainParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConcreteDomain_0=ruleConcreteDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConcreteDomain_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2552:3: this_TypeDomain_1= ruleTypeDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDomainAccess().getTypeDomainParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeDomain_1=ruleTypeDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeDomain_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDomain"


    // $ANTLR start "entryRuleConcreteDomain"
    // InternalAsmetaL.g:2567:1: entryRuleConcreteDomain returns [EObject current=null] : iv_ruleConcreteDomain= ruleConcreteDomain EOF ;
    public final EObject entryRuleConcreteDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcreteDomain = null;


        try {
            // InternalAsmetaL.g:2567:55: (iv_ruleConcreteDomain= ruleConcreteDomain EOF )
            // InternalAsmetaL.g:2568:2: iv_ruleConcreteDomain= ruleConcreteDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConcreteDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcreteDomain=ruleConcreteDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcreteDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcreteDomain"


    // $ANTLR start "ruleConcreteDomain"
    // InternalAsmetaL.g:2574:1: ruleConcreteDomain returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= 'subsetof' ( (lv_typeDomain_4_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleConcreteDomain() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        EObject lv_typeDomain_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2580:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= 'subsetof' ( (lv_typeDomain_4_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:2581:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= 'subsetof' ( (lv_typeDomain_4_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:2581:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= 'subsetof' ( (lv_typeDomain_4_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:2582:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= 'subsetof' ( (lv_typeDomain_4_0= rulegetDomainByID ) )
            {
            // InternalAsmetaL.g:2582:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==56) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalAsmetaL.g:2583:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:2583:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:2584:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,56,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getConcreteDomainAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConcreteDomainRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConcreteDomainAccess().getDomainKeyword_1());
              		
            }
            // InternalAsmetaL.g:2600:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalAsmetaL.g:2601:4: (lv_name_2_0= RULE_ID )
            {
            // InternalAsmetaL.g:2601:4: (lv_name_2_0= RULE_ID )
            // InternalAsmetaL.g:2602:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getConcreteDomainAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getConcreteDomainRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,57,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getConcreteDomainAccess().getSubsetofKeyword_3());
              		
            }
            // InternalAsmetaL.g:2622:3: ( (lv_typeDomain_4_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:2623:4: (lv_typeDomain_4_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:2623:4: (lv_typeDomain_4_0= rulegetDomainByID )
            // InternalAsmetaL.g:2624:5: lv_typeDomain_4_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConcreteDomainAccess().getTypeDomainGetDomainByIDParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeDomain_4_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConcreteDomainRule());
              					}
              					set(
              						current,
              						"typeDomain",
              						lv_typeDomain_4_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcreteDomain"


    // $ANTLR start "entryRuleTypeDomain"
    // InternalAsmetaL.g:2645:1: entryRuleTypeDomain returns [EObject current=null] : iv_ruleTypeDomain= ruleTypeDomain EOF ;
    public final EObject entryRuleTypeDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDomain = null;


        try {
            // InternalAsmetaL.g:2645:51: (iv_ruleTypeDomain= ruleTypeDomain EOF )
            // InternalAsmetaL.g:2646:2: iv_ruleTypeDomain= ruleTypeDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDomain=ruleTypeDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDomain"


    // $ANTLR start "ruleTypeDomain"
    // InternalAsmetaL.g:2652:1: ruleTypeDomain returns [EObject current=null] : (this_AnyDomain_0= ruleAnyDomain | this_StructuredTD_1= ruleStructuredTD | this_EnumTD_2= ruleEnumTD | this_AbstractTD_3= ruleAbstractTD | this_BasicTD_4= ruleBasicTD ) ;
    public final EObject ruleTypeDomain() throws RecognitionException {
        EObject current = null;

        EObject this_AnyDomain_0 = null;

        EObject this_StructuredTD_1 = null;

        EObject this_EnumTD_2 = null;

        EObject this_AbstractTD_3 = null;

        EObject this_BasicTD_4 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2658:2: ( (this_AnyDomain_0= ruleAnyDomain | this_StructuredTD_1= ruleStructuredTD | this_EnumTD_2= ruleEnumTD | this_AbstractTD_3= ruleAbstractTD | this_BasicTD_4= ruleBasicTD ) )
            // InternalAsmetaL.g:2659:2: (this_AnyDomain_0= ruleAnyDomain | this_StructuredTD_1= ruleStructuredTD | this_EnumTD_2= ruleEnumTD | this_AbstractTD_3= ruleAbstractTD | this_BasicTD_4= ruleBasicTD )
            {
            // InternalAsmetaL.g:2659:2: (this_AnyDomain_0= ruleAnyDomain | this_StructuredTD_1= ruleStructuredTD | this_EnumTD_2= ruleEnumTD | this_AbstractTD_3= ruleAbstractTD | this_BasicTD_4= ruleBasicTD )
            int alt54=5;
            switch ( input.LA(1) ) {
            case 58:
                {
                alt54=1;
                }
                break;
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
                {
                alt54=2;
                }
                break;
            case 70:
                {
                alt54=3;
                }
                break;
            case 56:
            case 68:
                {
                alt54=4;
                }
                break;
            case 59:
                {
                alt54=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }

            switch (alt54) {
                case 1 :
                    // InternalAsmetaL.g:2660:3: this_AnyDomain_0= ruleAnyDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeDomainAccess().getAnyDomainParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AnyDomain_0=ruleAnyDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnyDomain_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2672:3: this_StructuredTD_1= ruleStructuredTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeDomainAccess().getStructuredTDParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StructuredTD_1=ruleStructuredTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructuredTD_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:2684:3: this_EnumTD_2= ruleEnumTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeDomainAccess().getEnumTDParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EnumTD_2=ruleEnumTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EnumTD_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:2696:3: this_AbstractTD_3= ruleAbstractTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeDomainAccess().getAbstractTDParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AbstractTD_3=ruleAbstractTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AbstractTD_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:2708:3: this_BasicTD_4= ruleBasicTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeDomainAccess().getBasicTDParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BasicTD_4=ruleBasicTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BasicTD_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDomain"


    // $ANTLR start "entryRuleAnyDomain"
    // InternalAsmetaL.g:2723:1: entryRuleAnyDomain returns [EObject current=null] : iv_ruleAnyDomain= ruleAnyDomain EOF ;
    public final EObject entryRuleAnyDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnyDomain = null;


        try {
            // InternalAsmetaL.g:2723:50: (iv_ruleAnyDomain= ruleAnyDomain EOF )
            // InternalAsmetaL.g:2724:2: iv_ruleAnyDomain= ruleAnyDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnyDomain=ruleAnyDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyDomain"


    // $ANTLR start "ruleAnyDomain"
    // InternalAsmetaL.g:2730:1: ruleAnyDomain returns [EObject current=null] : (otherlv_0= 'anydomain' ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleAnyDomain() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:2736:2: ( (otherlv_0= 'anydomain' ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalAsmetaL.g:2737:2: (otherlv_0= 'anydomain' ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalAsmetaL.g:2737:2: (otherlv_0= 'anydomain' ( (lv_name_1_0= RULE_ID ) ) )
            // InternalAsmetaL.g:2738:3: otherlv_0= 'anydomain' ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,58,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAnyDomainAccess().getAnydomainKeyword_0());
              		
            }
            // InternalAsmetaL.g:2742:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalAsmetaL.g:2743:4: (lv_name_1_0= RULE_ID )
            {
            // InternalAsmetaL.g:2743:4: (lv_name_1_0= RULE_ID )
            // InternalAsmetaL.g:2744:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAnyDomainAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnyDomainRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyDomain"


    // $ANTLR start "entryRuleBasicTD"
    // InternalAsmetaL.g:2764:1: entryRuleBasicTD returns [EObject current=null] : iv_ruleBasicTD= ruleBasicTD EOF ;
    public final EObject entryRuleBasicTD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasicTD = null;


        try {
            // InternalAsmetaL.g:2764:48: (iv_ruleBasicTD= ruleBasicTD EOF )
            // InternalAsmetaL.g:2765:2: iv_ruleBasicTD= ruleBasicTD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicTDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicTD=ruleBasicTD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicTD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicTD"


    // $ANTLR start "ruleBasicTD"
    // InternalAsmetaL.g:2771:1: ruleBasicTD returns [EObject current=null] : (otherlv_0= 'basic' otherlv_1= 'domain' ( ( (lv_name_2_0= RULE_ID ) ) | this_StandardDomain_3= ruleStandardDomain ) ) ;
    public final EObject ruleBasicTD() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        EObject this_StandardDomain_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2777:2: ( (otherlv_0= 'basic' otherlv_1= 'domain' ( ( (lv_name_2_0= RULE_ID ) ) | this_StandardDomain_3= ruleStandardDomain ) ) )
            // InternalAsmetaL.g:2778:2: (otherlv_0= 'basic' otherlv_1= 'domain' ( ( (lv_name_2_0= RULE_ID ) ) | this_StandardDomain_3= ruleStandardDomain ) )
            {
            // InternalAsmetaL.g:2778:2: (otherlv_0= 'basic' otherlv_1= 'domain' ( ( (lv_name_2_0= RULE_ID ) ) | this_StandardDomain_3= ruleStandardDomain ) )
            // InternalAsmetaL.g:2779:3: otherlv_0= 'basic' otherlv_1= 'domain' ( ( (lv_name_2_0= RULE_ID ) ) | this_StandardDomain_3= ruleStandardDomain )
            {
            otherlv_0=(Token)match(input,59,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBasicTDAccess().getBasicKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,37,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBasicTDAccess().getDomainKeyword_1());
              		
            }
            // InternalAsmetaL.g:2787:3: ( ( (lv_name_2_0= RULE_ID ) ) | this_StandardDomain_3= ruleStandardDomain )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==RULE_ID) ) {
                alt55=1;
            }
            else if ( ((LA55_0>=60 && LA55_0<=67)) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // InternalAsmetaL.g:2788:4: ( (lv_name_2_0= RULE_ID ) )
                    {
                    // InternalAsmetaL.g:2788:4: ( (lv_name_2_0= RULE_ID ) )
                    // InternalAsmetaL.g:2789:5: (lv_name_2_0= RULE_ID )
                    {
                    // InternalAsmetaL.g:2789:5: (lv_name_2_0= RULE_ID )
                    // InternalAsmetaL.g:2790:6: lv_name_2_0= RULE_ID
                    {
                    lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_0, grammarAccess.getBasicTDAccess().getNameIDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getBasicTDRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_0,
                      							"org.asmeta.xt.AsmetaL.ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2807:4: this_StandardDomain_3= ruleStandardDomain
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getBasicTDAccess().getStandardDomainParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_StandardDomain_3=ruleStandardDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_StandardDomain_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicTD"


    // $ANTLR start "entryRuleStandardDomain"
    // InternalAsmetaL.g:2823:1: entryRuleStandardDomain returns [EObject current=null] : iv_ruleStandardDomain= ruleStandardDomain EOF ;
    public final EObject entryRuleStandardDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStandardDomain = null;


        try {
            // InternalAsmetaL.g:2823:55: (iv_ruleStandardDomain= ruleStandardDomain EOF )
            // InternalAsmetaL.g:2824:2: iv_ruleStandardDomain= ruleStandardDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStandardDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStandardDomain=ruleStandardDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStandardDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStandardDomain"


    // $ANTLR start "ruleStandardDomain"
    // InternalAsmetaL.g:2830:1: ruleStandardDomain returns [EObject current=null] : (this_IntegerDomain_0= ruleIntegerDomain | this_RealDomain_1= ruleRealDomain | this_StringDomain_2= ruleStringDomain | this_NaturalDomain_3= ruleNaturalDomain | this_CharDomain_4= ruleCharDomain | this_ComplexDomain_5= ruleComplexDomain | this_BooleanDomain_6= ruleBooleanDomain | this_UndefDomain_7= ruleUndefDomain ) ;
    public final EObject ruleStandardDomain() throws RecognitionException {
        EObject current = null;

        EObject this_IntegerDomain_0 = null;

        EObject this_RealDomain_1 = null;

        EObject this_StringDomain_2 = null;

        EObject this_NaturalDomain_3 = null;

        EObject this_CharDomain_4 = null;

        EObject this_ComplexDomain_5 = null;

        EObject this_BooleanDomain_6 = null;

        EObject this_UndefDomain_7 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:2836:2: ( (this_IntegerDomain_0= ruleIntegerDomain | this_RealDomain_1= ruleRealDomain | this_StringDomain_2= ruleStringDomain | this_NaturalDomain_3= ruleNaturalDomain | this_CharDomain_4= ruleCharDomain | this_ComplexDomain_5= ruleComplexDomain | this_BooleanDomain_6= ruleBooleanDomain | this_UndefDomain_7= ruleUndefDomain ) )
            // InternalAsmetaL.g:2837:2: (this_IntegerDomain_0= ruleIntegerDomain | this_RealDomain_1= ruleRealDomain | this_StringDomain_2= ruleStringDomain | this_NaturalDomain_3= ruleNaturalDomain | this_CharDomain_4= ruleCharDomain | this_ComplexDomain_5= ruleComplexDomain | this_BooleanDomain_6= ruleBooleanDomain | this_UndefDomain_7= ruleUndefDomain )
            {
            // InternalAsmetaL.g:2837:2: (this_IntegerDomain_0= ruleIntegerDomain | this_RealDomain_1= ruleRealDomain | this_StringDomain_2= ruleStringDomain | this_NaturalDomain_3= ruleNaturalDomain | this_CharDomain_4= ruleCharDomain | this_ComplexDomain_5= ruleComplexDomain | this_BooleanDomain_6= ruleBooleanDomain | this_UndefDomain_7= ruleUndefDomain )
            int alt56=8;
            switch ( input.LA(1) ) {
            case 60:
                {
                alt56=1;
                }
                break;
            case 61:
                {
                alt56=2;
                }
                break;
            case 62:
                {
                alt56=3;
                }
                break;
            case 63:
                {
                alt56=4;
                }
                break;
            case 64:
                {
                alt56=5;
                }
                break;
            case 65:
                {
                alt56=6;
                }
                break;
            case 66:
                {
                alt56=7;
                }
                break;
            case 67:
                {
                alt56=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }

            switch (alt56) {
                case 1 :
                    // InternalAsmetaL.g:2838:3: this_IntegerDomain_0= ruleIntegerDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getIntegerDomainParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IntegerDomain_0=ruleIntegerDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntegerDomain_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:2850:3: this_RealDomain_1= ruleRealDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getRealDomainParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RealDomain_1=ruleRealDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RealDomain_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:2862:3: this_StringDomain_2= ruleStringDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getStringDomainParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StringDomain_2=ruleStringDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringDomain_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:2874:3: this_NaturalDomain_3= ruleNaturalDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getNaturalDomainParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NaturalDomain_3=ruleNaturalDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NaturalDomain_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:2886:3: this_CharDomain_4= ruleCharDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getCharDomainParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CharDomain_4=ruleCharDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CharDomain_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:2898:3: this_ComplexDomain_5= ruleComplexDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getComplexDomainParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ComplexDomain_5=ruleComplexDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ComplexDomain_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAsmetaL.g:2910:3: this_BooleanDomain_6= ruleBooleanDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getBooleanDomainParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanDomain_6=ruleBooleanDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BooleanDomain_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAsmetaL.g:2922:3: this_UndefDomain_7= ruleUndefDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStandardDomainAccess().getUndefDomainParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UndefDomain_7=ruleUndefDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UndefDomain_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStandardDomain"


    // $ANTLR start "entryRuleIntegerDomain"
    // InternalAsmetaL.g:2937:1: entryRuleIntegerDomain returns [EObject current=null] : iv_ruleIntegerDomain= ruleIntegerDomain EOF ;
    public final EObject entryRuleIntegerDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntegerDomain = null;


        try {
            // InternalAsmetaL.g:2937:54: (iv_ruleIntegerDomain= ruleIntegerDomain EOF )
            // InternalAsmetaL.g:2938:2: iv_ruleIntegerDomain= ruleIntegerDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntegerDomain=ruleIntegerDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntegerDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntegerDomain"


    // $ANTLR start "ruleIntegerDomain"
    // InternalAsmetaL.g:2944:1: ruleIntegerDomain returns [EObject current=null] : ( (lv_name_0_0= 'Integer' ) ) ;
    public final EObject ruleIntegerDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:2950:2: ( ( (lv_name_0_0= 'Integer' ) ) )
            // InternalAsmetaL.g:2951:2: ( (lv_name_0_0= 'Integer' ) )
            {
            // InternalAsmetaL.g:2951:2: ( (lv_name_0_0= 'Integer' ) )
            // InternalAsmetaL.g:2952:3: (lv_name_0_0= 'Integer' )
            {
            // InternalAsmetaL.g:2952:3: (lv_name_0_0= 'Integer' )
            // InternalAsmetaL.g:2953:4: lv_name_0_0= 'Integer'
            {
            lv_name_0_0=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getIntegerDomainAccess().getNameIntegerKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getIntegerDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Integer");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntegerDomain"


    // $ANTLR start "entryRuleRealDomain"
    // InternalAsmetaL.g:2968:1: entryRuleRealDomain returns [EObject current=null] : iv_ruleRealDomain= ruleRealDomain EOF ;
    public final EObject entryRuleRealDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRealDomain = null;


        try {
            // InternalAsmetaL.g:2968:51: (iv_ruleRealDomain= ruleRealDomain EOF )
            // InternalAsmetaL.g:2969:2: iv_ruleRealDomain= ruleRealDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealDomain=ruleRealDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealDomain"


    // $ANTLR start "ruleRealDomain"
    // InternalAsmetaL.g:2975:1: ruleRealDomain returns [EObject current=null] : ( (lv_name_0_0= 'Real' ) ) ;
    public final EObject ruleRealDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:2981:2: ( ( (lv_name_0_0= 'Real' ) ) )
            // InternalAsmetaL.g:2982:2: ( (lv_name_0_0= 'Real' ) )
            {
            // InternalAsmetaL.g:2982:2: ( (lv_name_0_0= 'Real' ) )
            // InternalAsmetaL.g:2983:3: (lv_name_0_0= 'Real' )
            {
            // InternalAsmetaL.g:2983:3: (lv_name_0_0= 'Real' )
            // InternalAsmetaL.g:2984:4: lv_name_0_0= 'Real'
            {
            lv_name_0_0=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getRealDomainAccess().getNameRealKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getRealDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Real");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealDomain"


    // $ANTLR start "entryRuleStringDomain"
    // InternalAsmetaL.g:2999:1: entryRuleStringDomain returns [EObject current=null] : iv_ruleStringDomain= ruleStringDomain EOF ;
    public final EObject entryRuleStringDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringDomain = null;


        try {
            // InternalAsmetaL.g:2999:53: (iv_ruleStringDomain= ruleStringDomain EOF )
            // InternalAsmetaL.g:3000:2: iv_ruleStringDomain= ruleStringDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringDomain=ruleStringDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringDomain"


    // $ANTLR start "ruleStringDomain"
    // InternalAsmetaL.g:3006:1: ruleStringDomain returns [EObject current=null] : ( (lv_name_0_0= 'String' ) ) ;
    public final EObject ruleStringDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3012:2: ( ( (lv_name_0_0= 'String' ) ) )
            // InternalAsmetaL.g:3013:2: ( (lv_name_0_0= 'String' ) )
            {
            // InternalAsmetaL.g:3013:2: ( (lv_name_0_0= 'String' ) )
            // InternalAsmetaL.g:3014:3: (lv_name_0_0= 'String' )
            {
            // InternalAsmetaL.g:3014:3: (lv_name_0_0= 'String' )
            // InternalAsmetaL.g:3015:4: lv_name_0_0= 'String'
            {
            lv_name_0_0=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getStringDomainAccess().getNameStringKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "String");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringDomain"


    // $ANTLR start "entryRuleNaturalDomain"
    // InternalAsmetaL.g:3030:1: entryRuleNaturalDomain returns [EObject current=null] : iv_ruleNaturalDomain= ruleNaturalDomain EOF ;
    public final EObject entryRuleNaturalDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNaturalDomain = null;


        try {
            // InternalAsmetaL.g:3030:54: (iv_ruleNaturalDomain= ruleNaturalDomain EOF )
            // InternalAsmetaL.g:3031:2: iv_ruleNaturalDomain= ruleNaturalDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNaturalDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNaturalDomain=ruleNaturalDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNaturalDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNaturalDomain"


    // $ANTLR start "ruleNaturalDomain"
    // InternalAsmetaL.g:3037:1: ruleNaturalDomain returns [EObject current=null] : ( (lv_name_0_0= 'Natural' ) ) ;
    public final EObject ruleNaturalDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3043:2: ( ( (lv_name_0_0= 'Natural' ) ) )
            // InternalAsmetaL.g:3044:2: ( (lv_name_0_0= 'Natural' ) )
            {
            // InternalAsmetaL.g:3044:2: ( (lv_name_0_0= 'Natural' ) )
            // InternalAsmetaL.g:3045:3: (lv_name_0_0= 'Natural' )
            {
            // InternalAsmetaL.g:3045:3: (lv_name_0_0= 'Natural' )
            // InternalAsmetaL.g:3046:4: lv_name_0_0= 'Natural'
            {
            lv_name_0_0=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getNaturalDomainAccess().getNameNaturalKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNaturalDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Natural");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNaturalDomain"


    // $ANTLR start "entryRuleCharDomain"
    // InternalAsmetaL.g:3061:1: entryRuleCharDomain returns [EObject current=null] : iv_ruleCharDomain= ruleCharDomain EOF ;
    public final EObject entryRuleCharDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCharDomain = null;


        try {
            // InternalAsmetaL.g:3061:51: (iv_ruleCharDomain= ruleCharDomain EOF )
            // InternalAsmetaL.g:3062:2: iv_ruleCharDomain= ruleCharDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCharDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCharDomain=ruleCharDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCharDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCharDomain"


    // $ANTLR start "ruleCharDomain"
    // InternalAsmetaL.g:3068:1: ruleCharDomain returns [EObject current=null] : ( (lv_name_0_0= 'Char' ) ) ;
    public final EObject ruleCharDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3074:2: ( ( (lv_name_0_0= 'Char' ) ) )
            // InternalAsmetaL.g:3075:2: ( (lv_name_0_0= 'Char' ) )
            {
            // InternalAsmetaL.g:3075:2: ( (lv_name_0_0= 'Char' ) )
            // InternalAsmetaL.g:3076:3: (lv_name_0_0= 'Char' )
            {
            // InternalAsmetaL.g:3076:3: (lv_name_0_0= 'Char' )
            // InternalAsmetaL.g:3077:4: lv_name_0_0= 'Char'
            {
            lv_name_0_0=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getCharDomainAccess().getNameCharKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCharDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Char");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCharDomain"


    // $ANTLR start "entryRuleComplexDomain"
    // InternalAsmetaL.g:3092:1: entryRuleComplexDomain returns [EObject current=null] : iv_ruleComplexDomain= ruleComplexDomain EOF ;
    public final EObject entryRuleComplexDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComplexDomain = null;


        try {
            // InternalAsmetaL.g:3092:54: (iv_ruleComplexDomain= ruleComplexDomain EOF )
            // InternalAsmetaL.g:3093:2: iv_ruleComplexDomain= ruleComplexDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComplexDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComplexDomain=ruleComplexDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComplexDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComplexDomain"


    // $ANTLR start "ruleComplexDomain"
    // InternalAsmetaL.g:3099:1: ruleComplexDomain returns [EObject current=null] : ( (lv_name_0_0= 'Complex' ) ) ;
    public final EObject ruleComplexDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3105:2: ( ( (lv_name_0_0= 'Complex' ) ) )
            // InternalAsmetaL.g:3106:2: ( (lv_name_0_0= 'Complex' ) )
            {
            // InternalAsmetaL.g:3106:2: ( (lv_name_0_0= 'Complex' ) )
            // InternalAsmetaL.g:3107:3: (lv_name_0_0= 'Complex' )
            {
            // InternalAsmetaL.g:3107:3: (lv_name_0_0= 'Complex' )
            // InternalAsmetaL.g:3108:4: lv_name_0_0= 'Complex'
            {
            lv_name_0_0=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getComplexDomainAccess().getNameComplexKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getComplexDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Complex");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComplexDomain"


    // $ANTLR start "entryRuleBooleanDomain"
    // InternalAsmetaL.g:3123:1: entryRuleBooleanDomain returns [EObject current=null] : iv_ruleBooleanDomain= ruleBooleanDomain EOF ;
    public final EObject entryRuleBooleanDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanDomain = null;


        try {
            // InternalAsmetaL.g:3123:54: (iv_ruleBooleanDomain= ruleBooleanDomain EOF )
            // InternalAsmetaL.g:3124:2: iv_ruleBooleanDomain= ruleBooleanDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanDomain=ruleBooleanDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanDomain"


    // $ANTLR start "ruleBooleanDomain"
    // InternalAsmetaL.g:3130:1: ruleBooleanDomain returns [EObject current=null] : ( (lv_name_0_0= 'Boolean' ) ) ;
    public final EObject ruleBooleanDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3136:2: ( ( (lv_name_0_0= 'Boolean' ) ) )
            // InternalAsmetaL.g:3137:2: ( (lv_name_0_0= 'Boolean' ) )
            {
            // InternalAsmetaL.g:3137:2: ( (lv_name_0_0= 'Boolean' ) )
            // InternalAsmetaL.g:3138:3: (lv_name_0_0= 'Boolean' )
            {
            // InternalAsmetaL.g:3138:3: (lv_name_0_0= 'Boolean' )
            // InternalAsmetaL.g:3139:4: lv_name_0_0= 'Boolean'
            {
            lv_name_0_0=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getBooleanDomainAccess().getNameBooleanKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBooleanDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Boolean");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanDomain"


    // $ANTLR start "entryRuleUndefDomain"
    // InternalAsmetaL.g:3154:1: entryRuleUndefDomain returns [EObject current=null] : iv_ruleUndefDomain= ruleUndefDomain EOF ;
    public final EObject entryRuleUndefDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUndefDomain = null;


        try {
            // InternalAsmetaL.g:3154:52: (iv_ruleUndefDomain= ruleUndefDomain EOF )
            // InternalAsmetaL.g:3155:2: iv_ruleUndefDomain= ruleUndefDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUndefDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUndefDomain=ruleUndefDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUndefDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUndefDomain"


    // $ANTLR start "ruleUndefDomain"
    // InternalAsmetaL.g:3161:1: ruleUndefDomain returns [EObject current=null] : ( (lv_name_0_0= 'Undef' ) ) ;
    public final EObject ruleUndefDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3167:2: ( ( (lv_name_0_0= 'Undef' ) ) )
            // InternalAsmetaL.g:3168:2: ( (lv_name_0_0= 'Undef' ) )
            {
            // InternalAsmetaL.g:3168:2: ( (lv_name_0_0= 'Undef' ) )
            // InternalAsmetaL.g:3169:3: (lv_name_0_0= 'Undef' )
            {
            // InternalAsmetaL.g:3169:3: (lv_name_0_0= 'Undef' )
            // InternalAsmetaL.g:3170:4: lv_name_0_0= 'Undef'
            {
            lv_name_0_0=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getUndefDomainAccess().getNameUndefKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getUndefDomainRule());
              				}
              				setWithLastConsumed(current, "name", lv_name_0_0, "Undef");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUndefDomain"


    // $ANTLR start "entryRuleAbstractTD"
    // InternalAsmetaL.g:3185:1: entryRuleAbstractTD returns [EObject current=null] : iv_ruleAbstractTD= ruleAbstractTD EOF ;
    public final EObject entryRuleAbstractTD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractTD = null;


        try {
            // InternalAsmetaL.g:3185:51: (iv_ruleAbstractTD= ruleAbstractTD EOF )
            // InternalAsmetaL.g:3186:2: iv_ruleAbstractTD= ruleAbstractTD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractTDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAbstractTD=ruleAbstractTD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractTD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractTD"


    // $ANTLR start "ruleAbstractTD"
    // InternalAsmetaL.g:3192:1: ruleAbstractTD returns [EObject current=null] : (this_GenericAbstractTD_0= ruleGenericAbstractTD | this_AgentDomain_1= ruleAgentDomain | this_ReserveDomain_2= ruleReserveDomain ) ;
    public final EObject ruleAbstractTD() throws RecognitionException {
        EObject current = null;

        EObject this_GenericAbstractTD_0 = null;

        EObject this_AgentDomain_1 = null;

        EObject this_ReserveDomain_2 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3198:2: ( (this_GenericAbstractTD_0= ruleGenericAbstractTD | this_AgentDomain_1= ruleAgentDomain | this_ReserveDomain_2= ruleReserveDomain ) )
            // InternalAsmetaL.g:3199:2: (this_GenericAbstractTD_0= ruleGenericAbstractTD | this_AgentDomain_1= ruleAgentDomain | this_ReserveDomain_2= ruleReserveDomain )
            {
            // InternalAsmetaL.g:3199:2: (this_GenericAbstractTD_0= ruleGenericAbstractTD | this_AgentDomain_1= ruleAgentDomain | this_ReserveDomain_2= ruleReserveDomain )
            int alt57=3;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==56) ) {
                int LA57_1 = input.LA(2);

                if ( (LA57_1==68) ) {
                    int LA57_2 = input.LA(3);

                    if ( (LA57_2==37) ) {
                        switch ( input.LA(4) ) {
                        case RULE_ID:
                            {
                            alt57=1;
                            }
                            break;
                        case 42:
                            {
                            alt57=2;
                            }
                            break;
                        case 69:
                            {
                            alt57=3;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 57, 3, input);

                            throw nvae;
                        }

                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 57, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA57_0==68) ) {
                int LA57_2 = input.LA(2);

                if ( (LA57_2==37) ) {
                    switch ( input.LA(3) ) {
                    case RULE_ID:
                        {
                        alt57=1;
                        }
                        break;
                    case 42:
                        {
                        alt57=2;
                        }
                        break;
                    case 69:
                        {
                        alt57=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 57, 3, input);

                        throw nvae;
                    }

                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 57, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    // InternalAsmetaL.g:3200:3: this_GenericAbstractTD_0= ruleGenericAbstractTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbstractTDAccess().getGenericAbstractTDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_GenericAbstractTD_0=ruleGenericAbstractTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_GenericAbstractTD_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:3212:3: this_AgentDomain_1= ruleAgentDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbstractTDAccess().getAgentDomainParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AgentDomain_1=ruleAgentDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AgentDomain_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:3224:3: this_ReserveDomain_2= ruleReserveDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbstractTDAccess().getReserveDomainParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ReserveDomain_2=ruleReserveDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReserveDomain_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractTD"


    // $ANTLR start "entryRuleGenericAbstractTD"
    // InternalAsmetaL.g:3239:1: entryRuleGenericAbstractTD returns [EObject current=null] : iv_ruleGenericAbstractTD= ruleGenericAbstractTD EOF ;
    public final EObject entryRuleGenericAbstractTD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGenericAbstractTD = null;


        try {
            // InternalAsmetaL.g:3239:58: (iv_ruleGenericAbstractTD= ruleGenericAbstractTD EOF )
            // InternalAsmetaL.g:3240:2: iv_ruleGenericAbstractTD= ruleGenericAbstractTD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGenericAbstractTDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGenericAbstractTD=ruleGenericAbstractTD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGenericAbstractTD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGenericAbstractTD"


    // $ANTLR start "ruleGenericAbstractTD"
    // InternalAsmetaL.g:3246:1: ruleGenericAbstractTD returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= RULE_ID ) ) ) ;
    public final EObject ruleGenericAbstractTD() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3252:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= RULE_ID ) ) ) )
            // InternalAsmetaL.g:3253:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= RULE_ID ) ) )
            {
            // InternalAsmetaL.g:3253:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= RULE_ID ) ) )
            // InternalAsmetaL.g:3254:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= RULE_ID ) )
            {
            // InternalAsmetaL.g:3254:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==56) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalAsmetaL.g:3255:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:3255:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:3256:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,56,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getGenericAbstractTDAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGenericAbstractTDRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,68,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGenericAbstractTDAccess().getAbstractKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getGenericAbstractTDAccess().getDomainKeyword_2());
              		
            }
            // InternalAsmetaL.g:3276:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalAsmetaL.g:3277:4: (lv_name_3_0= RULE_ID )
            {
            // InternalAsmetaL.g:3277:4: (lv_name_3_0= RULE_ID )
            // InternalAsmetaL.g:3278:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getGenericAbstractTDAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGenericAbstractTDRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGenericAbstractTD"


    // $ANTLR start "entryRuleAgentDomain"
    // InternalAsmetaL.g:3298:1: entryRuleAgentDomain returns [EObject current=null] : iv_ruleAgentDomain= ruleAgentDomain EOF ;
    public final EObject entryRuleAgentDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAgentDomain = null;


        try {
            // InternalAsmetaL.g:3298:52: (iv_ruleAgentDomain= ruleAgentDomain EOF )
            // InternalAsmetaL.g:3299:2: iv_ruleAgentDomain= ruleAgentDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAgentDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAgentDomain=ruleAgentDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAgentDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAgentDomain"


    // $ANTLR start "ruleAgentDomain"
    // InternalAsmetaL.g:3305:1: ruleAgentDomain returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Agent' ) ) ) ;
    public final EObject ruleAgentDomain() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3311:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Agent' ) ) ) )
            // InternalAsmetaL.g:3312:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Agent' ) ) )
            {
            // InternalAsmetaL.g:3312:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Agent' ) ) )
            // InternalAsmetaL.g:3313:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Agent' ) )
            {
            // InternalAsmetaL.g:3313:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==56) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalAsmetaL.g:3314:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:3314:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:3315:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,56,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getAgentDomainAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAgentDomainRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,68,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAgentDomainAccess().getAbstractKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,37,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAgentDomainAccess().getDomainKeyword_2());
              		
            }
            // InternalAsmetaL.g:3335:3: ( (lv_name_3_0= 'Agent' ) )
            // InternalAsmetaL.g:3336:4: (lv_name_3_0= 'Agent' )
            {
            // InternalAsmetaL.g:3336:4: (lv_name_3_0= 'Agent' )
            // InternalAsmetaL.g:3337:5: lv_name_3_0= 'Agent'
            {
            lv_name_3_0=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getAgentDomainAccess().getNameAgentKeyword_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAgentDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_3_0, "Agent");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAgentDomain"


    // $ANTLR start "entryRuleReserveDomain"
    // InternalAsmetaL.g:3353:1: entryRuleReserveDomain returns [EObject current=null] : iv_ruleReserveDomain= ruleReserveDomain EOF ;
    public final EObject entryRuleReserveDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReserveDomain = null;


        try {
            // InternalAsmetaL.g:3353:54: (iv_ruleReserveDomain= ruleReserveDomain EOF )
            // InternalAsmetaL.g:3354:2: iv_ruleReserveDomain= ruleReserveDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReserveDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReserveDomain=ruleReserveDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReserveDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReserveDomain"


    // $ANTLR start "ruleReserveDomain"
    // InternalAsmetaL.g:3360:1: ruleReserveDomain returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Reserve' ) ) ) ;
    public final EObject ruleReserveDomain() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3366:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Reserve' ) ) ) )
            // InternalAsmetaL.g:3367:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Reserve' ) ) )
            {
            // InternalAsmetaL.g:3367:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Reserve' ) ) )
            // InternalAsmetaL.g:3368:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'abstract' otherlv_2= 'domain' ( (lv_name_3_0= 'Reserve' ) )
            {
            // InternalAsmetaL.g:3368:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==56) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalAsmetaL.g:3369:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:3369:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:3370:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,56,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getReserveDomainAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getReserveDomainRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,68,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReserveDomainAccess().getAbstractKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,37,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getReserveDomainAccess().getDomainKeyword_2());
              		
            }
            // InternalAsmetaL.g:3390:3: ( (lv_name_3_0= 'Reserve' ) )
            // InternalAsmetaL.g:3391:4: (lv_name_3_0= 'Reserve' )
            {
            // InternalAsmetaL.g:3391:4: (lv_name_3_0= 'Reserve' )
            // InternalAsmetaL.g:3392:5: lv_name_3_0= 'Reserve'
            {
            lv_name_3_0=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getReserveDomainAccess().getNameReserveKeyword_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReserveDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_3_0, "Reserve");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReserveDomain"


    // $ANTLR start "entryRuleEnumTD"
    // InternalAsmetaL.g:3408:1: entryRuleEnumTD returns [EObject current=null] : iv_ruleEnumTD= ruleEnumTD EOF ;
    public final EObject entryRuleEnumTD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumTD = null;


        try {
            // InternalAsmetaL.g:3408:47: (iv_ruleEnumTD= ruleEnumTD EOF )
            // InternalAsmetaL.g:3409:2: iv_ruleEnumTD= ruleEnumTD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumTDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumTD=ruleEnumTD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumTD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumTD"


    // $ANTLR start "ruleEnumTD"
    // InternalAsmetaL.g:3415:1: ruleEnumTD returns [EObject current=null] : (otherlv_0= 'enum' otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' otherlv_4= '{' ( (lv_element_5_0= ruleEnumElement ) ) ( (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) ) )* otherlv_9= '}' ) ;
    public final EObject ruleEnumTD() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_element_5_0 = null;

        EObject lv_element_8_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3421:2: ( (otherlv_0= 'enum' otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' otherlv_4= '{' ( (lv_element_5_0= ruleEnumElement ) ) ( (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) ) )* otherlv_9= '}' ) )
            // InternalAsmetaL.g:3422:2: (otherlv_0= 'enum' otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' otherlv_4= '{' ( (lv_element_5_0= ruleEnumElement ) ) ( (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) ) )* otherlv_9= '}' )
            {
            // InternalAsmetaL.g:3422:2: (otherlv_0= 'enum' otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' otherlv_4= '{' ( (lv_element_5_0= ruleEnumElement ) ) ( (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) ) )* otherlv_9= '}' )
            // InternalAsmetaL.g:3423:3: otherlv_0= 'enum' otherlv_1= 'domain' ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' otherlv_4= '{' ( (lv_element_5_0= ruleEnumElement ) ) ( (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) ) )* otherlv_9= '}'
            {
            otherlv_0=(Token)match(input,70,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEnumTDAccess().getEnumKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,37,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEnumTDAccess().getDomainKeyword_1());
              		
            }
            // InternalAsmetaL.g:3431:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalAsmetaL.g:3432:4: (lv_name_2_0= RULE_ID )
            {
            // InternalAsmetaL.g:3432:4: (lv_name_2_0= RULE_ID )
            // InternalAsmetaL.g:3433:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getEnumTDAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEnumTDRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            otherlv_3=(Token)match(input,38,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEnumTDAccess().getEqualsSignKeyword_3());
              		
            }
            otherlv_4=(Token)match(input,71,FOLLOW_59); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getEnumTDAccess().getLeftCurlyBracketKeyword_4());
              		
            }
            // InternalAsmetaL.g:3457:3: ( (lv_element_5_0= ruleEnumElement ) )
            // InternalAsmetaL.g:3458:4: (lv_element_5_0= ruleEnumElement )
            {
            // InternalAsmetaL.g:3458:4: (lv_element_5_0= ruleEnumElement )
            // InternalAsmetaL.g:3459:5: lv_element_5_0= ruleEnumElement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumTDAccess().getElementEnumElementParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_60);
            lv_element_5_0=ruleEnumElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumTDRule());
              					}
              					add(
              						current,
              						"element",
              						lv_element_5_0,
              						"org.asmeta.xt.AsmetaL.EnumElement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:3476:3: ( (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==30||LA62_0==72) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalAsmetaL.g:3477:4: (otherlv_6= '|' | otherlv_7= ',' ) ( (lv_element_8_0= ruleEnumElement ) )
            	    {
            	    // InternalAsmetaL.g:3477:4: (otherlv_6= '|' | otherlv_7= ',' )
            	    int alt61=2;
            	    int LA61_0 = input.LA(1);

            	    if ( (LA61_0==72) ) {
            	        alt61=1;
            	    }
            	    else if ( (LA61_0==30) ) {
            	        alt61=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 61, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt61) {
            	        case 1 :
            	            // InternalAsmetaL.g:3478:5: otherlv_6= '|'
            	            {
            	            otherlv_6=(Token)match(input,72,FOLLOW_59); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_6, grammarAccess.getEnumTDAccess().getVerticalLineKeyword_6_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:3483:5: otherlv_7= ','
            	            {
            	            otherlv_7=(Token)match(input,30,FOLLOW_59); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_7, grammarAccess.getEnumTDAccess().getCommaKeyword_6_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalAsmetaL.g:3488:4: ( (lv_element_8_0= ruleEnumElement ) )
            	    // InternalAsmetaL.g:3489:5: (lv_element_8_0= ruleEnumElement )
            	    {
            	    // InternalAsmetaL.g:3489:5: (lv_element_8_0= ruleEnumElement )
            	    // InternalAsmetaL.g:3490:6: lv_element_8_0= ruleEnumElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEnumTDAccess().getElementEnumElementParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_element_8_0=ruleEnumElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEnumTDRule());
            	      						}
            	      						add(
            	      							current,
            	      							"element",
            	      							lv_element_8_0,
            	      							"org.asmeta.xt.AsmetaL.EnumElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            otherlv_9=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getEnumTDAccess().getRightCurlyBracketKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumTD"


    // $ANTLR start "entryRuleEnumElement"
    // InternalAsmetaL.g:3516:1: entryRuleEnumElement returns [EObject current=null] : iv_ruleEnumElement= ruleEnumElement EOF ;
    public final EObject entryRuleEnumElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumElement = null;


        try {
            // InternalAsmetaL.g:3516:52: (iv_ruleEnumElement= ruleEnumElement EOF )
            // InternalAsmetaL.g:3517:2: iv_ruleEnumElement= ruleEnumElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumElement=ruleEnumElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumElement"


    // $ANTLR start "ruleEnumElement"
    // InternalAsmetaL.g:3523:1: ruleEnumElement returns [EObject current=null] : ( (lv_symbol_0_0= RULE_ENUM_ID ) ) ;
    public final EObject ruleEnumElement() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:3529:2: ( ( (lv_symbol_0_0= RULE_ENUM_ID ) ) )
            // InternalAsmetaL.g:3530:2: ( (lv_symbol_0_0= RULE_ENUM_ID ) )
            {
            // InternalAsmetaL.g:3530:2: ( (lv_symbol_0_0= RULE_ENUM_ID ) )
            // InternalAsmetaL.g:3531:3: (lv_symbol_0_0= RULE_ENUM_ID )
            {
            // InternalAsmetaL.g:3531:3: (lv_symbol_0_0= RULE_ENUM_ID )
            // InternalAsmetaL.g:3532:4: lv_symbol_0_0= RULE_ENUM_ID
            {
            lv_symbol_0_0=(Token)match(input,RULE_ENUM_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getEnumElementAccess().getSymbolENUM_IDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEnumElementRule());
              				}
              				setWithLastConsumed(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.ENUM_ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumElement"


    // $ANTLR start "entryRuleStructuredTD"
    // InternalAsmetaL.g:3551:1: entryRuleStructuredTD returns [EObject current=null] : iv_ruleStructuredTD= ruleStructuredTD EOF ;
    public final EObject entryRuleStructuredTD() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructuredTD = null;


        try {
            // InternalAsmetaL.g:3551:53: (iv_ruleStructuredTD= ruleStructuredTD EOF )
            // InternalAsmetaL.g:3552:2: iv_ruleStructuredTD= ruleStructuredTD EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructuredTDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructuredTD=ruleStructuredTD();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructuredTD; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructuredTD"


    // $ANTLR start "ruleStructuredTD"
    // InternalAsmetaL.g:3558:1: ruleStructuredTD returns [EObject current=null] : (this_RuleDomain_0= ruleRuleDomain | this_ProductDomain_1= ruleProductDomain | this_SequenceDomain_2= ruleSequenceDomain | this_PowersetDomain_3= rulePowersetDomain | this_BagDomain_4= ruleBagDomain | this_MapDomain_5= ruleMapDomain ) ;
    public final EObject ruleStructuredTD() throws RecognitionException {
        EObject current = null;

        EObject this_RuleDomain_0 = null;

        EObject this_ProductDomain_1 = null;

        EObject this_SequenceDomain_2 = null;

        EObject this_PowersetDomain_3 = null;

        EObject this_BagDomain_4 = null;

        EObject this_MapDomain_5 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3564:2: ( (this_RuleDomain_0= ruleRuleDomain | this_ProductDomain_1= ruleProductDomain | this_SequenceDomain_2= ruleSequenceDomain | this_PowersetDomain_3= rulePowersetDomain | this_BagDomain_4= ruleBagDomain | this_MapDomain_5= ruleMapDomain ) )
            // InternalAsmetaL.g:3565:2: (this_RuleDomain_0= ruleRuleDomain | this_ProductDomain_1= ruleProductDomain | this_SequenceDomain_2= ruleSequenceDomain | this_PowersetDomain_3= rulePowersetDomain | this_BagDomain_4= ruleBagDomain | this_MapDomain_5= ruleMapDomain )
            {
            // InternalAsmetaL.g:3565:2: (this_RuleDomain_0= ruleRuleDomain | this_ProductDomain_1= ruleProductDomain | this_SequenceDomain_2= ruleSequenceDomain | this_PowersetDomain_3= rulePowersetDomain | this_BagDomain_4= ruleBagDomain | this_MapDomain_5= ruleMapDomain )
            int alt63=6;
            switch ( input.LA(1) ) {
            case 74:
                {
                alt63=1;
                }
                break;
            case 75:
                {
                alt63=2;
                }
                break;
            case 76:
                {
                alt63=3;
                }
                break;
            case 77:
                {
                alt63=4;
                }
                break;
            case 78:
                {
                alt63=5;
                }
                break;
            case 79:
                {
                alt63=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;
            }

            switch (alt63) {
                case 1 :
                    // InternalAsmetaL.g:3566:3: this_RuleDomain_0= ruleRuleDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuredTDAccess().getRuleDomainParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RuleDomain_0=ruleRuleDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RuleDomain_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:3578:3: this_ProductDomain_1= ruleProductDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuredTDAccess().getProductDomainParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ProductDomain_1=ruleProductDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ProductDomain_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:3590:3: this_SequenceDomain_2= ruleSequenceDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuredTDAccess().getSequenceDomainParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SequenceDomain_2=ruleSequenceDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SequenceDomain_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:3602:3: this_PowersetDomain_3= rulePowersetDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuredTDAccess().getPowersetDomainParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PowersetDomain_3=rulePowersetDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PowersetDomain_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:3614:3: this_BagDomain_4= ruleBagDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuredTDAccess().getBagDomainParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BagDomain_4=ruleBagDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BagDomain_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:3626:3: this_MapDomain_5= ruleMapDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStructuredTDAccess().getMapDomainParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MapDomain_5=ruleMapDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MapDomain_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructuredTD"


    // $ANTLR start "entryRuleRuleDomain"
    // InternalAsmetaL.g:3641:1: entryRuleRuleDomain returns [EObject current=null] : iv_ruleRuleDomain= ruleRuleDomain EOF ;
    public final EObject entryRuleRuleDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRuleDomain = null;


        try {
            // InternalAsmetaL.g:3641:51: (iv_ruleRuleDomain= ruleRuleDomain EOF )
            // InternalAsmetaL.g:3642:2: iv_ruleRuleDomain= ruleRuleDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRuleDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRuleDomain=ruleRuleDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRuleDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRuleDomain"


    // $ANTLR start "ruleRuleDomain"
    // InternalAsmetaL.g:3648:1: ruleRuleDomain returns [EObject current=null] : ( () ( (lv_name_1_0= 'Rule' ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? ) ;
    public final EObject ruleRuleDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_domains_3_0 = null;

        EObject lv_domains_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3654:2: ( ( () ( (lv_name_1_0= 'Rule' ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? ) )
            // InternalAsmetaL.g:3655:2: ( () ( (lv_name_1_0= 'Rule' ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? )
            {
            // InternalAsmetaL.g:3655:2: ( () ( (lv_name_1_0= 'Rule' ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? )
            // InternalAsmetaL.g:3656:3: () ( (lv_name_1_0= 'Rule' ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )?
            {
            // InternalAsmetaL.g:3656:3: ()
            // InternalAsmetaL.g:3657:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRuleDomainAccess().getRuleDomainAction_0(),
              					current);
              			
            }

            }

            // InternalAsmetaL.g:3666:3: ( (lv_name_1_0= 'Rule' ) )
            // InternalAsmetaL.g:3667:4: (lv_name_1_0= 'Rule' )
            {
            // InternalAsmetaL.g:3667:4: (lv_name_1_0= 'Rule' )
            // InternalAsmetaL.g:3668:5: lv_name_1_0= 'Rule'
            {
            lv_name_1_0=(Token)match(input,74,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getRuleDomainAccess().getNameRuleKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getRuleDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_1_0, "Rule");
              				
            }

            }


            }

            // InternalAsmetaL.g:3680:3: (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==29) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalAsmetaL.g:3681:4: otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,29,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRuleDomainAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalAsmetaL.g:3685:4: ( (lv_domains_3_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:3686:5: (lv_domains_3_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:3686:5: (lv_domains_3_0= rulegetDomainByID )
                    // InternalAsmetaL.g:3687:6: lv_domains_3_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRuleDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_domains_3_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRuleDomainRule());
                      						}
                      						add(
                      							current,
                      							"domains",
                      							lv_domains_3_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:3704:4: (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )*
                    loop64:
                    do {
                        int alt64=2;
                        int LA64_0 = input.LA(1);

                        if ( (LA64_0==30) ) {
                            alt64=1;
                        }


                        switch (alt64) {
                    	case 1 :
                    	    // InternalAsmetaL.g:3705:5: otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) )
                    	    {
                    	    otherlv_4=(Token)match(input,30,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getRuleDomainAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:3709:5: ( (lv_domains_5_0= rulegetDomainByID ) )
                    	    // InternalAsmetaL.g:3710:6: (lv_domains_5_0= rulegetDomainByID )
                    	    {
                    	    // InternalAsmetaL.g:3710:6: (lv_domains_5_0= rulegetDomainByID )
                    	    // InternalAsmetaL.g:3711:7: lv_domains_5_0= rulegetDomainByID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getRuleDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_domains_5_0=rulegetDomainByID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getRuleDomainRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domains",
                    	      								lv_domains_5_0,
                    	      								"org.asmeta.xt.AsmetaL.getDomainByID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop64;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getRuleDomainAccess().getRightParenthesisKeyword_2_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRuleDomain"


    // $ANTLR start "entryRuleProductDomain"
    // InternalAsmetaL.g:3738:1: entryRuleProductDomain returns [EObject current=null] : iv_ruleProductDomain= ruleProductDomain EOF ;
    public final EObject entryRuleProductDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProductDomain = null;


        try {
            // InternalAsmetaL.g:3738:54: (iv_ruleProductDomain= ruleProductDomain EOF )
            // InternalAsmetaL.g:3739:2: iv_ruleProductDomain= ruleProductDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProductDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProductDomain=ruleProductDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProductDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProductDomain"


    // $ANTLR start "ruleProductDomain"
    // InternalAsmetaL.g:3745:1: ruleProductDomain returns [EObject current=null] : ( ( (lv_name_0_0= 'Prod' ) ) otherlv_1= '(' ( (lv_domains_2_0= rulegetDomainByID ) ) (otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) ) )+ otherlv_5= ')' ) ;
    public final EObject ruleProductDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_domains_2_0 = null;

        EObject lv_domains_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3751:2: ( ( ( (lv_name_0_0= 'Prod' ) ) otherlv_1= '(' ( (lv_domains_2_0= rulegetDomainByID ) ) (otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) ) )+ otherlv_5= ')' ) )
            // InternalAsmetaL.g:3752:2: ( ( (lv_name_0_0= 'Prod' ) ) otherlv_1= '(' ( (lv_domains_2_0= rulegetDomainByID ) ) (otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) ) )+ otherlv_5= ')' )
            {
            // InternalAsmetaL.g:3752:2: ( ( (lv_name_0_0= 'Prod' ) ) otherlv_1= '(' ( (lv_domains_2_0= rulegetDomainByID ) ) (otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) ) )+ otherlv_5= ')' )
            // InternalAsmetaL.g:3753:3: ( (lv_name_0_0= 'Prod' ) ) otherlv_1= '(' ( (lv_domains_2_0= rulegetDomainByID ) ) (otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) ) )+ otherlv_5= ')'
            {
            // InternalAsmetaL.g:3753:3: ( (lv_name_0_0= 'Prod' ) )
            // InternalAsmetaL.g:3754:4: (lv_name_0_0= 'Prod' )
            {
            // InternalAsmetaL.g:3754:4: (lv_name_0_0= 'Prod' )
            // InternalAsmetaL.g:3755:5: lv_name_0_0= 'Prod'
            {
            lv_name_0_0=(Token)match(input,75,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getProductDomainAccess().getNameProdKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getProductDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "Prod");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,29,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getProductDomainAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:3771:3: ( (lv_domains_2_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:3772:4: (lv_domains_2_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:3772:4: (lv_domains_2_0= rulegetDomainByID )
            // InternalAsmetaL.g:3773:5: lv_domains_2_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getProductDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_52);
            lv_domains_2_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getProductDomainRule());
              					}
              					add(
              						current,
              						"domains",
              						lv_domains_2_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:3790:3: (otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) ) )+
            int cnt66=0;
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==30) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalAsmetaL.g:3791:4: otherlv_3= ',' ( (lv_domains_4_0= rulegetDomainByID ) )
            	    {
            	    otherlv_3=(Token)match(input,30,FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getProductDomainAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:3795:4: ( (lv_domains_4_0= rulegetDomainByID ) )
            	    // InternalAsmetaL.g:3796:5: (lv_domains_4_0= rulegetDomainByID )
            	    {
            	    // InternalAsmetaL.g:3796:5: (lv_domains_4_0= rulegetDomainByID )
            	    // InternalAsmetaL.g:3797:6: lv_domains_4_0= rulegetDomainByID
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getProductDomainAccess().getDomainsGetDomainByIDParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_domains_4_0=rulegetDomainByID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getProductDomainRule());
            	      						}
            	      						add(
            	      							current,
            	      							"domains",
            	      							lv_domains_4_0,
            	      							"org.asmeta.xt.AsmetaL.getDomainByID");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt66 >= 1 ) break loop66;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(66, input);
                        throw eee;
                }
                cnt66++;
            } while (true);

            otherlv_5=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getProductDomainAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProductDomain"


    // $ANTLR start "entryRuleSequenceDomain"
    // InternalAsmetaL.g:3823:1: entryRuleSequenceDomain returns [EObject current=null] : iv_ruleSequenceDomain= ruleSequenceDomain EOF ;
    public final EObject entryRuleSequenceDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceDomain = null;


        try {
            // InternalAsmetaL.g:3823:55: (iv_ruleSequenceDomain= ruleSequenceDomain EOF )
            // InternalAsmetaL.g:3824:2: iv_ruleSequenceDomain= ruleSequenceDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceDomain=ruleSequenceDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceDomain"


    // $ANTLR start "ruleSequenceDomain"
    // InternalAsmetaL.g:3830:1: ruleSequenceDomain returns [EObject current=null] : ( ( (lv_name_0_0= 'Seq' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' ) ;
    public final EObject ruleSequenceDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_domain_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3836:2: ( ( ( (lv_name_0_0= 'Seq' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' ) )
            // InternalAsmetaL.g:3837:2: ( ( (lv_name_0_0= 'Seq' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' )
            {
            // InternalAsmetaL.g:3837:2: ( ( (lv_name_0_0= 'Seq' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' )
            // InternalAsmetaL.g:3838:3: ( (lv_name_0_0= 'Seq' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')'
            {
            // InternalAsmetaL.g:3838:3: ( (lv_name_0_0= 'Seq' ) )
            // InternalAsmetaL.g:3839:4: (lv_name_0_0= 'Seq' )
            {
            // InternalAsmetaL.g:3839:4: (lv_name_0_0= 'Seq' )
            // InternalAsmetaL.g:3840:5: lv_name_0_0= 'Seq'
            {
            lv_name_0_0=(Token)match(input,76,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getSequenceDomainAccess().getNameSeqKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSequenceDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "Seq");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,29,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSequenceDomainAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:3856:3: ( (lv_domain_2_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:3857:4: (lv_domain_2_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:3857:4: (lv_domain_2_0= rulegetDomainByID )
            // InternalAsmetaL.g:3858:5: lv_domain_2_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSequenceDomainAccess().getDomainGetDomainByIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_50);
            lv_domain_2_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSequenceDomainRule());
              					}
              					set(
              						current,
              						"domain",
              						lv_domain_2_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSequenceDomainAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceDomain"


    // $ANTLR start "entryRulePowersetDomain"
    // InternalAsmetaL.g:3883:1: entryRulePowersetDomain returns [EObject current=null] : iv_rulePowersetDomain= rulePowersetDomain EOF ;
    public final EObject entryRulePowersetDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePowersetDomain = null;


        try {
            // InternalAsmetaL.g:3883:55: (iv_rulePowersetDomain= rulePowersetDomain EOF )
            // InternalAsmetaL.g:3884:2: iv_rulePowersetDomain= rulePowersetDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPowersetDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePowersetDomain=rulePowersetDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePowersetDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePowersetDomain"


    // $ANTLR start "rulePowersetDomain"
    // InternalAsmetaL.g:3890:1: rulePowersetDomain returns [EObject current=null] : ( ( (lv_name_0_0= 'Powerset' ) ) otherlv_1= '(' ( (lv_baseDomain_2_0= rulegetDomainByID ) ) otherlv_3= ')' ) ;
    public final EObject rulePowersetDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_baseDomain_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3896:2: ( ( ( (lv_name_0_0= 'Powerset' ) ) otherlv_1= '(' ( (lv_baseDomain_2_0= rulegetDomainByID ) ) otherlv_3= ')' ) )
            // InternalAsmetaL.g:3897:2: ( ( (lv_name_0_0= 'Powerset' ) ) otherlv_1= '(' ( (lv_baseDomain_2_0= rulegetDomainByID ) ) otherlv_3= ')' )
            {
            // InternalAsmetaL.g:3897:2: ( ( (lv_name_0_0= 'Powerset' ) ) otherlv_1= '(' ( (lv_baseDomain_2_0= rulegetDomainByID ) ) otherlv_3= ')' )
            // InternalAsmetaL.g:3898:3: ( (lv_name_0_0= 'Powerset' ) ) otherlv_1= '(' ( (lv_baseDomain_2_0= rulegetDomainByID ) ) otherlv_3= ')'
            {
            // InternalAsmetaL.g:3898:3: ( (lv_name_0_0= 'Powerset' ) )
            // InternalAsmetaL.g:3899:4: (lv_name_0_0= 'Powerset' )
            {
            // InternalAsmetaL.g:3899:4: (lv_name_0_0= 'Powerset' )
            // InternalAsmetaL.g:3900:5: lv_name_0_0= 'Powerset'
            {
            lv_name_0_0=(Token)match(input,77,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getPowersetDomainAccess().getNamePowersetKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getPowersetDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "Powerset");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,29,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPowersetDomainAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:3916:3: ( (lv_baseDomain_2_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:3917:4: (lv_baseDomain_2_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:3917:4: (lv_baseDomain_2_0= rulegetDomainByID )
            // InternalAsmetaL.g:3918:5: lv_baseDomain_2_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPowersetDomainAccess().getBaseDomainGetDomainByIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_50);
            lv_baseDomain_2_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPowersetDomainRule());
              					}
              					set(
              						current,
              						"baseDomain",
              						lv_baseDomain_2_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getPowersetDomainAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePowersetDomain"


    // $ANTLR start "entryRuleBagDomain"
    // InternalAsmetaL.g:3943:1: entryRuleBagDomain returns [EObject current=null] : iv_ruleBagDomain= ruleBagDomain EOF ;
    public final EObject entryRuleBagDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBagDomain = null;


        try {
            // InternalAsmetaL.g:3943:50: (iv_ruleBagDomain= ruleBagDomain EOF )
            // InternalAsmetaL.g:3944:2: iv_ruleBagDomain= ruleBagDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBagDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBagDomain=ruleBagDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBagDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBagDomain"


    // $ANTLR start "ruleBagDomain"
    // InternalAsmetaL.g:3950:1: ruleBagDomain returns [EObject current=null] : ( ( (lv_name_0_0= 'Bag' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' ) ;
    public final EObject ruleBagDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_domain_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:3956:2: ( ( ( (lv_name_0_0= 'Bag' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' ) )
            // InternalAsmetaL.g:3957:2: ( ( (lv_name_0_0= 'Bag' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' )
            {
            // InternalAsmetaL.g:3957:2: ( ( (lv_name_0_0= 'Bag' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')' )
            // InternalAsmetaL.g:3958:3: ( (lv_name_0_0= 'Bag' ) ) otherlv_1= '(' ( (lv_domain_2_0= rulegetDomainByID ) ) otherlv_3= ')'
            {
            // InternalAsmetaL.g:3958:3: ( (lv_name_0_0= 'Bag' ) )
            // InternalAsmetaL.g:3959:4: (lv_name_0_0= 'Bag' )
            {
            // InternalAsmetaL.g:3959:4: (lv_name_0_0= 'Bag' )
            // InternalAsmetaL.g:3960:5: lv_name_0_0= 'Bag'
            {
            lv_name_0_0=(Token)match(input,78,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getBagDomainAccess().getNameBagKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getBagDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "Bag");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,29,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBagDomainAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:3976:3: ( (lv_domain_2_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:3977:4: (lv_domain_2_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:3977:4: (lv_domain_2_0= rulegetDomainByID )
            // InternalAsmetaL.g:3978:5: lv_domain_2_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBagDomainAccess().getDomainGetDomainByIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_50);
            lv_domain_2_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBagDomainRule());
              					}
              					set(
              						current,
              						"domain",
              						lv_domain_2_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getBagDomainAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBagDomain"


    // $ANTLR start "entryRuleMapDomain"
    // InternalAsmetaL.g:4003:1: entryRuleMapDomain returns [EObject current=null] : iv_ruleMapDomain= ruleMapDomain EOF ;
    public final EObject entryRuleMapDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapDomain = null;


        try {
            // InternalAsmetaL.g:4003:50: (iv_ruleMapDomain= ruleMapDomain EOF )
            // InternalAsmetaL.g:4004:2: iv_ruleMapDomain= ruleMapDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapDomain=ruleMapDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapDomain"


    // $ANTLR start "ruleMapDomain"
    // InternalAsmetaL.g:4010:1: ruleMapDomain returns [EObject current=null] : ( ( (lv_name_0_0= 'Map' ) ) otherlv_1= '(' ( (lv_sourceDomain_2_0= rulegetDomainByID ) ) otherlv_3= ',' ( (lv_targetDomain_4_0= rulegetDomainByID ) ) otherlv_5= ')' ) ;
    public final EObject ruleMapDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_sourceDomain_2_0 = null;

        EObject lv_targetDomain_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4016:2: ( ( ( (lv_name_0_0= 'Map' ) ) otherlv_1= '(' ( (lv_sourceDomain_2_0= rulegetDomainByID ) ) otherlv_3= ',' ( (lv_targetDomain_4_0= rulegetDomainByID ) ) otherlv_5= ')' ) )
            // InternalAsmetaL.g:4017:2: ( ( (lv_name_0_0= 'Map' ) ) otherlv_1= '(' ( (lv_sourceDomain_2_0= rulegetDomainByID ) ) otherlv_3= ',' ( (lv_targetDomain_4_0= rulegetDomainByID ) ) otherlv_5= ')' )
            {
            // InternalAsmetaL.g:4017:2: ( ( (lv_name_0_0= 'Map' ) ) otherlv_1= '(' ( (lv_sourceDomain_2_0= rulegetDomainByID ) ) otherlv_3= ',' ( (lv_targetDomain_4_0= rulegetDomainByID ) ) otherlv_5= ')' )
            // InternalAsmetaL.g:4018:3: ( (lv_name_0_0= 'Map' ) ) otherlv_1= '(' ( (lv_sourceDomain_2_0= rulegetDomainByID ) ) otherlv_3= ',' ( (lv_targetDomain_4_0= rulegetDomainByID ) ) otherlv_5= ')'
            {
            // InternalAsmetaL.g:4018:3: ( (lv_name_0_0= 'Map' ) )
            // InternalAsmetaL.g:4019:4: (lv_name_0_0= 'Map' )
            {
            // InternalAsmetaL.g:4019:4: (lv_name_0_0= 'Map' )
            // InternalAsmetaL.g:4020:5: lv_name_0_0= 'Map'
            {
            lv_name_0_0=(Token)match(input,79,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getMapDomainAccess().getNameMapKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getMapDomainRule());
              					}
              					setWithLastConsumed(current, "name", lv_name_0_0, "Map");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,29,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapDomainAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:4036:3: ( (lv_sourceDomain_2_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4037:4: (lv_sourceDomain_2_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4037:4: (lv_sourceDomain_2_0= rulegetDomainByID )
            // InternalAsmetaL.g:4038:5: lv_sourceDomain_2_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapDomainAccess().getSourceDomainGetDomainByIDParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_52);
            lv_sourceDomain_2_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapDomainRule());
              					}
              					set(
              						current,
              						"sourceDomain",
              						lv_sourceDomain_2_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,30,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMapDomainAccess().getCommaKeyword_3());
              		
            }
            // InternalAsmetaL.g:4059:3: ( (lv_targetDomain_4_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4060:4: (lv_targetDomain_4_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4060:4: (lv_targetDomain_4_0= rulegetDomainByID )
            // InternalAsmetaL.g:4061:5: lv_targetDomain_4_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapDomainAccess().getTargetDomainGetDomainByIDParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_50);
            lv_targetDomain_4_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapDomainRule());
              					}
              					set(
              						current,
              						"targetDomain",
              						lv_targetDomain_4_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMapDomainAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapDomain"


    // $ANTLR start "entryRulegetDomainByID"
    // InternalAsmetaL.g:4086:1: entryRulegetDomainByID returns [EObject current=null] : iv_rulegetDomainByID= rulegetDomainByID EOF ;
    public final EObject entryRulegetDomainByID() throws RecognitionException {
        EObject current = null;

        EObject iv_rulegetDomainByID = null;


        try {
            // InternalAsmetaL.g:4086:54: (iv_rulegetDomainByID= rulegetDomainByID EOF )
            // InternalAsmetaL.g:4087:2: iv_rulegetDomainByID= rulegetDomainByID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGetDomainByIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulegetDomainByID=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulegetDomainByID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulegetDomainByID"


    // $ANTLR start "rulegetDomainByID"
    // InternalAsmetaL.g:4093:1: rulegetDomainByID returns [EObject current=null] : (this_StructuredTD_0= ruleStructuredTD | this_nameofDomain_1= rulenameofDomain | this_StandardDomain_2= ruleStandardDomain | this_AbstractTD_3= ruleAbstractTD | ( (lv_name_4_0= 'Agent' ) ) | ( (lv_name_5_0= 'Reserve' ) ) ) ;
    public final EObject rulegetDomainByID() throws RecognitionException {
        EObject current = null;

        Token lv_name_4_0=null;
        Token lv_name_5_0=null;
        EObject this_StructuredTD_0 = null;

        EObject this_nameofDomain_1 = null;

        EObject this_StandardDomain_2 = null;

        EObject this_AbstractTD_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4099:2: ( (this_StructuredTD_0= ruleStructuredTD | this_nameofDomain_1= rulenameofDomain | this_StandardDomain_2= ruleStandardDomain | this_AbstractTD_3= ruleAbstractTD | ( (lv_name_4_0= 'Agent' ) ) | ( (lv_name_5_0= 'Reserve' ) ) ) )
            // InternalAsmetaL.g:4100:2: (this_StructuredTD_0= ruleStructuredTD | this_nameofDomain_1= rulenameofDomain | this_StandardDomain_2= ruleStandardDomain | this_AbstractTD_3= ruleAbstractTD | ( (lv_name_4_0= 'Agent' ) ) | ( (lv_name_5_0= 'Reserve' ) ) )
            {
            // InternalAsmetaL.g:4100:2: (this_StructuredTD_0= ruleStructuredTD | this_nameofDomain_1= rulenameofDomain | this_StandardDomain_2= ruleStandardDomain | this_AbstractTD_3= ruleAbstractTD | ( (lv_name_4_0= 'Agent' ) ) | ( (lv_name_5_0= 'Reserve' ) ) )
            int alt67=6;
            switch ( input.LA(1) ) {
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
                {
                alt67=1;
                }
                break;
            case RULE_ID:
                {
                alt67=2;
                }
                break;
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
                {
                alt67=3;
                }
                break;
            case 56:
            case 68:
                {
                alt67=4;
                }
                break;
            case 42:
                {
                alt67=5;
                }
                break;
            case 69:
                {
                alt67=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }

            switch (alt67) {
                case 1 :
                    // InternalAsmetaL.g:4101:3: this_StructuredTD_0= ruleStructuredTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGetDomainByIDAccess().getStructuredTDParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StructuredTD_0=ruleStructuredTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructuredTD_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:4113:3: this_nameofDomain_1= rulenameofDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGetDomainByIDAccess().getNameofDomainParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_nameofDomain_1=rulenameofDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_nameofDomain_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:4125:3: this_StandardDomain_2= ruleStandardDomain
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGetDomainByIDAccess().getStandardDomainParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StandardDomain_2=ruleStandardDomain();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StandardDomain_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:4137:3: this_AbstractTD_3= ruleAbstractTD
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getGetDomainByIDAccess().getAbstractTDParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AbstractTD_3=ruleAbstractTD();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AbstractTD_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:4149:3: ( (lv_name_4_0= 'Agent' ) )
                    {
                    // InternalAsmetaL.g:4149:3: ( (lv_name_4_0= 'Agent' ) )
                    // InternalAsmetaL.g:4150:4: (lv_name_4_0= 'Agent' )
                    {
                    // InternalAsmetaL.g:4150:4: (lv_name_4_0= 'Agent' )
                    // InternalAsmetaL.g:4151:5: lv_name_4_0= 'Agent'
                    {
                    lv_name_4_0=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_4_0, grammarAccess.getGetDomainByIDAccess().getNameAgentKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGetDomainByIDRule());
                      					}
                      					setWithLastConsumed(current, "name", lv_name_4_0, "Agent");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:4164:3: ( (lv_name_5_0= 'Reserve' ) )
                    {
                    // InternalAsmetaL.g:4164:3: ( (lv_name_5_0= 'Reserve' ) )
                    // InternalAsmetaL.g:4165:4: (lv_name_5_0= 'Reserve' )
                    {
                    // InternalAsmetaL.g:4165:4: (lv_name_5_0= 'Reserve' )
                    // InternalAsmetaL.g:4166:5: lv_name_5_0= 'Reserve'
                    {
                    lv_name_5_0=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_5_0, grammarAccess.getGetDomainByIDAccess().getNameReserveKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGetDomainByIDRule());
                      					}
                      					setWithLastConsumed(current, "name", lv_name_5_0, "Reserve");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulegetDomainByID"


    // $ANTLR start "entryRuleFunction"
    // InternalAsmetaL.g:4182:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalAsmetaL.g:4182:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalAsmetaL.g:4183:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalAsmetaL.g:4189:1: ruleFunction returns [EObject current=null] : (this_BasicFunction_0= ruleBasicFunction | this_DerivedFunction_1= ruleDerivedFunction ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        EObject this_BasicFunction_0 = null;

        EObject this_DerivedFunction_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4195:2: ( (this_BasicFunction_0= ruleBasicFunction | this_DerivedFunction_1= ruleDerivedFunction ) )
            // InternalAsmetaL.g:4196:2: (this_BasicFunction_0= ruleBasicFunction | this_DerivedFunction_1= ruleDerivedFunction )
            {
            // InternalAsmetaL.g:4196:2: (this_BasicFunction_0= ruleBasicFunction | this_DerivedFunction_1= ruleDerivedFunction )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==56||(LA68_0>=82 && LA68_0<=87)) ) {
                alt68=1;
            }
            else if ( (LA68_0==80) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalAsmetaL.g:4197:3: this_BasicFunction_0= ruleBasicFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionAccess().getBasicFunctionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BasicFunction_0=ruleBasicFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BasicFunction_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:4209:3: this_DerivedFunction_1= ruleDerivedFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFunctionAccess().getDerivedFunctionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DerivedFunction_1=ruleDerivedFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DerivedFunction_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleBasicFunction"
    // InternalAsmetaL.g:4224:1: entryRuleBasicFunction returns [EObject current=null] : iv_ruleBasicFunction= ruleBasicFunction EOF ;
    public final EObject entryRuleBasicFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasicFunction = null;


        try {
            // InternalAsmetaL.g:4224:54: (iv_ruleBasicFunction= ruleBasicFunction EOF )
            // InternalAsmetaL.g:4225:2: iv_ruleBasicFunction= ruleBasicFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicFunction=ruleBasicFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicFunction"


    // $ANTLR start "ruleBasicFunction"
    // InternalAsmetaL.g:4231:1: ruleBasicFunction returns [EObject current=null] : (this_StaticFunction_0= ruleStaticFunction | this_DynamicFunction_1= ruleDynamicFunction ) ;
    public final EObject ruleBasicFunction() throws RecognitionException {
        EObject current = null;

        EObject this_StaticFunction_0 = null;

        EObject this_DynamicFunction_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4237:2: ( (this_StaticFunction_0= ruleStaticFunction | this_DynamicFunction_1= ruleDynamicFunction ) )
            // InternalAsmetaL.g:4238:2: (this_StaticFunction_0= ruleStaticFunction | this_DynamicFunction_1= ruleDynamicFunction )
            {
            // InternalAsmetaL.g:4238:2: (this_StaticFunction_0= ruleStaticFunction | this_DynamicFunction_1= ruleDynamicFunction )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==82) ) {
                alt69=1;
            }
            else if ( (LA69_0==56||(LA69_0>=83 && LA69_0<=87)) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // InternalAsmetaL.g:4239:3: this_StaticFunction_0= ruleStaticFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicFunctionAccess().getStaticFunctionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StaticFunction_0=ruleStaticFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StaticFunction_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:4251:3: this_DynamicFunction_1= ruleDynamicFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicFunctionAccess().getDynamicFunctionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DynamicFunction_1=ruleDynamicFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DynamicFunction_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicFunction"


    // $ANTLR start "entryRuleDerivedFunction"
    // InternalAsmetaL.g:4266:1: entryRuleDerivedFunction returns [EObject current=null] : iv_ruleDerivedFunction= ruleDerivedFunction EOF ;
    public final EObject entryRuleDerivedFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDerivedFunction = null;


        try {
            // InternalAsmetaL.g:4266:56: (iv_ruleDerivedFunction= ruleDerivedFunction EOF )
            // InternalAsmetaL.g:4267:2: iv_ruleDerivedFunction= ruleDerivedFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDerivedFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDerivedFunction=ruleDerivedFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDerivedFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDerivedFunction"


    // $ANTLR start "ruleDerivedFunction"
    // InternalAsmetaL.g:4273:1: ruleDerivedFunction returns [EObject current=null] : (otherlv_0= 'derived' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleDerivedFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_domain_3_0 = null;

        EObject lv_codomain_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4279:2: ( (otherlv_0= 'derived' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4280:2: (otherlv_0= 'derived' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4280:2: (otherlv_0= 'derived' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4281:3: otherlv_0= 'derived' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) )
            {
            otherlv_0=(Token)match(input,80,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDerivedFunctionAccess().getDerivedKeyword_0());
              		
            }
            // InternalAsmetaL.g:4285:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalAsmetaL.g:4286:4: (lv_name_1_0= RULE_ID )
            {
            // InternalAsmetaL.g:4286:4: (lv_name_1_0= RULE_ID )
            // InternalAsmetaL.g:4287:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getDerivedFunctionAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDerivedFunctionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.asmeta.xt.AsmetaL.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,35,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDerivedFunctionAccess().getColonKeyword_2());
              		
            }
            // InternalAsmetaL.g:4307:3: ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )?
            int alt70=2;
            alt70 = dfa70.predict(input);
            switch (alt70) {
                case 1 :
                    // InternalAsmetaL.g:4308:4: ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->'
                    {
                    // InternalAsmetaL.g:4308:4: ( (lv_domain_3_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4309:5: (lv_domain_3_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4309:5: (lv_domain_3_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4310:6: lv_domain_3_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDerivedFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_3_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDerivedFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_3_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,81,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getDerivedFunctionAccess().getHyphenMinusGreaterThanSignKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4332:3: ( (lv_codomain_5_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4333:4: (lv_codomain_5_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4333:4: (lv_codomain_5_0= rulegetDomainByID )
            // InternalAsmetaL.g:4334:5: lv_codomain_5_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDerivedFunctionAccess().getCodomainGetDomainByIDParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_5_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDerivedFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_5_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDerivedFunction"


    // $ANTLR start "entryRuleStaticFunction"
    // InternalAsmetaL.g:4355:1: entryRuleStaticFunction returns [EObject current=null] : iv_ruleStaticFunction= ruleStaticFunction EOF ;
    public final EObject entryRuleStaticFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStaticFunction = null;


        try {
            // InternalAsmetaL.g:4355:55: (iv_ruleStaticFunction= ruleStaticFunction EOF )
            // InternalAsmetaL.g:4356:2: iv_ruleStaticFunction= ruleStaticFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStaticFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStaticFunction=ruleStaticFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStaticFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStaticFunction"


    // $ANTLR start "ruleStaticFunction"
    // InternalAsmetaL.g:4362:1: ruleStaticFunction returns [EObject current=null] : (otherlv_0= 'static' ( (lv_name_1_0= ruleextendedNameForFunction ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleStaticFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_domain_3_0 = null;

        EObject lv_codomain_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4368:2: ( (otherlv_0= 'static' ( (lv_name_1_0= ruleextendedNameForFunction ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4369:2: (otherlv_0= 'static' ( (lv_name_1_0= ruleextendedNameForFunction ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4369:2: (otherlv_0= 'static' ( (lv_name_1_0= ruleextendedNameForFunction ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4370:3: otherlv_0= 'static' ( (lv_name_1_0= ruleextendedNameForFunction ) ) otherlv_2= ':' ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )? ( (lv_codomain_5_0= rulegetDomainByID ) )
            {
            otherlv_0=(Token)match(input,82,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStaticFunctionAccess().getStaticKeyword_0());
              		
            }
            // InternalAsmetaL.g:4374:3: ( (lv_name_1_0= ruleextendedNameForFunction ) )
            // InternalAsmetaL.g:4375:4: (lv_name_1_0= ruleextendedNameForFunction )
            {
            // InternalAsmetaL.g:4375:4: (lv_name_1_0= ruleextendedNameForFunction )
            // InternalAsmetaL.g:4376:5: lv_name_1_0= ruleextendedNameForFunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStaticFunctionAccess().getNameExtendedNameForFunctionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_1_0=ruleextendedNameForFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStaticFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.asmeta.xt.AsmetaL.extendedNameForFunction");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,35,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getStaticFunctionAccess().getColonKeyword_2());
              		
            }
            // InternalAsmetaL.g:4397:3: ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )?
            int alt71=2;
            alt71 = dfa71.predict(input);
            switch (alt71) {
                case 1 :
                    // InternalAsmetaL.g:4398:4: ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->'
                    {
                    // InternalAsmetaL.g:4398:4: ( (lv_domain_3_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4399:5: (lv_domain_3_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4399:5: (lv_domain_3_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4400:6: lv_domain_3_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStaticFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_3_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStaticFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_3_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,81,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getStaticFunctionAccess().getHyphenMinusGreaterThanSignKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4422:3: ( (lv_codomain_5_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4423:4: (lv_codomain_5_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4423:4: (lv_codomain_5_0= rulegetDomainByID )
            // InternalAsmetaL.g:4424:5: lv_codomain_5_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStaticFunctionAccess().getCodomainGetDomainByIDParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_5_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStaticFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_5_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStaticFunction"


    // $ANTLR start "entryRuleDynamicFunction"
    // InternalAsmetaL.g:4445:1: entryRuleDynamicFunction returns [EObject current=null] : iv_ruleDynamicFunction= ruleDynamicFunction EOF ;
    public final EObject entryRuleDynamicFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDynamicFunction = null;


        try {
            // InternalAsmetaL.g:4445:56: (iv_ruleDynamicFunction= ruleDynamicFunction EOF )
            // InternalAsmetaL.g:4446:2: iv_ruleDynamicFunction= ruleDynamicFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDynamicFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDynamicFunction=ruleDynamicFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDynamicFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDynamicFunction"


    // $ANTLR start "ruleDynamicFunction"
    // InternalAsmetaL.g:4452:1: ruleDynamicFunction returns [EObject current=null] : (this_OutFunction_0= ruleOutFunction | this_MonitoredFunction_1= ruleMonitoredFunction | this_SharedFunction_2= ruleSharedFunction | this_ControlledFunction_3= ruleControlledFunction | this_LocalFunction_4= ruleLocalFunction ) ;
    public final EObject ruleDynamicFunction() throws RecognitionException {
        EObject current = null;

        EObject this_OutFunction_0 = null;

        EObject this_MonitoredFunction_1 = null;

        EObject this_SharedFunction_2 = null;

        EObject this_ControlledFunction_3 = null;

        EObject this_LocalFunction_4 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4458:2: ( (this_OutFunction_0= ruleOutFunction | this_MonitoredFunction_1= ruleMonitoredFunction | this_SharedFunction_2= ruleSharedFunction | this_ControlledFunction_3= ruleControlledFunction | this_LocalFunction_4= ruleLocalFunction ) )
            // InternalAsmetaL.g:4459:2: (this_OutFunction_0= ruleOutFunction | this_MonitoredFunction_1= ruleMonitoredFunction | this_SharedFunction_2= ruleSharedFunction | this_ControlledFunction_3= ruleControlledFunction | this_LocalFunction_4= ruleLocalFunction )
            {
            // InternalAsmetaL.g:4459:2: (this_OutFunction_0= ruleOutFunction | this_MonitoredFunction_1= ruleMonitoredFunction | this_SharedFunction_2= ruleSharedFunction | this_ControlledFunction_3= ruleControlledFunction | this_LocalFunction_4= ruleLocalFunction )
            int alt72=5;
            switch ( input.LA(1) ) {
            case 56:
                {
                switch ( input.LA(2) ) {
                case 86:
                    {
                    alt72=2;
                    }
                    break;
                case 83:
                    {
                    alt72=5;
                    }
                    break;
                case 85:
                    {
                    alt72=3;
                    }
                    break;
                case 87:
                    {
                    alt72=1;
                    }
                    break;
                case 84:
                    {
                    alt72=4;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 1, input);

                    throw nvae;
                }

                }
                break;
            case 87:
                {
                alt72=1;
                }
                break;
            case 86:
                {
                alt72=2;
                }
                break;
            case 85:
                {
                alt72=3;
                }
                break;
            case 84:
                {
                alt72=4;
                }
                break;
            case 83:
                {
                alt72=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }

            switch (alt72) {
                case 1 :
                    // InternalAsmetaL.g:4460:3: this_OutFunction_0= ruleOutFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getOutFunctionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OutFunction_0=ruleOutFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OutFunction_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:4472:3: this_MonitoredFunction_1= ruleMonitoredFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getMonitoredFunctionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MonitoredFunction_1=ruleMonitoredFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MonitoredFunction_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:4484:3: this_SharedFunction_2= ruleSharedFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getSharedFunctionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SharedFunction_2=ruleSharedFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SharedFunction_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:4496:3: this_ControlledFunction_3= ruleControlledFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getControlledFunctionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ControlledFunction_3=ruleControlledFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ControlledFunction_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:4508:3: this_LocalFunction_4= ruleLocalFunction
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getLocalFunctionParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LocalFunction_4=ruleLocalFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LocalFunction_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDynamicFunction"


    // $ANTLR start "entryRuleLocalFunction"
    // InternalAsmetaL.g:4523:1: entryRuleLocalFunction returns [EObject current=null] : iv_ruleLocalFunction= ruleLocalFunction EOF ;
    public final EObject entryRuleLocalFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocalFunction = null;


        try {
            // InternalAsmetaL.g:4523:54: (iv_ruleLocalFunction= ruleLocalFunction EOF )
            // InternalAsmetaL.g:4524:2: iv_ruleLocalFunction= ruleLocalFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalFunction=ruleLocalFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalFunction"


    // $ANTLR start "ruleLocalFunction"
    // InternalAsmetaL.g:4530:1: ruleLocalFunction returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'local' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleLocalFunction() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_codomain_6_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4536:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'local' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4537:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'local' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4537:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'local' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4538:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'local' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) )
            {
            // InternalAsmetaL.g:4538:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==56) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalAsmetaL.g:4539:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:4539:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:4540:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,56,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getLocalFunctionAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLocalFunctionRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,83,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLocalFunctionAccess().getLocalKeyword_1());
              		
            }
            // InternalAsmetaL.g:4556:3: ( (lv_name_2_0= ruleextendedName ) )
            // InternalAsmetaL.g:4557:4: (lv_name_2_0= ruleextendedName )
            {
            // InternalAsmetaL.g:4557:4: (lv_name_2_0= ruleextendedName )
            // InternalAsmetaL.g:4558:5: lv_name_2_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLocalFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_2_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLocalFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,35,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLocalFunctionAccess().getColonKeyword_3());
              		
            }
            // InternalAsmetaL.g:4579:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalAsmetaL.g:4580:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
                    {
                    // InternalAsmetaL.g:4580:4: ( (lv_domain_4_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4581:5: (lv_domain_4_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4581:5: (lv_domain_4_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4582:6: lv_domain_4_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLocalFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_4_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLocalFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,81,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getLocalFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4604:3: ( (lv_codomain_6_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4605:4: (lv_codomain_6_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4605:4: (lv_codomain_6_0= rulegetDomainByID )
            // InternalAsmetaL.g:4606:5: lv_codomain_6_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLocalFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_6_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLocalFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_6_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalFunction"


    // $ANTLR start "entryRuleControlledFunction"
    // InternalAsmetaL.g:4627:1: entryRuleControlledFunction returns [EObject current=null] : iv_ruleControlledFunction= ruleControlledFunction EOF ;
    public final EObject entryRuleControlledFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleControlledFunction = null;


        try {
            // InternalAsmetaL.g:4627:59: (iv_ruleControlledFunction= ruleControlledFunction EOF )
            // InternalAsmetaL.g:4628:2: iv_ruleControlledFunction= ruleControlledFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getControlledFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleControlledFunction=ruleControlledFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleControlledFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleControlledFunction"


    // $ANTLR start "ruleControlledFunction"
    // InternalAsmetaL.g:4634:1: ruleControlledFunction returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'controlled' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleControlledFunction() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_codomain_6_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4640:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'controlled' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4641:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'controlled' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4641:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'controlled' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4642:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'controlled' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) )
            {
            // InternalAsmetaL.g:4642:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==56) ) {
                alt75=1;
            }
            switch (alt75) {
                case 1 :
                    // InternalAsmetaL.g:4643:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:4643:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:4644:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,56,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getControlledFunctionAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getControlledFunctionRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,84,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getControlledFunctionAccess().getControlledKeyword_1());
              		
            }
            // InternalAsmetaL.g:4660:3: ( (lv_name_2_0= ruleextendedName ) )
            // InternalAsmetaL.g:4661:4: (lv_name_2_0= ruleextendedName )
            {
            // InternalAsmetaL.g:4661:4: (lv_name_2_0= ruleextendedName )
            // InternalAsmetaL.g:4662:5: lv_name_2_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getControlledFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_2_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getControlledFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,35,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getControlledFunctionAccess().getColonKeyword_3());
              		
            }
            // InternalAsmetaL.g:4683:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // InternalAsmetaL.g:4684:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
                    {
                    // InternalAsmetaL.g:4684:4: ( (lv_domain_4_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4685:5: (lv_domain_4_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4685:5: (lv_domain_4_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4686:6: lv_domain_4_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getControlledFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_4_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getControlledFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,81,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getControlledFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4708:3: ( (lv_codomain_6_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4709:4: (lv_codomain_6_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4709:4: (lv_codomain_6_0= rulegetDomainByID )
            // InternalAsmetaL.g:4710:5: lv_codomain_6_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getControlledFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_6_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getControlledFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_6_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleControlledFunction"


    // $ANTLR start "entryRuleSharedFunction"
    // InternalAsmetaL.g:4731:1: entryRuleSharedFunction returns [EObject current=null] : iv_ruleSharedFunction= ruleSharedFunction EOF ;
    public final EObject entryRuleSharedFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSharedFunction = null;


        try {
            // InternalAsmetaL.g:4731:55: (iv_ruleSharedFunction= ruleSharedFunction EOF )
            // InternalAsmetaL.g:4732:2: iv_ruleSharedFunction= ruleSharedFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSharedFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSharedFunction=ruleSharedFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSharedFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSharedFunction"


    // $ANTLR start "ruleSharedFunction"
    // InternalAsmetaL.g:4738:1: ruleSharedFunction returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'shared' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleSharedFunction() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_codomain_6_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4744:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'shared' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4745:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'shared' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4745:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'shared' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4746:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'shared' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) )
            {
            // InternalAsmetaL.g:4746:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==56) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalAsmetaL.g:4747:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:4747:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:4748:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,56,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getSharedFunctionAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSharedFunctionRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,85,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSharedFunctionAccess().getSharedKeyword_1());
              		
            }
            // InternalAsmetaL.g:4764:3: ( (lv_name_2_0= ruleextendedName ) )
            // InternalAsmetaL.g:4765:4: (lv_name_2_0= ruleextendedName )
            {
            // InternalAsmetaL.g:4765:4: (lv_name_2_0= ruleextendedName )
            // InternalAsmetaL.g:4766:5: lv_name_2_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSharedFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_2_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSharedFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,35,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSharedFunctionAccess().getColonKeyword_3());
              		
            }
            // InternalAsmetaL.g:4787:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?
            int alt78=2;
            alt78 = dfa78.predict(input);
            switch (alt78) {
                case 1 :
                    // InternalAsmetaL.g:4788:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
                    {
                    // InternalAsmetaL.g:4788:4: ( (lv_domain_4_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4789:5: (lv_domain_4_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4789:5: (lv_domain_4_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4790:6: lv_domain_4_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSharedFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_4_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSharedFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,81,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSharedFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4812:3: ( (lv_codomain_6_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4813:4: (lv_codomain_6_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4813:4: (lv_codomain_6_0= rulegetDomainByID )
            // InternalAsmetaL.g:4814:5: lv_codomain_6_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSharedFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_6_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSharedFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_6_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSharedFunction"


    // $ANTLR start "entryRuleMonitoredFunction"
    // InternalAsmetaL.g:4835:1: entryRuleMonitoredFunction returns [EObject current=null] : iv_ruleMonitoredFunction= ruleMonitoredFunction EOF ;
    public final EObject entryRuleMonitoredFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMonitoredFunction = null;


        try {
            // InternalAsmetaL.g:4835:58: (iv_ruleMonitoredFunction= ruleMonitoredFunction EOF )
            // InternalAsmetaL.g:4836:2: iv_ruleMonitoredFunction= ruleMonitoredFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMonitoredFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMonitoredFunction=ruleMonitoredFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMonitoredFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMonitoredFunction"


    // $ANTLR start "ruleMonitoredFunction"
    // InternalAsmetaL.g:4842:1: ruleMonitoredFunction returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'monitored' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleMonitoredFunction() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_codomain_6_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4848:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'monitored' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4849:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'monitored' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4849:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'monitored' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4850:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'monitored' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) )
            {
            // InternalAsmetaL.g:4850:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==56) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalAsmetaL.g:4851:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:4851:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:4852:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,56,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getMonitoredFunctionAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getMonitoredFunctionRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,86,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMonitoredFunctionAccess().getMonitoredKeyword_1());
              		
            }
            // InternalAsmetaL.g:4868:3: ( (lv_name_2_0= ruleextendedName ) )
            // InternalAsmetaL.g:4869:4: (lv_name_2_0= ruleextendedName )
            {
            // InternalAsmetaL.g:4869:4: (lv_name_2_0= ruleextendedName )
            // InternalAsmetaL.g:4870:5: lv_name_2_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMonitoredFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_2_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMonitoredFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,35,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getMonitoredFunctionAccess().getColonKeyword_3());
              		
            }
            // InternalAsmetaL.g:4891:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?
            int alt80=2;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalAsmetaL.g:4892:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
                    {
                    // InternalAsmetaL.g:4892:4: ( (lv_domain_4_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4893:5: (lv_domain_4_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4893:5: (lv_domain_4_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4894:6: lv_domain_4_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMonitoredFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_4_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMonitoredFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,81,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getMonitoredFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:4916:3: ( (lv_codomain_6_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:4917:4: (lv_codomain_6_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:4917:4: (lv_codomain_6_0= rulegetDomainByID )
            // InternalAsmetaL.g:4918:5: lv_codomain_6_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMonitoredFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_6_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMonitoredFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_6_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMonitoredFunction"


    // $ANTLR start "entryRuleOutFunction"
    // InternalAsmetaL.g:4939:1: entryRuleOutFunction returns [EObject current=null] : iv_ruleOutFunction= ruleOutFunction EOF ;
    public final EObject entryRuleOutFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOutFunction = null;


        try {
            // InternalAsmetaL.g:4939:52: (iv_ruleOutFunction= ruleOutFunction EOF )
            // InternalAsmetaL.g:4940:2: iv_ruleOutFunction= ruleOutFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOutFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOutFunction=ruleOutFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOutFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOutFunction"


    // $ANTLR start "ruleOutFunction"
    // InternalAsmetaL.g:4946:1: ruleOutFunction returns [EObject current=null] : ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'out' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) ;
    public final EObject ruleOutFunction() throws RecognitionException {
        EObject current = null;

        Token lv_dynamic_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_codomain_6_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:4952:2: ( ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'out' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) ) )
            // InternalAsmetaL.g:4953:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'out' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            {
            // InternalAsmetaL.g:4953:2: ( ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'out' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) ) )
            // InternalAsmetaL.g:4954:3: ( (lv_dynamic_0_0= 'dynamic' ) )? otherlv_1= 'out' ( (lv_name_2_0= ruleextendedName ) ) otherlv_3= ':' ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )? ( (lv_codomain_6_0= rulegetDomainByID ) )
            {
            // InternalAsmetaL.g:4954:3: ( (lv_dynamic_0_0= 'dynamic' ) )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==56) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalAsmetaL.g:4955:4: (lv_dynamic_0_0= 'dynamic' )
                    {
                    // InternalAsmetaL.g:4955:4: (lv_dynamic_0_0= 'dynamic' )
                    // InternalAsmetaL.g:4956:5: lv_dynamic_0_0= 'dynamic'
                    {
                    lv_dynamic_0_0=(Token)match(input,56,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_dynamic_0_0, grammarAccess.getOutFunctionAccess().getDynamicDynamicKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getOutFunctionRule());
                      					}
                      					setWithLastConsumed(current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,87,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getOutFunctionAccess().getOutKeyword_1());
              		
            }
            // InternalAsmetaL.g:4972:3: ( (lv_name_2_0= ruleextendedName ) )
            // InternalAsmetaL.g:4973:4: (lv_name_2_0= ruleextendedName )
            {
            // InternalAsmetaL.g:4973:4: (lv_name_2_0= ruleextendedName )
            // InternalAsmetaL.g:4974:5: lv_name_2_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_name_2_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOutFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,35,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getOutFunctionAccess().getColonKeyword_3());
              		
            }
            // InternalAsmetaL.g:4995:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?
            int alt82=2;
            alt82 = dfa82.predict(input);
            switch (alt82) {
                case 1 :
                    // InternalAsmetaL.g:4996:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
                    {
                    // InternalAsmetaL.g:4996:4: ( (lv_domain_4_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:4997:5: (lv_domain_4_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:4997:5: (lv_domain_4_0= rulegetDomainByID )
                    // InternalAsmetaL.g:4998:6: lv_domain_4_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOutFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_domain_4_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOutFunctionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,81,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getOutFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:5020:3: ( (lv_codomain_6_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:5021:4: (lv_codomain_6_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:5021:4: (lv_codomain_6_0= rulegetDomainByID )
            // InternalAsmetaL.g:5022:5: lv_codomain_6_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOutFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_codomain_6_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOutFunctionRule());
              					}
              					set(
              						current,
              						"codomain",
              						lv_codomain_6_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOutFunction"


    // $ANTLR start "entryRuleextendedNameForFunction"
    // InternalAsmetaL.g:5043:1: entryRuleextendedNameForFunction returns [String current=null] : iv_ruleextendedNameForFunction= ruleextendedNameForFunction EOF ;
    public final String entryRuleextendedNameForFunction() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleextendedNameForFunction = null;


        try {
            // InternalAsmetaL.g:5043:63: (iv_ruleextendedNameForFunction= ruleextendedNameForFunction EOF )
            // InternalAsmetaL.g:5044:2: iv_ruleextendedNameForFunction= ruleextendedNameForFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedNameForFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleextendedNameForFunction=ruleextendedNameForFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleextendedNameForFunction.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleextendedNameForFunction"


    // $ANTLR start "ruleextendedNameForFunction"
    // InternalAsmetaL.g:5050:1: ruleextendedNameForFunction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | kw= 'and' | kw= 'or' | kw= 'not' | kw= 'xor' | kw= 'mod' | kw= 'iff' | kw= 'implies' ) ;
    public final AntlrDatatypeRuleToken ruleextendedNameForFunction() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:5056:2: ( (this_ID_0= RULE_ID | kw= 'and' | kw= 'or' | kw= 'not' | kw= 'xor' | kw= 'mod' | kw= 'iff' | kw= 'implies' ) )
            // InternalAsmetaL.g:5057:2: (this_ID_0= RULE_ID | kw= 'and' | kw= 'or' | kw= 'not' | kw= 'xor' | kw= 'mod' | kw= 'iff' | kw= 'implies' )
            {
            // InternalAsmetaL.g:5057:2: (this_ID_0= RULE_ID | kw= 'and' | kw= 'or' | kw= 'not' | kw= 'xor' | kw= 'mod' | kw= 'iff' | kw= 'implies' )
            int alt83=8;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt83=1;
                }
                break;
            case 88:
                {
                alt83=2;
                }
                break;
            case 89:
                {
                alt83=3;
                }
                break;
            case 90:
                {
                alt83=4;
                }
                break;
            case 91:
                {
                alt83=5;
                }
                break;
            case 92:
                {
                alt83=6;
                }
                break;
            case 93:
                {
                alt83=7;
                }
                break;
            case 94:
                {
                alt83=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }

            switch (alt83) {
                case 1 :
                    // InternalAsmetaL.g:5058:3: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getExtendedNameForFunctionAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:5066:3: kw= 'and'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getAndKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:5072:3: kw= 'or'
                    {
                    kw=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getOrKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:5078:3: kw= 'not'
                    {
                    kw=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getNotKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:5084:3: kw= 'xor'
                    {
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getXorKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:5090:3: kw= 'mod'
                    {
                    kw=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getModKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAsmetaL.g:5096:3: kw= 'iff'
                    {
                    kw=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getIffKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAsmetaL.g:5102:3: kw= 'implies'
                    {
                    kw=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getImpliesKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleextendedNameForFunction"


    // $ANTLR start "entryRuleextendedNameForAsm"
    // InternalAsmetaL.g:5111:1: entryRuleextendedNameForAsm returns [String current=null] : iv_ruleextendedNameForAsm= ruleextendedNameForAsm EOF ;
    public final String entryRuleextendedNameForAsm() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleextendedNameForAsm = null;


        try {
            // InternalAsmetaL.g:5111:58: (iv_ruleextendedNameForAsm= ruleextendedNameForAsm EOF )
            // InternalAsmetaL.g:5112:2: iv_ruleextendedNameForAsm= ruleextendedNameForAsm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedNameForAsmRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleextendedNameForAsm=ruleextendedNameForAsm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleextendedNameForAsm.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleextendedNameForAsm"


    // $ANTLR start "ruleextendedNameForAsm"
    // InternalAsmetaL.g:5118:1: ruleextendedNameForAsm returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID | this_ENUM_ID_1= RULE_ENUM_ID | kw= 'while' | kw= 'for' | kw= 'main' ) ;
    public final AntlrDatatypeRuleToken ruleextendedNameForAsm() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token this_ENUM_ID_1=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:5124:2: ( (this_ID_0= RULE_ID | this_ENUM_ID_1= RULE_ENUM_ID | kw= 'while' | kw= 'for' | kw= 'main' ) )
            // InternalAsmetaL.g:5125:2: (this_ID_0= RULE_ID | this_ENUM_ID_1= RULE_ENUM_ID | kw= 'while' | kw= 'for' | kw= 'main' )
            {
            // InternalAsmetaL.g:5125:2: (this_ID_0= RULE_ID | this_ENUM_ID_1= RULE_ENUM_ID | kw= 'while' | kw= 'for' | kw= 'main' )
            int alt84=5;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt84=1;
                }
                break;
            case RULE_ENUM_ID:
                {
                alt84=2;
                }
                break;
            case 95:
                {
                alt84=3;
                }
                break;
            case 96:
                {
                alt84=4;
                }
                break;
            case 26:
                {
                alt84=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }

            switch (alt84) {
                case 1 :
                    // InternalAsmetaL.g:5126:3: this_ID_0= RULE_ID
                    {
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_0, grammarAccess.getExtendedNameForAsmAccess().getIDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:5134:3: this_ENUM_ID_1= RULE_ENUM_ID
                    {
                    this_ENUM_ID_1=(Token)match(input,RULE_ENUM_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ENUM_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ENUM_ID_1, grammarAccess.getExtendedNameForAsmAccess().getENUM_IDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:5142:3: kw= 'while'
                    {
                    kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForAsmAccess().getWhileKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:5148:3: kw= 'for'
                    {
                    kw=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForAsmAccess().getForKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:5154:3: kw= 'main'
                    {
                    kw=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getExtendedNameForAsmAccess().getMainKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleextendedNameForAsm"


    // $ANTLR start "entryRuleextendedName"
    // InternalAsmetaL.g:5163:1: entryRuleextendedName returns [String current=null] : iv_ruleextendedName= ruleextendedName EOF ;
    public final String entryRuleextendedName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleextendedName = null;


        try {
            // InternalAsmetaL.g:5163:52: (iv_ruleextendedName= ruleextendedName EOF )
            // InternalAsmetaL.g:5164:2: iv_ruleextendedName= ruleextendedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleextendedName=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleextendedName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleextendedName"


    // $ANTLR start "ruleextendedName"
    // InternalAsmetaL.g:5170:1: ruleextendedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_RULE_ID_0= RULE_RULE_ID | this_ID_1= RULE_ID | this_ENUM_ID_2= RULE_ENUM_ID ) ;
    public final AntlrDatatypeRuleToken ruleextendedName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_RULE_ID_0=null;
        Token this_ID_1=null;
        Token this_ENUM_ID_2=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:5176:2: ( (this_RULE_ID_0= RULE_RULE_ID | this_ID_1= RULE_ID | this_ENUM_ID_2= RULE_ENUM_ID ) )
            // InternalAsmetaL.g:5177:2: (this_RULE_ID_0= RULE_RULE_ID | this_ID_1= RULE_ID | this_ENUM_ID_2= RULE_ENUM_ID )
            {
            // InternalAsmetaL.g:5177:2: (this_RULE_ID_0= RULE_RULE_ID | this_ID_1= RULE_ID | this_ENUM_ID_2= RULE_ENUM_ID )
            int alt85=3;
            switch ( input.LA(1) ) {
            case RULE_RULE_ID:
                {
                alt85=1;
                }
                break;
            case RULE_ID:
                {
                alt85=2;
                }
                break;
            case RULE_ENUM_ID:
                {
                alt85=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }

            switch (alt85) {
                case 1 :
                    // InternalAsmetaL.g:5178:3: this_RULE_ID_0= RULE_RULE_ID
                    {
                    this_RULE_ID_0=(Token)match(input,RULE_RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_RULE_ID_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_RULE_ID_0, grammarAccess.getExtendedNameAccess().getRULE_IDTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:5186:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_1, grammarAccess.getExtendedNameAccess().getIDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:5194:3: this_ENUM_ID_2= RULE_ENUM_ID
                    {
                    this_ENUM_ID_2=(Token)match(input,RULE_ENUM_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ENUM_ID_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ENUM_ID_2, grammarAccess.getExtendedNameAccess().getENUM_IDTerminalRuleCall_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleextendedName"


    // $ANTLR start "entryRuleTerm"
    // InternalAsmetaL.g:5205:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalAsmetaL.g:5205:45: (iv_ruleTerm= ruleTerm EOF )
            // InternalAsmetaL.g:5206:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalAsmetaL.g:5212:1: ruleTerm returns [EObject current=null] : (this_Expression_0= ruleExpression | this_DomainTerm_1= ruleDomainTerm | this_ExtendedTerm_2= ruleExtendedTerm ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        EObject this_Expression_0 = null;

        EObject this_DomainTerm_1 = null;

        EObject this_ExtendedTerm_2 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5218:2: ( (this_Expression_0= ruleExpression | this_DomainTerm_1= ruleDomainTerm | this_ExtendedTerm_2= ruleExtendedTerm ) )
            // InternalAsmetaL.g:5219:2: (this_Expression_0= ruleExpression | this_DomainTerm_1= ruleDomainTerm | this_ExtendedTerm_2= ruleExtendedTerm )
            {
            // InternalAsmetaL.g:5219:2: (this_Expression_0= ruleExpression | this_DomainTerm_1= ruleDomainTerm | this_ExtendedTerm_2= ruleExtendedTerm )
            int alt86=3;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalAsmetaL.g:5220:3: this_Expression_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTermAccess().getExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Expression_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Expression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:5232:3: this_DomainTerm_1= ruleDomainTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTermAccess().getDomainTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DomainTerm_1=ruleDomainTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DomainTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:5244:3: this_ExtendedTerm_2= ruleExtendedTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTermAccess().getExtendedTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExtendedTerm_2=ruleExtendedTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExtendedTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRuleDomainTerm"
    // InternalAsmetaL.g:5259:1: entryRuleDomainTerm returns [EObject current=null] : iv_ruleDomainTerm= ruleDomainTerm EOF ;
    public final EObject entryRuleDomainTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDomainTerm = null;


        try {
            // InternalAsmetaL.g:5259:51: (iv_ruleDomainTerm= ruleDomainTerm EOF )
            // InternalAsmetaL.g:5260:2: iv_ruleDomainTerm= ruleDomainTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDomainTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDomainTerm=ruleDomainTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDomainTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDomainTerm"


    // $ANTLR start "ruleDomainTerm"
    // InternalAsmetaL.g:5266:1: ruleDomainTerm returns [EObject current=null] : this_getDomainByID_0= rulegetDomainByID ;
    public final EObject ruleDomainTerm() throws RecognitionException {
        EObject current = null;

        EObject this_getDomainByID_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5272:2: (this_getDomainByID_0= rulegetDomainByID )
            // InternalAsmetaL.g:5273:2: this_getDomainByID_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getDomainTermAccess().getGetDomainByIDParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_getDomainByID_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_getDomainByID_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDomainTerm"


    // $ANTLR start "entryRuleExpression"
    // InternalAsmetaL.g:5287:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalAsmetaL.g:5287:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalAsmetaL.g:5288:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalAsmetaL.g:5294:1: ruleExpression returns [EObject current=null] : this_ImpliesIffExpression_0= ruleImpliesIffExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ImpliesIffExpression_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5300:2: (this_ImpliesIffExpression_0= ruleImpliesIffExpression )
            // InternalAsmetaL.g:5301:2: this_ImpliesIffExpression_0= ruleImpliesIffExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getImpliesIffExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_ImpliesIffExpression_0=ruleImpliesIffExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ImpliesIffExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleImpliesIffExpression"
    // InternalAsmetaL.g:5315:1: entryRuleImpliesIffExpression returns [EObject current=null] : iv_ruleImpliesIffExpression= ruleImpliesIffExpression EOF ;
    public final EObject entryRuleImpliesIffExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesIffExpression = null;


        try {
            // InternalAsmetaL.g:5315:61: (iv_ruleImpliesIffExpression= ruleImpliesIffExpression EOF )
            // InternalAsmetaL.g:5316:2: iv_ruleImpliesIffExpression= ruleImpliesIffExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesIffExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImpliesIffExpression=ruleImpliesIffExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesIffExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesIffExpression"


    // $ANTLR start "ruleImpliesIffExpression"
    // InternalAsmetaL.g:5322:1: ruleImpliesIffExpression returns [EObject current=null] : (this_XorOrExpression_0= ruleXorOrExpression ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )* ) ;
    public final EObject ruleImpliesIffExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject this_XorOrExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5328:2: ( (this_XorOrExpression_0= ruleXorOrExpression ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )* ) )
            // InternalAsmetaL.g:5329:2: (this_XorOrExpression_0= ruleXorOrExpression ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )* )
            {
            // InternalAsmetaL.g:5329:2: (this_XorOrExpression_0= ruleXorOrExpression ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )* )
            // InternalAsmetaL.g:5330:3: this_XorOrExpression_0= ruleXorOrExpression ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getImpliesIffExpressionAccess().getXorOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_67);
            this_XorOrExpression_0=ruleXorOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XorOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5341:3: ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )*
            loop88:
            do {
                int alt88=2;
                alt88 = dfa88.predict(input);
                switch (alt88) {
            	case 1 :
            	    // InternalAsmetaL.g:5342:4: ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) )
            	    {
            	    // InternalAsmetaL.g:5342:4: ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) )
            	    // InternalAsmetaL.g:5343:5: ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) )
            	    {
            	    // InternalAsmetaL.g:5357:5: ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) )
            	    // InternalAsmetaL.g:5358:6: () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) )
            	    {
            	    // InternalAsmetaL.g:5358:6: ()
            	    // InternalAsmetaL.g:5359:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getImpliesIffExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5368:6: ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) )
            	    // InternalAsmetaL.g:5369:7: ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) )
            	    {
            	    // InternalAsmetaL.g:5369:7: ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) )
            	    // InternalAsmetaL.g:5370:8: (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' )
            	    {
            	    // InternalAsmetaL.g:5370:8: (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' )
            	    int alt87=2;
            	    int LA87_0 = input.LA(1);

            	    if ( (LA87_0==94) ) {
            	        alt87=1;
            	    }
            	    else if ( (LA87_0==93) ) {
            	        alt87=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 87, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt87) {
            	        case 1 :
            	            // InternalAsmetaL.g:5371:9: lv_op_2_1= 'implies'
            	            {
            	            lv_op_2_1=(Token)match(input,94,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_1, grammarAccess.getImpliesIffExpressionAccess().getOpImpliesKeyword_1_0_0_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getImpliesIffExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:5382:9: lv_op_2_2= 'iff'
            	            {
            	            lv_op_2_2=(Token)match(input,93,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_2, grammarAccess.getImpliesIffExpressionAccess().getOpIffKeyword_1_0_0_1_0_1());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getImpliesIffExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:5397:4: ( (lv_right_3_0= ruleXorOrExpression ) )
            	    // InternalAsmetaL.g:5398:5: (lv_right_3_0= ruleXorOrExpression )
            	    {
            	    // InternalAsmetaL.g:5398:5: (lv_right_3_0= ruleXorOrExpression )
            	    // InternalAsmetaL.g:5399:6: lv_right_3_0= ruleXorOrExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getImpliesIffExpressionAccess().getRightXorOrExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_67);
            	    lv_right_3_0=ruleXorOrExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getImpliesIffExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.XorOrExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesIffExpression"


    // $ANTLR start "entryRuleXorOrExpression"
    // InternalAsmetaL.g:5421:1: entryRuleXorOrExpression returns [EObject current=null] : iv_ruleXorOrExpression= ruleXorOrExpression EOF ;
    public final EObject entryRuleXorOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleXorOrExpression = null;


        try {
            // InternalAsmetaL.g:5421:56: (iv_ruleXorOrExpression= ruleXorOrExpression EOF )
            // InternalAsmetaL.g:5422:2: iv_ruleXorOrExpression= ruleXorOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXorOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXorOrExpression=ruleXorOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXorOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleXorOrExpression"


    // $ANTLR start "ruleXorOrExpression"
    // InternalAsmetaL.g:5428:1: ruleXorOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) ;
    public final EObject ruleXorOrExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject this_AndExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5434:2: ( (this_AndExpression_0= ruleAndExpression ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) )
            // InternalAsmetaL.g:5435:2: (this_AndExpression_0= ruleAndExpression ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            {
            // InternalAsmetaL.g:5435:2: (this_AndExpression_0= ruleAndExpression ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            // InternalAsmetaL.g:5436:3: this_AndExpression_0= ruleAndExpression ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getXorOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_69);
            this_AndExpression_0=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5447:3: ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            loop90:
            do {
                int alt90=2;
                alt90 = dfa90.predict(input);
                switch (alt90) {
            	case 1 :
            	    // InternalAsmetaL.g:5448:4: ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) )
            	    {
            	    // InternalAsmetaL.g:5448:4: ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) )
            	    // InternalAsmetaL.g:5449:5: ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) )
            	    {
            	    // InternalAsmetaL.g:5463:5: ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) )
            	    // InternalAsmetaL.g:5464:6: () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) )
            	    {
            	    // InternalAsmetaL.g:5464:6: ()
            	    // InternalAsmetaL.g:5465:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getXorOrExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5474:6: ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) )
            	    // InternalAsmetaL.g:5475:7: ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) )
            	    {
            	    // InternalAsmetaL.g:5475:7: ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) )
            	    // InternalAsmetaL.g:5476:8: (lv_op_2_1= 'xor' | lv_op_2_2= 'or' )
            	    {
            	    // InternalAsmetaL.g:5476:8: (lv_op_2_1= 'xor' | lv_op_2_2= 'or' )
            	    int alt89=2;
            	    int LA89_0 = input.LA(1);

            	    if ( (LA89_0==91) ) {
            	        alt89=1;
            	    }
            	    else if ( (LA89_0==89) ) {
            	        alt89=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 89, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt89) {
            	        case 1 :
            	            // InternalAsmetaL.g:5477:9: lv_op_2_1= 'xor'
            	            {
            	            lv_op_2_1=(Token)match(input,91,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_1, grammarAccess.getXorOrExpressionAccess().getOpXorKeyword_1_0_0_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getXorOrExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:5488:9: lv_op_2_2= 'or'
            	            {
            	            lv_op_2_2=(Token)match(input,89,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_2, grammarAccess.getXorOrExpressionAccess().getOpOrKeyword_1_0_0_1_0_1());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getXorOrExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:5503:4: ( (lv_right_3_0= ruleAndExpression ) )
            	    // InternalAsmetaL.g:5504:5: (lv_right_3_0= ruleAndExpression )
            	    {
            	    // InternalAsmetaL.g:5504:5: (lv_right_3_0= ruleAndExpression )
            	    // InternalAsmetaL.g:5505:6: lv_right_3_0= ruleAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getXorOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_69);
            	    lv_right_3_0=ruleAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getXorOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleXorOrExpression"


    // $ANTLR start "entryRuleAndExpression"
    // InternalAsmetaL.g:5527:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalAsmetaL.g:5527:54: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalAsmetaL.g:5528:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalAsmetaL.g:5534:1: ruleAndExpression returns [EObject current=null] : (this_EqualityExpression_0= ruleEqualityExpression ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_EqualityExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5540:2: ( (this_EqualityExpression_0= ruleEqualityExpression ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* ) )
            // InternalAsmetaL.g:5541:2: (this_EqualityExpression_0= ruleEqualityExpression ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* )
            {
            // InternalAsmetaL.g:5541:2: (this_EqualityExpression_0= ruleEqualityExpression ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* )
            // InternalAsmetaL.g:5542:3: this_EqualityExpression_0= ruleEqualityExpression ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_70);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5553:3: ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*
            loop91:
            do {
                int alt91=2;
                alt91 = dfa91.predict(input);
                switch (alt91) {
            	case 1 :
            	    // InternalAsmetaL.g:5554:4: ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) )
            	    {
            	    // InternalAsmetaL.g:5554:4: ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) )
            	    // InternalAsmetaL.g:5555:5: ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) )
            	    {
            	    // InternalAsmetaL.g:5565:5: ( () ( (lv_op_2_0= 'and' ) ) )
            	    // InternalAsmetaL.g:5566:6: () ( (lv_op_2_0= 'and' ) )
            	    {
            	    // InternalAsmetaL.g:5566:6: ()
            	    // InternalAsmetaL.g:5567:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5576:6: ( (lv_op_2_0= 'and' ) )
            	    // InternalAsmetaL.g:5577:7: (lv_op_2_0= 'and' )
            	    {
            	    // InternalAsmetaL.g:5577:7: (lv_op_2_0= 'and' )
            	    // InternalAsmetaL.g:5578:8: lv_op_2_0= 'and'
            	    {
            	    lv_op_2_0=(Token)match(input,88,FOLLOW_68); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(lv_op_2_0, grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_0_0_1_0());
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getAndExpressionRule());
            	      								}
            	      								setWithLastConsumed(current, "op", lv_op_2_0, "and");
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:5592:4: ( (lv_right_3_0= ruleEqualityExpression ) )
            	    // InternalAsmetaL.g:5593:5: (lv_right_3_0= ruleEqualityExpression )
            	    {
            	    // InternalAsmetaL.g:5593:5: (lv_right_3_0= ruleEqualityExpression )
            	    // InternalAsmetaL.g:5594:6: lv_right_3_0= ruleEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_70);
            	    lv_right_3_0=ruleEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "entryRuleEqualityExpression"
    // InternalAsmetaL.g:5616:1: entryRuleEqualityExpression returns [EObject current=null] : iv_ruleEqualityExpression= ruleEqualityExpression EOF ;
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            // InternalAsmetaL.g:5616:59: (iv_ruleEqualityExpression= ruleEqualityExpression EOF )
            // InternalAsmetaL.g:5617:2: iv_ruleEqualityExpression= ruleEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpression"


    // $ANTLR start "ruleEqualityExpression"
    // InternalAsmetaL.g:5623:1: ruleEqualityExpression returns [EObject current=null] : (this_CompareExpression_0= ruleCompareExpression ( ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) ) )* ) ;
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject this_CompareExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5629:2: ( (this_CompareExpression_0= ruleCompareExpression ( ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) ) )* ) )
            // InternalAsmetaL.g:5630:2: (this_CompareExpression_0= ruleCompareExpression ( ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) ) )* )
            {
            // InternalAsmetaL.g:5630:2: (this_CompareExpression_0= ruleCompareExpression ( ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) ) )* )
            // InternalAsmetaL.g:5631:3: this_CompareExpression_0= ruleCompareExpression ( ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getCompareExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_71);
            this_CompareExpression_0=ruleCompareExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5642:3: ( ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) ) )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==38||LA93_0==97) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalAsmetaL.g:5643:4: ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) ) ( (lv_right_3_0= ruleCompareExpression ) )
            	    {
            	    // InternalAsmetaL.g:5643:4: ( ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) ) )
            	    // InternalAsmetaL.g:5644:5: ( ( () ( ( ( '=' | '!=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) )
            	    {
            	    // InternalAsmetaL.g:5658:5: ( () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) ) )
            	    // InternalAsmetaL.g:5659:6: () ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) )
            	    {
            	    // InternalAsmetaL.g:5659:6: ()
            	    // InternalAsmetaL.g:5660:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5669:6: ( ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) ) )
            	    // InternalAsmetaL.g:5670:7: ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) )
            	    {
            	    // InternalAsmetaL.g:5670:7: ( (lv_op_2_1= '=' | lv_op_2_2= '!=' ) )
            	    // InternalAsmetaL.g:5671:8: (lv_op_2_1= '=' | lv_op_2_2= '!=' )
            	    {
            	    // InternalAsmetaL.g:5671:8: (lv_op_2_1= '=' | lv_op_2_2= '!=' )
            	    int alt92=2;
            	    int LA92_0 = input.LA(1);

            	    if ( (LA92_0==38) ) {
            	        alt92=1;
            	    }
            	    else if ( (LA92_0==97) ) {
            	        alt92=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 92, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt92) {
            	        case 1 :
            	            // InternalAsmetaL.g:5672:9: lv_op_2_1= '='
            	            {
            	            lv_op_2_1=(Token)match(input,38,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_1, grammarAccess.getEqualityExpressionAccess().getOpEqualsSignKeyword_1_0_0_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getEqualityExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:5683:9: lv_op_2_2= '!='
            	            {
            	            lv_op_2_2=(Token)match(input,97,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_2, grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_0_0_1_0_1());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getEqualityExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:5698:4: ( (lv_right_3_0= ruleCompareExpression ) )
            	    // InternalAsmetaL.g:5699:5: (lv_right_3_0= ruleCompareExpression )
            	    {
            	    // InternalAsmetaL.g:5699:5: (lv_right_3_0= ruleCompareExpression )
            	    // InternalAsmetaL.g:5700:6: lv_right_3_0= ruleCompareExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_71);
            	    lv_right_3_0=ruleCompareExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.CompareExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpression"


    // $ANTLR start "entryRuleCompareExpression"
    // InternalAsmetaL.g:5722:1: entryRuleCompareExpression returns [EObject current=null] : iv_ruleCompareExpression= ruleCompareExpression EOF ;
    public final EObject entryRuleCompareExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareExpression = null;


        try {
            // InternalAsmetaL.g:5722:58: (iv_ruleCompareExpression= ruleCompareExpression EOF )
            // InternalAsmetaL.g:5723:2: iv_ruleCompareExpression= ruleCompareExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCompareExpression=ruleCompareExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareExpression"


    // $ANTLR start "ruleCompareExpression"
    // InternalAsmetaL.g:5729:1: ruleCompareExpression returns [EObject current=null] : (this_AdditiveExpression_0= ruleAdditiveExpression ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )* ) ;
    public final EObject ruleCompareExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_AdditiveExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5735:2: ( (this_AdditiveExpression_0= ruleAdditiveExpression ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )* ) )
            // InternalAsmetaL.g:5736:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )* )
            {
            // InternalAsmetaL.g:5736:2: (this_AdditiveExpression_0= ruleAdditiveExpression ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )* )
            // InternalAsmetaL.g:5737:3: this_AdditiveExpression_0= ruleAdditiveExpression ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCompareExpressionAccess().getAdditiveExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_72);
            this_AdditiveExpression_0=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AdditiveExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5748:3: ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )*
            loop95:
            do {
                int alt95=2;
                alt95 = dfa95.predict(input);
                switch (alt95) {
            	case 1 :
            	    // InternalAsmetaL.g:5749:4: ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) )
            	    {
            	    // InternalAsmetaL.g:5749:4: ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) )
            	    // InternalAsmetaL.g:5750:5: ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) )
            	    {
            	    // InternalAsmetaL.g:5768:5: ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) )
            	    // InternalAsmetaL.g:5769:6: () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) )
            	    {
            	    // InternalAsmetaL.g:5769:6: ()
            	    // InternalAsmetaL.g:5770:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getCompareExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5779:6: ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) )
            	    // InternalAsmetaL.g:5780:7: ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) )
            	    {
            	    // InternalAsmetaL.g:5780:7: ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) )
            	    // InternalAsmetaL.g:5781:8: (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' )
            	    {
            	    // InternalAsmetaL.g:5781:8: (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' )
            	    int alt94=4;
            	    switch ( input.LA(1) ) {
            	    case 98:
            	        {
            	        alt94=1;
            	        }
            	        break;
            	    case 99:
            	        {
            	        alt94=2;
            	        }
            	        break;
            	    case 100:
            	        {
            	        alt94=3;
            	        }
            	        break;
            	    case 101:
            	        {
            	        alt94=4;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 94, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt94) {
            	        case 1 :
            	            // InternalAsmetaL.g:5782:9: lv_op_2_1= '>'
            	            {
            	            lv_op_2_1=(Token)match(input,98,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_1, grammarAccess.getCompareExpressionAccess().getOpGreaterThanSignKeyword_1_0_0_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getCompareExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:5793:9: lv_op_2_2= '<'
            	            {
            	            lv_op_2_2=(Token)match(input,99,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_2, grammarAccess.getCompareExpressionAccess().getOpLessThanSignKeyword_1_0_0_1_0_1());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getCompareExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalAsmetaL.g:5804:9: lv_op_2_3= '>='
            	            {
            	            lv_op_2_3=(Token)match(input,100,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_3, grammarAccess.getCompareExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_0_1_0_2());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getCompareExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_3, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalAsmetaL.g:5815:9: lv_op_2_4= '<='
            	            {
            	            lv_op_2_4=(Token)match(input,101,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_4, grammarAccess.getCompareExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_0_1_0_3());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getCompareExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_4, null);
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:5830:4: ( (lv_right_3_0= ruleAdditiveExpression ) )
            	    // InternalAsmetaL.g:5831:5: (lv_right_3_0= ruleAdditiveExpression )
            	    {
            	    // InternalAsmetaL.g:5831:5: (lv_right_3_0= ruleAdditiveExpression )
            	    // InternalAsmetaL.g:5832:6: lv_right_3_0= ruleAdditiveExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCompareExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_72);
            	    lv_right_3_0=ruleAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCompareExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.AdditiveExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareExpression"


    // $ANTLR start "entryRuleAdditiveExpression"
    // InternalAsmetaL.g:5854:1: entryRuleAdditiveExpression returns [EObject current=null] : iv_ruleAdditiveExpression= ruleAdditiveExpression EOF ;
    public final EObject entryRuleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAdditiveExpression = null;


        try {
            // InternalAsmetaL.g:5854:59: (iv_ruleAdditiveExpression= ruleAdditiveExpression EOF )
            // InternalAsmetaL.g:5855:2: iv_ruleAdditiveExpression= ruleAdditiveExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditiveExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAdditiveExpression=ruleAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAdditiveExpression"


    // $ANTLR start "ruleAdditiveExpression"
    // InternalAsmetaL.g:5861:1: ruleAdditiveExpression returns [EObject current=null] : (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) ) )* ) ;
    public final EObject ruleAdditiveExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject this_MultiplicativeExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5867:2: ( (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) ) )* ) )
            // InternalAsmetaL.g:5868:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) ) )* )
            {
            // InternalAsmetaL.g:5868:2: (this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) ) )* )
            // InternalAsmetaL.g:5869:3: this_MultiplicativeExpression_0= ruleMultiplicativeExpression ( ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_73);
            this_MultiplicativeExpression_0=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_MultiplicativeExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5880:3: ( ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) ) )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( ((LA97_0>=102 && LA97_0<=103)) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalAsmetaL.g:5881:4: ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ) ( (lv_right_3_0= ruleMultiplicativeExpression ) )
            	    {
            	    // InternalAsmetaL.g:5881:4: ( ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) )
            	    // InternalAsmetaL.g:5882:5: ( ( () ( ( ( '+' | '-' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) )
            	    {
            	    // InternalAsmetaL.g:5896:5: ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) )
            	    // InternalAsmetaL.g:5897:6: () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) )
            	    {
            	    // InternalAsmetaL.g:5897:6: ()
            	    // InternalAsmetaL.g:5898:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getAdditiveExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:5907:6: ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) )
            	    // InternalAsmetaL.g:5908:7: ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) )
            	    {
            	    // InternalAsmetaL.g:5908:7: ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) )
            	    // InternalAsmetaL.g:5909:8: (lv_op_2_1= '+' | lv_op_2_2= '-' )
            	    {
            	    // InternalAsmetaL.g:5909:8: (lv_op_2_1= '+' | lv_op_2_2= '-' )
            	    int alt96=2;
            	    int LA96_0 = input.LA(1);

            	    if ( (LA96_0==102) ) {
            	        alt96=1;
            	    }
            	    else if ( (LA96_0==103) ) {
            	        alt96=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 96, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt96) {
            	        case 1 :
            	            // InternalAsmetaL.g:5910:9: lv_op_2_1= '+'
            	            {
            	            lv_op_2_1=(Token)match(input,102,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_1, grammarAccess.getAdditiveExpressionAccess().getOpPlusSignKeyword_1_0_0_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getAdditiveExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:5921:9: lv_op_2_2= '-'
            	            {
            	            lv_op_2_2=(Token)match(input,103,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_2, grammarAccess.getAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_0_0_1_0_1());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getAdditiveExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:5936:4: ( (lv_right_3_0= ruleMultiplicativeExpression ) )
            	    // InternalAsmetaL.g:5937:5: (lv_right_3_0= ruleMultiplicativeExpression )
            	    {
            	    // InternalAsmetaL.g:5937:5: (lv_right_3_0= ruleMultiplicativeExpression )
            	    // InternalAsmetaL.g:5938:6: lv_right_3_0= ruleMultiplicativeExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_right_3_0=ruleMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.MultiplicativeExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAdditiveExpression"


    // $ANTLR start "entryRuleMultiplicativeExpression"
    // InternalAsmetaL.g:5960:1: entryRuleMultiplicativeExpression returns [EObject current=null] : iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF ;
    public final EObject entryRuleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplicativeExpression = null;


        try {
            // InternalAsmetaL.g:5960:65: (iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF )
            // InternalAsmetaL.g:5961:2: iv_ruleMultiplicativeExpression= ruleMultiplicativeExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplicativeExpression"


    // $ANTLR start "ruleMultiplicativeExpression"
    // InternalAsmetaL.g:5967:1: ruleMultiplicativeExpression returns [EObject current=null] : (this_PowerExpression_0= rulePowerExpression ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )* ) ;
    public final EObject ruleMultiplicativeExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        EObject this_PowerExpression_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:5973:2: ( (this_PowerExpression_0= rulePowerExpression ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )* ) )
            // InternalAsmetaL.g:5974:2: (this_PowerExpression_0= rulePowerExpression ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )* )
            {
            // InternalAsmetaL.g:5974:2: (this_PowerExpression_0= rulePowerExpression ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )* )
            // InternalAsmetaL.g:5975:3: this_PowerExpression_0= rulePowerExpression ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getPowerExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_74);
            this_PowerExpression_0=rulePowerExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PowerExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:5986:3: ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )*
            loop99:
            do {
                int alt99=2;
                alt99 = dfa99.predict(input);
                switch (alt99) {
            	case 1 :
            	    // InternalAsmetaL.g:5987:4: ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) )
            	    {
            	    // InternalAsmetaL.g:5987:4: ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) )
            	    // InternalAsmetaL.g:5988:5: ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) )
            	    {
            	    // InternalAsmetaL.g:6004:5: ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) )
            	    // InternalAsmetaL.g:6005:6: () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) )
            	    {
            	    // InternalAsmetaL.g:6005:6: ()
            	    // InternalAsmetaL.g:6006:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getMultiplicativeExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:6015:6: ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) )
            	    // InternalAsmetaL.g:6016:7: ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) )
            	    {
            	    // InternalAsmetaL.g:6016:7: ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) )
            	    // InternalAsmetaL.g:6017:8: (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' )
            	    {
            	    // InternalAsmetaL.g:6017:8: (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' )
            	    int alt98=3;
            	    switch ( input.LA(1) ) {
            	    case 33:
            	        {
            	        alt98=1;
            	        }
            	        break;
            	    case 104:
            	        {
            	        alt98=2;
            	        }
            	        break;
            	    case 92:
            	        {
            	        alt98=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 98, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt98) {
            	        case 1 :
            	            // InternalAsmetaL.g:6018:9: lv_op_2_1= '*'
            	            {
            	            lv_op_2_1=(Token)match(input,33,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_1, grammarAccess.getMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_0_0_1_0_0());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:6029:9: lv_op_2_2= '/'
            	            {
            	            lv_op_2_2=(Token)match(input,104,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_2, grammarAccess.getMultiplicativeExpressionAccess().getOpSolidusKeyword_1_0_0_1_0_1());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              								
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalAsmetaL.g:6040:9: lv_op_2_3= 'mod'
            	            {
            	            lv_op_2_3=(Token)match(input,92,FOLLOW_68); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(lv_op_2_3, grammarAccess.getMultiplicativeExpressionAccess().getOpModKeyword_1_0_0_1_0_2());
            	              								
            	            }
            	            if ( state.backtracking==0 ) {

            	              									if (current==null) {
            	              										current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
            	              									}
            	              									setWithLastConsumed(current, "op", lv_op_2_3, null);
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:6055:4: ( (lv_right_3_0= rulePowerExpression ) )
            	    // InternalAsmetaL.g:6056:5: (lv_right_3_0= rulePowerExpression )
            	    {
            	    // InternalAsmetaL.g:6056:5: (lv_right_3_0= rulePowerExpression )
            	    // InternalAsmetaL.g:6057:6: lv_right_3_0= rulePowerExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightPowerExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_right_3_0=rulePowerExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.PowerExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplicativeExpression"


    // $ANTLR start "entryRulePowerExpression"
    // InternalAsmetaL.g:6079:1: entryRulePowerExpression returns [EObject current=null] : iv_rulePowerExpression= rulePowerExpression EOF ;
    public final EObject entryRulePowerExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePowerExpression = null;


        try {
            // InternalAsmetaL.g:6079:56: (iv_rulePowerExpression= rulePowerExpression EOF )
            // InternalAsmetaL.g:6080:2: iv_rulePowerExpression= rulePowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePowerExpression=rulePowerExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePowerExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePowerExpression"


    // $ANTLR start "rulePowerExpression"
    // InternalAsmetaL.g:6086:1: rulePowerExpression returns [EObject current=null] : (this_UnaryOperation_0= ruleUnaryOperation ( ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) ) )* ) ;
    public final EObject rulePowerExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_UnaryOperation_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6092:2: ( (this_UnaryOperation_0= ruleUnaryOperation ( ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) ) )* ) )
            // InternalAsmetaL.g:6093:2: (this_UnaryOperation_0= ruleUnaryOperation ( ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) ) )* )
            {
            // InternalAsmetaL.g:6093:2: (this_UnaryOperation_0= ruleUnaryOperation ( ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) ) )* )
            // InternalAsmetaL.g:6094:3: this_UnaryOperation_0= ruleUnaryOperation ( ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerExpressionAccess().getUnaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_75);
            this_UnaryOperation_0=ruleUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalAsmetaL.g:6105:3: ( ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) ) )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==105) ) {
                    alt100=1;
                }


                switch (alt100) {
            	case 1 :
            	    // InternalAsmetaL.g:6106:4: ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) ) ( (lv_right_3_0= ruleUnaryOperation ) )
            	    {
            	    // InternalAsmetaL.g:6106:4: ( ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) ) )
            	    // InternalAsmetaL.g:6107:5: ( ( () ( ( '^' ) ) ) )=> ( () ( (lv_op_2_0= '^' ) ) )
            	    {
            	    // InternalAsmetaL.g:6117:5: ( () ( (lv_op_2_0= '^' ) ) )
            	    // InternalAsmetaL.g:6118:6: () ( (lv_op_2_0= '^' ) )
            	    {
            	    // InternalAsmetaL.g:6118:6: ()
            	    // InternalAsmetaL.g:6119:7: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      							/* */
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							current = forceCreateModelElementAndSet(
            	      								grammarAccess.getPowerExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
            	      								current);
            	      						
            	    }

            	    }

            	    // InternalAsmetaL.g:6128:6: ( (lv_op_2_0= '^' ) )
            	    // InternalAsmetaL.g:6129:7: (lv_op_2_0= '^' )
            	    {
            	    // InternalAsmetaL.g:6129:7: (lv_op_2_0= '^' )
            	    // InternalAsmetaL.g:6130:8: lv_op_2_0= '^'
            	    {
            	    lv_op_2_0=(Token)match(input,105,FOLLOW_68); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(lv_op_2_0, grammarAccess.getPowerExpressionAccess().getOpCircumflexAccentKeyword_1_0_0_1_0());
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								if (current==null) {
            	      									current = createModelElement(grammarAccess.getPowerExpressionRule());
            	      								}
            	      								setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }

            	    // InternalAsmetaL.g:6144:4: ( (lv_right_3_0= ruleUnaryOperation ) )
            	    // InternalAsmetaL.g:6145:5: (lv_right_3_0= ruleUnaryOperation )
            	    {
            	    // InternalAsmetaL.g:6145:5: (lv_right_3_0= ruleUnaryOperation )
            	    // InternalAsmetaL.g:6146:6: lv_right_3_0= ruleUnaryOperation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerExpressionAccess().getRightUnaryOperationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_75);
            	    lv_right_3_0=ruleUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.asmeta.xt.AsmetaL.UnaryOperation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePowerExpression"


    // $ANTLR start "entryRuleUnaryOperation"
    // InternalAsmetaL.g:6168:1: entryRuleUnaryOperation returns [EObject current=null] : iv_ruleUnaryOperation= ruleUnaryOperation EOF ;
    public final EObject entryRuleUnaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryOperation = null;


        try {
            // InternalAsmetaL.g:6168:55: (iv_ruleUnaryOperation= ruleUnaryOperation EOF )
            // InternalAsmetaL.g:6169:2: iv_ruleUnaryOperation= ruleUnaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryOperation=ruleUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryOperation"


    // $ANTLR start "ruleUnaryOperation"
    // InternalAsmetaL.g:6175:1: ruleUnaryOperation returns [EObject current=null] : ( ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) ) | this_basicExpr_2= rulebasicExpr | this_ParenthesizedExpression_3= ruleParenthesizedExpression ) ;
    public final EObject ruleUnaryOperation() throws RecognitionException {
        EObject current = null;

        Token lv_op_0_1=null;
        Token lv_op_0_2=null;
        Token lv_op_0_3=null;
        EObject lv_operand_1_0 = null;

        EObject this_basicExpr_2 = null;

        EObject this_ParenthesizedExpression_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6181:2: ( ( ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) ) | this_basicExpr_2= rulebasicExpr | this_ParenthesizedExpression_3= ruleParenthesizedExpression ) )
            // InternalAsmetaL.g:6182:2: ( ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) ) | this_basicExpr_2= rulebasicExpr | this_ParenthesizedExpression_3= ruleParenthesizedExpression )
            {
            // InternalAsmetaL.g:6182:2: ( ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) ) | this_basicExpr_2= rulebasicExpr | this_ParenthesizedExpression_3= ruleParenthesizedExpression )
            int alt102=3;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalAsmetaL.g:6183:3: ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) )
                    {
                    // InternalAsmetaL.g:6183:3: ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) )
                    // InternalAsmetaL.g:6184:4: ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) )
                    {
                    // InternalAsmetaL.g:6184:4: ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) )
                    // InternalAsmetaL.g:6185:5: ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) )
                    {
                    // InternalAsmetaL.g:6185:5: ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) )
                    // InternalAsmetaL.g:6186:6: (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' )
                    {
                    // InternalAsmetaL.g:6186:6: (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' )
                    int alt101=3;
                    switch ( input.LA(1) ) {
                    case 90:
                        {
                        alt101=1;
                        }
                        break;
                    case 102:
                        {
                        alt101=2;
                        }
                        break;
                    case 103:
                        {
                        alt101=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 101, 0, input);

                        throw nvae;
                    }

                    switch (alt101) {
                        case 1 :
                            // InternalAsmetaL.g:6187:7: lv_op_0_1= 'not'
                            {
                            lv_op_0_1=(Token)match(input,90,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_0_1, grammarAccess.getUnaryOperationAccess().getOpNotKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryOperationRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_0_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:6198:7: lv_op_0_2= '+'
                            {
                            lv_op_0_2=(Token)match(input,102,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_0_2, grammarAccess.getUnaryOperationAccess().getOpPlusSignKeyword_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryOperationRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_0_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalAsmetaL.g:6209:7: lv_op_0_3= '-'
                            {
                            lv_op_0_3=(Token)match(input,103,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_0_3, grammarAccess.getUnaryOperationAccess().getOpHyphenMinusKeyword_0_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryOperationRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_0_3, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalAsmetaL.g:6222:4: ( (lv_operand_1_0= ruleUnaryOperation ) )
                    // InternalAsmetaL.g:6223:5: (lv_operand_1_0= ruleUnaryOperation )
                    {
                    // InternalAsmetaL.g:6223:5: (lv_operand_1_0= ruleUnaryOperation )
                    // InternalAsmetaL.g:6224:6: lv_operand_1_0= ruleUnaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryOperationAccess().getOperandUnaryOperationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_1_0=ruleUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operand",
                      							lv_operand_1_0,
                      							"org.asmeta.xt.AsmetaL.UnaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:6243:3: this_basicExpr_2= rulebasicExpr
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryOperationAccess().getBasicExprParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_basicExpr_2=rulebasicExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_basicExpr_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:6255:3: this_ParenthesizedExpression_3= ruleParenthesizedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryOperationAccess().getParenthesizedExpressionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ParenthesizedExpression_3=ruleParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ParenthesizedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryOperation"


    // $ANTLR start "entryRuleParenthesizedExpression"
    // InternalAsmetaL.g:6270:1: entryRuleParenthesizedExpression returns [EObject current=null] : iv_ruleParenthesizedExpression= ruleParenthesizedExpression EOF ;
    public final EObject entryRuleParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParenthesizedExpression = null;


        try {
            // InternalAsmetaL.g:6270:64: (iv_ruleParenthesizedExpression= ruleParenthesizedExpression EOF )
            // InternalAsmetaL.g:6271:2: iv_ruleParenthesizedExpression= ruleParenthesizedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParenthesizedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParenthesizedExpression=ruleParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParenthesizedExpression"


    // $ANTLR start "ruleParenthesizedExpression"
    // InternalAsmetaL.g:6277:1: ruleParenthesizedExpression returns [EObject current=null] : (otherlv_0= '(' this_Expression_1= ruleExpression otherlv_2= ')' ) ;
    public final EObject ruleParenthesizedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject this_Expression_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6283:2: ( (otherlv_0= '(' this_Expression_1= ruleExpression otherlv_2= ')' ) )
            // InternalAsmetaL.g:6284:2: (otherlv_0= '(' this_Expression_1= ruleExpression otherlv_2= ')' )
            {
            // InternalAsmetaL.g:6284:2: (otherlv_0= '(' this_Expression_1= ruleExpression otherlv_2= ')' )
            // InternalAsmetaL.g:6285:3: otherlv_0= '(' this_Expression_1= ruleExpression otherlv_2= ')'
            {
            otherlv_0=(Token)match(input,29,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_50);
            this_Expression_1=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Expression_1;
              			afterParserOrEnumRuleCall();
              		
            }
            otherlv_2=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParenthesizedExpression"


    // $ANTLR start "entryRulebasicExpr"
    // InternalAsmetaL.g:6308:1: entryRulebasicExpr returns [EObject current=null] : iv_rulebasicExpr= rulebasicExpr EOF ;
    public final EObject entryRulebasicExpr() throws RecognitionException {
        EObject current = null;

        EObject iv_rulebasicExpr = null;


        try {
            // InternalAsmetaL.g:6308:50: (iv_rulebasicExpr= rulebasicExpr EOF )
            // InternalAsmetaL.g:6309:2: iv_rulebasicExpr= rulebasicExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulebasicExpr=rulebasicExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulebasicExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulebasicExpr"


    // $ANTLR start "rulebasicExpr"
    // InternalAsmetaL.g:6315:1: rulebasicExpr returns [EObject current=null] : (this_BasicTerm_0= ruleBasicTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm ) ;
    public final EObject rulebasicExpr() throws RecognitionException {
        EObject current = null;

        EObject this_BasicTerm_0 = null;

        EObject this_FiniteQuantificationTerm_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6321:2: ( (this_BasicTerm_0= ruleBasicTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm ) )
            // InternalAsmetaL.g:6322:2: (this_BasicTerm_0= ruleBasicTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm )
            {
            // InternalAsmetaL.g:6322:2: (this_BasicTerm_0= ruleBasicTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( ((LA103_0>=RULE_ID && LA103_0<=RULE_REAL_NUMBER)||(LA103_0>=88 && LA103_0<=94)||(LA103_0>=102 && LA103_0<=103)||(LA103_0>=107 && LA103_0<=109)||LA103_0==144) ) {
                alt103=1;
            }
            else if ( (LA103_0==29) ) {
                alt103=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // InternalAsmetaL.g:6323:3: this_BasicTerm_0= ruleBasicTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicExprAccess().getBasicTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BasicTerm_0=ruleBasicTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BasicTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:6335:3: this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicExprAccess().getFiniteQuantificationTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FiniteQuantificationTerm_1=ruleFiniteQuantificationTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FiniteQuantificationTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulebasicExpr"


    // $ANTLR start "entryRuleBasicTerm"
    // InternalAsmetaL.g:6350:1: entryRuleBasicTerm returns [EObject current=null] : iv_ruleBasicTerm= ruleBasicTerm EOF ;
    public final EObject entryRuleBasicTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasicTerm = null;


        try {
            // InternalAsmetaL.g:6350:50: (iv_ruleBasicTerm= ruleBasicTerm EOF )
            // InternalAsmetaL.g:6351:2: iv_ruleBasicTerm= ruleBasicTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicTerm=ruleBasicTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicTerm"


    // $ANTLR start "ruleBasicTerm"
    // InternalAsmetaL.g:6357:1: ruleBasicTerm returns [EObject current=null] : (this_FunctionTerm_0= ruleFunctionTerm | this_ConstantTerm_1= ruleConstantTerm | this_VariableTerm_2= ruleVariableTerm | this_LocationTerm_3= ruleLocationTerm ) ;
    public final EObject ruleBasicTerm() throws RecognitionException {
        EObject current = null;

        EObject this_FunctionTerm_0 = null;

        EObject this_ConstantTerm_1 = null;

        EObject this_VariableTerm_2 = null;

        EObject this_LocationTerm_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6363:2: ( (this_FunctionTerm_0= ruleFunctionTerm | this_ConstantTerm_1= ruleConstantTerm | this_VariableTerm_2= ruleVariableTerm | this_LocationTerm_3= ruleLocationTerm ) )
            // InternalAsmetaL.g:6364:2: (this_FunctionTerm_0= ruleFunctionTerm | this_ConstantTerm_1= ruleConstantTerm | this_VariableTerm_2= ruleVariableTerm | this_LocationTerm_3= ruleLocationTerm )
            {
            // InternalAsmetaL.g:6364:2: (this_FunctionTerm_0= ruleFunctionTerm | this_ConstantTerm_1= ruleConstantTerm | this_VariableTerm_2= ruleVariableTerm | this_LocationTerm_3= ruleLocationTerm )
            int alt104=4;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalAsmetaL.g:6365:3: this_FunctionTerm_0= ruleFunctionTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicTermAccess().getFunctionTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionTerm_0=ruleFunctionTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:6377:3: this_ConstantTerm_1= ruleConstantTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicTermAccess().getConstantTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConstantTerm_1=ruleConstantTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConstantTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:6389:3: this_VariableTerm_2= ruleVariableTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicTermAccess().getVariableTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableTerm_2=ruleVariableTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:6401:3: this_LocationTerm_3= ruleLocationTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicTermAccess().getLocationTermParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LocationTerm_3=ruleLocationTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LocationTerm_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicTerm"


    // $ANTLR start "entryRuleFunctionTerm"
    // InternalAsmetaL.g:6416:1: entryRuleFunctionTerm returns [EObject current=null] : iv_ruleFunctionTerm= ruleFunctionTerm EOF ;
    public final EObject entryRuleFunctionTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionTerm = null;


        try {
            // InternalAsmetaL.g:6416:53: (iv_ruleFunctionTerm= ruleFunctionTerm EOF )
            // InternalAsmetaL.g:6417:2: iv_ruleFunctionTerm= ruleFunctionTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionTerm=ruleFunctionTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionTerm"


    // $ANTLR start "ruleFunctionTerm"
    // InternalAsmetaL.g:6423:1: ruleFunctionTerm returns [EObject current=null] : ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? ) ;
    public final EObject ruleFunctionTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_agent_0_0 = null;

        AntlrDatatypeRuleToken lv_functionName_2_0 = null;

        EObject lv_arguments_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6429:2: ( ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? ) )
            // InternalAsmetaL.g:6430:2: ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? )
            {
            // InternalAsmetaL.g:6430:2: ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? )
            // InternalAsmetaL.g:6431:3: ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )?
            {
            // InternalAsmetaL.g:6431:3: ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( ((LA105_0>=RULE_RULE_ID && LA105_0<=RULE_ENUM_ID)) ) {
                alt105=1;
            }
            else if ( (LA105_0==RULE_ID) ) {
                int LA105_2 = input.LA(2);

                if ( (LA105_2==106) ) {
                    alt105=1;
                }
            }
            switch (alt105) {
                case 1 :
                    // InternalAsmetaL.g:6432:4: ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.'
                    {
                    // InternalAsmetaL.g:6432:4: ( (lv_agent_0_0= ruleextendedName ) )
                    // InternalAsmetaL.g:6433:5: (lv_agent_0_0= ruleextendedName )
                    {
                    // InternalAsmetaL.g:6433:5: (lv_agent_0_0= ruleextendedName )
                    // InternalAsmetaL.g:6434:6: lv_agent_0_0= ruleextendedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFunctionTermAccess().getAgentExtendedNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_76);
                    lv_agent_0_0=ruleextendedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFunctionTermRule());
                      						}
                      						set(
                      							current,
                      							"agent",
                      							lv_agent_0_0,
                      							"org.asmeta.xt.AsmetaL.extendedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,106,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getFunctionTermAccess().getFullStopKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:6456:3: ( (lv_functionName_2_0= ruleextendedNameForFunction ) )
            // InternalAsmetaL.g:6457:4: (lv_functionName_2_0= ruleextendedNameForFunction )
            {
            // InternalAsmetaL.g:6457:4: (lv_functionName_2_0= ruleextendedNameForFunction )
            // InternalAsmetaL.g:6458:5: lv_functionName_2_0= ruleextendedNameForFunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionTermAccess().getFunctionNameExtendedNameForFunctionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_functionName_2_0=ruleextendedNameForFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionTermRule());
              					}
              					set(
              						current,
              						"functionName",
              						lv_functionName_2_0,
              						"org.asmeta.xt.AsmetaL.extendedNameForFunction");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:6475:3: ( (lv_arguments_3_0= ruleTupleTerm ) )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==29) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalAsmetaL.g:6476:4: (lv_arguments_3_0= ruleTupleTerm )
                    {
                    // InternalAsmetaL.g:6476:4: (lv_arguments_3_0= ruleTupleTerm )
                    // InternalAsmetaL.g:6477:5: lv_arguments_3_0= ruleTupleTerm
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionTermAccess().getArgumentsTupleTermParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_3_0=ruleTupleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionTermRule());
                      					}
                      					set(
                      						current,
                      						"arguments",
                      						lv_arguments_3_0,
                      						"org.asmeta.xt.AsmetaL.TupleTerm");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionTerm"


    // $ANTLR start "entryRuleLocationTerm"
    // InternalAsmetaL.g:6498:1: entryRuleLocationTerm returns [EObject current=null] : iv_ruleLocationTerm= ruleLocationTerm EOF ;
    public final EObject entryRuleLocationTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLocationTerm = null;


        try {
            // InternalAsmetaL.g:6498:53: (iv_ruleLocationTerm= ruleLocationTerm EOF )
            // InternalAsmetaL.g:6499:2: iv_ruleLocationTerm= ruleLocationTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocationTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocationTerm=ruleLocationTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocationTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocationTerm"


    // $ANTLR start "ruleLocationTerm"
    // InternalAsmetaL.g:6505:1: ruleLocationTerm returns [EObject current=null] : ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? ) ;
    public final EObject ruleLocationTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_agent_0_0 = null;

        AntlrDatatypeRuleToken lv_functionName_2_0 = null;

        EObject lv_arguments_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6511:2: ( ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? ) )
            // InternalAsmetaL.g:6512:2: ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? )
            {
            // InternalAsmetaL.g:6512:2: ( ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )? )
            // InternalAsmetaL.g:6513:3: ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )? ( (lv_functionName_2_0= ruleextendedNameForFunction ) ) ( (lv_arguments_3_0= ruleTupleTerm ) )?
            {
            // InternalAsmetaL.g:6513:3: ( ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.' )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( ((LA107_0>=RULE_RULE_ID && LA107_0<=RULE_ENUM_ID)) ) {
                alt107=1;
            }
            else if ( (LA107_0==RULE_ID) ) {
                int LA107_2 = input.LA(2);

                if ( (LA107_2==106) ) {
                    alt107=1;
                }
            }
            switch (alt107) {
                case 1 :
                    // InternalAsmetaL.g:6514:4: ( (lv_agent_0_0= ruleextendedName ) ) otherlv_1= '.'
                    {
                    // InternalAsmetaL.g:6514:4: ( (lv_agent_0_0= ruleextendedName ) )
                    // InternalAsmetaL.g:6515:5: (lv_agent_0_0= ruleextendedName )
                    {
                    // InternalAsmetaL.g:6515:5: (lv_agent_0_0= ruleextendedName )
                    // InternalAsmetaL.g:6516:6: lv_agent_0_0= ruleextendedName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLocationTermAccess().getAgentExtendedNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_76);
                    lv_agent_0_0=ruleextendedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLocationTermRule());
                      						}
                      						set(
                      							current,
                      							"agent",
                      							lv_agent_0_0,
                      							"org.asmeta.xt.AsmetaL.extendedName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,106,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getLocationTermAccess().getFullStopKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:6538:3: ( (lv_functionName_2_0= ruleextendedNameForFunction ) )
            // InternalAsmetaL.g:6539:4: (lv_functionName_2_0= ruleextendedNameForFunction )
            {
            // InternalAsmetaL.g:6539:4: (lv_functionName_2_0= ruleextendedNameForFunction )
            // InternalAsmetaL.g:6540:5: lv_functionName_2_0= ruleextendedNameForFunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLocationTermAccess().getFunctionNameExtendedNameForFunctionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_functionName_2_0=ruleextendedNameForFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLocationTermRule());
              					}
              					set(
              						current,
              						"functionName",
              						lv_functionName_2_0,
              						"org.asmeta.xt.AsmetaL.extendedNameForFunction");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:6557:3: ( (lv_arguments_3_0= ruleTupleTerm ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==29) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalAsmetaL.g:6558:4: (lv_arguments_3_0= ruleTupleTerm )
                    {
                    // InternalAsmetaL.g:6558:4: (lv_arguments_3_0= ruleTupleTerm )
                    // InternalAsmetaL.g:6559:5: lv_arguments_3_0= ruleTupleTerm
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLocationTermAccess().getArgumentsTupleTermParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_3_0=ruleTupleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLocationTermRule());
                      					}
                      					set(
                      						current,
                      						"arguments",
                      						lv_arguments_3_0,
                      						"org.asmeta.xt.AsmetaL.TupleTerm");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocationTerm"


    // $ANTLR start "entryRuleVariableTerm"
    // InternalAsmetaL.g:6580:1: entryRuleVariableTerm returns [EObject current=null] : iv_ruleVariableTerm= ruleVariableTerm EOF ;
    public final EObject entryRuleVariableTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableTerm = null;


        try {
            // InternalAsmetaL.g:6580:53: (iv_ruleVariableTerm= ruleVariableTerm EOF )
            // InternalAsmetaL.g:6581:2: iv_ruleVariableTerm= ruleVariableTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableTerm=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableTerm"


    // $ANTLR start "ruleVariableTerm"
    // InternalAsmetaL.g:6587:1: ruleVariableTerm returns [EObject current=null] : ( (lv_name_0_0= ruleID_VARIABLE ) ) ;
    public final EObject ruleVariableTerm() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_0_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6593:2: ( ( (lv_name_0_0= ruleID_VARIABLE ) ) )
            // InternalAsmetaL.g:6594:2: ( (lv_name_0_0= ruleID_VARIABLE ) )
            {
            // InternalAsmetaL.g:6594:2: ( (lv_name_0_0= ruleID_VARIABLE ) )
            // InternalAsmetaL.g:6595:3: (lv_name_0_0= ruleID_VARIABLE )
            {
            // InternalAsmetaL.g:6595:3: (lv_name_0_0= ruleID_VARIABLE )
            // InternalAsmetaL.g:6596:4: lv_name_0_0= ruleID_VARIABLE
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getVariableTermAccess().getNameID_VARIABLEParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_name_0_0=ruleID_VARIABLE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getVariableTermRule());
              				}
              				set(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.asmeta.xt.AsmetaL.ID_VARIABLE");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableTerm"


    // $ANTLR start "entryRuleConstantTerm"
    // InternalAsmetaL.g:6616:1: entryRuleConstantTerm returns [EObject current=null] : iv_ruleConstantTerm= ruleConstantTerm EOF ;
    public final EObject entryRuleConstantTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstantTerm = null;


        try {
            // InternalAsmetaL.g:6616:53: (iv_ruleConstantTerm= ruleConstantTerm EOF )
            // InternalAsmetaL.g:6617:2: iv_ruleConstantTerm= ruleConstantTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstantTerm=ruleConstantTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstantTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstantTerm"


    // $ANTLR start "ruleConstantTerm"
    // InternalAsmetaL.g:6623:1: ruleConstantTerm returns [EObject current=null] : (this_NumberTerm_0= ruleNumberTerm | this_ComplexTerm_1= ruleComplexTerm | this_NaturalTerm_2= ruleNaturalTerm | this_CharTerm_3= ruleCharTerm | this_StringTerm_4= ruleStringTerm | this_BooleanTerm_5= ruleBooleanTerm | this_UndefTerm_6= ruleUndefTerm | this_EnumTerm_7= ruleEnumTerm ) ;
    public final EObject ruleConstantTerm() throws RecognitionException {
        EObject current = null;

        EObject this_NumberTerm_0 = null;

        EObject this_ComplexTerm_1 = null;

        EObject this_NaturalTerm_2 = null;

        EObject this_CharTerm_3 = null;

        EObject this_StringTerm_4 = null;

        EObject this_BooleanTerm_5 = null;

        EObject this_UndefTerm_6 = null;

        EObject this_EnumTerm_7 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6629:2: ( (this_NumberTerm_0= ruleNumberTerm | this_ComplexTerm_1= ruleComplexTerm | this_NaturalTerm_2= ruleNaturalTerm | this_CharTerm_3= ruleCharTerm | this_StringTerm_4= ruleStringTerm | this_BooleanTerm_5= ruleBooleanTerm | this_UndefTerm_6= ruleUndefTerm | this_EnumTerm_7= ruleEnumTerm ) )
            // InternalAsmetaL.g:6630:2: (this_NumberTerm_0= ruleNumberTerm | this_ComplexTerm_1= ruleComplexTerm | this_NaturalTerm_2= ruleNaturalTerm | this_CharTerm_3= ruleCharTerm | this_StringTerm_4= ruleStringTerm | this_BooleanTerm_5= ruleBooleanTerm | this_UndefTerm_6= ruleUndefTerm | this_EnumTerm_7= ruleEnumTerm )
            {
            // InternalAsmetaL.g:6630:2: (this_NumberTerm_0= ruleNumberTerm | this_ComplexTerm_1= ruleComplexTerm | this_NaturalTerm_2= ruleNaturalTerm | this_CharTerm_3= ruleCharTerm | this_StringTerm_4= ruleStringTerm | this_BooleanTerm_5= ruleBooleanTerm | this_UndefTerm_6= ruleUndefTerm | this_EnumTerm_7= ruleEnumTerm )
            int alt109=8;
            switch ( input.LA(1) ) {
            case RULE_NUMBER_TOKEN:
            case RULE_REAL_NUMBER:
            case 102:
            case 103:
                {
                alt109=1;
                }
                break;
            case RULE_COMPLEX_NUMBER:
                {
                alt109=2;
                }
                break;
            case RULE_NATNUMBER:
                {
                alt109=3;
                }
                break;
            case RULE_CHAR_LITERAL:
                {
                alt109=4;
                }
                break;
            case RULE_STRING_LITERAL:
                {
                alt109=5;
                }
                break;
            case 107:
            case 108:
                {
                alt109=6;
                }
                break;
            case 109:
                {
                alt109=7;
                }
                break;
            case RULE_ENUM_ID:
                {
                alt109=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }

            switch (alt109) {
                case 1 :
                    // InternalAsmetaL.g:6631:3: this_NumberTerm_0= ruleNumberTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getNumberTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NumberTerm_0=ruleNumberTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NumberTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:6643:3: this_ComplexTerm_1= ruleComplexTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getComplexTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ComplexTerm_1=ruleComplexTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ComplexTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:6655:3: this_NaturalTerm_2= ruleNaturalTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getNaturalTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_NaturalTerm_2=ruleNaturalTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NaturalTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:6667:3: this_CharTerm_3= ruleCharTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getCharTermParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CharTerm_3=ruleCharTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CharTerm_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:6679:3: this_StringTerm_4= ruleStringTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getStringTermParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StringTerm_4=ruleStringTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringTerm_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:6691:3: this_BooleanTerm_5= ruleBooleanTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getBooleanTermParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanTerm_5=ruleBooleanTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BooleanTerm_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAsmetaL.g:6703:3: this_UndefTerm_6= ruleUndefTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getUndefTermParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UndefTerm_6=ruleUndefTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UndefTerm_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAsmetaL.g:6715:3: this_EnumTerm_7= ruleEnumTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getConstantTermAccess().getEnumTermParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EnumTerm_7=ruleEnumTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EnumTerm_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstantTerm"


    // $ANTLR start "entryRuleNumberTerm"
    // InternalAsmetaL.g:6730:1: entryRuleNumberTerm returns [EObject current=null] : iv_ruleNumberTerm= ruleNumberTerm EOF ;
    public final EObject entryRuleNumberTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumberTerm = null;


        try {
            // InternalAsmetaL.g:6730:51: (iv_ruleNumberTerm= ruleNumberTerm EOF )
            // InternalAsmetaL.g:6731:2: iv_ruleNumberTerm= ruleNumberTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumberTerm=ruleNumberTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumberTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumberTerm"


    // $ANTLR start "ruleNumberTerm"
    // InternalAsmetaL.g:6737:1: ruleNumberTerm returns [EObject current=null] : (this_IntegerTerm_0= ruleIntegerTerm | this_RealTerm_1= ruleRealTerm ) ;
    public final EObject ruleNumberTerm() throws RecognitionException {
        EObject current = null;

        EObject this_IntegerTerm_0 = null;

        EObject this_RealTerm_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:6743:2: ( (this_IntegerTerm_0= ruleIntegerTerm | this_RealTerm_1= ruleRealTerm ) )
            // InternalAsmetaL.g:6744:2: (this_IntegerTerm_0= ruleIntegerTerm | this_RealTerm_1= ruleRealTerm )
            {
            // InternalAsmetaL.g:6744:2: (this_IntegerTerm_0= ruleIntegerTerm | this_RealTerm_1= ruleRealTerm )
            int alt110=2;
            switch ( input.LA(1) ) {
            case RULE_NUMBER_TOKEN:
                {
                alt110=1;
                }
                break;
            case 102:
                {
                int LA110_2 = input.LA(2);

                if ( (LA110_2==RULE_REAL_NUMBER) ) {
                    alt110=2;
                }
                else if ( (LA110_2==RULE_NUMBER_TOKEN) ) {
                    alt110=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 110, 2, input);

                    throw nvae;
                }
                }
                break;
            case 103:
                {
                int LA110_3 = input.LA(2);

                if ( (LA110_3==RULE_REAL_NUMBER) ) {
                    alt110=2;
                }
                else if ( (LA110_3==RULE_NUMBER_TOKEN) ) {
                    alt110=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 110, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_REAL_NUMBER:
                {
                alt110=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }

            switch (alt110) {
                case 1 :
                    // InternalAsmetaL.g:6745:3: this_IntegerTerm_0= ruleIntegerTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNumberTermAccess().getIntegerTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IntegerTerm_0=ruleIntegerTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntegerTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:6757:3: this_RealTerm_1= ruleRealTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNumberTermAccess().getRealTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RealTerm_1=ruleRealTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RealTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumberTerm"


    // $ANTLR start "entryRuleBooleanTerm"
    // InternalAsmetaL.g:6772:1: entryRuleBooleanTerm returns [EObject current=null] : iv_ruleBooleanTerm= ruleBooleanTerm EOF ;
    public final EObject entryRuleBooleanTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBooleanTerm = null;


        try {
            // InternalAsmetaL.g:6772:52: (iv_ruleBooleanTerm= ruleBooleanTerm EOF )
            // InternalAsmetaL.g:6773:2: iv_ruleBooleanTerm= ruleBooleanTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanTerm=ruleBooleanTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanTerm"


    // $ANTLR start "ruleBooleanTerm"
    // InternalAsmetaL.g:6779:1: ruleBooleanTerm returns [EObject current=null] : ( ( (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' ) ) ) ;
    public final EObject ruleBooleanTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_1=null;
        Token lv_symbol_0_2=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6785:2: ( ( ( (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' ) ) ) )
            // InternalAsmetaL.g:6786:2: ( ( (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' ) ) )
            {
            // InternalAsmetaL.g:6786:2: ( ( (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' ) ) )
            // InternalAsmetaL.g:6787:3: ( (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' ) )
            {
            // InternalAsmetaL.g:6787:3: ( (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' ) )
            // InternalAsmetaL.g:6788:4: (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' )
            {
            // InternalAsmetaL.g:6788:4: (lv_symbol_0_1= 'true' | lv_symbol_0_2= 'false' )
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==107) ) {
                alt111=1;
            }
            else if ( (LA111_0==108) ) {
                alt111=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // InternalAsmetaL.g:6789:5: lv_symbol_0_1= 'true'
                    {
                    lv_symbol_0_1=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_symbol_0_1, grammarAccess.getBooleanTermAccess().getSymbolTrueKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBooleanTermRule());
                      					}
                      					setWithLastConsumed(current, "symbol", lv_symbol_0_1, null);
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:6800:5: lv_symbol_0_2= 'false'
                    {
                    lv_symbol_0_2=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_symbol_0_2, grammarAccess.getBooleanTermAccess().getSymbolFalseKeyword_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getBooleanTermRule());
                      					}
                      					setWithLastConsumed(current, "symbol", lv_symbol_0_2, null);
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanTerm"


    // $ANTLR start "entryRuleUndefTerm"
    // InternalAsmetaL.g:6816:1: entryRuleUndefTerm returns [EObject current=null] : iv_ruleUndefTerm= ruleUndefTerm EOF ;
    public final EObject entryRuleUndefTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUndefTerm = null;


        try {
            // InternalAsmetaL.g:6816:50: (iv_ruleUndefTerm= ruleUndefTerm EOF )
            // InternalAsmetaL.g:6817:2: iv_ruleUndefTerm= ruleUndefTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUndefTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUndefTerm=ruleUndefTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUndefTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUndefTerm"


    // $ANTLR start "ruleUndefTerm"
    // InternalAsmetaL.g:6823:1: ruleUndefTerm returns [EObject current=null] : ( (lv_symbol_0_0= 'undef' ) ) ;
    public final EObject ruleUndefTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6829:2: ( ( (lv_symbol_0_0= 'undef' ) ) )
            // InternalAsmetaL.g:6830:2: ( (lv_symbol_0_0= 'undef' ) )
            {
            // InternalAsmetaL.g:6830:2: ( (lv_symbol_0_0= 'undef' ) )
            // InternalAsmetaL.g:6831:3: (lv_symbol_0_0= 'undef' )
            {
            // InternalAsmetaL.g:6831:3: (lv_symbol_0_0= 'undef' )
            // InternalAsmetaL.g:6832:4: lv_symbol_0_0= 'undef'
            {
            lv_symbol_0_0=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getUndefTermAccess().getSymbolUndefKeyword_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getUndefTermRule());
              				}
              				setWithLastConsumed(current, "symbol", lv_symbol_0_0, "undef");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUndefTerm"


    // $ANTLR start "entryRuleComplexTerm"
    // InternalAsmetaL.g:6847:1: entryRuleComplexTerm returns [EObject current=null] : iv_ruleComplexTerm= ruleComplexTerm EOF ;
    public final EObject entryRuleComplexTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComplexTerm = null;


        try {
            // InternalAsmetaL.g:6847:52: (iv_ruleComplexTerm= ruleComplexTerm EOF )
            // InternalAsmetaL.g:6848:2: iv_ruleComplexTerm= ruleComplexTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComplexTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComplexTerm=ruleComplexTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComplexTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComplexTerm"


    // $ANTLR start "ruleComplexTerm"
    // InternalAsmetaL.g:6854:1: ruleComplexTerm returns [EObject current=null] : ( (lv_symbol_0_0= RULE_COMPLEX_NUMBER ) ) ;
    public final EObject ruleComplexTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6860:2: ( ( (lv_symbol_0_0= RULE_COMPLEX_NUMBER ) ) )
            // InternalAsmetaL.g:6861:2: ( (lv_symbol_0_0= RULE_COMPLEX_NUMBER ) )
            {
            // InternalAsmetaL.g:6861:2: ( (lv_symbol_0_0= RULE_COMPLEX_NUMBER ) )
            // InternalAsmetaL.g:6862:3: (lv_symbol_0_0= RULE_COMPLEX_NUMBER )
            {
            // InternalAsmetaL.g:6862:3: (lv_symbol_0_0= RULE_COMPLEX_NUMBER )
            // InternalAsmetaL.g:6863:4: lv_symbol_0_0= RULE_COMPLEX_NUMBER
            {
            lv_symbol_0_0=(Token)match(input,RULE_COMPLEX_NUMBER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getComplexTermAccess().getSymbolCOMPLEX_NUMBERTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getComplexTermRule());
              				}
              				setWithLastConsumed(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.COMPLEX_NUMBER");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComplexTerm"


    // $ANTLR start "entryRuleNaturalTerm"
    // InternalAsmetaL.g:6882:1: entryRuleNaturalTerm returns [EObject current=null] : iv_ruleNaturalTerm= ruleNaturalTerm EOF ;
    public final EObject entryRuleNaturalTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNaturalTerm = null;


        try {
            // InternalAsmetaL.g:6882:52: (iv_ruleNaturalTerm= ruleNaturalTerm EOF )
            // InternalAsmetaL.g:6883:2: iv_ruleNaturalTerm= ruleNaturalTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNaturalTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNaturalTerm=ruleNaturalTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNaturalTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNaturalTerm"


    // $ANTLR start "ruleNaturalTerm"
    // InternalAsmetaL.g:6889:1: ruleNaturalTerm returns [EObject current=null] : ( (lv_symbol_0_0= RULE_NATNUMBER ) ) ;
    public final EObject ruleNaturalTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6895:2: ( ( (lv_symbol_0_0= RULE_NATNUMBER ) ) )
            // InternalAsmetaL.g:6896:2: ( (lv_symbol_0_0= RULE_NATNUMBER ) )
            {
            // InternalAsmetaL.g:6896:2: ( (lv_symbol_0_0= RULE_NATNUMBER ) )
            // InternalAsmetaL.g:6897:3: (lv_symbol_0_0= RULE_NATNUMBER )
            {
            // InternalAsmetaL.g:6897:3: (lv_symbol_0_0= RULE_NATNUMBER )
            // InternalAsmetaL.g:6898:4: lv_symbol_0_0= RULE_NATNUMBER
            {
            lv_symbol_0_0=(Token)match(input,RULE_NATNUMBER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getNaturalTermAccess().getSymbolNATNUMBERTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNaturalTermRule());
              				}
              				setWithLastConsumed(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.NATNUMBER");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNaturalTerm"


    // $ANTLR start "entryRuleCharTerm"
    // InternalAsmetaL.g:6917:1: entryRuleCharTerm returns [EObject current=null] : iv_ruleCharTerm= ruleCharTerm EOF ;
    public final EObject entryRuleCharTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCharTerm = null;


        try {
            // InternalAsmetaL.g:6917:49: (iv_ruleCharTerm= ruleCharTerm EOF )
            // InternalAsmetaL.g:6918:2: iv_ruleCharTerm= ruleCharTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCharTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCharTerm=ruleCharTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCharTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCharTerm"


    // $ANTLR start "ruleCharTerm"
    // InternalAsmetaL.g:6924:1: ruleCharTerm returns [EObject current=null] : ( (lv_symbol_0_0= RULE_CHAR_LITERAL ) ) ;
    public final EObject ruleCharTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6930:2: ( ( (lv_symbol_0_0= RULE_CHAR_LITERAL ) ) )
            // InternalAsmetaL.g:6931:2: ( (lv_symbol_0_0= RULE_CHAR_LITERAL ) )
            {
            // InternalAsmetaL.g:6931:2: ( (lv_symbol_0_0= RULE_CHAR_LITERAL ) )
            // InternalAsmetaL.g:6932:3: (lv_symbol_0_0= RULE_CHAR_LITERAL )
            {
            // InternalAsmetaL.g:6932:3: (lv_symbol_0_0= RULE_CHAR_LITERAL )
            // InternalAsmetaL.g:6933:4: lv_symbol_0_0= RULE_CHAR_LITERAL
            {
            lv_symbol_0_0=(Token)match(input,RULE_CHAR_LITERAL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getCharTermAccess().getSymbolCHAR_LITERALTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCharTermRule());
              				}
              				setWithLastConsumed(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.CHAR_LITERAL");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCharTerm"


    // $ANTLR start "entryRuleStringTerm"
    // InternalAsmetaL.g:6952:1: entryRuleStringTerm returns [EObject current=null] : iv_ruleStringTerm= ruleStringTerm EOF ;
    public final EObject entryRuleStringTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringTerm = null;


        try {
            // InternalAsmetaL.g:6952:51: (iv_ruleStringTerm= ruleStringTerm EOF )
            // InternalAsmetaL.g:6953:2: iv_ruleStringTerm= ruleStringTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringTerm=ruleStringTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringTerm"


    // $ANTLR start "ruleStringTerm"
    // InternalAsmetaL.g:6959:1: ruleStringTerm returns [EObject current=null] : ( (lv_symbol_0_0= RULE_STRING_LITERAL ) ) ;
    public final EObject ruleStringTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:6965:2: ( ( (lv_symbol_0_0= RULE_STRING_LITERAL ) ) )
            // InternalAsmetaL.g:6966:2: ( (lv_symbol_0_0= RULE_STRING_LITERAL ) )
            {
            // InternalAsmetaL.g:6966:2: ( (lv_symbol_0_0= RULE_STRING_LITERAL ) )
            // InternalAsmetaL.g:6967:3: (lv_symbol_0_0= RULE_STRING_LITERAL )
            {
            // InternalAsmetaL.g:6967:3: (lv_symbol_0_0= RULE_STRING_LITERAL )
            // InternalAsmetaL.g:6968:4: lv_symbol_0_0= RULE_STRING_LITERAL
            {
            lv_symbol_0_0=(Token)match(input,RULE_STRING_LITERAL,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getStringTermAccess().getSymbolSTRING_LITERALTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringTermRule());
              				}
              				setWithLastConsumed(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.STRING_LITERAL");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringTerm"


    // $ANTLR start "entryRuleEnumTerm"
    // InternalAsmetaL.g:6987:1: entryRuleEnumTerm returns [EObject current=null] : iv_ruleEnumTerm= ruleEnumTerm EOF ;
    public final EObject entryRuleEnumTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumTerm = null;


        try {
            // InternalAsmetaL.g:6987:49: (iv_ruleEnumTerm= ruleEnumTerm EOF )
            // InternalAsmetaL.g:6988:2: iv_ruleEnumTerm= ruleEnumTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumTerm=ruleEnumTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumTerm"


    // $ANTLR start "ruleEnumTerm"
    // InternalAsmetaL.g:6994:1: ruleEnumTerm returns [EObject current=null] : ( (lv_symbol_0_0= RULE_ENUM_ID ) ) ;
    public final EObject ruleEnumTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:7000:2: ( ( (lv_symbol_0_0= RULE_ENUM_ID ) ) )
            // InternalAsmetaL.g:7001:2: ( (lv_symbol_0_0= RULE_ENUM_ID ) )
            {
            // InternalAsmetaL.g:7001:2: ( (lv_symbol_0_0= RULE_ENUM_ID ) )
            // InternalAsmetaL.g:7002:3: (lv_symbol_0_0= RULE_ENUM_ID )
            {
            // InternalAsmetaL.g:7002:3: (lv_symbol_0_0= RULE_ENUM_ID )
            // InternalAsmetaL.g:7003:4: lv_symbol_0_0= RULE_ENUM_ID
            {
            lv_symbol_0_0=(Token)match(input,RULE_ENUM_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_symbol_0_0, grammarAccess.getEnumTermAccess().getSymbolENUM_IDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getEnumTermRule());
              				}
              				setWithLastConsumed(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.ENUM_ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumTerm"


    // $ANTLR start "entryRuleRealTerm"
    // InternalAsmetaL.g:7022:1: entryRuleRealTerm returns [EObject current=null] : iv_ruleRealTerm= ruleRealTerm EOF ;
    public final EObject entryRuleRealTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRealTerm = null;


        try {
            // InternalAsmetaL.g:7022:49: (iv_ruleRealTerm= ruleRealTerm EOF )
            // InternalAsmetaL.g:7023:2: iv_ruleRealTerm= ruleRealTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealTerm=ruleRealTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealTerm"


    // $ANTLR start "ruleRealTerm"
    // InternalAsmetaL.g:7029:1: ruleRealTerm returns [EObject current=null] : ( (lv_symbol_0_0= ruleRealNumberWithSign ) ) ;
    public final EObject ruleRealTerm() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_symbol_0_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7035:2: ( ( (lv_symbol_0_0= ruleRealNumberWithSign ) ) )
            // InternalAsmetaL.g:7036:2: ( (lv_symbol_0_0= ruleRealNumberWithSign ) )
            {
            // InternalAsmetaL.g:7036:2: ( (lv_symbol_0_0= ruleRealNumberWithSign ) )
            // InternalAsmetaL.g:7037:3: (lv_symbol_0_0= ruleRealNumberWithSign )
            {
            // InternalAsmetaL.g:7037:3: (lv_symbol_0_0= ruleRealNumberWithSign )
            // InternalAsmetaL.g:7038:4: lv_symbol_0_0= ruleRealNumberWithSign
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getRealTermAccess().getSymbolRealNumberWithSignParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_symbol_0_0=ruleRealNumberWithSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getRealTermRule());
              				}
              				set(
              					current,
              					"symbol",
              					lv_symbol_0_0,
              					"org.asmeta.xt.AsmetaL.RealNumberWithSign");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealTerm"


    // $ANTLR start "entryRuleIntegerTerm"
    // InternalAsmetaL.g:7058:1: entryRuleIntegerTerm returns [EObject current=null] : iv_ruleIntegerTerm= ruleIntegerTerm EOF ;
    public final EObject entryRuleIntegerTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntegerTerm = null;


        try {
            // InternalAsmetaL.g:7058:52: (iv_ruleIntegerTerm= ruleIntegerTerm EOF )
            // InternalAsmetaL.g:7059:2: iv_ruleIntegerTerm= ruleIntegerTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntegerTerm=ruleIntegerTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntegerTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntegerTerm"


    // $ANTLR start "ruleIntegerTerm"
    // InternalAsmetaL.g:7065:1: ruleIntegerTerm returns [EObject current=null] : ( ( (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign ) ) ) ;
    public final EObject ruleIntegerTerm() throws RecognitionException {
        EObject current = null;

        Token lv_symbol_0_1=null;
        AntlrDatatypeRuleToken lv_symbol_0_2 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7071:2: ( ( ( (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign ) ) ) )
            // InternalAsmetaL.g:7072:2: ( ( (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign ) ) )
            {
            // InternalAsmetaL.g:7072:2: ( ( (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign ) ) )
            // InternalAsmetaL.g:7073:3: ( (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign ) )
            {
            // InternalAsmetaL.g:7073:3: ( (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign ) )
            // InternalAsmetaL.g:7074:4: (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign )
            {
            // InternalAsmetaL.g:7074:4: (lv_symbol_0_1= RULE_NUMBER_TOKEN | lv_symbol_0_2= ruleNumberWithSign )
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==RULE_NUMBER_TOKEN) ) {
                int LA112_1 = input.LA(2);

                if ( (synpred174_InternalAsmetaL()) ) {
                    alt112=1;
                }
                else if ( (true) ) {
                    alt112=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 112, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA112_0>=102 && LA112_0<=103)) ) {
                alt112=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;
            }
            switch (alt112) {
                case 1 :
                    // InternalAsmetaL.g:7075:5: lv_symbol_0_1= RULE_NUMBER_TOKEN
                    {
                    lv_symbol_0_1=(Token)match(input,RULE_NUMBER_TOKEN,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_symbol_0_1, grammarAccess.getIntegerTermAccess().getSymbolNUMBER_TOKENTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getIntegerTermRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"symbol",
                      						lv_symbol_0_1,
                      						"org.asmeta.xt.AsmetaL.NUMBER_TOKEN");
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:7090:5: lv_symbol_0_2= ruleNumberWithSign
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getIntegerTermAccess().getSymbolNumberWithSignParserRuleCall_0_1());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_symbol_0_2=ruleNumberWithSign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getIntegerTermRule());
                      					}
                      					set(
                      						current,
                      						"symbol",
                      						lv_symbol_0_2,
                      						"org.asmeta.xt.AsmetaL.NumberWithSign");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntegerTerm"


    // $ANTLR start "entryRuleRealNumberWithSign"
    // InternalAsmetaL.g:7111:1: entryRuleRealNumberWithSign returns [String current=null] : iv_ruleRealNumberWithSign= ruleRealNumberWithSign EOF ;
    public final String entryRuleRealNumberWithSign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRealNumberWithSign = null;


        try {
            // InternalAsmetaL.g:7111:58: (iv_ruleRealNumberWithSign= ruleRealNumberWithSign EOF )
            // InternalAsmetaL.g:7112:2: iv_ruleRealNumberWithSign= ruleRealNumberWithSign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRealNumberWithSignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRealNumberWithSign=ruleRealNumberWithSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRealNumberWithSign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRealNumberWithSign"


    // $ANTLR start "ruleRealNumberWithSign"
    // InternalAsmetaL.g:7118:1: ruleRealNumberWithSign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '+' | kw= '-' )? this_REAL_NUMBER_2= RULE_REAL_NUMBER ) ;
    public final AntlrDatatypeRuleToken ruleRealNumberWithSign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_REAL_NUMBER_2=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:7124:2: ( ( (kw= '+' | kw= '-' )? this_REAL_NUMBER_2= RULE_REAL_NUMBER ) )
            // InternalAsmetaL.g:7125:2: ( (kw= '+' | kw= '-' )? this_REAL_NUMBER_2= RULE_REAL_NUMBER )
            {
            // InternalAsmetaL.g:7125:2: ( (kw= '+' | kw= '-' )? this_REAL_NUMBER_2= RULE_REAL_NUMBER )
            // InternalAsmetaL.g:7126:3: (kw= '+' | kw= '-' )? this_REAL_NUMBER_2= RULE_REAL_NUMBER
            {
            // InternalAsmetaL.g:7126:3: (kw= '+' | kw= '-' )?
            int alt113=3;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==102) ) {
                alt113=1;
            }
            else if ( (LA113_0==103) ) {
                alt113=2;
            }
            switch (alt113) {
                case 1 :
                    // InternalAsmetaL.g:7127:4: kw= '+'
                    {
                    kw=(Token)match(input,102,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getRealNumberWithSignAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:7133:4: kw= '-'
                    {
                    kw=(Token)match(input,103,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getRealNumberWithSignAccess().getHyphenMinusKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            this_REAL_NUMBER_2=(Token)match(input,RULE_REAL_NUMBER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_REAL_NUMBER_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_REAL_NUMBER_2, grammarAccess.getRealNumberWithSignAccess().getREAL_NUMBERTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRealNumberWithSign"


    // $ANTLR start "entryRuleNumberWithSign"
    // InternalAsmetaL.g:7150:1: entryRuleNumberWithSign returns [String current=null] : iv_ruleNumberWithSign= ruleNumberWithSign EOF ;
    public final String entryRuleNumberWithSign() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNumberWithSign = null;


        try {
            // InternalAsmetaL.g:7150:54: (iv_ruleNumberWithSign= ruleNumberWithSign EOF )
            // InternalAsmetaL.g:7151:2: iv_ruleNumberWithSign= ruleNumberWithSign EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberWithSignRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumberWithSign=ruleNumberWithSign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumberWithSign.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumberWithSign"


    // $ANTLR start "ruleNumberWithSign"
    // InternalAsmetaL.g:7157:1: ruleNumberWithSign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '+' | kw= '-' )? this_NUMBER_TOKEN_2= RULE_NUMBER_TOKEN ) ;
    public final AntlrDatatypeRuleToken ruleNumberWithSign() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_NUMBER_TOKEN_2=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:7163:2: ( ( (kw= '+' | kw= '-' )? this_NUMBER_TOKEN_2= RULE_NUMBER_TOKEN ) )
            // InternalAsmetaL.g:7164:2: ( (kw= '+' | kw= '-' )? this_NUMBER_TOKEN_2= RULE_NUMBER_TOKEN )
            {
            // InternalAsmetaL.g:7164:2: ( (kw= '+' | kw= '-' )? this_NUMBER_TOKEN_2= RULE_NUMBER_TOKEN )
            // InternalAsmetaL.g:7165:3: (kw= '+' | kw= '-' )? this_NUMBER_TOKEN_2= RULE_NUMBER_TOKEN
            {
            // InternalAsmetaL.g:7165:3: (kw= '+' | kw= '-' )?
            int alt114=3;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==102) ) {
                alt114=1;
            }
            else if ( (LA114_0==103) ) {
                alt114=2;
            }
            switch (alt114) {
                case 1 :
                    // InternalAsmetaL.g:7166:4: kw= '+'
                    {
                    kw=(Token)match(input,102,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getNumberWithSignAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:7172:4: kw= '-'
                    {
                    kw=(Token)match(input,103,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getNumberWithSignAccess().getHyphenMinusKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            this_NUMBER_TOKEN_2=(Token)match(input,RULE_NUMBER_TOKEN,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_NUMBER_TOKEN_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_NUMBER_TOKEN_2, grammarAccess.getNumberWithSignAccess().getNUMBER_TOKENTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumberWithSign"


    // $ANTLR start "entryRuleExtendedTerm"
    // InternalAsmetaL.g:7189:1: entryRuleExtendedTerm returns [EObject current=null] : iv_ruleExtendedTerm= ruleExtendedTerm EOF ;
    public final EObject entryRuleExtendedTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendedTerm = null;


        try {
            // InternalAsmetaL.g:7189:53: (iv_ruleExtendedTerm= ruleExtendedTerm EOF )
            // InternalAsmetaL.g:7190:2: iv_ruleExtendedTerm= ruleExtendedTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExtendedTerm=ruleExtendedTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedTerm"


    // $ANTLR start "ruleExtendedTerm"
    // InternalAsmetaL.g:7196:1: ruleExtendedTerm returns [EObject current=null] : (this_ConditionalTerm_0= ruleConditionalTerm | this_CaseTerm_1= ruleCaseTerm | this_TupleTerm_2= ruleTupleTerm | this_VariableBindingTerm_3= ruleVariableBindingTerm | this_CollectionTerm_4= ruleCollectionTerm | this_RuleAsTerm_5= ruleRuleAsTerm ) ;
    public final EObject ruleExtendedTerm() throws RecognitionException {
        EObject current = null;

        EObject this_ConditionalTerm_0 = null;

        EObject this_CaseTerm_1 = null;

        EObject this_TupleTerm_2 = null;

        EObject this_VariableBindingTerm_3 = null;

        EObject this_CollectionTerm_4 = null;

        EObject this_RuleAsTerm_5 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7202:2: ( (this_ConditionalTerm_0= ruleConditionalTerm | this_CaseTerm_1= ruleCaseTerm | this_TupleTerm_2= ruleTupleTerm | this_VariableBindingTerm_3= ruleVariableBindingTerm | this_CollectionTerm_4= ruleCollectionTerm | this_RuleAsTerm_5= ruleRuleAsTerm ) )
            // InternalAsmetaL.g:7203:2: (this_ConditionalTerm_0= ruleConditionalTerm | this_CaseTerm_1= ruleCaseTerm | this_TupleTerm_2= ruleTupleTerm | this_VariableBindingTerm_3= ruleVariableBindingTerm | this_CollectionTerm_4= ruleCollectionTerm | this_RuleAsTerm_5= ruleRuleAsTerm )
            {
            // InternalAsmetaL.g:7203:2: (this_ConditionalTerm_0= ruleConditionalTerm | this_CaseTerm_1= ruleCaseTerm | this_TupleTerm_2= ruleTupleTerm | this_VariableBindingTerm_3= ruleVariableBindingTerm | this_CollectionTerm_4= ruleCollectionTerm | this_RuleAsTerm_5= ruleRuleAsTerm )
            int alt115=6;
            alt115 = dfa115.predict(input);
            switch (alt115) {
                case 1 :
                    // InternalAsmetaL.g:7204:3: this_ConditionalTerm_0= ruleConditionalTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtendedTermAccess().getConditionalTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConditionalTerm_0=ruleConditionalTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConditionalTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:7216:3: this_CaseTerm_1= ruleCaseTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtendedTermAccess().getCaseTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CaseTerm_1=ruleCaseTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CaseTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:7228:3: this_TupleTerm_2= ruleTupleTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtendedTermAccess().getTupleTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TupleTerm_2=ruleTupleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TupleTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:7240:3: this_VariableBindingTerm_3= ruleVariableBindingTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtendedTermAccess().getVariableBindingTermParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableBindingTerm_3=ruleVariableBindingTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableBindingTerm_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:7252:3: this_CollectionTerm_4= ruleCollectionTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtendedTermAccess().getCollectionTermParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_CollectionTerm_4=ruleCollectionTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CollectionTerm_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:7264:3: this_RuleAsTerm_5= ruleRuleAsTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExtendedTermAccess().getRuleAsTermParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RuleAsTerm_5=ruleRuleAsTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RuleAsTerm_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedTerm"


    // $ANTLR start "entryRuleConditionalTerm"
    // InternalAsmetaL.g:7279:1: entryRuleConditionalTerm returns [EObject current=null] : iv_ruleConditionalTerm= ruleConditionalTerm EOF ;
    public final EObject entryRuleConditionalTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalTerm = null;


        try {
            // InternalAsmetaL.g:7279:56: (iv_ruleConditionalTerm= ruleConditionalTerm EOF )
            // InternalAsmetaL.g:7280:2: iv_ruleConditionalTerm= ruleConditionalTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalTerm=ruleConditionalTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalTerm"


    // $ANTLR start "ruleConditionalTerm"
    // InternalAsmetaL.g:7286:1: ruleConditionalTerm returns [EObject current=null] : (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenTerm_3_0= ruleTerm ) ) (otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) ) )? otherlv_6= 'endif' ) ;
    public final EObject ruleConditionalTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_guard_1_0 = null;

        EObject lv_thenTerm_3_0 = null;

        EObject lv_elseTerm_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7292:2: ( (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenTerm_3_0= ruleTerm ) ) (otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) ) )? otherlv_6= 'endif' ) )
            // InternalAsmetaL.g:7293:2: (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenTerm_3_0= ruleTerm ) ) (otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) ) )? otherlv_6= 'endif' )
            {
            // InternalAsmetaL.g:7293:2: (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenTerm_3_0= ruleTerm ) ) (otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) ) )? otherlv_6= 'endif' )
            // InternalAsmetaL.g:7294:3: otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenTerm_3_0= ruleTerm ) ) (otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) ) )? otherlv_6= 'endif'
            {
            otherlv_0=(Token)match(input,110,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConditionalTermAccess().getIfKeyword_0());
              		
            }
            // InternalAsmetaL.g:7298:3: ( (lv_guard_1_0= ruleTerm ) )
            // InternalAsmetaL.g:7299:4: (lv_guard_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:7299:4: (lv_guard_1_0= ruleTerm )
            // InternalAsmetaL.g:7300:5: lv_guard_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionalTermAccess().getGuardTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_79);
            lv_guard_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionalTermRule());
              					}
              					set(
              						current,
              						"guard",
              						lv_guard_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,111,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getConditionalTermAccess().getThenKeyword_2());
              		
            }
            // InternalAsmetaL.g:7321:3: ( (lv_thenTerm_3_0= ruleTerm ) )
            // InternalAsmetaL.g:7322:4: (lv_thenTerm_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:7322:4: (lv_thenTerm_3_0= ruleTerm )
            // InternalAsmetaL.g:7323:5: lv_thenTerm_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionalTermAccess().getThenTermTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_thenTerm_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionalTermRule());
              					}
              					set(
              						current,
              						"thenTerm",
              						lv_thenTerm_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:7340:3: (otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==112) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalAsmetaL.g:7341:4: otherlv_4= 'else' ( (lv_elseTerm_5_0= ruleTerm ) )
                    {
                    otherlv_4=(Token)match(input,112,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getConditionalTermAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalAsmetaL.g:7345:4: ( (lv_elseTerm_5_0= ruleTerm ) )
                    // InternalAsmetaL.g:7346:5: (lv_elseTerm_5_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:7346:5: (lv_elseTerm_5_0= ruleTerm )
                    // InternalAsmetaL.g:7347:6: lv_elseTerm_5_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalTermAccess().getElseTermTermParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_81);
                    lv_elseTerm_5_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalTermRule());
                      						}
                      						set(
                      							current,
                      							"elseTerm",
                      							lv_elseTerm_5_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getConditionalTermAccess().getEndifKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalTerm"


    // $ANTLR start "entryRuleCaseTerm"
    // InternalAsmetaL.g:7373:1: entryRuleCaseTerm returns [EObject current=null] : iv_ruleCaseTerm= ruleCaseTerm EOF ;
    public final EObject entryRuleCaseTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseTerm = null;


        try {
            // InternalAsmetaL.g:7373:49: (iv_ruleCaseTerm= ruleCaseTerm EOF )
            // InternalAsmetaL.g:7374:2: iv_ruleCaseTerm= ruleCaseTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseTerm=ruleCaseTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCaseTerm"


    // $ANTLR start "ruleCaseTerm"
    // InternalAsmetaL.g:7380:1: ruleCaseTerm returns [EObject current=null] : (otherlv_0= 'switch' ( (lv_comparedTerm_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) ) )? otherlv_8= 'endswitch' ) ;
    public final EObject ruleCaseTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_comparedTerm_1_0 = null;

        EObject lv_comparingTerm_3_0 = null;

        EObject lv_resultTerms_5_0 = null;

        EObject lv_otherwiseTerm_7_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7386:2: ( (otherlv_0= 'switch' ( (lv_comparedTerm_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) ) )? otherlv_8= 'endswitch' ) )
            // InternalAsmetaL.g:7387:2: (otherlv_0= 'switch' ( (lv_comparedTerm_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) ) )? otherlv_8= 'endswitch' )
            {
            // InternalAsmetaL.g:7387:2: (otherlv_0= 'switch' ( (lv_comparedTerm_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) ) )? otherlv_8= 'endswitch' )
            // InternalAsmetaL.g:7388:3: otherlv_0= 'switch' ( (lv_comparedTerm_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) ) )? otherlv_8= 'endswitch'
            {
            otherlv_0=(Token)match(input,114,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getCaseTermAccess().getSwitchKeyword_0());
              		
            }
            // InternalAsmetaL.g:7392:3: ( (lv_comparedTerm_1_0= ruleTerm ) )
            // InternalAsmetaL.g:7393:4: (lv_comparedTerm_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:7393:4: (lv_comparedTerm_1_0= ruleTerm )
            // InternalAsmetaL.g:7394:5: lv_comparedTerm_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCaseTermAccess().getComparedTermTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_82);
            lv_comparedTerm_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCaseTermRule());
              					}
              					set(
              						current,
              						"comparedTerm",
              						lv_comparedTerm_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:7411:3: (otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) ) )+
            int cnt117=0;
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==115) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // InternalAsmetaL.g:7412:4: otherlv_2= 'case' ( (lv_comparingTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_resultTerms_5_0= ruleTerm ) )
            	    {
            	    otherlv_2=(Token)match(input,115,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getCaseTermAccess().getCaseKeyword_2_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:7416:4: ( (lv_comparingTerm_3_0= ruleTerm ) )
            	    // InternalAsmetaL.g:7417:5: (lv_comparingTerm_3_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:7417:5: (lv_comparingTerm_3_0= ruleTerm )
            	    // InternalAsmetaL.g:7418:6: lv_comparingTerm_3_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCaseTermAccess().getComparingTermTermParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_comparingTerm_3_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCaseTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"comparingTerm",
            	      							lv_comparingTerm_3_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,35,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getCaseTermAccess().getColonKeyword_2_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:7439:4: ( (lv_resultTerms_5_0= ruleTerm ) )
            	    // InternalAsmetaL.g:7440:5: (lv_resultTerms_5_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:7440:5: (lv_resultTerms_5_0= ruleTerm )
            	    // InternalAsmetaL.g:7441:6: lv_resultTerms_5_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCaseTermAccess().getResultTermsTermParserRuleCall_2_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_resultTerms_5_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCaseTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"resultTerms",
            	      							lv_resultTerms_5_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt117 >= 1 ) break loop117;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(117, input);
                        throw eee;
                }
                cnt117++;
            } while (true);

            // InternalAsmetaL.g:7459:3: (otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==116) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalAsmetaL.g:7460:4: otherlv_6= 'otherwise' ( (lv_otherwiseTerm_7_0= ruleTerm ) )
                    {
                    otherlv_6=(Token)match(input,116,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getCaseTermAccess().getOtherwiseKeyword_3_0());
                      			
                    }
                    // InternalAsmetaL.g:7464:4: ( (lv_otherwiseTerm_7_0= ruleTerm ) )
                    // InternalAsmetaL.g:7465:5: (lv_otherwiseTerm_7_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:7465:5: (lv_otherwiseTerm_7_0= ruleTerm )
                    // InternalAsmetaL.g:7466:6: lv_otherwiseTerm_7_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCaseTermAccess().getOtherwiseTermTermParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_84);
                    lv_otherwiseTerm_7_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCaseTermRule());
                      						}
                      						set(
                      							current,
                      							"otherwiseTerm",
                      							lv_otherwiseTerm_7_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getCaseTermAccess().getEndswitchKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCaseTerm"


    // $ANTLR start "entryRuleTupleTerm"
    // InternalAsmetaL.g:7492:1: entryRuleTupleTerm returns [EObject current=null] : iv_ruleTupleTerm= ruleTupleTerm EOF ;
    public final EObject entryRuleTupleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTupleTerm = null;


        try {
            // InternalAsmetaL.g:7492:50: (iv_ruleTupleTerm= ruleTupleTerm EOF )
            // InternalAsmetaL.g:7493:2: iv_ruleTupleTerm= ruleTupleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTupleTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTupleTerm=ruleTupleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTupleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTupleTerm"


    // $ANTLR start "ruleTupleTerm"
    // InternalAsmetaL.g:7499:1: ruleTupleTerm returns [EObject current=null] : (otherlv_0= '(' ( (lv_terms_1_0= ruleTerm ) ) (otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) ) )* otherlv_4= ')' ) ;
    public final EObject ruleTupleTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_terms_1_0 = null;

        EObject lv_terms_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7505:2: ( (otherlv_0= '(' ( (lv_terms_1_0= ruleTerm ) ) (otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) ) )* otherlv_4= ')' ) )
            // InternalAsmetaL.g:7506:2: (otherlv_0= '(' ( (lv_terms_1_0= ruleTerm ) ) (otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) ) )* otherlv_4= ')' )
            {
            // InternalAsmetaL.g:7506:2: (otherlv_0= '(' ( (lv_terms_1_0= ruleTerm ) ) (otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) ) )* otherlv_4= ')' )
            // InternalAsmetaL.g:7507:3: otherlv_0= '(' ( (lv_terms_1_0= ruleTerm ) ) (otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,29,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTupleTermAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalAsmetaL.g:7511:3: ( (lv_terms_1_0= ruleTerm ) )
            // InternalAsmetaL.g:7512:4: (lv_terms_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:7512:4: (lv_terms_1_0= ruleTerm )
            // InternalAsmetaL.g:7513:5: lv_terms_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTupleTermAccess().getTermsTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_terms_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTupleTermRule());
              					}
              					add(
              						current,
              						"terms",
              						lv_terms_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:7530:3: (otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) ) )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==30) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalAsmetaL.g:7531:4: otherlv_2= ',' ( (lv_terms_3_0= ruleTerm ) )
            	    {
            	    otherlv_2=(Token)match(input,30,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getTupleTermAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:7535:4: ( (lv_terms_3_0= ruleTerm ) )
            	    // InternalAsmetaL.g:7536:5: (lv_terms_3_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:7536:5: (lv_terms_3_0= ruleTerm )
            	    // InternalAsmetaL.g:7537:6: lv_terms_3_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTupleTermAccess().getTermsTermParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_terms_3_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTupleTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"terms",
            	      							lv_terms_3_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

            otherlv_4=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTupleTermAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTupleTerm"


    // $ANTLR start "entryRuleCollectionTerm"
    // InternalAsmetaL.g:7563:1: entryRuleCollectionTerm returns [EObject current=null] : iv_ruleCollectionTerm= ruleCollectionTerm EOF ;
    public final EObject entryRuleCollectionTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCollectionTerm = null;


        try {
            // InternalAsmetaL.g:7563:55: (iv_ruleCollectionTerm= ruleCollectionTerm EOF )
            // InternalAsmetaL.g:7564:2: iv_ruleCollectionTerm= ruleCollectionTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCollectionTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCollectionTerm=ruleCollectionTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCollectionTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCollectionTerm"


    // $ANTLR start "ruleCollectionTerm"
    // InternalAsmetaL.g:7570:1: ruleCollectionTerm returns [EObject current=null] : (this_SequenceTerm_0= ruleSequenceTerm | this_MapTerm_1= ruleMapTerm | this_SetTerm_2= ruleSetTerm | this_BagTerm_3= ruleBagTerm ) ;
    public final EObject ruleCollectionTerm() throws RecognitionException {
        EObject current = null;

        EObject this_SequenceTerm_0 = null;

        EObject this_MapTerm_1 = null;

        EObject this_SetTerm_2 = null;

        EObject this_BagTerm_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7576:2: ( (this_SequenceTerm_0= ruleSequenceTerm | this_MapTerm_1= ruleMapTerm | this_SetTerm_2= ruleSetTerm | this_BagTerm_3= ruleBagTerm ) )
            // InternalAsmetaL.g:7577:2: (this_SequenceTerm_0= ruleSequenceTerm | this_MapTerm_1= ruleMapTerm | this_SetTerm_2= ruleSetTerm | this_BagTerm_3= ruleBagTerm )
            {
            // InternalAsmetaL.g:7577:2: (this_SequenceTerm_0= ruleSequenceTerm | this_MapTerm_1= ruleMapTerm | this_SetTerm_2= ruleSetTerm | this_BagTerm_3= ruleBagTerm )
            int alt120=4;
            switch ( input.LA(1) ) {
            case 118:
                {
                alt120=1;
                }
                break;
            case 71:
                {
                int LA120_2 = input.LA(2);

                if ( (synpred189_InternalAsmetaL()) ) {
                    alt120=2;
                }
                else if ( (synpred190_InternalAsmetaL()) ) {
                    alt120=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 120, 2, input);

                    throw nvae;
                }
                }
                break;
            case 99:
                {
                alt120=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }

            switch (alt120) {
                case 1 :
                    // InternalAsmetaL.g:7578:3: this_SequenceTerm_0= ruleSequenceTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCollectionTermAccess().getSequenceTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SequenceTerm_0=ruleSequenceTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SequenceTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:7590:3: this_MapTerm_1= ruleMapTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCollectionTermAccess().getMapTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MapTerm_1=ruleMapTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MapTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:7602:3: this_SetTerm_2= ruleSetTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCollectionTermAccess().getSetTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SetTerm_2=ruleSetTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SetTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:7614:3: this_BagTerm_3= ruleBagTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCollectionTermAccess().getBagTermParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BagTerm_3=ruleBagTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BagTerm_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCollectionTerm"


    // $ANTLR start "entryRuleSequenceTerm"
    // InternalAsmetaL.g:7629:1: entryRuleSequenceTerm returns [EObject current=null] : iv_ruleSequenceTerm= ruleSequenceTerm EOF ;
    public final EObject entryRuleSequenceTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceTerm = null;


        try {
            // InternalAsmetaL.g:7629:53: (iv_ruleSequenceTerm= ruleSequenceTerm EOF )
            // InternalAsmetaL.g:7630:2: iv_ruleSequenceTerm= ruleSequenceTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceTerm=ruleSequenceTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceTerm"


    // $ANTLR start "ruleSequenceTerm"
    // InternalAsmetaL.g:7636:1: ruleSequenceTerm returns [EObject current=null] : ( () otherlv_1= '[' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= ']' ) ;
    public final EObject ruleSequenceTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_start_term_2_0 = null;

        EObject lv_other_terms_4_0 = null;

        EObject lv_end_term_6_0 = null;

        EObject lv_step_8_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7642:2: ( ( () otherlv_1= '[' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= ']' ) )
            // InternalAsmetaL.g:7643:2: ( () otherlv_1= '[' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= ']' )
            {
            // InternalAsmetaL.g:7643:2: ( () otherlv_1= '[' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= ']' )
            // InternalAsmetaL.g:7644:3: () otherlv_1= '[' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= ']'
            {
            // InternalAsmetaL.g:7644:3: ()
            // InternalAsmetaL.g:7645:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSequenceTermAccess().getSequenceTermAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,118,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSequenceTermAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalAsmetaL.g:7658:3: ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( ((LA124_0>=RULE_ID && LA124_0<=RULE_REAL_NUMBER)||LA124_0==29||LA124_0==42||LA124_0==56||(LA124_0>=60 && LA124_0<=69)||LA124_0==71||(LA124_0>=74 && LA124_0<=79)||(LA124_0>=88 && LA124_0<=94)||LA124_0==99||(LA124_0>=102 && LA124_0<=103)||(LA124_0>=107 && LA124_0<=110)||LA124_0==114||LA124_0==118||LA124_0==124||LA124_0==126||LA124_0==144) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalAsmetaL.g:7659:4: ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )?
                    {
                    // InternalAsmetaL.g:7659:4: ( (lv_start_term_2_0= ruleTerm ) )
                    // InternalAsmetaL.g:7660:5: (lv_start_term_2_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:7660:5: (lv_start_term_2_0= ruleTerm )
                    // InternalAsmetaL.g:7661:6: lv_start_term_2_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSequenceTermAccess().getStart_termTermParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_86);
                    lv_start_term_2_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSequenceTermRule());
                      						}
                      						set(
                      							current,
                      							"start_term",
                      							lv_start_term_2_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:7678:4: ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )?
                    int alt123=3;
                    int LA123_0 = input.LA(1);

                    if ( (LA123_0==30) ) {
                        alt123=1;
                    }
                    else if ( (LA123_0==35) ) {
                        alt123=2;
                    }
                    switch (alt123) {
                        case 1 :
                            // InternalAsmetaL.g:7679:5: (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+
                            {
                            // InternalAsmetaL.g:7679:5: (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+
                            int cnt121=0;
                            loop121:
                            do {
                                int alt121=2;
                                int LA121_0 = input.LA(1);

                                if ( (LA121_0==30) ) {
                                    alt121=1;
                                }


                                switch (alt121) {
                            	case 1 :
                            	    // InternalAsmetaL.g:7680:6: otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) )
                            	    {
                            	    otherlv_3=(Token)match(input,30,FOLLOW_27); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getSequenceTermAccess().getCommaKeyword_2_1_0_0());
                            	      					
                            	    }
                            	    // InternalAsmetaL.g:7684:6: ( (lv_other_terms_4_0= ruleTerm ) )
                            	    // InternalAsmetaL.g:7685:7: (lv_other_terms_4_0= ruleTerm )
                            	    {
                            	    // InternalAsmetaL.g:7685:7: (lv_other_terms_4_0= ruleTerm )
                            	    // InternalAsmetaL.g:7686:8: lv_other_terms_4_0= ruleTerm
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getSequenceTermAccess().getOther_termsTermParserRuleCall_2_1_0_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_87);
                            	    lv_other_terms_4_0=ruleTerm();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getSequenceTermRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"other_terms",
                            	      									lv_other_terms_4_0,
                            	      									"org.asmeta.xt.AsmetaL.Term");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt121 >= 1 ) break loop121;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(121, input);
                                        throw eee;
                                }
                                cnt121++;
                            } while (true);


                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:7705:5: ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? )
                            {
                            // InternalAsmetaL.g:7705:5: ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? )
                            // InternalAsmetaL.g:7706:6: ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )?
                            {
                            // InternalAsmetaL.g:7706:6: ( ( ':' )=>otherlv_5= ':' )
                            // InternalAsmetaL.g:7707:7: ( ':' )=>otherlv_5= ':'
                            {
                            otherlv_5=(Token)match(input,35,FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_5, grammarAccess.getSequenceTermAccess().getColonKeyword_2_1_1_0());
                              						
                            }

                            }

                            // InternalAsmetaL.g:7713:6: ( (lv_end_term_6_0= ruleTerm ) )
                            // InternalAsmetaL.g:7714:7: (lv_end_term_6_0= ruleTerm )
                            {
                            // InternalAsmetaL.g:7714:7: (lv_end_term_6_0= ruleTerm )
                            // InternalAsmetaL.g:7715:8: lv_end_term_6_0= ruleTerm
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSequenceTermAccess().getEnd_termTermParserRuleCall_2_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_87);
                            lv_end_term_6_0=ruleTerm();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSequenceTermRule());
                              								}
                              								set(
                              									current,
                              									"end_term",
                              									lv_end_term_6_0,
                              									"org.asmeta.xt.AsmetaL.Term");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalAsmetaL.g:7732:6: (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )?
                            int alt122=2;
                            int LA122_0 = input.LA(1);

                            if ( (LA122_0==30) ) {
                                alt122=1;
                            }
                            switch (alt122) {
                                case 1 :
                                    // InternalAsmetaL.g:7733:7: otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) )
                                    {
                                    otherlv_7=(Token)match(input,30,FOLLOW_88); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_7, grammarAccess.getSequenceTermAccess().getCommaKeyword_2_1_1_2_0());
                                      						
                                    }
                                    // InternalAsmetaL.g:7737:7: ( (lv_step_8_0= ruleConstantTerm ) )
                                    // InternalAsmetaL.g:7738:8: (lv_step_8_0= ruleConstantTerm )
                                    {
                                    // InternalAsmetaL.g:7738:8: (lv_step_8_0= ruleConstantTerm )
                                    // InternalAsmetaL.g:7739:9: lv_step_8_0= ruleConstantTerm
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSequenceTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_89);
                                    lv_step_8_0=ruleConstantTerm();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getSequenceTermRule());
                                      									}
                                      									set(
                                      										current,
                                      										"step",
                                      										lv_step_8_0,
                                      										"org.asmeta.xt.AsmetaL.ConstantTerm");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getSequenceTermAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceTerm"


    // $ANTLR start "entryRuleMapTerm"
    // InternalAsmetaL.g:7768:1: entryRuleMapTerm returns [EObject current=null] : iv_ruleMapTerm= ruleMapTerm EOF ;
    public final EObject entryRuleMapTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapTerm = null;


        try {
            // InternalAsmetaL.g:7768:48: (iv_ruleMapTerm= ruleMapTerm EOF )
            // InternalAsmetaL.g:7769:2: iv_ruleMapTerm= ruleMapTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapTerm=ruleMapTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapTerm"


    // $ANTLR start "ruleMapTerm"
    // InternalAsmetaL.g:7775:1: ruleMapTerm returns [EObject current=null] : ( () otherlv_1= '{' (otherlv_2= '->' | ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* ) ) otherlv_10= '}' ) ;
    public final EObject ruleMapTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_term_3_0 = null;

        EObject lv_term_5_0 = null;

        EObject lv_term_7_0 = null;

        EObject lv_term_9_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7781:2: ( ( () otherlv_1= '{' (otherlv_2= '->' | ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* ) ) otherlv_10= '}' ) )
            // InternalAsmetaL.g:7782:2: ( () otherlv_1= '{' (otherlv_2= '->' | ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* ) ) otherlv_10= '}' )
            {
            // InternalAsmetaL.g:7782:2: ( () otherlv_1= '{' (otherlv_2= '->' | ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* ) ) otherlv_10= '}' )
            // InternalAsmetaL.g:7783:3: () otherlv_1= '{' (otherlv_2= '->' | ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* ) ) otherlv_10= '}'
            {
            // InternalAsmetaL.g:7783:3: ()
            // InternalAsmetaL.g:7784:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMapTermAccess().getMapTermAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,71,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapTermAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalAsmetaL.g:7797:3: (otherlv_2= '->' | ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* ) )
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==81) ) {
                alt126=1;
            }
            else if ( ((LA126_0>=RULE_ID && LA126_0<=RULE_REAL_NUMBER)||LA126_0==29||LA126_0==42||LA126_0==56||(LA126_0>=60 && LA126_0<=69)||LA126_0==71||(LA126_0>=74 && LA126_0<=79)||(LA126_0>=88 && LA126_0<=94)||LA126_0==99||(LA126_0>=102 && LA126_0<=103)||(LA126_0>=107 && LA126_0<=110)||LA126_0==114||LA126_0==118||LA126_0==124||LA126_0==126||LA126_0==144) ) {
                alt126=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
                    // InternalAsmetaL.g:7798:4: otherlv_2= '->'
                    {
                    otherlv_2=(Token)match(input,81,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:7803:4: ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* )
                    {
                    // InternalAsmetaL.g:7803:4: ( ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )* )
                    // InternalAsmetaL.g:7804:5: ( (lv_term_3_0= ruleTerm ) ) otherlv_4= '->' ( (lv_term_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )*
                    {
                    // InternalAsmetaL.g:7804:5: ( (lv_term_3_0= ruleTerm ) )
                    // InternalAsmetaL.g:7805:6: (lv_term_3_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:7805:6: (lv_term_3_0= ruleTerm )
                    // InternalAsmetaL.g:7806:7: lv_term_3_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_61);
                    lv_term_3_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMapTermRule());
                      							}
                      							add(
                      								current,
                      								"term",
                      								lv_term_3_0,
                      								"org.asmeta.xt.AsmetaL.Term");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,81,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_1_1());
                      				
                    }
                    // InternalAsmetaL.g:7827:5: ( (lv_term_5_0= ruleTerm ) )
                    // InternalAsmetaL.g:7828:6: (lv_term_5_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:7828:6: (lv_term_5_0= ruleTerm )
                    // InternalAsmetaL.g:7829:7: lv_term_5_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_2_0());
                      						
                    }
                    pushFollow(FOLLOW_92);
                    lv_term_5_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMapTermRule());
                      							}
                      							add(
                      								current,
                      								"term",
                      								lv_term_5_0,
                      								"org.asmeta.xt.AsmetaL.Term");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalAsmetaL.g:7846:5: (otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) ) )*
                    loop125:
                    do {
                        int alt125=2;
                        int LA125_0 = input.LA(1);

                        if ( (LA125_0==30) ) {
                            alt125=1;
                        }


                        switch (alt125) {
                    	case 1 :
                    	    // InternalAsmetaL.g:7847:6: otherlv_6= ',' ( (lv_term_7_0= ruleTerm ) ) otherlv_8= '->' ( (lv_term_9_0= ruleTerm ) )
                    	    {
                    	    otherlv_6=(Token)match(input,30,FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getMapTermAccess().getCommaKeyword_2_1_3_0());
                    	      					
                    	    }
                    	    // InternalAsmetaL.g:7851:6: ( (lv_term_7_0= ruleTerm ) )
                    	    // InternalAsmetaL.g:7852:7: (lv_term_7_0= ruleTerm )
                    	    {
                    	    // InternalAsmetaL.g:7852:7: (lv_term_7_0= ruleTerm )
                    	    // InternalAsmetaL.g:7853:8: lv_term_7_0= ruleTerm
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_3_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_61);
                    	    lv_term_7_0=ruleTerm();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMapTermRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"term",
                    	      									lv_term_7_0,
                    	      									"org.asmeta.xt.AsmetaL.Term");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_8=(Token)match(input,81,FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_1_3_2());
                    	      					
                    	    }
                    	    // InternalAsmetaL.g:7874:6: ( (lv_term_9_0= ruleTerm ) )
                    	    // InternalAsmetaL.g:7875:7: (lv_term_9_0= ruleTerm )
                    	    {
                    	    // InternalAsmetaL.g:7875:7: (lv_term_9_0= ruleTerm )
                    	    // InternalAsmetaL.g:7876:8: lv_term_9_0= ruleTerm
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_3_3_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_92);
                    	    lv_term_9_0=ruleTerm();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMapTermRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"term",
                    	      									lv_term_9_0,
                    	      									"org.asmeta.xt.AsmetaL.Term");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop125;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getMapTermAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapTerm"


    // $ANTLR start "entryRuleSetTerm"
    // InternalAsmetaL.g:7904:1: entryRuleSetTerm returns [EObject current=null] : iv_ruleSetTerm= ruleSetTerm EOF ;
    public final EObject entryRuleSetTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetTerm = null;


        try {
            // InternalAsmetaL.g:7904:48: (iv_ruleSetTerm= ruleSetTerm EOF )
            // InternalAsmetaL.g:7905:2: iv_ruleSetTerm= ruleSetTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSetTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSetTerm=ruleSetTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSetTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetTerm"


    // $ANTLR start "ruleSetTerm"
    // InternalAsmetaL.g:7911:1: ruleSetTerm returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '}' ) ;
    public final EObject ruleSetTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_start_term_2_0 = null;

        EObject lv_other_terms_4_0 = null;

        EObject lv_end_term_6_0 = null;

        EObject lv_step_8_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:7917:2: ( ( () otherlv_1= '{' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '}' ) )
            // InternalAsmetaL.g:7918:2: ( () otherlv_1= '{' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '}' )
            {
            // InternalAsmetaL.g:7918:2: ( () otherlv_1= '{' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '}' )
            // InternalAsmetaL.g:7919:3: () otherlv_1= '{' ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '}'
            {
            // InternalAsmetaL.g:7919:3: ()
            // InternalAsmetaL.g:7920:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSetTermAccess().getSetTermAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,71,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSetTermAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalAsmetaL.g:7933:3: ( ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( ((LA130_0>=RULE_ID && LA130_0<=RULE_REAL_NUMBER)||LA130_0==29||LA130_0==42||LA130_0==56||(LA130_0>=60 && LA130_0<=69)||LA130_0==71||(LA130_0>=74 && LA130_0<=79)||(LA130_0>=88 && LA130_0<=94)||LA130_0==99||(LA130_0>=102 && LA130_0<=103)||(LA130_0>=107 && LA130_0<=110)||LA130_0==114||LA130_0==118||LA130_0==124||LA130_0==126||LA130_0==144) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalAsmetaL.g:7934:4: ( (lv_start_term_2_0= ruleTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )?
                    {
                    // InternalAsmetaL.g:7934:4: ( (lv_start_term_2_0= ruleTerm ) )
                    // InternalAsmetaL.g:7935:5: (lv_start_term_2_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:7935:5: (lv_start_term_2_0= ruleTerm )
                    // InternalAsmetaL.g:7936:6: lv_start_term_2_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSetTermAccess().getStart_termTermParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_94);
                    lv_start_term_2_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSetTermRule());
                      						}
                      						set(
                      							current,
                      							"start_term",
                      							lv_start_term_2_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:7953:4: ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )?
                    int alt129=3;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==30) ) {
                        alt129=1;
                    }
                    else if ( (LA129_0==35) ) {
                        alt129=2;
                    }
                    switch (alt129) {
                        case 1 :
                            // InternalAsmetaL.g:7954:5: (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+
                            {
                            // InternalAsmetaL.g:7954:5: (otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) ) )+
                            int cnt127=0;
                            loop127:
                            do {
                                int alt127=2;
                                int LA127_0 = input.LA(1);

                                if ( (LA127_0==30) ) {
                                    alt127=1;
                                }


                                switch (alt127) {
                            	case 1 :
                            	    // InternalAsmetaL.g:7955:6: otherlv_3= ',' ( (lv_other_terms_4_0= ruleTerm ) )
                            	    {
                            	    otherlv_3=(Token)match(input,30,FOLLOW_27); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getSetTermAccess().getCommaKeyword_2_1_0_0());
                            	      					
                            	    }
                            	    // InternalAsmetaL.g:7959:6: ( (lv_other_terms_4_0= ruleTerm ) )
                            	    // InternalAsmetaL.g:7960:7: (lv_other_terms_4_0= ruleTerm )
                            	    {
                            	    // InternalAsmetaL.g:7960:7: (lv_other_terms_4_0= ruleTerm )
                            	    // InternalAsmetaL.g:7961:8: lv_other_terms_4_0= ruleTerm
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getSetTermAccess().getOther_termsTermParserRuleCall_2_1_0_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_92);
                            	    lv_other_terms_4_0=ruleTerm();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getSetTermRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"other_terms",
                            	      									lv_other_terms_4_0,
                            	      									"org.asmeta.xt.AsmetaL.Term");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt127 >= 1 ) break loop127;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(127, input);
                                        throw eee;
                                }
                                cnt127++;
                            } while (true);


                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:7980:5: ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? )
                            {
                            // InternalAsmetaL.g:7980:5: ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? )
                            // InternalAsmetaL.g:7981:6: ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )?
                            {
                            // InternalAsmetaL.g:7981:6: ( ( ':' )=>otherlv_5= ':' )
                            // InternalAsmetaL.g:7982:7: ( ':' )=>otherlv_5= ':'
                            {
                            otherlv_5=(Token)match(input,35,FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_5, grammarAccess.getSetTermAccess().getColonKeyword_2_1_1_0());
                              						
                            }

                            }

                            // InternalAsmetaL.g:7988:6: ( (lv_end_term_6_0= ruleTerm ) )
                            // InternalAsmetaL.g:7989:7: (lv_end_term_6_0= ruleTerm )
                            {
                            // InternalAsmetaL.g:7989:7: (lv_end_term_6_0= ruleTerm )
                            // InternalAsmetaL.g:7990:8: lv_end_term_6_0= ruleTerm
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSetTermAccess().getEnd_termTermParserRuleCall_2_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_92);
                            lv_end_term_6_0=ruleTerm();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSetTermRule());
                              								}
                              								set(
                              									current,
                              									"end_term",
                              									lv_end_term_6_0,
                              									"org.asmeta.xt.AsmetaL.Term");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalAsmetaL.g:8007:6: (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )?
                            int alt128=2;
                            int LA128_0 = input.LA(1);

                            if ( (LA128_0==30) ) {
                                alt128=1;
                            }
                            switch (alt128) {
                                case 1 :
                                    // InternalAsmetaL.g:8008:7: otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) )
                                    {
                                    otherlv_7=(Token)match(input,30,FOLLOW_88); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_7, grammarAccess.getSetTermAccess().getCommaKeyword_2_1_1_2_0());
                                      						
                                    }
                                    // InternalAsmetaL.g:8012:7: ( (lv_step_8_0= ruleConstantTerm ) )
                                    // InternalAsmetaL.g:8013:8: (lv_step_8_0= ruleConstantTerm )
                                    {
                                    // InternalAsmetaL.g:8013:8: (lv_step_8_0= ruleConstantTerm )
                                    // InternalAsmetaL.g:8014:9: lv_step_8_0= ruleConstantTerm
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSetTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_91);
                                    lv_step_8_0=ruleConstantTerm();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getSetTermRule());
                                      									}
                                      									set(
                                      										current,
                                      										"step",
                                      										lv_step_8_0,
                                      										"org.asmeta.xt.AsmetaL.ConstantTerm");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getSetTermAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetTerm"


    // $ANTLR start "entryRuleBagTerm"
    // InternalAsmetaL.g:8043:1: entryRuleBagTerm returns [EObject current=null] : iv_ruleBagTerm= ruleBagTerm EOF ;
    public final EObject entryRuleBagTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBagTerm = null;


        try {
            // InternalAsmetaL.g:8043:48: (iv_ruleBagTerm= ruleBagTerm EOF )
            // InternalAsmetaL.g:8044:2: iv_ruleBagTerm= ruleBagTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBagTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBagTerm=ruleBagTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBagTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBagTerm"


    // $ANTLR start "ruleBagTerm"
    // InternalAsmetaL.g:8050:1: ruleBagTerm returns [EObject current=null] : ( () otherlv_1= '<' ( ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '>' ) ;
    public final EObject ruleBagTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_start_term_2_0 = null;

        EObject lv_other_terms_4_0 = null;

        EObject lv_end_term_6_0 = null;

        EObject lv_step_8_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8056:2: ( ( () otherlv_1= '<' ( ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '>' ) )
            // InternalAsmetaL.g:8057:2: ( () otherlv_1= '<' ( ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '>' )
            {
            // InternalAsmetaL.g:8057:2: ( () otherlv_1= '<' ( ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '>' )
            // InternalAsmetaL.g:8058:3: () otherlv_1= '<' ( ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )? otherlv_9= '>'
            {
            // InternalAsmetaL.g:8058:3: ()
            // InternalAsmetaL.g:8059:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBagTermAccess().getBagTermAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,99,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBagTermAccess().getLessThanSignKeyword_1());
              		
            }
            // InternalAsmetaL.g:8072:3: ( ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )? )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( ((LA134_0>=RULE_ID && LA134_0<=RULE_REAL_NUMBER)||(LA134_0>=88 && LA134_0<=94)||(LA134_0>=102 && LA134_0<=103)||(LA134_0>=107 && LA134_0<=109)||LA134_0==144) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalAsmetaL.g:8073:4: ( (lv_start_term_2_0= ruleBasicTerm ) ) ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )?
                    {
                    // InternalAsmetaL.g:8073:4: ( (lv_start_term_2_0= ruleBasicTerm ) )
                    // InternalAsmetaL.g:8074:5: (lv_start_term_2_0= ruleBasicTerm )
                    {
                    // InternalAsmetaL.g:8074:5: (lv_start_term_2_0= ruleBasicTerm )
                    // InternalAsmetaL.g:8075:6: lv_start_term_2_0= ruleBasicTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBagTermAccess().getStart_termBasicTermParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_96);
                    lv_start_term_2_0=ruleBasicTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBagTermRule());
                      						}
                      						set(
                      							current,
                      							"start_term",
                      							lv_start_term_2_0,
                      							"org.asmeta.xt.AsmetaL.BasicTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:8092:4: ( (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+ | ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? ) )?
                    int alt133=3;
                    int LA133_0 = input.LA(1);

                    if ( (LA133_0==30) ) {
                        alt133=1;
                    }
                    else if ( (LA133_0==35) ) {
                        alt133=2;
                    }
                    switch (alt133) {
                        case 1 :
                            // InternalAsmetaL.g:8093:5: (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+
                            {
                            // InternalAsmetaL.g:8093:5: (otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) ) )+
                            int cnt131=0;
                            loop131:
                            do {
                                int alt131=2;
                                int LA131_0 = input.LA(1);

                                if ( (LA131_0==30) ) {
                                    alt131=1;
                                }


                                switch (alt131) {
                            	case 1 :
                            	    // InternalAsmetaL.g:8094:6: otherlv_3= ',' ( (lv_other_terms_4_0= ruleBasicTerm ) )
                            	    {
                            	    otherlv_3=(Token)match(input,30,FOLLOW_97); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_3, grammarAccess.getBagTermAccess().getCommaKeyword_2_1_0_0());
                            	      					
                            	    }
                            	    // InternalAsmetaL.g:8098:6: ( (lv_other_terms_4_0= ruleBasicTerm ) )
                            	    // InternalAsmetaL.g:8099:7: (lv_other_terms_4_0= ruleBasicTerm )
                            	    {
                            	    // InternalAsmetaL.g:8099:7: (lv_other_terms_4_0= ruleBasicTerm )
                            	    // InternalAsmetaL.g:8100:8: lv_other_terms_4_0= ruleBasicTerm
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getBagTermAccess().getOther_termsBasicTermParserRuleCall_2_1_0_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_98);
                            	    lv_other_terms_4_0=ruleBasicTerm();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getBagTermRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"other_terms",
                            	      									lv_other_terms_4_0,
                            	      									"org.asmeta.xt.AsmetaL.BasicTerm");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt131 >= 1 ) break loop131;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(131, input);
                                        throw eee;
                                }
                                cnt131++;
                            } while (true);


                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:8119:5: ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? )
                            {
                            // InternalAsmetaL.g:8119:5: ( ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )? )
                            // InternalAsmetaL.g:8120:6: ( ( ':' )=>otherlv_5= ':' ) ( (lv_end_term_6_0= ruleConstantTerm ) ) (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )?
                            {
                            // InternalAsmetaL.g:8120:6: ( ( ':' )=>otherlv_5= ':' )
                            // InternalAsmetaL.g:8121:7: ( ':' )=>otherlv_5= ':'
                            {
                            otherlv_5=(Token)match(input,35,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_5, grammarAccess.getBagTermAccess().getColonKeyword_2_1_1_0());
                              						
                            }

                            }

                            // InternalAsmetaL.g:8127:6: ( (lv_end_term_6_0= ruleConstantTerm ) )
                            // InternalAsmetaL.g:8128:7: (lv_end_term_6_0= ruleConstantTerm )
                            {
                            // InternalAsmetaL.g:8128:7: (lv_end_term_6_0= ruleConstantTerm )
                            // InternalAsmetaL.g:8129:8: lv_end_term_6_0= ruleConstantTerm
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getBagTermAccess().getEnd_termConstantTermParserRuleCall_2_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_98);
                            lv_end_term_6_0=ruleConstantTerm();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getBagTermRule());
                              								}
                              								set(
                              									current,
                              									"end_term",
                              									lv_end_term_6_0,
                              									"org.asmeta.xt.AsmetaL.ConstantTerm");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalAsmetaL.g:8146:6: (otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) ) )?
                            int alt132=2;
                            int LA132_0 = input.LA(1);

                            if ( (LA132_0==30) ) {
                                alt132=1;
                            }
                            switch (alt132) {
                                case 1 :
                                    // InternalAsmetaL.g:8147:7: otherlv_7= ',' ( (lv_step_8_0= ruleConstantTerm ) )
                                    {
                                    otherlv_7=(Token)match(input,30,FOLLOW_88); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_7, grammarAccess.getBagTermAccess().getCommaKeyword_2_1_1_2_0());
                                      						
                                    }
                                    // InternalAsmetaL.g:8151:7: ( (lv_step_8_0= ruleConstantTerm ) )
                                    // InternalAsmetaL.g:8152:8: (lv_step_8_0= ruleConstantTerm )
                                    {
                                    // InternalAsmetaL.g:8152:8: (lv_step_8_0= ruleConstantTerm )
                                    // InternalAsmetaL.g:8153:9: lv_step_8_0= ruleConstantTerm
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getBagTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_99);
                                    lv_step_8_0=ruleConstantTerm();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getBagTermRule());
                                      									}
                                      									set(
                                      										current,
                                      										"step",
                                      										lv_step_8_0,
                                      										"org.asmeta.xt.AsmetaL.ConstantTerm");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            otherlv_9=(Token)match(input,98,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getBagTermAccess().getGreaterThanSignKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBagTerm"


    // $ANTLR start "entryRuleVariableBindingTerm"
    // InternalAsmetaL.g:8182:1: entryRuleVariableBindingTerm returns [EObject current=null] : iv_ruleVariableBindingTerm= ruleVariableBindingTerm EOF ;
    public final EObject entryRuleVariableBindingTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableBindingTerm = null;


        try {
            // InternalAsmetaL.g:8182:60: (iv_ruleVariableBindingTerm= ruleVariableBindingTerm EOF )
            // InternalAsmetaL.g:8183:2: iv_ruleVariableBindingTerm= ruleVariableBindingTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableBindingTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableBindingTerm=ruleVariableBindingTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableBindingTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableBindingTerm"


    // $ANTLR start "ruleVariableBindingTerm"
    // InternalAsmetaL.g:8189:1: ruleVariableBindingTerm returns [EObject current=null] : (this_LetTerm_0= ruleLetTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm | this_ComprehensionTerm_2= ruleComprehensionTerm ) ;
    public final EObject ruleVariableBindingTerm() throws RecognitionException {
        EObject current = null;

        EObject this_LetTerm_0 = null;

        EObject this_FiniteQuantificationTerm_1 = null;

        EObject this_ComprehensionTerm_2 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8195:2: ( (this_LetTerm_0= ruleLetTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm | this_ComprehensionTerm_2= ruleComprehensionTerm ) )
            // InternalAsmetaL.g:8196:2: (this_LetTerm_0= ruleLetTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm | this_ComprehensionTerm_2= ruleComprehensionTerm )
            {
            // InternalAsmetaL.g:8196:2: (this_LetTerm_0= ruleLetTerm | this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm | this_ComprehensionTerm_2= ruleComprehensionTerm )
            int alt135=3;
            switch ( input.LA(1) ) {
            case 124:
                {
                alt135=1;
                }
                break;
            case 29:
                {
                alt135=2;
                }
                break;
            case 71:
            case 99:
            case 118:
                {
                alt135=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }

            switch (alt135) {
                case 1 :
                    // InternalAsmetaL.g:8197:3: this_LetTerm_0= ruleLetTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableBindingTermAccess().getLetTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LetTerm_0=ruleLetTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LetTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:8209:3: this_FiniteQuantificationTerm_1= ruleFiniteQuantificationTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableBindingTermAccess().getFiniteQuantificationTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FiniteQuantificationTerm_1=ruleFiniteQuantificationTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FiniteQuantificationTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:8221:3: this_ComprehensionTerm_2= ruleComprehensionTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVariableBindingTermAccess().getComprehensionTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ComprehensionTerm_2=ruleComprehensionTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ComprehensionTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableBindingTerm"


    // $ANTLR start "entryRuleFiniteQuantificationTerm"
    // InternalAsmetaL.g:8236:1: entryRuleFiniteQuantificationTerm returns [EObject current=null] : iv_ruleFiniteQuantificationTerm= ruleFiniteQuantificationTerm EOF ;
    public final EObject entryRuleFiniteQuantificationTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFiniteQuantificationTerm = null;


        try {
            // InternalAsmetaL.g:8236:65: (iv_ruleFiniteQuantificationTerm= ruleFiniteQuantificationTerm EOF )
            // InternalAsmetaL.g:8237:2: iv_ruleFiniteQuantificationTerm= ruleFiniteQuantificationTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFiniteQuantificationTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFiniteQuantificationTerm=ruleFiniteQuantificationTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFiniteQuantificationTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFiniteQuantificationTerm"


    // $ANTLR start "ruleFiniteQuantificationTerm"
    // InternalAsmetaL.g:8243:1: ruleFiniteQuantificationTerm returns [EObject current=null] : (this_ForallTerm_0= ruleForallTerm | this_ExistUniqueTerm_1= ruleExistUniqueTerm | this_ExistTerm_2= ruleExistTerm ) ;
    public final EObject ruleFiniteQuantificationTerm() throws RecognitionException {
        EObject current = null;

        EObject this_ForallTerm_0 = null;

        EObject this_ExistUniqueTerm_1 = null;

        EObject this_ExistTerm_2 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8249:2: ( (this_ForallTerm_0= ruleForallTerm | this_ExistUniqueTerm_1= ruleExistUniqueTerm | this_ExistTerm_2= ruleExistTerm ) )
            // InternalAsmetaL.g:8250:2: (this_ForallTerm_0= ruleForallTerm | this_ExistUniqueTerm_1= ruleExistUniqueTerm | this_ExistTerm_2= ruleExistTerm )
            {
            // InternalAsmetaL.g:8250:2: (this_ForallTerm_0= ruleForallTerm | this_ExistUniqueTerm_1= ruleExistUniqueTerm | this_ExistTerm_2= ruleExistTerm )
            int alt136=3;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==29) ) {
                int LA136_1 = input.LA(2);

                if ( (LA136_1==120) ) {
                    int LA136_2 = input.LA(3);

                    if ( (LA136_2==144) ) {
                        alt136=3;
                    }
                    else if ( (LA136_2==121) ) {
                        alt136=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 136, 2, input);

                        throw nvae;
                    }
                }
                else if ( (LA136_1==123) ) {
                    alt136=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 136, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 136, 0, input);

                throw nvae;
            }
            switch (alt136) {
                case 1 :
                    // InternalAsmetaL.g:8251:3: this_ForallTerm_0= ruleForallTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFiniteQuantificationTermAccess().getForallTermParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ForallTerm_0=ruleForallTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ForallTerm_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:8263:3: this_ExistUniqueTerm_1= ruleExistUniqueTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFiniteQuantificationTermAccess().getExistUniqueTermParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExistUniqueTerm_1=ruleExistUniqueTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExistUniqueTerm_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:8275:3: this_ExistTerm_2= ruleExistTerm
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFiniteQuantificationTermAccess().getExistTermParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExistTerm_2=ruleExistTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExistTerm_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFiniteQuantificationTerm"


    // $ANTLR start "entryRuleExistUniqueTerm"
    // InternalAsmetaL.g:8290:1: entryRuleExistUniqueTerm returns [EObject current=null] : iv_ruleExistUniqueTerm= ruleExistUniqueTerm EOF ;
    public final EObject entryRuleExistUniqueTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExistUniqueTerm = null;


        try {
            // InternalAsmetaL.g:8290:56: (iv_ruleExistUniqueTerm= ruleExistUniqueTerm EOF )
            // InternalAsmetaL.g:8291:2: iv_ruleExistUniqueTerm= ruleExistUniqueTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExistUniqueTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExistUniqueTerm=ruleExistUniqueTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExistUniqueTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExistUniqueTerm"


    // $ANTLR start "ruleExistUniqueTerm"
    // InternalAsmetaL.g:8297:1: ruleExistUniqueTerm returns [EObject current=null] : (otherlv_0= '(' otherlv_1= 'exist' otherlv_2= 'unique' ( (lv_variable_3_0= ruleVariableTerm ) ) otherlv_4= 'in' ( (lv_ranges_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) ) )* (otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) ) )? otherlv_12= ')' ) ;
    public final EObject ruleExistUniqueTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_3_0 = null;

        EObject lv_ranges_5_0 = null;

        EObject lv_variable_7_0 = null;

        EObject lv_ranges_9_0 = null;

        EObject lv_guard_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8303:2: ( (otherlv_0= '(' otherlv_1= 'exist' otherlv_2= 'unique' ( (lv_variable_3_0= ruleVariableTerm ) ) otherlv_4= 'in' ( (lv_ranges_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) ) )* (otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) ) )? otherlv_12= ')' ) )
            // InternalAsmetaL.g:8304:2: (otherlv_0= '(' otherlv_1= 'exist' otherlv_2= 'unique' ( (lv_variable_3_0= ruleVariableTerm ) ) otherlv_4= 'in' ( (lv_ranges_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) ) )* (otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) ) )? otherlv_12= ')' )
            {
            // InternalAsmetaL.g:8304:2: (otherlv_0= '(' otherlv_1= 'exist' otherlv_2= 'unique' ( (lv_variable_3_0= ruleVariableTerm ) ) otherlv_4= 'in' ( (lv_ranges_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) ) )* (otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) ) )? otherlv_12= ')' )
            // InternalAsmetaL.g:8305:3: otherlv_0= '(' otherlv_1= 'exist' otherlv_2= 'unique' ( (lv_variable_3_0= ruleVariableTerm ) ) otherlv_4= 'in' ( (lv_ranges_5_0= ruleTerm ) ) (otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) ) )* (otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) ) )? otherlv_12= ')'
            {
            otherlv_0=(Token)match(input,29,FOLLOW_100); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExistUniqueTermAccess().getLeftParenthesisKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,120,FOLLOW_101); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExistUniqueTermAccess().getExistKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,121,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getExistUniqueTermAccess().getUniqueKeyword_2());
              		
            }
            // InternalAsmetaL.g:8317:3: ( (lv_variable_3_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:8318:4: (lv_variable_3_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:8318:4: (lv_variable_3_0= ruleVariableTerm )
            // InternalAsmetaL.g:8319:5: lv_variable_3_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExistUniqueTermAccess().getVariableVariableTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_3_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_3_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getExistUniqueTermAccess().getInKeyword_4());
              		
            }
            // InternalAsmetaL.g:8340:3: ( (lv_ranges_5_0= ruleTerm ) )
            // InternalAsmetaL.g:8341:4: (lv_ranges_5_0= ruleTerm )
            {
            // InternalAsmetaL.g:8341:4: (lv_ranges_5_0= ruleTerm )
            // InternalAsmetaL.g:8342:5: lv_ranges_5_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExistUniqueTermAccess().getRangesTermParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_102);
            lv_ranges_5_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_5_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:8359:3: (otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) ) )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==30) ) {
                    alt137=1;
                }


                switch (alt137) {
            	case 1 :
            	    // InternalAsmetaL.g:8360:4: otherlv_6= ',' ( (lv_variable_7_0= ruleVariableTerm ) ) otherlv_8= 'in' ( (lv_ranges_9_0= ruleTerm ) )
            	    {
            	    otherlv_6=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getExistUniqueTermAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:8364:4: ( (lv_variable_7_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:8365:5: (lv_variable_7_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:8365:5: (lv_variable_7_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:8366:6: lv_variable_7_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExistUniqueTermAccess().getVariableVariableTermParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_7_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_7_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_8=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_8, grammarAccess.getExistUniqueTermAccess().getInKeyword_6_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:8387:4: ( (lv_ranges_9_0= ruleTerm ) )
            	    // InternalAsmetaL.g:8388:5: (lv_ranges_9_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:8388:5: (lv_ranges_9_0= ruleTerm )
            	    // InternalAsmetaL.g:8389:6: lv_ranges_9_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExistUniqueTermAccess().getRangesTermParserRuleCall_6_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_ranges_9_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_9_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);

            // InternalAsmetaL.g:8407:3: (otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==122) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalAsmetaL.g:8408:4: otherlv_10= 'with' ( (lv_guard_11_0= ruleTerm ) )
                    {
                    otherlv_10=(Token)match(input,122,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getExistUniqueTermAccess().getWithKeyword_7_0());
                      			
                    }
                    // InternalAsmetaL.g:8412:4: ( (lv_guard_11_0= ruleTerm ) )
                    // InternalAsmetaL.g:8413:5: (lv_guard_11_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:8413:5: (lv_guard_11_0= ruleTerm )
                    // InternalAsmetaL.g:8414:6: lv_guard_11_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExistUniqueTermAccess().getGuardTermParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_guard_11_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_11_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_12=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getExistUniqueTermAccess().getRightParenthesisKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExistUniqueTerm"


    // $ANTLR start "entryRuleExistTerm"
    // InternalAsmetaL.g:8440:1: entryRuleExistTerm returns [EObject current=null] : iv_ruleExistTerm= ruleExistTerm EOF ;
    public final EObject entryRuleExistTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExistTerm = null;


        try {
            // InternalAsmetaL.g:8440:50: (iv_ruleExistTerm= ruleExistTerm EOF )
            // InternalAsmetaL.g:8441:2: iv_ruleExistTerm= ruleExistTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExistTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExistTerm=ruleExistTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExistTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExistTerm"


    // $ANTLR start "ruleExistTerm"
    // InternalAsmetaL.g:8447:1: ruleExistTerm returns [EObject current=null] : (otherlv_0= '(' otherlv_1= 'exist' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' ) ;
    public final EObject ruleExistTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_variable_2_0 = null;

        EObject lv_ranges_4_0 = null;

        EObject lv_variable_6_0 = null;

        EObject lv_ranges_8_0 = null;

        EObject lv_guard_10_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8453:2: ( (otherlv_0= '(' otherlv_1= 'exist' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' ) )
            // InternalAsmetaL.g:8454:2: (otherlv_0= '(' otherlv_1= 'exist' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' )
            {
            // InternalAsmetaL.g:8454:2: (otherlv_0= '(' otherlv_1= 'exist' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' )
            // InternalAsmetaL.g:8455:3: otherlv_0= '(' otherlv_1= 'exist' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')'
            {
            otherlv_0=(Token)match(input,29,FOLLOW_100); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExistTermAccess().getLeftParenthesisKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,120,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getExistTermAccess().getExistKeyword_1());
              		
            }
            // InternalAsmetaL.g:8463:3: ( (lv_variable_2_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:8464:4: (lv_variable_2_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:8464:4: (lv_variable_2_0= ruleVariableTerm )
            // InternalAsmetaL.g:8465:5: lv_variable_2_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExistTermAccess().getVariableVariableTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_2_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExistTermRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_2_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getExistTermAccess().getInKeyword_3());
              		
            }
            // InternalAsmetaL.g:8486:3: ( (lv_ranges_4_0= ruleTerm ) )
            // InternalAsmetaL.g:8487:4: (lv_ranges_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:8487:4: (lv_ranges_4_0= ruleTerm )
            // InternalAsmetaL.g:8488:5: lv_ranges_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExistTermAccess().getRangesTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_102);
            lv_ranges_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExistTermRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:8505:3: (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )*
            loop139:
            do {
                int alt139=2;
                int LA139_0 = input.LA(1);

                if ( (LA139_0==30) ) {
                    alt139=1;
                }


                switch (alt139) {
            	case 1 :
            	    // InternalAsmetaL.g:8506:4: otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) )
            	    {
            	    otherlv_5=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getExistTermAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:8510:4: ( (lv_variable_6_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:8511:5: (lv_variable_6_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:8511:5: (lv_variable_6_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:8512:6: lv_variable_6_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExistTermAccess().getVariableVariableTermParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_6_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExistTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_6_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_7=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getExistTermAccess().getInKeyword_5_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:8533:4: ( (lv_ranges_8_0= ruleTerm ) )
            	    // InternalAsmetaL.g:8534:5: (lv_ranges_8_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:8534:5: (lv_ranges_8_0= ruleTerm )
            	    // InternalAsmetaL.g:8535:6: lv_ranges_8_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExistTermAccess().getRangesTermParserRuleCall_5_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_ranges_8_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExistTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_8_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop139;
                }
            } while (true);

            // InternalAsmetaL.g:8553:3: (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==122) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalAsmetaL.g:8554:4: otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) )
                    {
                    otherlv_9=(Token)match(input,122,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getExistTermAccess().getWithKeyword_6_0());
                      			
                    }
                    // InternalAsmetaL.g:8558:4: ( (lv_guard_10_0= ruleTerm ) )
                    // InternalAsmetaL.g:8559:5: (lv_guard_10_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:8559:5: (lv_guard_10_0= ruleTerm )
                    // InternalAsmetaL.g:8560:6: lv_guard_10_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExistTermAccess().getGuardTermParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_guard_10_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExistTermRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_10_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getExistTermAccess().getRightParenthesisKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExistTerm"


    // $ANTLR start "entryRuleForallTerm"
    // InternalAsmetaL.g:8586:1: entryRuleForallTerm returns [EObject current=null] : iv_ruleForallTerm= ruleForallTerm EOF ;
    public final EObject entryRuleForallTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForallTerm = null;


        try {
            // InternalAsmetaL.g:8586:51: (iv_ruleForallTerm= ruleForallTerm EOF )
            // InternalAsmetaL.g:8587:2: iv_ruleForallTerm= ruleForallTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForallTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForallTerm=ruleForallTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForallTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForallTerm"


    // $ANTLR start "ruleForallTerm"
    // InternalAsmetaL.g:8593:1: ruleForallTerm returns [EObject current=null] : (otherlv_0= '(' otherlv_1= 'forall' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' ) ;
    public final EObject ruleForallTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_variable_2_0 = null;

        EObject lv_ranges_4_0 = null;

        EObject lv_variable_6_0 = null;

        EObject lv_ranges_8_0 = null;

        EObject lv_guard_10_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8599:2: ( (otherlv_0= '(' otherlv_1= 'forall' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' ) )
            // InternalAsmetaL.g:8600:2: (otherlv_0= '(' otherlv_1= 'forall' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' )
            {
            // InternalAsmetaL.g:8600:2: (otherlv_0= '(' otherlv_1= 'forall' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')' )
            // InternalAsmetaL.g:8601:3: otherlv_0= '(' otherlv_1= 'forall' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= 'in' ( (lv_ranges_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )* (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )? otherlv_11= ')'
            {
            otherlv_0=(Token)match(input,29,FOLLOW_103); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForallTermAccess().getLeftParenthesisKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,123,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getForallTermAccess().getForallKeyword_1());
              		
            }
            // InternalAsmetaL.g:8609:3: ( (lv_variable_2_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:8610:4: (lv_variable_2_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:8610:4: (lv_variable_2_0= ruleVariableTerm )
            // InternalAsmetaL.g:8611:5: lv_variable_2_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForallTermAccess().getVariableVariableTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_2_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForallTermRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_2_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getForallTermAccess().getInKeyword_3());
              		
            }
            // InternalAsmetaL.g:8632:3: ( (lv_ranges_4_0= ruleTerm ) )
            // InternalAsmetaL.g:8633:4: (lv_ranges_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:8633:4: (lv_ranges_4_0= ruleTerm )
            // InternalAsmetaL.g:8634:5: lv_ranges_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForallTermAccess().getRangesTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_102);
            lv_ranges_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForallTermRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:8651:3: (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) ) )*
            loop141:
            do {
                int alt141=2;
                int LA141_0 = input.LA(1);

                if ( (LA141_0==30) ) {
                    alt141=1;
                }


                switch (alt141) {
            	case 1 :
            	    // InternalAsmetaL.g:8652:4: otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= 'in' ( (lv_ranges_8_0= ruleTerm ) )
            	    {
            	    otherlv_5=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getForallTermAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:8656:4: ( (lv_variable_6_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:8657:5: (lv_variable_6_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:8657:5: (lv_variable_6_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:8658:6: lv_variable_6_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForallTermAccess().getVariableVariableTermParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_6_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForallTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_6_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_7=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getForallTermAccess().getInKeyword_5_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:8679:4: ( (lv_ranges_8_0= ruleTerm ) )
            	    // InternalAsmetaL.g:8680:5: (lv_ranges_8_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:8680:5: (lv_ranges_8_0= ruleTerm )
            	    // InternalAsmetaL.g:8681:6: lv_ranges_8_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForallTermAccess().getRangesTermParserRuleCall_5_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_ranges_8_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForallTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_8_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop141;
                }
            } while (true);

            // InternalAsmetaL.g:8699:3: (otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) ) )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==122) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalAsmetaL.g:8700:4: otherlv_9= 'with' ( (lv_guard_10_0= ruleTerm ) )
                    {
                    otherlv_9=(Token)match(input,122,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getForallTermAccess().getWithKeyword_6_0());
                      			
                    }
                    // InternalAsmetaL.g:8704:4: ( (lv_guard_10_0= ruleTerm ) )
                    // InternalAsmetaL.g:8705:5: (lv_guard_10_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:8705:5: (lv_guard_10_0= ruleTerm )
                    // InternalAsmetaL.g:8706:6: lv_guard_10_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForallTermAccess().getGuardTermParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_guard_10_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForallTermRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_10_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getForallTermAccess().getRightParenthesisKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForallTerm"


    // $ANTLR start "entryRuleLetTerm"
    // InternalAsmetaL.g:8732:1: entryRuleLetTerm returns [EObject current=null] : iv_ruleLetTerm= ruleLetTerm EOF ;
    public final EObject entryRuleLetTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetTerm = null;


        try {
            // InternalAsmetaL.g:8732:48: (iv_ruleLetTerm= ruleLetTerm EOF )
            // InternalAsmetaL.g:8733:2: iv_ruleLetTerm= ruleLetTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLetTerm=ruleLetTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetTerm"


    // $ANTLR start "ruleLetTerm"
    // InternalAsmetaL.g:8739:1: ruleLetTerm returns [EObject current=null] : (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_assignmentTerm_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_body_11_0= ruleTerm ) ) otherlv_12= 'endlet' ) ;
    public final EObject ruleLetTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_2_0 = null;

        EObject lv_assignmentTerm_4_0 = null;

        EObject lv_variable_6_0 = null;

        EObject lv_assignmentTerm_8_0 = null;

        EObject lv_body_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8745:2: ( (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_assignmentTerm_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_body_11_0= ruleTerm ) ) otherlv_12= 'endlet' ) )
            // InternalAsmetaL.g:8746:2: (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_assignmentTerm_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_body_11_0= ruleTerm ) ) otherlv_12= 'endlet' )
            {
            // InternalAsmetaL.g:8746:2: (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_assignmentTerm_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_body_11_0= ruleTerm ) ) otherlv_12= 'endlet' )
            // InternalAsmetaL.g:8747:3: otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_assignmentTerm_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_body_11_0= ruleTerm ) ) otherlv_12= 'endlet'
            {
            otherlv_0=(Token)match(input,124,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLetTermAccess().getLetKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,29,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLetTermAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:8755:3: ( (lv_variable_2_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:8756:4: (lv_variable_2_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:8756:4: (lv_variable_2_0= ruleVariableTerm )
            // InternalAsmetaL.g:8757:5: lv_variable_2_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetTermAccess().getVariableVariableTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_variable_2_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetTermRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_2_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,38,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLetTermAccess().getEqualsSignKeyword_3());
              		
            }
            // InternalAsmetaL.g:8778:3: ( (lv_assignmentTerm_4_0= ruleTerm ) )
            // InternalAsmetaL.g:8779:4: (lv_assignmentTerm_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:8779:4: (lv_assignmentTerm_4_0= ruleTerm )
            // InternalAsmetaL.g:8780:5: lv_assignmentTerm_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetTermAccess().getAssignmentTermTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_assignmentTerm_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetTermRule());
              					}
              					add(
              						current,
              						"assignmentTerm",
              						lv_assignmentTerm_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:8797:3: (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) ) )*
            loop143:
            do {
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==30) ) {
                    alt143=1;
                }


                switch (alt143) {
            	case 1 :
            	    // InternalAsmetaL.g:8798:4: otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_assignmentTerm_8_0= ruleTerm ) )
            	    {
            	    otherlv_5=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getLetTermAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:8802:4: ( (lv_variable_6_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:8803:5: (lv_variable_6_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:8803:5: (lv_variable_6_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:8804:6: lv_variable_6_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLetTermAccess().getVariableVariableTermParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_26);
            	    lv_variable_6_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLetTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_6_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_7=(Token)match(input,38,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getLetTermAccess().getEqualsSignKeyword_5_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:8825:4: ( (lv_assignmentTerm_8_0= ruleTerm ) )
            	    // InternalAsmetaL.g:8826:5: (lv_assignmentTerm_8_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:8826:5: (lv_assignmentTerm_8_0= ruleTerm )
            	    // InternalAsmetaL.g:8827:6: lv_assignmentTerm_8_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLetTermAccess().getAssignmentTermTermParserRuleCall_5_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_assignmentTerm_8_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLetTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"assignmentTerm",
            	      							lv_assignmentTerm_8_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);

            otherlv_9=(Token)match(input,31,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getLetTermAccess().getRightParenthesisKeyword_6());
              		
            }
            otherlv_10=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getLetTermAccess().getInKeyword_7());
              		
            }
            // InternalAsmetaL.g:8853:3: ( (lv_body_11_0= ruleTerm ) )
            // InternalAsmetaL.g:8854:4: (lv_body_11_0= ruleTerm )
            {
            // InternalAsmetaL.g:8854:4: (lv_body_11_0= ruleTerm )
            // InternalAsmetaL.g:8855:5: lv_body_11_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetTermAccess().getBodyTermParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_104);
            lv_body_11_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetTermRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_11_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getLetTermAccess().getEndletKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetTerm"


    // $ANTLR start "entryRuleComprehensionTerm"
    // InternalAsmetaL.g:8880:1: entryRuleComprehensionTerm returns [EObject current=null] : iv_ruleComprehensionTerm= ruleComprehensionTerm EOF ;
    public final EObject entryRuleComprehensionTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComprehensionTerm = null;


        try {
            // InternalAsmetaL.g:8880:58: (iv_ruleComprehensionTerm= ruleComprehensionTerm EOF )
            // InternalAsmetaL.g:8881:2: iv_ruleComprehensionTerm= ruleComprehensionTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComprehensionTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComprehensionTerm=ruleComprehensionTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComprehensionTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComprehensionTerm"


    // $ANTLR start "ruleComprehensionTerm"
    // InternalAsmetaL.g:8887:1: ruleComprehensionTerm returns [EObject current=null] : (this_SetCT_0= ruleSetCT | this_MapCT_1= ruleMapCT | this_SequenceCT_2= ruleSequenceCT | this_BagCT_3= ruleBagCT ) ;
    public final EObject ruleComprehensionTerm() throws RecognitionException {
        EObject current = null;

        EObject this_SetCT_0 = null;

        EObject this_MapCT_1 = null;

        EObject this_SequenceCT_2 = null;

        EObject this_BagCT_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8893:2: ( (this_SetCT_0= ruleSetCT | this_MapCT_1= ruleMapCT | this_SequenceCT_2= ruleSequenceCT | this_BagCT_3= ruleBagCT ) )
            // InternalAsmetaL.g:8894:2: (this_SetCT_0= ruleSetCT | this_MapCT_1= ruleMapCT | this_SequenceCT_2= ruleSequenceCT | this_BagCT_3= ruleBagCT )
            {
            // InternalAsmetaL.g:8894:2: (this_SetCT_0= ruleSetCT | this_MapCT_1= ruleMapCT | this_SequenceCT_2= ruleSequenceCT | this_BagCT_3= ruleBagCT )
            int alt144=4;
            switch ( input.LA(1) ) {
            case 71:
                {
                int LA144_1 = input.LA(2);

                if ( (synpred222_InternalAsmetaL()) ) {
                    alt144=1;
                }
                else if ( (synpred223_InternalAsmetaL()) ) {
                    alt144=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 144, 1, input);

                    throw nvae;
                }
                }
                break;
            case 118:
                {
                alt144=3;
                }
                break;
            case 99:
                {
                alt144=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 144, 0, input);

                throw nvae;
            }

            switch (alt144) {
                case 1 :
                    // InternalAsmetaL.g:8895:3: this_SetCT_0= ruleSetCT
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getComprehensionTermAccess().getSetCTParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SetCT_0=ruleSetCT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SetCT_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:8907:3: this_MapCT_1= ruleMapCT
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getComprehensionTermAccess().getMapCTParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MapCT_1=ruleMapCT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MapCT_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:8919:3: this_SequenceCT_2= ruleSequenceCT
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getComprehensionTermAccess().getSequenceCTParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SequenceCT_2=ruleSequenceCT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SequenceCT_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:8931:3: this_BagCT_3= ruleBagCT
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getComprehensionTermAccess().getBagCTParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BagCT_3=ruleBagCT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BagCT_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComprehensionTerm"


    // $ANTLR start "entryRuleSetCT"
    // InternalAsmetaL.g:8946:1: entryRuleSetCT returns [EObject current=null] : iv_ruleSetCT= ruleSetCT EOF ;
    public final EObject entryRuleSetCT() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSetCT = null;


        try {
            // InternalAsmetaL.g:8946:46: (iv_ruleSetCT= ruleSetCT EOF )
            // InternalAsmetaL.g:8947:2: iv_ruleSetCT= ruleSetCT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSetCTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSetCT=ruleSetCT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSetCT; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSetCT"


    // $ANTLR start "ruleSetCT"
    // InternalAsmetaL.g:8953:1: ruleSetCT returns [EObject current=null] : (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' ) ;
    public final EObject ruleSetCT() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_1_0 = null;

        EObject lv_ranges_3_0 = null;

        EObject lv_variable_5_0 = null;

        EObject lv_ranges_7_0 = null;

        EObject lv_guard_9_0 = null;

        EObject lv_term_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:8959:2: ( (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' ) )
            // InternalAsmetaL.g:8960:2: (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' )
            {
            // InternalAsmetaL.g:8960:2: (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' )
            // InternalAsmetaL.g:8961:3: otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}'
            {
            otherlv_0=(Token)match(input,71,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSetCTAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalAsmetaL.g:8965:3: ( (lv_variable_1_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:8966:4: (lv_variable_1_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:8966:4: (lv_variable_1_0= ruleVariableTerm )
            // InternalAsmetaL.g:8967:5: lv_variable_1_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetCTAccess().getVariableVariableTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_1_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSetCTRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSetCTAccess().getInKeyword_2());
              		
            }
            // InternalAsmetaL.g:8988:3: ( (lv_ranges_3_0= ruleTerm ) )
            // InternalAsmetaL.g:8989:4: (lv_ranges_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:8989:4: (lv_ranges_3_0= ruleTerm )
            // InternalAsmetaL.g:8990:5: lv_ranges_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetCTAccess().getRangesTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_105);
            lv_ranges_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSetCTRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:9007:3: (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )*
            loop145:
            do {
                int alt145=2;
                int LA145_0 = input.LA(1);

                if ( (LA145_0==30) ) {
                    alt145=1;
                }


                switch (alt145) {
            	case 1 :
            	    // InternalAsmetaL.g:9008:4: otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getSetCTAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:9012:4: ( (lv_variable_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:9013:5: (lv_variable_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:9013:5: (lv_variable_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:9014:6: lv_variable_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSetCTAccess().getVariableVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSetCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getSetCTAccess().getInKeyword_4_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:9035:4: ( (lv_ranges_7_0= ruleTerm ) )
            	    // InternalAsmetaL.g:9036:5: (lv_ranges_7_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:9036:5: (lv_ranges_7_0= ruleTerm )
            	    // InternalAsmetaL.g:9037:6: lv_ranges_7_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSetCTAccess().getRangesTermParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_ranges_7_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSetCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_7_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);

            // InternalAsmetaL.g:9055:3: (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )?
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==72) ) {
                alt146=1;
            }
            switch (alt146) {
                case 1 :
                    // InternalAsmetaL.g:9056:4: otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) )
                    {
                    otherlv_8=(Token)match(input,72,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSetCTAccess().getVerticalLineKeyword_5_0());
                      			
                    }
                    // InternalAsmetaL.g:9060:4: ( (lv_guard_9_0= ruleTerm ) )
                    // InternalAsmetaL.g:9061:5: (lv_guard_9_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:9061:5: (lv_guard_9_0= ruleTerm )
                    // InternalAsmetaL.g:9062:6: lv_guard_9_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSetCTAccess().getGuardTermParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_guard_9_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSetCTRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_9_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,35,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getSetCTAccess().getColonKeyword_6());
              		
            }
            // InternalAsmetaL.g:9084:3: ( (lv_term_11_0= ruleTerm ) )
            // InternalAsmetaL.g:9085:4: (lv_term_11_0= ruleTerm )
            {
            // InternalAsmetaL.g:9085:4: (lv_term_11_0= ruleTerm )
            // InternalAsmetaL.g:9086:5: lv_term_11_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSetCTAccess().getTermTermParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_91);
            lv_term_11_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSetCTRule());
              					}
              					set(
              						current,
              						"term",
              						lv_term_11_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getSetCTAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSetCT"


    // $ANTLR start "entryRuleMapCT"
    // InternalAsmetaL.g:9111:1: entryRuleMapCT returns [EObject current=null] : iv_ruleMapCT= ruleMapCT EOF ;
    public final EObject entryRuleMapCT() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapCT = null;


        try {
            // InternalAsmetaL.g:9111:46: (iv_ruleMapCT= ruleMapCT EOF )
            // InternalAsmetaL.g:9112:2: iv_ruleMapCT= ruleMapCT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapCTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapCT=ruleMapCT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapCT; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapCT"


    // $ANTLR start "ruleMapCT"
    // InternalAsmetaL.g:9118:1: ruleMapCT returns [EObject current=null] : (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' ) ;
    public final EObject ruleMapCT() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_1_0 = null;

        EObject lv_ranges_3_0 = null;

        EObject lv_variable_5_0 = null;

        EObject lv_ranges_7_0 = null;

        EObject lv_guard_9_0 = null;

        EObject lv_term_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9124:2: ( (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' ) )
            // InternalAsmetaL.g:9125:2: (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' )
            {
            // InternalAsmetaL.g:9125:2: (otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}' )
            // InternalAsmetaL.g:9126:3: otherlv_0= '{' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '}'
            {
            otherlv_0=(Token)match(input,71,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getMapCTAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalAsmetaL.g:9130:3: ( (lv_variable_1_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:9131:4: (lv_variable_1_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:9131:4: (lv_variable_1_0= ruleVariableTerm )
            // InternalAsmetaL.g:9132:5: lv_variable_1_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapCTAccess().getVariableVariableTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_1_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapCTRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getMapCTAccess().getInKeyword_2());
              		
            }
            // InternalAsmetaL.g:9153:3: ( (lv_ranges_3_0= ruleTerm ) )
            // InternalAsmetaL.g:9154:4: (lv_ranges_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:9154:4: (lv_ranges_3_0= ruleTerm )
            // InternalAsmetaL.g:9155:5: lv_ranges_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapCTAccess().getRangesTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_105);
            lv_ranges_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapCTRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:9172:3: (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )*
            loop147:
            do {
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==30) ) {
                    alt147=1;
                }


                switch (alt147) {
            	case 1 :
            	    // InternalAsmetaL.g:9173:4: otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getMapCTAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:9177:4: ( (lv_variable_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:9178:5: (lv_variable_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:9178:5: (lv_variable_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:9179:6: lv_variable_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMapCTAccess().getVariableVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMapCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getMapCTAccess().getInKeyword_4_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:9200:4: ( (lv_ranges_7_0= ruleTerm ) )
            	    // InternalAsmetaL.g:9201:5: (lv_ranges_7_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:9201:5: (lv_ranges_7_0= ruleTerm )
            	    // InternalAsmetaL.g:9202:6: lv_ranges_7_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMapCTAccess().getRangesTermParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_ranges_7_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMapCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_7_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);

            // InternalAsmetaL.g:9220:3: (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==72) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalAsmetaL.g:9221:4: otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) )
                    {
                    otherlv_8=(Token)match(input,72,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getMapCTAccess().getVerticalLineKeyword_5_0());
                      			
                    }
                    // InternalAsmetaL.g:9225:4: ( (lv_guard_9_0= ruleTerm ) )
                    // InternalAsmetaL.g:9226:5: (lv_guard_9_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:9226:5: (lv_guard_9_0= ruleTerm )
                    // InternalAsmetaL.g:9227:6: lv_guard_9_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapCTAccess().getGuardTermParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_guard_9_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapCTRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_9_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,35,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getMapCTAccess().getColonKeyword_6());
              		
            }
            // InternalAsmetaL.g:9249:3: ( (lv_term_11_0= ruleTerm ) )
            // InternalAsmetaL.g:9250:4: (lv_term_11_0= ruleTerm )
            {
            // InternalAsmetaL.g:9250:4: (lv_term_11_0= ruleTerm )
            // InternalAsmetaL.g:9251:5: lv_term_11_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapCTAccess().getTermTermParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_91);
            lv_term_11_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapCTRule());
              					}
              					set(
              						current,
              						"term",
              						lv_term_11_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getMapCTAccess().getRightCurlyBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapCT"


    // $ANTLR start "entryRuleSequenceCT"
    // InternalAsmetaL.g:9276:1: entryRuleSequenceCT returns [EObject current=null] : iv_ruleSequenceCT= ruleSequenceCT EOF ;
    public final EObject entryRuleSequenceCT() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSequenceCT = null;


        try {
            // InternalAsmetaL.g:9276:51: (iv_ruleSequenceCT= ruleSequenceCT EOF )
            // InternalAsmetaL.g:9277:2: iv_ruleSequenceCT= ruleSequenceCT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceCTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceCT=ruleSequenceCT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceCT; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceCT"


    // $ANTLR start "ruleSequenceCT"
    // InternalAsmetaL.g:9283:1: ruleSequenceCT returns [EObject current=null] : (otherlv_0= '[' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= ']' ) ;
    public final EObject ruleSequenceCT() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_1_0 = null;

        EObject lv_ranges_3_0 = null;

        EObject lv_variable_5_0 = null;

        EObject lv_ranges_7_0 = null;

        EObject lv_guard_9_0 = null;

        EObject lv_term_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9289:2: ( (otherlv_0= '[' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= ']' ) )
            // InternalAsmetaL.g:9290:2: (otherlv_0= '[' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= ']' )
            {
            // InternalAsmetaL.g:9290:2: (otherlv_0= '[' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= ']' )
            // InternalAsmetaL.g:9291:3: otherlv_0= '[' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= ']'
            {
            otherlv_0=(Token)match(input,118,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSequenceCTAccess().getLeftSquareBracketKeyword_0());
              		
            }
            // InternalAsmetaL.g:9295:3: ( (lv_variable_1_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:9296:4: (lv_variable_1_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:9296:4: (lv_variable_1_0= ruleVariableTerm )
            // InternalAsmetaL.g:9297:5: lv_variable_1_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSequenceCTAccess().getVariableVariableTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_1_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSequenceCTRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSequenceCTAccess().getInKeyword_2());
              		
            }
            // InternalAsmetaL.g:9318:3: ( (lv_ranges_3_0= ruleTerm ) )
            // InternalAsmetaL.g:9319:4: (lv_ranges_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:9319:4: (lv_ranges_3_0= ruleTerm )
            // InternalAsmetaL.g:9320:5: lv_ranges_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSequenceCTAccess().getRangesTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_105);
            lv_ranges_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSequenceCTRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:9337:3: (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )*
            loop149:
            do {
                int alt149=2;
                int LA149_0 = input.LA(1);

                if ( (LA149_0==30) ) {
                    alt149=1;
                }


                switch (alt149) {
            	case 1 :
            	    // InternalAsmetaL.g:9338:4: otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getSequenceCTAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:9342:4: ( (lv_variable_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:9343:5: (lv_variable_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:9343:5: (lv_variable_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:9344:6: lv_variable_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSequenceCTAccess().getVariableVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSequenceCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getSequenceCTAccess().getInKeyword_4_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:9365:4: ( (lv_ranges_7_0= ruleTerm ) )
            	    // InternalAsmetaL.g:9366:5: (lv_ranges_7_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:9366:5: (lv_ranges_7_0= ruleTerm )
            	    // InternalAsmetaL.g:9367:6: lv_ranges_7_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSequenceCTAccess().getRangesTermParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_ranges_7_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSequenceCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_7_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop149;
                }
            } while (true);

            // InternalAsmetaL.g:9385:3: (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==72) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalAsmetaL.g:9386:4: otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) )
                    {
                    otherlv_8=(Token)match(input,72,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSequenceCTAccess().getVerticalLineKeyword_5_0());
                      			
                    }
                    // InternalAsmetaL.g:9390:4: ( (lv_guard_9_0= ruleTerm ) )
                    // InternalAsmetaL.g:9391:5: (lv_guard_9_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:9391:5: (lv_guard_9_0= ruleTerm )
                    // InternalAsmetaL.g:9392:6: lv_guard_9_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSequenceCTAccess().getGuardTermParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_guard_9_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSequenceCTRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_9_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,35,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getSequenceCTAccess().getColonKeyword_6());
              		
            }
            // InternalAsmetaL.g:9414:3: ( (lv_term_11_0= ruleTerm ) )
            // InternalAsmetaL.g:9415:4: (lv_term_11_0= ruleTerm )
            {
            // InternalAsmetaL.g:9415:4: (lv_term_11_0= ruleTerm )
            // InternalAsmetaL.g:9416:5: lv_term_11_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSequenceCTAccess().getTermTermParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_89);
            lv_term_11_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSequenceCTRule());
              					}
              					set(
              						current,
              						"term",
              						lv_term_11_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getSequenceCTAccess().getRightSquareBracketKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSequenceCT"


    // $ANTLR start "entryRuleBagCT"
    // InternalAsmetaL.g:9441:1: entryRuleBagCT returns [EObject current=null] : iv_ruleBagCT= ruleBagCT EOF ;
    public final EObject entryRuleBagCT() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBagCT = null;


        try {
            // InternalAsmetaL.g:9441:46: (iv_ruleBagCT= ruleBagCT EOF )
            // InternalAsmetaL.g:9442:2: iv_ruleBagCT= ruleBagCT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBagCTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBagCT=ruleBagCT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBagCT; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBagCT"


    // $ANTLR start "ruleBagCT"
    // InternalAsmetaL.g:9448:1: ruleBagCT returns [EObject current=null] : (otherlv_0= '<' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '>' ) ;
    public final EObject ruleBagCT() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_1_0 = null;

        EObject lv_ranges_3_0 = null;

        EObject lv_variable_5_0 = null;

        EObject lv_ranges_7_0 = null;

        EObject lv_guard_9_0 = null;

        EObject lv_term_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9454:2: ( (otherlv_0= '<' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '>' ) )
            // InternalAsmetaL.g:9455:2: (otherlv_0= '<' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '>' )
            {
            // InternalAsmetaL.g:9455:2: (otherlv_0= '<' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '>' )
            // InternalAsmetaL.g:9456:3: otherlv_0= '<' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= ':' ( (lv_term_11_0= ruleTerm ) ) otherlv_12= '>'
            {
            otherlv_0=(Token)match(input,99,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBagCTAccess().getLessThanSignKeyword_0());
              		
            }
            // InternalAsmetaL.g:9460:3: ( (lv_variable_1_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:9461:4: (lv_variable_1_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:9461:4: (lv_variable_1_0= ruleVariableTerm )
            // InternalAsmetaL.g:9462:5: lv_variable_1_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBagCTAccess().getVariableVariableTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_1_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBagCTRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getBagCTAccess().getInKeyword_2());
              		
            }
            // InternalAsmetaL.g:9483:3: ( (lv_ranges_3_0= ruleTerm ) )
            // InternalAsmetaL.g:9484:4: (lv_ranges_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:9484:4: (lv_ranges_3_0= ruleTerm )
            // InternalAsmetaL.g:9485:5: lv_ranges_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBagCTAccess().getRangesTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_105);
            lv_ranges_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBagCTRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:9502:3: (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )*
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==30) ) {
                    alt151=1;
                }


                switch (alt151) {
            	case 1 :
            	    // InternalAsmetaL.g:9503:4: otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getBagCTAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:9507:4: ( (lv_variable_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:9508:5: (lv_variable_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:9508:5: (lv_variable_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:9509:6: lv_variable_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBagCTAccess().getVariableVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBagCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getBagCTAccess().getInKeyword_4_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:9530:4: ( (lv_ranges_7_0= ruleTerm ) )
            	    // InternalAsmetaL.g:9531:5: (lv_ranges_7_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:9531:5: (lv_ranges_7_0= ruleTerm )
            	    // InternalAsmetaL.g:9532:6: lv_ranges_7_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBagCTAccess().getRangesTermParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_ranges_7_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBagCTRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_7_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);

            // InternalAsmetaL.g:9550:3: (otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) ) )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==72) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalAsmetaL.g:9551:4: otherlv_8= '|' ( (lv_guard_9_0= ruleTerm ) )
                    {
                    otherlv_8=(Token)match(input,72,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getBagCTAccess().getVerticalLineKeyword_5_0());
                      			
                    }
                    // InternalAsmetaL.g:9555:4: ( (lv_guard_9_0= ruleTerm ) )
                    // InternalAsmetaL.g:9556:5: (lv_guard_9_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:9556:5: (lv_guard_9_0= ruleTerm )
                    // InternalAsmetaL.g:9557:6: lv_guard_9_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBagCTAccess().getGuardTermParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_guard_9_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBagCTRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_9_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,35,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getBagCTAccess().getColonKeyword_6());
              		
            }
            // InternalAsmetaL.g:9579:3: ( (lv_term_11_0= ruleTerm ) )
            // InternalAsmetaL.g:9580:4: (lv_term_11_0= ruleTerm )
            {
            // InternalAsmetaL.g:9580:4: (lv_term_11_0= ruleTerm )
            // InternalAsmetaL.g:9581:5: lv_term_11_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBagCTAccess().getTermTermParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_99);
            lv_term_11_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBagCTRule());
              					}
              					set(
              						current,
              						"term",
              						lv_term_11_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,98,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getBagCTAccess().getGreaterThanSignKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBagCT"


    // $ANTLR start "entryRuleRuleAsTerm"
    // InternalAsmetaL.g:9606:1: entryRuleRuleAsTerm returns [EObject current=null] : iv_ruleRuleAsTerm= ruleRuleAsTerm EOF ;
    public final EObject entryRuleRuleAsTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRuleAsTerm = null;


        try {
            // InternalAsmetaL.g:9606:51: (iv_ruleRuleAsTerm= ruleRuleAsTerm EOF )
            // InternalAsmetaL.g:9607:2: iv_ruleRuleAsTerm= ruleRuleAsTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRuleAsTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRuleAsTerm=ruleRuleAsTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRuleAsTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRuleAsTerm"


    // $ANTLR start "ruleRuleAsTerm"
    // InternalAsmetaL.g:9613:1: ruleRuleAsTerm returns [EObject current=null] : (otherlv_0= '<<' ( (lv_name_1_0= ruleextendedName ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? otherlv_7= '>>' ) ;
    public final EObject ruleRuleAsTerm() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_domains_3_0 = null;

        EObject lv_domains_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9619:2: ( (otherlv_0= '<<' ( (lv_name_1_0= ruleextendedName ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? otherlv_7= '>>' ) )
            // InternalAsmetaL.g:9620:2: (otherlv_0= '<<' ( (lv_name_1_0= ruleextendedName ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? otherlv_7= '>>' )
            {
            // InternalAsmetaL.g:9620:2: (otherlv_0= '<<' ( (lv_name_1_0= ruleextendedName ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? otherlv_7= '>>' )
            // InternalAsmetaL.g:9621:3: otherlv_0= '<<' ( (lv_name_1_0= ruleextendedName ) ) (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )? otherlv_7= '>>'
            {
            otherlv_0=(Token)match(input,126,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRuleAsTermAccess().getLessThanSignLessThanSignKeyword_0());
              		
            }
            // InternalAsmetaL.g:9625:3: ( (lv_name_1_0= ruleextendedName ) )
            // InternalAsmetaL.g:9626:4: (lv_name_1_0= ruleextendedName )
            {
            // InternalAsmetaL.g:9626:4: (lv_name_1_0= ruleextendedName )
            // InternalAsmetaL.g:9627:5: lv_name_1_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRuleAsTermAccess().getNameExtendedNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_106);
            lv_name_1_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRuleAsTermRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:9644:3: (otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')' )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==29) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalAsmetaL.g:9645:4: otherlv_2= '(' ( (lv_domains_3_0= rulegetDomainByID ) ) (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,29,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRuleAsTermAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalAsmetaL.g:9649:4: ( (lv_domains_3_0= rulegetDomainByID ) )
                    // InternalAsmetaL.g:9650:5: (lv_domains_3_0= rulegetDomainByID )
                    {
                    // InternalAsmetaL.g:9650:5: (lv_domains_3_0= rulegetDomainByID )
                    // InternalAsmetaL.g:9651:6: lv_domains_3_0= rulegetDomainByID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRuleAsTermAccess().getDomainsGetDomainByIDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_domains_3_0=rulegetDomainByID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRuleAsTermRule());
                      						}
                      						add(
                      							current,
                      							"domains",
                      							lv_domains_3_0,
                      							"org.asmeta.xt.AsmetaL.getDomainByID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:9668:4: (otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) ) )*
                    loop153:
                    do {
                        int alt153=2;
                        int LA153_0 = input.LA(1);

                        if ( (LA153_0==30) ) {
                            alt153=1;
                        }


                        switch (alt153) {
                    	case 1 :
                    	    // InternalAsmetaL.g:9669:5: otherlv_4= ',' ( (lv_domains_5_0= rulegetDomainByID ) )
                    	    {
                    	    otherlv_4=(Token)match(input,30,FOLLOW_32); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getRuleAsTermAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:9673:5: ( (lv_domains_5_0= rulegetDomainByID ) )
                    	    // InternalAsmetaL.g:9674:6: (lv_domains_5_0= rulegetDomainByID )
                    	    {
                    	    // InternalAsmetaL.g:9674:6: (lv_domains_5_0= rulegetDomainByID )
                    	    // InternalAsmetaL.g:9675:7: lv_domains_5_0= rulegetDomainByID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getRuleAsTermAccess().getDomainsGetDomainByIDParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_domains_5_0=rulegetDomainByID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getRuleAsTermRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domains",
                    	      								lv_domains_5_0,
                    	      								"org.asmeta.xt.AsmetaL.getDomainByID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop153;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,31,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getRuleAsTermAccess().getRightParenthesisKeyword_2_3());
                      			
                    }

                    }
                    break;

            }

            otherlv_7=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getRuleAsTermAccess().getGreaterThanSignGreaterThanSignKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRuleAsTerm"


    // $ANTLR start "entryRuleRule"
    // InternalAsmetaL.g:9706:1: entryRuleRule returns [EObject current=null] : iv_ruleRule= ruleRule EOF ;
    public final EObject entryRuleRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRule = null;


        try {
            // InternalAsmetaL.g:9706:45: (iv_ruleRule= ruleRule EOF )
            // InternalAsmetaL.g:9707:2: iv_ruleRule= ruleRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRule=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRule"


    // $ANTLR start "ruleRule"
    // InternalAsmetaL.g:9713:1: ruleRule returns [EObject current=null] : (this_UpdateRule_0= ruleUpdateRule | this_TurboReturnRule_1= ruleTurboReturnRule | this_BasicRule_2= ruleBasicRule | this_TermAsRule_3= ruleTermAsRule | this_TurboRule_4= ruleTurboRule | this_DerivedRule_5= ruleDerivedRule ) ;
    public final EObject ruleRule() throws RecognitionException {
        EObject current = null;

        EObject this_UpdateRule_0 = null;

        EObject this_TurboReturnRule_1 = null;

        EObject this_BasicRule_2 = null;

        EObject this_TermAsRule_3 = null;

        EObject this_TurboRule_4 = null;

        EObject this_DerivedRule_5 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9719:2: ( (this_UpdateRule_0= ruleUpdateRule | this_TurboReturnRule_1= ruleTurboReturnRule | this_BasicRule_2= ruleBasicRule | this_TermAsRule_3= ruleTermAsRule | this_TurboRule_4= ruleTurboRule | this_DerivedRule_5= ruleDerivedRule ) )
            // InternalAsmetaL.g:9720:2: (this_UpdateRule_0= ruleUpdateRule | this_TurboReturnRule_1= ruleTurboReturnRule | this_BasicRule_2= ruleBasicRule | this_TermAsRule_3= ruleTermAsRule | this_TurboRule_4= ruleTurboRule | this_DerivedRule_5= ruleDerivedRule )
            {
            // InternalAsmetaL.g:9720:2: (this_UpdateRule_0= ruleUpdateRule | this_TurboReturnRule_1= ruleTurboReturnRule | this_BasicRule_2= ruleBasicRule | this_TermAsRule_3= ruleTermAsRule | this_TurboRule_4= ruleTurboRule | this_DerivedRule_5= ruleDerivedRule )
            int alt155=6;
            alt155 = dfa155.predict(input);
            switch (alt155) {
                case 1 :
                    // InternalAsmetaL.g:9721:3: this_UpdateRule_0= ruleUpdateRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleAccess().getUpdateRuleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UpdateRule_0=ruleUpdateRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UpdateRule_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:9733:3: this_TurboReturnRule_1= ruleTurboReturnRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleAccess().getTurboReturnRuleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TurboReturnRule_1=ruleTurboReturnRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TurboReturnRule_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:9745:3: this_BasicRule_2= ruleBasicRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleAccess().getBasicRuleParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BasicRule_2=ruleBasicRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BasicRule_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:9757:3: this_TermAsRule_3= ruleTermAsRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleAccess().getTermAsRuleParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TermAsRule_3=ruleTermAsRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TermAsRule_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:9769:3: this_TurboRule_4= ruleTurboRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleAccess().getTurboRuleParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TurboRule_4=ruleTurboRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TurboRule_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:9781:3: this_DerivedRule_5= ruleDerivedRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getRuleAccess().getDerivedRuleParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DerivedRule_5=ruleDerivedRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DerivedRule_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRule"


    // $ANTLR start "entryRuleTermAsRule"
    // InternalAsmetaL.g:9796:1: entryRuleTermAsRule returns [EObject current=null] : iv_ruleTermAsRule= ruleTermAsRule EOF ;
    public final EObject entryRuleTermAsRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTermAsRule = null;


        try {
            // InternalAsmetaL.g:9796:51: (iv_ruleTermAsRule= ruleTermAsRule EOF )
            // InternalAsmetaL.g:9797:2: iv_ruleTermAsRule= ruleTermAsRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermAsRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTermAsRule=ruleTermAsRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTermAsRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTermAsRule"


    // $ANTLR start "ruleTermAsRule"
    // InternalAsmetaL.g:9803:1: ruleTermAsRule returns [EObject current=null] : ( ( ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) ) ) (otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']' )? ) ;
    public final EObject ruleTermAsRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_term_0_1 = null;

        EObject lv_term_0_2 = null;

        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9809:2: ( ( ( ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) ) ) (otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']' )? ) )
            // InternalAsmetaL.g:9810:2: ( ( ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) ) ) (otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']' )? )
            {
            // InternalAsmetaL.g:9810:2: ( ( ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) ) ) (otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']' )? )
            // InternalAsmetaL.g:9811:3: ( ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) ) ) (otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']' )?
            {
            // InternalAsmetaL.g:9811:3: ( ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) ) )
            // InternalAsmetaL.g:9812:4: ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) )
            {
            // InternalAsmetaL.g:9812:4: ( (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm ) )
            // InternalAsmetaL.g:9813:5: (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm )
            {
            // InternalAsmetaL.g:9813:5: (lv_term_0_1= ruleFunctionTerm | lv_term_0_2= ruleVariableTerm )
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( ((LA156_0>=RULE_ID && LA156_0<=RULE_ENUM_ID)||(LA156_0>=88 && LA156_0<=94)) ) {
                alt156=1;
            }
            else if ( (LA156_0==144) ) {
                alt156=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;
            }
            switch (alt156) {
                case 1 :
                    // InternalAsmetaL.g:9814:6: lv_term_0_1= ruleFunctionTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTermAsRuleAccess().getTermFunctionTermParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_108);
                    lv_term_0_1=ruleFunctionTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTermAsRuleRule());
                      						}
                      						set(
                      							current,
                      							"term",
                      							lv_term_0_1,
                      							"org.asmeta.xt.AsmetaL.FunctionTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:9830:6: lv_term_0_2= ruleVariableTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTermAsRuleAccess().getTermVariableTermParserRuleCall_0_0_1());
                      					
                    }
                    pushFollow(FOLLOW_108);
                    lv_term_0_2=ruleVariableTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTermAsRuleRule());
                      						}
                      						set(
                      							current,
                      							"term",
                      							lv_term_0_2,
                      							"org.asmeta.xt.AsmetaL.VariableTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalAsmetaL.g:9848:3: (otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']' )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==118) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalAsmetaL.g:9849:4: otherlv_1= '[' ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* otherlv_5= ']'
                    {
                    otherlv_1=(Token)match(input,118,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getTermAsRuleAccess().getLeftSquareBracketKeyword_1_0());
                      			
                    }
                    // InternalAsmetaL.g:9853:4: ( (lv_parameters_2_0= ruleTerm ) )
                    // InternalAsmetaL.g:9854:5: (lv_parameters_2_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:9854:5: (lv_parameters_2_0= ruleTerm )
                    // InternalAsmetaL.g:9855:6: lv_parameters_2_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTermAsRuleAccess().getParametersTermParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_87);
                    lv_parameters_2_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTermAsRuleRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_2_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:9872:4: (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )*
                    loop157:
                    do {
                        int alt157=2;
                        int LA157_0 = input.LA(1);

                        if ( (LA157_0==30) ) {
                            alt157=1;
                        }


                        switch (alt157) {
                    	case 1 :
                    	    // InternalAsmetaL.g:9873:5: otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) )
                    	    {
                    	    otherlv_3=(Token)match(input,30,FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getTermAsRuleAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:9877:5: ( (lv_parameters_4_0= ruleTerm ) )
                    	    // InternalAsmetaL.g:9878:6: (lv_parameters_4_0= ruleTerm )
                    	    {
                    	    // InternalAsmetaL.g:9878:6: (lv_parameters_4_0= ruleTerm )
                    	    // InternalAsmetaL.g:9879:7: lv_parameters_4_0= ruleTerm
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTermAsRuleAccess().getParametersTermParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_87);
                    	    lv_parameters_4_0=ruleTerm();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTermAsRuleRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_4_0,
                    	      								"org.asmeta.xt.AsmetaL.Term");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop157;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTermAsRuleAccess().getRightSquareBracketKeyword_1_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTermAsRule"


    // $ANTLR start "entryRuleBasicRule"
    // InternalAsmetaL.g:9906:1: entryRuleBasicRule returns [EObject current=null] : iv_ruleBasicRule= ruleBasicRule EOF ;
    public final EObject entryRuleBasicRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasicRule = null;


        try {
            // InternalAsmetaL.g:9906:50: (iv_ruleBasicRule= ruleBasicRule EOF )
            // InternalAsmetaL.g:9907:2: iv_ruleBasicRule= ruleBasicRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicRule=ruleBasicRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicRule"


    // $ANTLR start "ruleBasicRule"
    // InternalAsmetaL.g:9913:1: ruleBasicRule returns [EObject current=null] : (this_SkipRule_0= ruleSkipRule | this_MacroCallRule_1= ruleMacroCallRule | this_BlockRule_2= ruleBlockRule | this_ConditionalRule_3= ruleConditionalRule | this_ChooseRule_4= ruleChooseRule | this_ForallRule_5= ruleForallRule | this_LetRule_6= ruleLetRule | this_ExtendRule_7= ruleExtendRule ) ;
    public final EObject ruleBasicRule() throws RecognitionException {
        EObject current = null;

        EObject this_SkipRule_0 = null;

        EObject this_MacroCallRule_1 = null;

        EObject this_BlockRule_2 = null;

        EObject this_ConditionalRule_3 = null;

        EObject this_ChooseRule_4 = null;

        EObject this_ForallRule_5 = null;

        EObject this_LetRule_6 = null;

        EObject this_ExtendRule_7 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:9919:2: ( (this_SkipRule_0= ruleSkipRule | this_MacroCallRule_1= ruleMacroCallRule | this_BlockRule_2= ruleBlockRule | this_ConditionalRule_3= ruleConditionalRule | this_ChooseRule_4= ruleChooseRule | this_ForallRule_5= ruleForallRule | this_LetRule_6= ruleLetRule | this_ExtendRule_7= ruleExtendRule ) )
            // InternalAsmetaL.g:9920:2: (this_SkipRule_0= ruleSkipRule | this_MacroCallRule_1= ruleMacroCallRule | this_BlockRule_2= ruleBlockRule | this_ConditionalRule_3= ruleConditionalRule | this_ChooseRule_4= ruleChooseRule | this_ForallRule_5= ruleForallRule | this_LetRule_6= ruleLetRule | this_ExtendRule_7= ruleExtendRule )
            {
            // InternalAsmetaL.g:9920:2: (this_SkipRule_0= ruleSkipRule | this_MacroCallRule_1= ruleMacroCallRule | this_BlockRule_2= ruleBlockRule | this_ConditionalRule_3= ruleConditionalRule | this_ChooseRule_4= ruleChooseRule | this_ForallRule_5= ruleForallRule | this_LetRule_6= ruleLetRule | this_ExtendRule_7= ruleExtendRule )
            int alt159=8;
            switch ( input.LA(1) ) {
            case 128:
                {
                alt159=1;
                }
                break;
            case RULE_ID:
            case RULE_RULE_ID:
            case RULE_ENUM_ID:
                {
                alt159=2;
                }
                break;
            case 130:
                {
                alt159=3;
                }
                break;
            case 110:
                {
                alt159=4;
                }
                break;
            case 132:
                {
                alt159=5;
                }
                break;
            case 123:
                {
                alt159=6;
                }
                break;
            case 124:
                {
                alt159=7;
                }
                break;
            case 135:
                {
                alt159=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 159, 0, input);

                throw nvae;
            }

            switch (alt159) {
                case 1 :
                    // InternalAsmetaL.g:9921:3: this_SkipRule_0= ruleSkipRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getSkipRuleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SkipRule_0=ruleSkipRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SkipRule_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:9933:3: this_MacroCallRule_1= ruleMacroCallRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getMacroCallRuleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_MacroCallRule_1=ruleMacroCallRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MacroCallRule_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:9945:3: this_BlockRule_2= ruleBlockRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getBlockRuleParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BlockRule_2=ruleBlockRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BlockRule_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:9957:3: this_ConditionalRule_3= ruleConditionalRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getConditionalRuleParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ConditionalRule_3=ruleConditionalRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ConditionalRule_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalAsmetaL.g:9969:3: this_ChooseRule_4= ruleChooseRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getChooseRuleParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ChooseRule_4=ruleChooseRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ChooseRule_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalAsmetaL.g:9981:3: this_ForallRule_5= ruleForallRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getForallRuleParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ForallRule_5=ruleForallRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ForallRule_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalAsmetaL.g:9993:3: this_LetRule_6= ruleLetRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getLetRuleParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_LetRule_6=ruleLetRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LetRule_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalAsmetaL.g:10005:3: this_ExtendRule_7= ruleExtendRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBasicRuleAccess().getExtendRuleParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExtendRule_7=ruleExtendRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExtendRule_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicRule"


    // $ANTLR start "entryRuleSkipRule"
    // InternalAsmetaL.g:10020:1: entryRuleSkipRule returns [EObject current=null] : iv_ruleSkipRule= ruleSkipRule EOF ;
    public final EObject entryRuleSkipRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSkipRule = null;


        try {
            // InternalAsmetaL.g:10020:49: (iv_ruleSkipRule= ruleSkipRule EOF )
            // InternalAsmetaL.g:10021:2: iv_ruleSkipRule= ruleSkipRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSkipRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSkipRule=ruleSkipRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSkipRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSkipRule"


    // $ANTLR start "ruleSkipRule"
    // InternalAsmetaL.g:10027:1: ruleSkipRule returns [EObject current=null] : ( () otherlv_1= 'skip' ) ;
    public final EObject ruleSkipRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:10033:2: ( ( () otherlv_1= 'skip' ) )
            // InternalAsmetaL.g:10034:2: ( () otherlv_1= 'skip' )
            {
            // InternalAsmetaL.g:10034:2: ( () otherlv_1= 'skip' )
            // InternalAsmetaL.g:10035:3: () otherlv_1= 'skip'
            {
            // InternalAsmetaL.g:10035:3: ()
            // InternalAsmetaL.g:10036:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSkipRuleAccess().getSkipRuleAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSkipRuleAccess().getSkipKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSkipRule"


    // $ANTLR start "entryRuleUpdateRule"
    // InternalAsmetaL.g:10053:1: entryRuleUpdateRule returns [EObject current=null] : iv_ruleUpdateRule= ruleUpdateRule EOF ;
    public final EObject entryRuleUpdateRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpdateRule = null;


        try {
            // InternalAsmetaL.g:10053:51: (iv_ruleUpdateRule= ruleUpdateRule EOF )
            // InternalAsmetaL.g:10054:2: iv_ruleUpdateRule= ruleUpdateRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpdateRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpdateRule=ruleUpdateRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpdateRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpdateRule"


    // $ANTLR start "ruleUpdateRule"
    // InternalAsmetaL.g:10060:1: ruleUpdateRule returns [EObject current=null] : ( ( ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= ':=' ( (lv_updatingTerm_2_0= ruleTerm ) ) ) ;
    public final EObject ruleUpdateRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_location_0_1 = null;

        EObject lv_location_0_2 = null;

        EObject lv_updatingTerm_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10066:2: ( ( ( ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= ':=' ( (lv_updatingTerm_2_0= ruleTerm ) ) ) )
            // InternalAsmetaL.g:10067:2: ( ( ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= ':=' ( (lv_updatingTerm_2_0= ruleTerm ) ) )
            {
            // InternalAsmetaL.g:10067:2: ( ( ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= ':=' ( (lv_updatingTerm_2_0= ruleTerm ) ) )
            // InternalAsmetaL.g:10068:3: ( ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= ':=' ( (lv_updatingTerm_2_0= ruleTerm ) )
            {
            // InternalAsmetaL.g:10068:3: ( ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) ) )
            // InternalAsmetaL.g:10069:4: ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) )
            {
            // InternalAsmetaL.g:10069:4: ( (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm ) )
            // InternalAsmetaL.g:10070:5: (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm )
            {
            // InternalAsmetaL.g:10070:5: (lv_location_0_1= ruleLocationTerm | lv_location_0_2= ruleVariableTerm )
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( ((LA160_0>=RULE_ID && LA160_0<=RULE_ENUM_ID)||(LA160_0>=88 && LA160_0<=94)) ) {
                alt160=1;
            }
            else if ( (LA160_0==144) ) {
                alt160=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 160, 0, input);

                throw nvae;
            }
            switch (alt160) {
                case 1 :
                    // InternalAsmetaL.g:10071:6: lv_location_0_1= ruleLocationTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateRuleAccess().getLocationLocationTermParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_109);
                    lv_location_0_1=ruleLocationTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateRuleRule());
                      						}
                      						set(
                      							current,
                      							"location",
                      							lv_location_0_1,
                      							"org.asmeta.xt.AsmetaL.LocationTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:10087:6: lv_location_0_2= ruleVariableTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateRuleAccess().getLocationVariableTermParserRuleCall_0_0_1());
                      					
                    }
                    pushFollow(FOLLOW_109);
                    lv_location_0_2=ruleVariableTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateRuleRule());
                      						}
                      						set(
                      							current,
                      							"location",
                      							lv_location_0_2,
                      							"org.asmeta.xt.AsmetaL.VariableTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_1=(Token)match(input,129,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getUpdateRuleAccess().getColonEqualsSignKeyword_1());
              		
            }
            // InternalAsmetaL.g:10109:3: ( (lv_updatingTerm_2_0= ruleTerm ) )
            // InternalAsmetaL.g:10110:4: (lv_updatingTerm_2_0= ruleTerm )
            {
            // InternalAsmetaL.g:10110:4: (lv_updatingTerm_2_0= ruleTerm )
            // InternalAsmetaL.g:10111:5: lv_updatingTerm_2_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getUpdateRuleAccess().getUpdatingTermTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_updatingTerm_2_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getUpdateRuleRule());
              					}
              					set(
              						current,
              						"updatingTerm",
              						lv_updatingTerm_2_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpdateRule"


    // $ANTLR start "entryRuleBlockRule"
    // InternalAsmetaL.g:10132:1: entryRuleBlockRule returns [EObject current=null] : iv_ruleBlockRule= ruleBlockRule EOF ;
    public final EObject entryRuleBlockRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlockRule = null;


        try {
            // InternalAsmetaL.g:10132:50: (iv_ruleBlockRule= ruleBlockRule EOF )
            // InternalAsmetaL.g:10133:2: iv_ruleBlockRule= ruleBlockRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlockRule=ruleBlockRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlockRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlockRule"


    // $ANTLR start "ruleBlockRule"
    // InternalAsmetaL.g:10139:1: ruleBlockRule returns [EObject current=null] : (otherlv_0= 'par' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endpar' ) ;
    public final EObject ruleBlockRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_rules_1_0 = null;

        EObject lv_rules_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10145:2: ( (otherlv_0= 'par' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endpar' ) )
            // InternalAsmetaL.g:10146:2: (otherlv_0= 'par' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endpar' )
            {
            // InternalAsmetaL.g:10146:2: (otherlv_0= 'par' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endpar' )
            // InternalAsmetaL.g:10147:3: otherlv_0= 'par' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endpar'
            {
            otherlv_0=(Token)match(input,130,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getBlockRuleAccess().getParKeyword_0());
              		
            }
            // InternalAsmetaL.g:10151:3: ( (lv_rules_1_0= ruleRule ) )
            // InternalAsmetaL.g:10152:4: (lv_rules_1_0= ruleRule )
            {
            // InternalAsmetaL.g:10152:4: (lv_rules_1_0= ruleRule )
            // InternalAsmetaL.g:10153:5: lv_rules_1_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getBlockRuleAccess().getRulesRuleParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_44);
            lv_rules_1_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getBlockRuleRule());
              					}
              					add(
              						current,
              						"rules",
              						lv_rules_1_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10170:3: ( (lv_rules_2_0= ruleRule ) )+
            int cnt161=0;
            loop161:
            do {
                int alt161=2;
                int LA161_0 = input.LA(1);

                if ( ((LA161_0>=RULE_ID && LA161_0<=RULE_ENUM_ID)||LA161_0==56||LA161_0==83||(LA161_0>=88 && LA161_0<=95)||LA161_0==110||LA161_0==114||(LA161_0>=123 && LA161_0<=124)||LA161_0==128||LA161_0==130||LA161_0==132||(LA161_0>=135 && LA161_0<=136)||LA161_0==138||LA161_0==141||LA161_0==144) ) {
                    alt161=1;
                }


                switch (alt161) {
            	case 1 :
            	    // InternalAsmetaL.g:10171:4: (lv_rules_2_0= ruleRule )
            	    {
            	    // InternalAsmetaL.g:10171:4: (lv_rules_2_0= ruleRule )
            	    // InternalAsmetaL.g:10172:5: lv_rules_2_0= ruleRule
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getBlockRuleAccess().getRulesRuleParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_110);
            	    lv_rules_2_0=ruleRule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getBlockRuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"rules",
            	      						lv_rules_2_0,
            	      						"org.asmeta.xt.AsmetaL.Rule");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt161 >= 1 ) break loop161;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(161, input);
                        throw eee;
                }
                cnt161++;
            } while (true);

            otherlv_3=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getBlockRuleAccess().getEndparKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlockRule"


    // $ANTLR start "entryRuleConditionalRule"
    // InternalAsmetaL.g:10197:1: entryRuleConditionalRule returns [EObject current=null] : iv_ruleConditionalRule= ruleConditionalRule EOF ;
    public final EObject entryRuleConditionalRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditionalRule = null;


        try {
            // InternalAsmetaL.g:10197:56: (iv_ruleConditionalRule= ruleConditionalRule EOF )
            // InternalAsmetaL.g:10198:2: iv_ruleConditionalRule= ruleConditionalRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConditionalRule=ruleConditionalRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditionalRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditionalRule"


    // $ANTLR start "ruleConditionalRule"
    // InternalAsmetaL.g:10204:1: ruleConditionalRule returns [EObject current=null] : (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenRule_3_0= ruleRule ) ) (otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) ) )? otherlv_6= 'endif' ) ;
    public final EObject ruleConditionalRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_guard_1_0 = null;

        EObject lv_thenRule_3_0 = null;

        EObject lv_elseRule_5_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10210:2: ( (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenRule_3_0= ruleRule ) ) (otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) ) )? otherlv_6= 'endif' ) )
            // InternalAsmetaL.g:10211:2: (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenRule_3_0= ruleRule ) ) (otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) ) )? otherlv_6= 'endif' )
            {
            // InternalAsmetaL.g:10211:2: (otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenRule_3_0= ruleRule ) ) (otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) ) )? otherlv_6= 'endif' )
            // InternalAsmetaL.g:10212:3: otherlv_0= 'if' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'then' ( (lv_thenRule_3_0= ruleRule ) ) (otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) ) )? otherlv_6= 'endif'
            {
            otherlv_0=(Token)match(input,110,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getConditionalRuleAccess().getIfKeyword_0());
              		
            }
            // InternalAsmetaL.g:10216:3: ( (lv_guard_1_0= ruleTerm ) )
            // InternalAsmetaL.g:10217:4: (lv_guard_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:10217:4: (lv_guard_1_0= ruleTerm )
            // InternalAsmetaL.g:10218:5: lv_guard_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionalRuleAccess().getGuardTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_79);
            lv_guard_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionalRuleRule());
              					}
              					set(
              						current,
              						"guard",
              						lv_guard_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,111,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getConditionalRuleAccess().getThenKeyword_2());
              		
            }
            // InternalAsmetaL.g:10239:3: ( (lv_thenRule_3_0= ruleRule ) )
            // InternalAsmetaL.g:10240:4: (lv_thenRule_3_0= ruleRule )
            {
            // InternalAsmetaL.g:10240:4: (lv_thenRule_3_0= ruleRule )
            // InternalAsmetaL.g:10241:5: lv_thenRule_3_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionalRuleAccess().getThenRuleRuleParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_80);
            lv_thenRule_3_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionalRuleRule());
              					}
              					set(
              						current,
              						"thenRule",
              						lv_thenRule_3_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10258:3: (otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) ) )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==112) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalAsmetaL.g:10259:4: otherlv_4= 'else' ( (lv_elseRule_5_0= ruleRule ) )
                    {
                    otherlv_4=(Token)match(input,112,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getConditionalRuleAccess().getElseKeyword_4_0());
                      			
                    }
                    // InternalAsmetaL.g:10263:4: ( (lv_elseRule_5_0= ruleRule ) )
                    // InternalAsmetaL.g:10264:5: (lv_elseRule_5_0= ruleRule )
                    {
                    // InternalAsmetaL.g:10264:5: (lv_elseRule_5_0= ruleRule )
                    // InternalAsmetaL.g:10265:6: lv_elseRule_5_0= ruleRule
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalRuleAccess().getElseRuleRuleParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_81);
                    lv_elseRule_5_0=ruleRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalRuleRule());
                      						}
                      						set(
                      							current,
                      							"elseRule",
                      							lv_elseRule_5_0,
                      							"org.asmeta.xt.AsmetaL.Rule");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getConditionalRuleAccess().getEndifKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalRule"


    // $ANTLR start "entryRuleChooseRule"
    // InternalAsmetaL.g:10291:1: entryRuleChooseRule returns [EObject current=null] : iv_ruleChooseRule= ruleChooseRule EOF ;
    public final EObject entryRuleChooseRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChooseRule = null;


        try {
            // InternalAsmetaL.g:10291:51: (iv_ruleChooseRule= ruleChooseRule EOF )
            // InternalAsmetaL.g:10292:2: iv_ruleChooseRule= ruleChooseRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChooseRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChooseRule=ruleChooseRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChooseRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChooseRule"


    // $ANTLR start "ruleChooseRule"
    // InternalAsmetaL.g:10298:1: ruleChooseRule returns [EObject current=null] : (otherlv_0= 'choose' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )? ) ;
    public final EObject ruleChooseRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_1_0 = null;

        EObject lv_ranges_3_0 = null;

        EObject lv_variable_5_0 = null;

        EObject lv_ranges_7_0 = null;

        EObject lv_guard_9_0 = null;

        EObject lv_doRule_11_0 = null;

        EObject lv_ifnone_13_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10304:2: ( (otherlv_0= 'choose' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )? ) )
            // InternalAsmetaL.g:10305:2: (otherlv_0= 'choose' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )? )
            {
            // InternalAsmetaL.g:10305:2: (otherlv_0= 'choose' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )? )
            // InternalAsmetaL.g:10306:3: otherlv_0= 'choose' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )?
            {
            otherlv_0=(Token)match(input,132,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getChooseRuleAccess().getChooseKeyword_0());
              		
            }
            // InternalAsmetaL.g:10310:3: ( (lv_variable_1_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:10311:4: (lv_variable_1_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:10311:4: (lv_variable_1_0= ruleVariableTerm )
            // InternalAsmetaL.g:10312:5: lv_variable_1_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChooseRuleAccess().getVariableVariableTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_1_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChooseRuleRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getChooseRuleAccess().getInKeyword_2());
              		
            }
            // InternalAsmetaL.g:10333:3: ( (lv_ranges_3_0= ruleTerm ) )
            // InternalAsmetaL.g:10334:4: (lv_ranges_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:10334:4: (lv_ranges_3_0= ruleTerm )
            // InternalAsmetaL.g:10335:5: lv_ranges_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChooseRuleAccess().getRangesTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_111);
            lv_ranges_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChooseRuleRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10352:3: (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )*
            loop163:
            do {
                int alt163=2;
                int LA163_0 = input.LA(1);

                if ( (LA163_0==30) ) {
                    alt163=1;
                }


                switch (alt163) {
            	case 1 :
            	    // InternalAsmetaL.g:10353:4: otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getChooseRuleAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:10357:4: ( (lv_variable_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:10358:5: (lv_variable_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:10358:5: (lv_variable_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:10359:6: lv_variable_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getChooseRuleAccess().getVariableVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getChooseRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getChooseRuleAccess().getInKeyword_4_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:10380:4: ( (lv_ranges_7_0= ruleTerm ) )
            	    // InternalAsmetaL.g:10381:5: (lv_ranges_7_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:10381:5: (lv_ranges_7_0= ruleTerm )
            	    // InternalAsmetaL.g:10382:6: lv_ranges_7_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getChooseRuleAccess().getRangesTermParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_111);
            	    lv_ranges_7_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getChooseRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_7_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop163;
                }
            } while (true);

            // InternalAsmetaL.g:10400:3: (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==122) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // InternalAsmetaL.g:10401:4: otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) )
                    {
                    otherlv_8=(Token)match(input,122,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getChooseRuleAccess().getWithKeyword_5_0());
                      			
                    }
                    // InternalAsmetaL.g:10405:4: ( (lv_guard_9_0= ruleTerm ) )
                    // InternalAsmetaL.g:10406:5: (lv_guard_9_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:10406:5: (lv_guard_9_0= ruleTerm )
                    // InternalAsmetaL.g:10407:6: lv_guard_9_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChooseRuleAccess().getGuardTermParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_112);
                    lv_guard_9_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChooseRuleRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_9_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,133,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getChooseRuleAccess().getDoKeyword_6());
              		
            }
            // InternalAsmetaL.g:10429:3: ( (lv_doRule_11_0= ruleRule ) )
            // InternalAsmetaL.g:10430:4: (lv_doRule_11_0= ruleRule )
            {
            // InternalAsmetaL.g:10430:4: (lv_doRule_11_0= ruleRule )
            // InternalAsmetaL.g:10431:5: lv_doRule_11_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getChooseRuleAccess().getDoRuleRuleParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_113);
            lv_doRule_11_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getChooseRuleRule());
              					}
              					set(
              						current,
              						"doRule",
              						lv_doRule_11_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10448:3: (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==134) ) {
                int LA165_1 = input.LA(2);

                if ( (synpred255_InternalAsmetaL()) ) {
                    alt165=1;
                }
            }
            switch (alt165) {
                case 1 :
                    // InternalAsmetaL.g:10449:4: otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) )
                    {
                    otherlv_12=(Token)match(input,134,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getChooseRuleAccess().getIfnoneKeyword_8_0());
                      			
                    }
                    // InternalAsmetaL.g:10453:4: ( (lv_ifnone_13_0= ruleRule ) )
                    // InternalAsmetaL.g:10454:5: (lv_ifnone_13_0= ruleRule )
                    {
                    // InternalAsmetaL.g:10454:5: (lv_ifnone_13_0= ruleRule )
                    // InternalAsmetaL.g:10455:6: lv_ifnone_13_0= ruleRule
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getChooseRuleAccess().getIfnoneRuleParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_ifnone_13_0=ruleRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getChooseRuleRule());
                      						}
                      						set(
                      							current,
                      							"ifnone",
                      							lv_ifnone_13_0,
                      							"org.asmeta.xt.AsmetaL.Rule");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChooseRule"


    // $ANTLR start "entryRuleForallRule"
    // InternalAsmetaL.g:10477:1: entryRuleForallRule returns [EObject current=null] : iv_ruleForallRule= ruleForallRule EOF ;
    public final EObject entryRuleForallRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleForallRule = null;


        try {
            // InternalAsmetaL.g:10477:51: (iv_ruleForallRule= ruleForallRule EOF )
            // InternalAsmetaL.g:10478:2: iv_ruleForallRule= ruleForallRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForallRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForallRule=ruleForallRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForallRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleForallRule"


    // $ANTLR start "ruleForallRule"
    // InternalAsmetaL.g:10484:1: ruleForallRule returns [EObject current=null] : (otherlv_0= 'forall' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) ) ;
    public final EObject ruleForallRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_variable_1_0 = null;

        EObject lv_ranges_3_0 = null;

        EObject lv_variable_5_0 = null;

        EObject lv_ranges_7_0 = null;

        EObject lv_guard_9_0 = null;

        EObject lv_doRule_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10490:2: ( (otherlv_0= 'forall' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:10491:2: (otherlv_0= 'forall' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:10491:2: (otherlv_0= 'forall' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) ) )
            // InternalAsmetaL.g:10492:3: otherlv_0= 'forall' ( (lv_variable_1_0= ruleVariableTerm ) ) otherlv_2= 'in' ( (lv_ranges_3_0= ruleTerm ) ) (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )* (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )? otherlv_10= 'do' ( (lv_doRule_11_0= ruleRule ) )
            {
            otherlv_0=(Token)match(input,123,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getForallRuleAccess().getForallKeyword_0());
              		
            }
            // InternalAsmetaL.g:10496:3: ( (lv_variable_1_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:10497:4: (lv_variable_1_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:10497:4: (lv_variable_1_0= ruleVariableTerm )
            // InternalAsmetaL.g:10498:5: lv_variable_1_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForallRuleAccess().getVariableVariableTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_variable_1_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForallRuleRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_1_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getForallRuleAccess().getInKeyword_2());
              		
            }
            // InternalAsmetaL.g:10519:3: ( (lv_ranges_3_0= ruleTerm ) )
            // InternalAsmetaL.g:10520:4: (lv_ranges_3_0= ruleTerm )
            {
            // InternalAsmetaL.g:10520:4: (lv_ranges_3_0= ruleTerm )
            // InternalAsmetaL.g:10521:5: lv_ranges_3_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForallRuleAccess().getRangesTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_111);
            lv_ranges_3_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForallRuleRule());
              					}
              					add(
              						current,
              						"ranges",
              						lv_ranges_3_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10538:3: (otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) ) )*
            loop166:
            do {
                int alt166=2;
                int LA166_0 = input.LA(1);

                if ( (LA166_0==30) ) {
                    alt166=1;
                }


                switch (alt166) {
            	case 1 :
            	    // InternalAsmetaL.g:10539:4: otherlv_4= ',' ( (lv_variable_5_0= ruleVariableTerm ) ) otherlv_6= 'in' ( (lv_ranges_7_0= ruleTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getForallRuleAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:10543:4: ( (lv_variable_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:10544:5: (lv_variable_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:10544:5: (lv_variable_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:10545:6: lv_variable_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForallRuleAccess().getVariableVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_variable_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForallRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_6=(Token)match(input,40,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getForallRuleAccess().getInKeyword_4_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:10566:4: ( (lv_ranges_7_0= ruleTerm ) )
            	    // InternalAsmetaL.g:10567:5: (lv_ranges_7_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:10567:5: (lv_ranges_7_0= ruleTerm )
            	    // InternalAsmetaL.g:10568:6: lv_ranges_7_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getForallRuleAccess().getRangesTermParserRuleCall_4_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_111);
            	    lv_ranges_7_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getForallRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"ranges",
            	      							lv_ranges_7_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop166;
                }
            } while (true);

            // InternalAsmetaL.g:10586:3: (otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) ) )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==122) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // InternalAsmetaL.g:10587:4: otherlv_8= 'with' ( (lv_guard_9_0= ruleTerm ) )
                    {
                    otherlv_8=(Token)match(input,122,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getForallRuleAccess().getWithKeyword_5_0());
                      			
                    }
                    // InternalAsmetaL.g:10591:4: ( (lv_guard_9_0= ruleTerm ) )
                    // InternalAsmetaL.g:10592:5: (lv_guard_9_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:10592:5: (lv_guard_9_0= ruleTerm )
                    // InternalAsmetaL.g:10593:6: lv_guard_9_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getForallRuleAccess().getGuardTermParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_112);
                    lv_guard_9_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getForallRuleRule());
                      						}
                      						set(
                      							current,
                      							"guard",
                      							lv_guard_9_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,133,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getForallRuleAccess().getDoKeyword_6());
              		
            }
            // InternalAsmetaL.g:10615:3: ( (lv_doRule_11_0= ruleRule ) )
            // InternalAsmetaL.g:10616:4: (lv_doRule_11_0= ruleRule )
            {
            // InternalAsmetaL.g:10616:4: (lv_doRule_11_0= ruleRule )
            // InternalAsmetaL.g:10617:5: lv_doRule_11_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getForallRuleAccess().getDoRuleRuleParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_doRule_11_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getForallRuleRule());
              					}
              					set(
              						current,
              						"doRule",
              						lv_doRule_11_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleForallRule"


    // $ANTLR start "entryRuleLetRule"
    // InternalAsmetaL.g:10638:1: entryRuleLetRule returns [EObject current=null] : iv_ruleLetRule= ruleLetRule EOF ;
    public final EObject entryRuleLetRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLetRule = null;


        try {
            // InternalAsmetaL.g:10638:48: (iv_ruleLetRule= ruleLetRule EOF )
            // InternalAsmetaL.g:10639:2: iv_ruleLetRule= ruleLetRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLetRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLetRule=ruleLetRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLetRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLetRule"


    // $ANTLR start "ruleLetRule"
    // InternalAsmetaL.g:10645:1: ruleLetRule returns [EObject current=null] : (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_initExpression_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_inRule_11_0= ruleRule ) ) otherlv_12= 'endlet' ) ;
    public final EObject ruleLetRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_variable_2_0 = null;

        EObject lv_initExpression_4_0 = null;

        EObject lv_variable_6_0 = null;

        EObject lv_initExpression_8_0 = null;

        EObject lv_inRule_11_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10651:2: ( (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_initExpression_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_inRule_11_0= ruleRule ) ) otherlv_12= 'endlet' ) )
            // InternalAsmetaL.g:10652:2: (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_initExpression_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_inRule_11_0= ruleRule ) ) otherlv_12= 'endlet' )
            {
            // InternalAsmetaL.g:10652:2: (otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_initExpression_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_inRule_11_0= ruleRule ) ) otherlv_12= 'endlet' )
            // InternalAsmetaL.g:10653:3: otherlv_0= 'let' otherlv_1= '(' ( (lv_variable_2_0= ruleVariableTerm ) ) otherlv_3= '=' ( (lv_initExpression_4_0= ruleTerm ) ) (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) ) )* otherlv_9= ')' otherlv_10= 'in' ( (lv_inRule_11_0= ruleRule ) ) otherlv_12= 'endlet'
            {
            otherlv_0=(Token)match(input,124,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLetRuleAccess().getLetKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,29,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLetRuleAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:10661:3: ( (lv_variable_2_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:10662:4: (lv_variable_2_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:10662:4: (lv_variable_2_0= ruleVariableTerm )
            // InternalAsmetaL.g:10663:5: lv_variable_2_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetRuleAccess().getVariableVariableTermParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_variable_2_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetRuleRule());
              					}
              					add(
              						current,
              						"variable",
              						lv_variable_2_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,38,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLetRuleAccess().getEqualsSignKeyword_3());
              		
            }
            // InternalAsmetaL.g:10684:3: ( (lv_initExpression_4_0= ruleTerm ) )
            // InternalAsmetaL.g:10685:4: (lv_initExpression_4_0= ruleTerm )
            {
            // InternalAsmetaL.g:10685:4: (lv_initExpression_4_0= ruleTerm )
            // InternalAsmetaL.g:10686:5: lv_initExpression_4_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetRuleAccess().getInitExpressionTermParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_initExpression_4_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetRuleRule());
              					}
              					add(
              						current,
              						"initExpression",
              						lv_initExpression_4_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10703:3: (otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) ) )*
            loop168:
            do {
                int alt168=2;
                int LA168_0 = input.LA(1);

                if ( (LA168_0==30) ) {
                    alt168=1;
                }


                switch (alt168) {
            	case 1 :
            	    // InternalAsmetaL.g:10704:4: otherlv_5= ',' ( (lv_variable_6_0= ruleVariableTerm ) ) otherlv_7= '=' ( (lv_initExpression_8_0= ruleTerm ) )
            	    {
            	    otherlv_5=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getLetRuleAccess().getCommaKeyword_5_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:10708:4: ( (lv_variable_6_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:10709:5: (lv_variable_6_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:10709:5: (lv_variable_6_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:10710:6: lv_variable_6_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLetRuleAccess().getVariableVariableTermParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_26);
            	    lv_variable_6_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLetRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"variable",
            	      							lv_variable_6_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_7=(Token)match(input,38,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getLetRuleAccess().getEqualsSignKeyword_5_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:10731:4: ( (lv_initExpression_8_0= ruleTerm ) )
            	    // InternalAsmetaL.g:10732:5: (lv_initExpression_8_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:10732:5: (lv_initExpression_8_0= ruleTerm )
            	    // InternalAsmetaL.g:10733:6: lv_initExpression_8_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getLetRuleAccess().getInitExpressionTermParserRuleCall_5_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_initExpression_8_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getLetRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"initExpression",
            	      							lv_initExpression_8_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop168;
                }
            } while (true);

            otherlv_9=(Token)match(input,31,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getLetRuleAccess().getRightParenthesisKeyword_6());
              		
            }
            otherlv_10=(Token)match(input,40,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getLetRuleAccess().getInKeyword_7());
              		
            }
            // InternalAsmetaL.g:10759:3: ( (lv_inRule_11_0= ruleRule ) )
            // InternalAsmetaL.g:10760:4: (lv_inRule_11_0= ruleRule )
            {
            // InternalAsmetaL.g:10760:4: (lv_inRule_11_0= ruleRule )
            // InternalAsmetaL.g:10761:5: lv_inRule_11_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLetRuleAccess().getInRuleRuleParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_104);
            lv_inRule_11_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLetRuleRule());
              					}
              					set(
              						current,
              						"inRule",
              						lv_inRule_11_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_12=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getLetRuleAccess().getEndletKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLetRule"


    // $ANTLR start "entryRuleMacroCallRule"
    // InternalAsmetaL.g:10786:1: entryRuleMacroCallRule returns [EObject current=null] : iv_ruleMacroCallRule= ruleMacroCallRule EOF ;
    public final EObject entryRuleMacroCallRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMacroCallRule = null;


        try {
            // InternalAsmetaL.g:10786:54: (iv_ruleMacroCallRule= ruleMacroCallRule EOF )
            // InternalAsmetaL.g:10787:2: iv_ruleMacroCallRule= ruleMacroCallRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMacroCallRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMacroCallRule=ruleMacroCallRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMacroCallRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMacroCallRule"


    // $ANTLR start "ruleMacroCallRule"
    // InternalAsmetaL.g:10793:1: ruleMacroCallRule returns [EObject current=null] : ( ( (lv_name_0_0= ruleextendedName ) ) otherlv_1= '[' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ']' ) ;
    public final EObject ruleMacroCallRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10799:2: ( ( ( (lv_name_0_0= ruleextendedName ) ) otherlv_1= '[' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ']' ) )
            // InternalAsmetaL.g:10800:2: ( ( (lv_name_0_0= ruleextendedName ) ) otherlv_1= '[' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ']' )
            {
            // InternalAsmetaL.g:10800:2: ( ( (lv_name_0_0= ruleextendedName ) ) otherlv_1= '[' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ']' )
            // InternalAsmetaL.g:10801:3: ( (lv_name_0_0= ruleextendedName ) ) otherlv_1= '[' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ']'
            {
            // InternalAsmetaL.g:10801:3: ( (lv_name_0_0= ruleextendedName ) )
            // InternalAsmetaL.g:10802:4: (lv_name_0_0= ruleextendedName )
            {
            // InternalAsmetaL.g:10802:4: (lv_name_0_0= ruleextendedName )
            // InternalAsmetaL.g:10803:5: lv_name_0_0= ruleextendedName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMacroCallRuleAccess().getNameExtendedNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_114);
            lv_name_0_0=ruleextendedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMacroCallRuleRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.asmeta.xt.AsmetaL.extendedName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,118,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMacroCallRuleAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalAsmetaL.g:10824:3: ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( ((LA170_0>=RULE_ID && LA170_0<=RULE_REAL_NUMBER)||LA170_0==29||LA170_0==42||LA170_0==56||(LA170_0>=60 && LA170_0<=69)||LA170_0==71||(LA170_0>=74 && LA170_0<=79)||(LA170_0>=88 && LA170_0<=94)||LA170_0==99||(LA170_0>=102 && LA170_0<=103)||(LA170_0>=107 && LA170_0<=110)||LA170_0==114||LA170_0==118||LA170_0==124||LA170_0==126||LA170_0==144) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // InternalAsmetaL.g:10825:4: ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )*
                    {
                    // InternalAsmetaL.g:10825:4: ( (lv_parameters_2_0= ruleTerm ) )
                    // InternalAsmetaL.g:10826:5: (lv_parameters_2_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:10826:5: (lv_parameters_2_0= ruleTerm )
                    // InternalAsmetaL.g:10827:6: lv_parameters_2_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMacroCallRuleAccess().getParametersTermParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_87);
                    lv_parameters_2_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMacroCallRuleRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_2_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:10844:4: (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )*
                    loop169:
                    do {
                        int alt169=2;
                        int LA169_0 = input.LA(1);

                        if ( (LA169_0==30) ) {
                            alt169=1;
                        }


                        switch (alt169) {
                    	case 1 :
                    	    // InternalAsmetaL.g:10845:5: otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) )
                    	    {
                    	    otherlv_3=(Token)match(input,30,FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getMacroCallRuleAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:10849:5: ( (lv_parameters_4_0= ruleTerm ) )
                    	    // InternalAsmetaL.g:10850:6: (lv_parameters_4_0= ruleTerm )
                    	    {
                    	    // InternalAsmetaL.g:10850:6: (lv_parameters_4_0= ruleTerm )
                    	    // InternalAsmetaL.g:10851:7: lv_parameters_4_0= ruleTerm
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMacroCallRuleAccess().getParametersTermParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_87);
                    	    lv_parameters_4_0=ruleTerm();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMacroCallRuleRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_4_0,
                    	      								"org.asmeta.xt.AsmetaL.Term");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop169;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMacroCallRuleAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMacroCallRule"


    // $ANTLR start "entryRuleExtendRule"
    // InternalAsmetaL.g:10878:1: entryRuleExtendRule returns [EObject current=null] : iv_ruleExtendRule= ruleExtendRule EOF ;
    public final EObject entryRuleExtendRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExtendRule = null;


        try {
            // InternalAsmetaL.g:10878:51: (iv_ruleExtendRule= ruleExtendRule EOF )
            // InternalAsmetaL.g:10879:2: iv_ruleExtendRule= ruleExtendRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExtendRule=ruleExtendRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendRule"


    // $ANTLR start "ruleExtendRule"
    // InternalAsmetaL.g:10885:1: ruleExtendRule returns [EObject current=null] : (otherlv_0= 'extend' ( (lv_extendedDomain_1_0= rulegetDomainByID ) ) otherlv_2= 'with' ( (lv_boundVar_3_0= ruleVariableTerm ) ) (otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) ) )* otherlv_6= 'do' ( (lv_doRule_7_0= ruleRule ) ) ) ;
    public final EObject ruleExtendRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_extendedDomain_1_0 = null;

        EObject lv_boundVar_3_0 = null;

        EObject lv_boundVar_5_0 = null;

        EObject lv_doRule_7_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:10891:2: ( (otherlv_0= 'extend' ( (lv_extendedDomain_1_0= rulegetDomainByID ) ) otherlv_2= 'with' ( (lv_boundVar_3_0= ruleVariableTerm ) ) (otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) ) )* otherlv_6= 'do' ( (lv_doRule_7_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:10892:2: (otherlv_0= 'extend' ( (lv_extendedDomain_1_0= rulegetDomainByID ) ) otherlv_2= 'with' ( (lv_boundVar_3_0= ruleVariableTerm ) ) (otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) ) )* otherlv_6= 'do' ( (lv_doRule_7_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:10892:2: (otherlv_0= 'extend' ( (lv_extendedDomain_1_0= rulegetDomainByID ) ) otherlv_2= 'with' ( (lv_boundVar_3_0= ruleVariableTerm ) ) (otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) ) )* otherlv_6= 'do' ( (lv_doRule_7_0= ruleRule ) ) )
            // InternalAsmetaL.g:10893:3: otherlv_0= 'extend' ( (lv_extendedDomain_1_0= rulegetDomainByID ) ) otherlv_2= 'with' ( (lv_boundVar_3_0= ruleVariableTerm ) ) (otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) ) )* otherlv_6= 'do' ( (lv_doRule_7_0= ruleRule ) )
            {
            otherlv_0=(Token)match(input,135,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExtendRuleAccess().getExtendKeyword_0());
              		
            }
            // InternalAsmetaL.g:10897:3: ( (lv_extendedDomain_1_0= rulegetDomainByID ) )
            // InternalAsmetaL.g:10898:4: (lv_extendedDomain_1_0= rulegetDomainByID )
            {
            // InternalAsmetaL.g:10898:4: (lv_extendedDomain_1_0= rulegetDomainByID )
            // InternalAsmetaL.g:10899:5: lv_extendedDomain_1_0= rulegetDomainByID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExtendRuleAccess().getExtendedDomainGetDomainByIDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_115);
            lv_extendedDomain_1_0=rulegetDomainByID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExtendRuleRule());
              					}
              					set(
              						current,
              						"extendedDomain",
              						lv_extendedDomain_1_0,
              						"org.asmeta.xt.AsmetaL.getDomainByID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,122,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getExtendRuleAccess().getWithKeyword_2());
              		
            }
            // InternalAsmetaL.g:10920:3: ( (lv_boundVar_3_0= ruleVariableTerm ) )
            // InternalAsmetaL.g:10921:4: (lv_boundVar_3_0= ruleVariableTerm )
            {
            // InternalAsmetaL.g:10921:4: (lv_boundVar_3_0= ruleVariableTerm )
            // InternalAsmetaL.g:10922:5: lv_boundVar_3_0= ruleVariableTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExtendRuleAccess().getBoundVarVariableTermParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_116);
            lv_boundVar_3_0=ruleVariableTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExtendRuleRule());
              					}
              					add(
              						current,
              						"boundVar",
              						lv_boundVar_3_0,
              						"org.asmeta.xt.AsmetaL.VariableTerm");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:10939:3: (otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) ) )*
            loop171:
            do {
                int alt171=2;
                int LA171_0 = input.LA(1);

                if ( (LA171_0==30) ) {
                    alt171=1;
                }


                switch (alt171) {
            	case 1 :
            	    // InternalAsmetaL.g:10940:4: otherlv_4= ',' ( (lv_boundVar_5_0= ruleVariableTerm ) )
            	    {
            	    otherlv_4=(Token)match(input,30,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getExtendRuleAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:10944:4: ( (lv_boundVar_5_0= ruleVariableTerm ) )
            	    // InternalAsmetaL.g:10945:5: (lv_boundVar_5_0= ruleVariableTerm )
            	    {
            	    // InternalAsmetaL.g:10945:5: (lv_boundVar_5_0= ruleVariableTerm )
            	    // InternalAsmetaL.g:10946:6: lv_boundVar_5_0= ruleVariableTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExtendRuleAccess().getBoundVarVariableTermParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_116);
            	    lv_boundVar_5_0=ruleVariableTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExtendRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"boundVar",
            	      							lv_boundVar_5_0,
            	      							"org.asmeta.xt.AsmetaL.VariableTerm");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop171;
                }
            } while (true);

            otherlv_6=(Token)match(input,133,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getExtendRuleAccess().getDoKeyword_5());
              		
            }
            // InternalAsmetaL.g:10968:3: ( (lv_doRule_7_0= ruleRule ) )
            // InternalAsmetaL.g:10969:4: (lv_doRule_7_0= ruleRule )
            {
            // InternalAsmetaL.g:10969:4: (lv_doRule_7_0= ruleRule )
            // InternalAsmetaL.g:10970:5: lv_doRule_7_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExtendRuleAccess().getDoRuleRuleParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_doRule_7_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExtendRuleRule());
              					}
              					set(
              						current,
              						"doRule",
              						lv_doRule_7_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendRule"


    // $ANTLR start "entryRuleTurboRule"
    // InternalAsmetaL.g:10991:1: entryRuleTurboRule returns [EObject current=null] : iv_ruleTurboRule= ruleTurboRule EOF ;
    public final EObject entryRuleTurboRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTurboRule = null;


        try {
            // InternalAsmetaL.g:10991:50: (iv_ruleTurboRule= ruleTurboRule EOF )
            // InternalAsmetaL.g:10992:2: iv_ruleTurboRule= ruleTurboRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTurboRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTurboRule=ruleTurboRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTurboRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTurboRule"


    // $ANTLR start "ruleTurboRule"
    // InternalAsmetaL.g:10998:1: ruleTurboRule returns [EObject current=null] : (this_SeqRule_0= ruleSeqRule | this_IterateRule_1= ruleIterateRule | this_TurboCallRule_2= ruleTurboCallRule | this_TurboLocalStateRule_3= ruleTurboLocalStateRule ) ;
    public final EObject ruleTurboRule() throws RecognitionException {
        EObject current = null;

        EObject this_SeqRule_0 = null;

        EObject this_IterateRule_1 = null;

        EObject this_TurboCallRule_2 = null;

        EObject this_TurboLocalStateRule_3 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11004:2: ( (this_SeqRule_0= ruleSeqRule | this_IterateRule_1= ruleIterateRule | this_TurboCallRule_2= ruleTurboCallRule | this_TurboLocalStateRule_3= ruleTurboLocalStateRule ) )
            // InternalAsmetaL.g:11005:2: (this_SeqRule_0= ruleSeqRule | this_IterateRule_1= ruleIterateRule | this_TurboCallRule_2= ruleTurboCallRule | this_TurboLocalStateRule_3= ruleTurboLocalStateRule )
            {
            // InternalAsmetaL.g:11005:2: (this_SeqRule_0= ruleSeqRule | this_IterateRule_1= ruleIterateRule | this_TurboCallRule_2= ruleTurboCallRule | this_TurboLocalStateRule_3= ruleTurboLocalStateRule )
            int alt172=4;
            switch ( input.LA(1) ) {
            case 136:
                {
                alt172=1;
                }
                break;
            case 138:
                {
                alt172=2;
                }
                break;
            case RULE_RULE_ID:
                {
                alt172=3;
                }
                break;
            case 56:
            case 83:
                {
                alt172=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;
            }

            switch (alt172) {
                case 1 :
                    // InternalAsmetaL.g:11006:3: this_SeqRule_0= ruleSeqRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTurboRuleAccess().getSeqRuleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SeqRule_0=ruleSeqRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SeqRule_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:11018:3: this_IterateRule_1= ruleIterateRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTurboRuleAccess().getIterateRuleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IterateRule_1=ruleIterateRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IterateRule_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:11030:3: this_TurboCallRule_2= ruleTurboCallRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTurboRuleAccess().getTurboCallRuleParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TurboCallRule_2=ruleTurboCallRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TurboCallRule_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:11042:3: this_TurboLocalStateRule_3= ruleTurboLocalStateRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTurboRuleAccess().getTurboLocalStateRuleParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TurboLocalStateRule_3=ruleTurboLocalStateRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TurboLocalStateRule_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTurboRule"


    // $ANTLR start "entryRuleSeqRule"
    // InternalAsmetaL.g:11057:1: entryRuleSeqRule returns [EObject current=null] : iv_ruleSeqRule= ruleSeqRule EOF ;
    public final EObject entryRuleSeqRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSeqRule = null;


        try {
            // InternalAsmetaL.g:11057:48: (iv_ruleSeqRule= ruleSeqRule EOF )
            // InternalAsmetaL.g:11058:2: iv_ruleSeqRule= ruleSeqRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSeqRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSeqRule=ruleSeqRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSeqRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSeqRule"


    // $ANTLR start "ruleSeqRule"
    // InternalAsmetaL.g:11064:1: ruleSeqRule returns [EObject current=null] : (otherlv_0= 'seq' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endseq' ) ;
    public final EObject ruleSeqRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject lv_rules_1_0 = null;

        EObject lv_rules_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11070:2: ( (otherlv_0= 'seq' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endseq' ) )
            // InternalAsmetaL.g:11071:2: (otherlv_0= 'seq' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endseq' )
            {
            // InternalAsmetaL.g:11071:2: (otherlv_0= 'seq' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endseq' )
            // InternalAsmetaL.g:11072:3: otherlv_0= 'seq' ( (lv_rules_1_0= ruleRule ) ) ( (lv_rules_2_0= ruleRule ) )+ otherlv_3= 'endseq'
            {
            otherlv_0=(Token)match(input,136,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSeqRuleAccess().getSeqKeyword_0());
              		
            }
            // InternalAsmetaL.g:11076:3: ( (lv_rules_1_0= ruleRule ) )
            // InternalAsmetaL.g:11077:4: (lv_rules_1_0= ruleRule )
            {
            // InternalAsmetaL.g:11077:4: (lv_rules_1_0= ruleRule )
            // InternalAsmetaL.g:11078:5: lv_rules_1_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSeqRuleAccess().getRulesRuleParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_44);
            lv_rules_1_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSeqRuleRule());
              					}
              					add(
              						current,
              						"rules",
              						lv_rules_1_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:11095:3: ( (lv_rules_2_0= ruleRule ) )+
            int cnt173=0;
            loop173:
            do {
                int alt173=2;
                int LA173_0 = input.LA(1);

                if ( ((LA173_0>=RULE_ID && LA173_0<=RULE_ENUM_ID)||LA173_0==56||LA173_0==83||(LA173_0>=88 && LA173_0<=95)||LA173_0==110||LA173_0==114||(LA173_0>=123 && LA173_0<=124)||LA173_0==128||LA173_0==130||LA173_0==132||(LA173_0>=135 && LA173_0<=136)||LA173_0==138||LA173_0==141||LA173_0==144) ) {
                    alt173=1;
                }


                switch (alt173) {
            	case 1 :
            	    // InternalAsmetaL.g:11096:4: (lv_rules_2_0= ruleRule )
            	    {
            	    // InternalAsmetaL.g:11096:4: (lv_rules_2_0= ruleRule )
            	    // InternalAsmetaL.g:11097:5: lv_rules_2_0= ruleRule
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSeqRuleAccess().getRulesRuleParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_117);
            	    lv_rules_2_0=ruleRule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSeqRuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"rules",
            	      						lv_rules_2_0,
            	      						"org.asmeta.xt.AsmetaL.Rule");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt173 >= 1 ) break loop173;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(173, input);
                        throw eee;
                }
                cnt173++;
            } while (true);

            otherlv_3=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSeqRuleAccess().getEndseqKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSeqRule"


    // $ANTLR start "entryRuleIterateRule"
    // InternalAsmetaL.g:11122:1: entryRuleIterateRule returns [EObject current=null] : iv_ruleIterateRule= ruleIterateRule EOF ;
    public final EObject entryRuleIterateRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIterateRule = null;


        try {
            // InternalAsmetaL.g:11122:52: (iv_ruleIterateRule= ruleIterateRule EOF )
            // InternalAsmetaL.g:11123:2: iv_ruleIterateRule= ruleIterateRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIterateRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIterateRule=ruleIterateRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIterateRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIterateRule"


    // $ANTLR start "ruleIterateRule"
    // InternalAsmetaL.g:11129:1: ruleIterateRule returns [EObject current=null] : (otherlv_0= 'iterate' ( (lv_rule_1_0= ruleRule ) ) otherlv_2= 'enditerate' ) ;
    public final EObject ruleIterateRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_rule_1_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11135:2: ( (otherlv_0= 'iterate' ( (lv_rule_1_0= ruleRule ) ) otherlv_2= 'enditerate' ) )
            // InternalAsmetaL.g:11136:2: (otherlv_0= 'iterate' ( (lv_rule_1_0= ruleRule ) ) otherlv_2= 'enditerate' )
            {
            // InternalAsmetaL.g:11136:2: (otherlv_0= 'iterate' ( (lv_rule_1_0= ruleRule ) ) otherlv_2= 'enditerate' )
            // InternalAsmetaL.g:11137:3: otherlv_0= 'iterate' ( (lv_rule_1_0= ruleRule ) ) otherlv_2= 'enditerate'
            {
            otherlv_0=(Token)match(input,138,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIterateRuleAccess().getIterateKeyword_0());
              		
            }
            // InternalAsmetaL.g:11141:3: ( (lv_rule_1_0= ruleRule ) )
            // InternalAsmetaL.g:11142:4: (lv_rule_1_0= ruleRule )
            {
            // InternalAsmetaL.g:11142:4: (lv_rule_1_0= ruleRule )
            // InternalAsmetaL.g:11143:5: lv_rule_1_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIterateRuleAccess().getRuleRuleParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_118);
            lv_rule_1_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIterateRuleRule());
              					}
              					set(
              						current,
              						"rule",
              						lv_rule_1_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,139,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIterateRuleAccess().getEnditerateKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIterateRule"


    // $ANTLR start "entryRuleTurboCallRule"
    // InternalAsmetaL.g:11168:1: entryRuleTurboCallRule returns [EObject current=null] : iv_ruleTurboCallRule= ruleTurboCallRule EOF ;
    public final EObject entryRuleTurboCallRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTurboCallRule = null;


        try {
            // InternalAsmetaL.g:11168:54: (iv_ruleTurboCallRule= ruleTurboCallRule EOF )
            // InternalAsmetaL.g:11169:2: iv_ruleTurboCallRule= ruleTurboCallRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTurboCallRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTurboCallRule=ruleTurboCallRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTurboCallRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTurboCallRule"


    // $ANTLR start "ruleTurboCallRule"
    // InternalAsmetaL.g:11175:1: ruleTurboCallRule returns [EObject current=null] : ( ( (lv_calledRuleName_0_0= RULE_RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ')' ) ;
    public final EObject ruleTurboCallRule() throws RecognitionException {
        EObject current = null;

        Token lv_calledRuleName_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_parameters_2_0 = null;

        EObject lv_parameters_4_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11181:2: ( ( ( (lv_calledRuleName_0_0= RULE_RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ')' ) )
            // InternalAsmetaL.g:11182:2: ( ( (lv_calledRuleName_0_0= RULE_RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ')' )
            {
            // InternalAsmetaL.g:11182:2: ( ( (lv_calledRuleName_0_0= RULE_RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ')' )
            // InternalAsmetaL.g:11183:3: ( (lv_calledRuleName_0_0= RULE_RULE_ID ) ) otherlv_1= '(' ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )? otherlv_5= ')'
            {
            // InternalAsmetaL.g:11183:3: ( (lv_calledRuleName_0_0= RULE_RULE_ID ) )
            // InternalAsmetaL.g:11184:4: (lv_calledRuleName_0_0= RULE_RULE_ID )
            {
            // InternalAsmetaL.g:11184:4: (lv_calledRuleName_0_0= RULE_RULE_ID )
            // InternalAsmetaL.g:11185:5: lv_calledRuleName_0_0= RULE_RULE_ID
            {
            lv_calledRuleName_0_0=(Token)match(input,RULE_RULE_ID,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_calledRuleName_0_0, grammarAccess.getTurboCallRuleAccess().getCalledRuleNameRULE_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTurboCallRuleRule());
              					}
              					setWithLastConsumed(
              						current,
              						"calledRuleName",
              						lv_calledRuleName_0_0,
              						"org.asmeta.xt.AsmetaL.RULE_ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,29,FOLLOW_119); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTurboCallRuleAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalAsmetaL.g:11205:3: ( ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )* )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( ((LA175_0>=RULE_ID && LA175_0<=RULE_REAL_NUMBER)||LA175_0==29||LA175_0==42||LA175_0==56||(LA175_0>=60 && LA175_0<=69)||LA175_0==71||(LA175_0>=74 && LA175_0<=79)||(LA175_0>=88 && LA175_0<=94)||LA175_0==99||(LA175_0>=102 && LA175_0<=103)||(LA175_0>=107 && LA175_0<=110)||LA175_0==114||LA175_0==118||LA175_0==124||LA175_0==126||LA175_0==144) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // InternalAsmetaL.g:11206:4: ( (lv_parameters_2_0= ruleTerm ) ) (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )*
                    {
                    // InternalAsmetaL.g:11206:4: ( (lv_parameters_2_0= ruleTerm ) )
                    // InternalAsmetaL.g:11207:5: (lv_parameters_2_0= ruleTerm )
                    {
                    // InternalAsmetaL.g:11207:5: (lv_parameters_2_0= ruleTerm )
                    // InternalAsmetaL.g:11208:6: lv_parameters_2_0= ruleTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTurboCallRuleAccess().getParametersTermParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_parameters_2_0=ruleTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTurboCallRuleRule());
                      						}
                      						add(
                      							current,
                      							"parameters",
                      							lv_parameters_2_0,
                      							"org.asmeta.xt.AsmetaL.Term");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalAsmetaL.g:11225:4: (otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) ) )*
                    loop174:
                    do {
                        int alt174=2;
                        int LA174_0 = input.LA(1);

                        if ( (LA174_0==30) ) {
                            alt174=1;
                        }


                        switch (alt174) {
                    	case 1 :
                    	    // InternalAsmetaL.g:11226:5: otherlv_3= ',' ( (lv_parameters_4_0= ruleTerm ) )
                    	    {
                    	    otherlv_3=(Token)match(input,30,FOLLOW_27); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getTurboCallRuleAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalAsmetaL.g:11230:5: ( (lv_parameters_4_0= ruleTerm ) )
                    	    // InternalAsmetaL.g:11231:6: (lv_parameters_4_0= ruleTerm )
                    	    {
                    	    // InternalAsmetaL.g:11231:6: (lv_parameters_4_0= ruleTerm )
                    	    // InternalAsmetaL.g:11232:7: lv_parameters_4_0= ruleTerm
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getTurboCallRuleAccess().getParametersTermParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameters_4_0=ruleTerm();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getTurboCallRuleRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameters",
                    	      								lv_parameters_4_0,
                    	      								"org.asmeta.xt.AsmetaL.Term");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop174;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,31,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getTurboCallRuleAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTurboCallRule"


    // $ANTLR start "entryRuleTurboReturnRule"
    // InternalAsmetaL.g:11259:1: entryRuleTurboReturnRule returns [EObject current=null] : iv_ruleTurboReturnRule= ruleTurboReturnRule EOF ;
    public final EObject entryRuleTurboReturnRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTurboReturnRule = null;


        try {
            // InternalAsmetaL.g:11259:56: (iv_ruleTurboReturnRule= ruleTurboReturnRule EOF )
            // InternalAsmetaL.g:11260:2: iv_ruleTurboReturnRule= ruleTurboReturnRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTurboReturnRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTurboReturnRule=ruleTurboReturnRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTurboReturnRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTurboReturnRule"


    // $ANTLR start "ruleTurboReturnRule"
    // InternalAsmetaL.g:11266:1: ruleTurboReturnRule returns [EObject current=null] : ( ( ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= '<-' ( (lv_updateRule_2_0= ruleTurboCallRule ) ) ) ;
    public final EObject ruleTurboReturnRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_location_0_1 = null;

        EObject lv_location_0_2 = null;

        EObject lv_updateRule_2_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11272:2: ( ( ( ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= '<-' ( (lv_updateRule_2_0= ruleTurboCallRule ) ) ) )
            // InternalAsmetaL.g:11273:2: ( ( ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= '<-' ( (lv_updateRule_2_0= ruleTurboCallRule ) ) )
            {
            // InternalAsmetaL.g:11273:2: ( ( ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= '<-' ( (lv_updateRule_2_0= ruleTurboCallRule ) ) )
            // InternalAsmetaL.g:11274:3: ( ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) ) ) otherlv_1= '<-' ( (lv_updateRule_2_0= ruleTurboCallRule ) )
            {
            // InternalAsmetaL.g:11274:3: ( ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) ) )
            // InternalAsmetaL.g:11275:4: ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) )
            {
            // InternalAsmetaL.g:11275:4: ( (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm ) )
            // InternalAsmetaL.g:11276:5: (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm )
            {
            // InternalAsmetaL.g:11276:5: (lv_location_0_1= ruleFunctionTerm | lv_location_0_2= ruleVariableTerm )
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( ((LA176_0>=RULE_ID && LA176_0<=RULE_ENUM_ID)||(LA176_0>=88 && LA176_0<=94)) ) {
                alt176=1;
            }
            else if ( (LA176_0==144) ) {
                alt176=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 176, 0, input);

                throw nvae;
            }
            switch (alt176) {
                case 1 :
                    // InternalAsmetaL.g:11277:6: lv_location_0_1= ruleFunctionTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTurboReturnRuleAccess().getLocationFunctionTermParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_120);
                    lv_location_0_1=ruleFunctionTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTurboReturnRuleRule());
                      						}
                      						set(
                      							current,
                      							"location",
                      							lv_location_0_1,
                      							"org.asmeta.xt.AsmetaL.FunctionTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:11293:6: lv_location_0_2= ruleVariableTerm
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTurboReturnRuleAccess().getLocationVariableTermParserRuleCall_0_0_1());
                      					
                    }
                    pushFollow(FOLLOW_120);
                    lv_location_0_2=ruleVariableTerm();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTurboReturnRuleRule());
                      						}
                      						set(
                      							current,
                      							"location",
                      							lv_location_0_2,
                      							"org.asmeta.xt.AsmetaL.VariableTerm");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_1=(Token)match(input,140,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTurboReturnRuleAccess().getLessThanSignHyphenMinusKeyword_1());
              		
            }
            // InternalAsmetaL.g:11315:3: ( (lv_updateRule_2_0= ruleTurboCallRule ) )
            // InternalAsmetaL.g:11316:4: (lv_updateRule_2_0= ruleTurboCallRule )
            {
            // InternalAsmetaL.g:11316:4: (lv_updateRule_2_0= ruleTurboCallRule )
            // InternalAsmetaL.g:11317:5: lv_updateRule_2_0= ruleTurboCallRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTurboReturnRuleAccess().getUpdateRuleTurboCallRuleParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_updateRule_2_0=ruleTurboCallRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTurboReturnRuleRule());
              					}
              					set(
              						current,
              						"updateRule",
              						lv_updateRule_2_0,
              						"org.asmeta.xt.AsmetaL.TurboCallRule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTurboReturnRule"


    // $ANTLR start "entryRuleTurboLocalStateRule"
    // InternalAsmetaL.g:11338:1: entryRuleTurboLocalStateRule returns [EObject current=null] : iv_ruleTurboLocalStateRule= ruleTurboLocalStateRule EOF ;
    public final EObject entryRuleTurboLocalStateRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTurboLocalStateRule = null;


        try {
            // InternalAsmetaL.g:11338:60: (iv_ruleTurboLocalStateRule= ruleTurboLocalStateRule EOF )
            // InternalAsmetaL.g:11339:2: iv_ruleTurboLocalStateRule= ruleTurboLocalStateRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTurboLocalStateRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTurboLocalStateRule=ruleTurboLocalStateRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTurboLocalStateRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTurboLocalStateRule"


    // $ANTLR start "ruleTurboLocalStateRule"
    // InternalAsmetaL.g:11345:1: ruleTurboLocalStateRule returns [EObject current=null] : ( ( (lv_localFunction_0_0= ruleLocalFunction ) ) otherlv_1= '[' ( (lv_init_2_0= ruleRule ) ) otherlv_3= ']' ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )* ( (lv_body_8_0= ruleRule ) ) ) ;
    public final EObject ruleTurboLocalStateRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_localFunction_0_0 = null;

        EObject lv_init_2_0 = null;

        EObject lv_localFunction_4_0 = null;

        EObject lv_init_6_0 = null;

        EObject lv_body_8_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11351:2: ( ( ( (lv_localFunction_0_0= ruleLocalFunction ) ) otherlv_1= '[' ( (lv_init_2_0= ruleRule ) ) otherlv_3= ']' ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )* ( (lv_body_8_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:11352:2: ( ( (lv_localFunction_0_0= ruleLocalFunction ) ) otherlv_1= '[' ( (lv_init_2_0= ruleRule ) ) otherlv_3= ']' ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )* ( (lv_body_8_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:11352:2: ( ( (lv_localFunction_0_0= ruleLocalFunction ) ) otherlv_1= '[' ( (lv_init_2_0= ruleRule ) ) otherlv_3= ']' ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )* ( (lv_body_8_0= ruleRule ) ) )
            // InternalAsmetaL.g:11353:3: ( (lv_localFunction_0_0= ruleLocalFunction ) ) otherlv_1= '[' ( (lv_init_2_0= ruleRule ) ) otherlv_3= ']' ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )* ( (lv_body_8_0= ruleRule ) )
            {
            // InternalAsmetaL.g:11353:3: ( (lv_localFunction_0_0= ruleLocalFunction ) )
            // InternalAsmetaL.g:11354:4: (lv_localFunction_0_0= ruleLocalFunction )
            {
            // InternalAsmetaL.g:11354:4: (lv_localFunction_0_0= ruleLocalFunction )
            // InternalAsmetaL.g:11355:5: lv_localFunction_0_0= ruleLocalFunction
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionLocalFunctionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_114);
            lv_localFunction_0_0=ruleLocalFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
              					}
              					add(
              						current,
              						"localFunction",
              						lv_localFunction_0_0,
              						"org.asmeta.xt.AsmetaL.LocalFunction");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,118,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getTurboLocalStateRuleAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalAsmetaL.g:11376:3: ( (lv_init_2_0= ruleRule ) )
            // InternalAsmetaL.g:11377:4: (lv_init_2_0= ruleRule )
            {
            // InternalAsmetaL.g:11377:4: (lv_init_2_0= ruleRule )
            // InternalAsmetaL.g:11378:5: lv_init_2_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getInitRuleParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_89);
            lv_init_2_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
              					}
              					add(
              						current,
              						"init",
              						lv_init_2_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,119,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getTurboLocalStateRuleAccess().getRightSquareBracketKeyword_3());
              		
            }
            // InternalAsmetaL.g:11399:3: ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )*
            loop177:
            do {
                int alt177=2;
                alt177 = dfa177.predict(input);
                switch (alt177) {
            	case 1 :
            	    // InternalAsmetaL.g:11400:4: ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']'
            	    {
            	    // InternalAsmetaL.g:11400:4: ( (lv_localFunction_4_0= ruleLocalFunction ) )
            	    // InternalAsmetaL.g:11401:5: (lv_localFunction_4_0= ruleLocalFunction )
            	    {
            	    // InternalAsmetaL.g:11401:5: (lv_localFunction_4_0= ruleLocalFunction )
            	    // InternalAsmetaL.g:11402:6: lv_localFunction_4_0= ruleLocalFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionLocalFunctionParserRuleCall_4_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_114);
            	    lv_localFunction_4_0=ruleLocalFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"localFunction",
            	      							lv_localFunction_4_0,
            	      							"org.asmeta.xt.AsmetaL.LocalFunction");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_5=(Token)match(input,118,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getTurboLocalStateRuleAccess().getLeftSquareBracketKeyword_4_1());
            	      			
            	    }
            	    // InternalAsmetaL.g:11423:4: ( (lv_init_6_0= ruleRule ) )
            	    // InternalAsmetaL.g:11424:5: (lv_init_6_0= ruleRule )
            	    {
            	    // InternalAsmetaL.g:11424:5: (lv_init_6_0= ruleRule )
            	    // InternalAsmetaL.g:11425:6: lv_init_6_0= ruleRule
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getInitRuleParserRuleCall_4_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_init_6_0=ruleRule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"init",
            	      							lv_init_6_0,
            	      							"org.asmeta.xt.AsmetaL.Rule");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_7=(Token)match(input,119,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_7, grammarAccess.getTurboLocalStateRuleAccess().getRightSquareBracketKeyword_4_3());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);

            // InternalAsmetaL.g:11447:3: ( (lv_body_8_0= ruleRule ) )
            // InternalAsmetaL.g:11448:4: (lv_body_8_0= ruleRule )
            {
            // InternalAsmetaL.g:11448:4: (lv_body_8_0= ruleRule )
            // InternalAsmetaL.g:11449:5: lv_body_8_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getBodyRuleParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_8_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_8_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTurboLocalStateRule"


    // $ANTLR start "entryRuleDerivedRule"
    // InternalAsmetaL.g:11470:1: entryRuleDerivedRule returns [EObject current=null] : iv_ruleDerivedRule= ruleDerivedRule EOF ;
    public final EObject entryRuleDerivedRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDerivedRule = null;


        try {
            // InternalAsmetaL.g:11470:52: (iv_ruleDerivedRule= ruleDerivedRule EOF )
            // InternalAsmetaL.g:11471:2: iv_ruleDerivedRule= ruleDerivedRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDerivedRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDerivedRule=ruleDerivedRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDerivedRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDerivedRule"


    // $ANTLR start "ruleDerivedRule"
    // InternalAsmetaL.g:11477:1: ruleDerivedRule returns [EObject current=null] : (this_BasicDerivedRule_0= ruleBasicDerivedRule | this_TurboDerivedRule_1= ruleTurboDerivedRule ) ;
    public final EObject ruleDerivedRule() throws RecognitionException {
        EObject current = null;

        EObject this_BasicDerivedRule_0 = null;

        EObject this_TurboDerivedRule_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11483:2: ( (this_BasicDerivedRule_0= ruleBasicDerivedRule | this_TurboDerivedRule_1= ruleTurboDerivedRule ) )
            // InternalAsmetaL.g:11484:2: (this_BasicDerivedRule_0= ruleBasicDerivedRule | this_TurboDerivedRule_1= ruleTurboDerivedRule )
            {
            // InternalAsmetaL.g:11484:2: (this_BasicDerivedRule_0= ruleBasicDerivedRule | this_TurboDerivedRule_1= ruleTurboDerivedRule )
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==114) ) {
                alt178=1;
            }
            else if ( (LA178_0==95||LA178_0==141) ) {
                alt178=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 178, 0, input);

                throw nvae;
            }
            switch (alt178) {
                case 1 :
                    // InternalAsmetaL.g:11485:3: this_BasicDerivedRule_0= ruleBasicDerivedRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDerivedRuleAccess().getBasicDerivedRuleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_BasicDerivedRule_0=ruleBasicDerivedRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BasicDerivedRule_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:11497:3: this_TurboDerivedRule_1= ruleTurboDerivedRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDerivedRuleAccess().getTurboDerivedRuleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TurboDerivedRule_1=ruleTurboDerivedRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TurboDerivedRule_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDerivedRule"


    // $ANTLR start "entryRuleBasicDerivedRule"
    // InternalAsmetaL.g:11512:1: entryRuleBasicDerivedRule returns [EObject current=null] : iv_ruleBasicDerivedRule= ruleBasicDerivedRule EOF ;
    public final EObject entryRuleBasicDerivedRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBasicDerivedRule = null;


        try {
            // InternalAsmetaL.g:11512:57: (iv_ruleBasicDerivedRule= ruleBasicDerivedRule EOF )
            // InternalAsmetaL.g:11513:2: iv_ruleBasicDerivedRule= ruleBasicDerivedRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBasicDerivedRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBasicDerivedRule=ruleBasicDerivedRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBasicDerivedRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBasicDerivedRule"


    // $ANTLR start "ruleBasicDerivedRule"
    // InternalAsmetaL.g:11519:1: ruleBasicDerivedRule returns [EObject current=null] : this_CaseRule_0= ruleCaseRule ;
    public final EObject ruleBasicDerivedRule() throws RecognitionException {
        EObject current = null;

        EObject this_CaseRule_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11525:2: (this_CaseRule_0= ruleCaseRule )
            // InternalAsmetaL.g:11526:2: this_CaseRule_0= ruleCaseRule
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBasicDerivedRuleAccess().getCaseRuleParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_CaseRule_0=ruleCaseRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_CaseRule_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBasicDerivedRule"


    // $ANTLR start "entryRuleCaseRule"
    // InternalAsmetaL.g:11540:1: entryRuleCaseRule returns [EObject current=null] : iv_ruleCaseRule= ruleCaseRule EOF ;
    public final EObject entryRuleCaseRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCaseRule = null;


        try {
            // InternalAsmetaL.g:11540:49: (iv_ruleCaseRule= ruleCaseRule EOF )
            // InternalAsmetaL.g:11541:2: iv_ruleCaseRule= ruleCaseRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseRule=ruleCaseRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCaseRule"


    // $ANTLR start "ruleCaseRule"
    // InternalAsmetaL.g:11547:1: ruleCaseRule returns [EObject current=null] : (otherlv_0= 'switch' ( (lv_term_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) ) )? otherlv_8= 'endswitch' ) ;
    public final EObject ruleCaseRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        EObject lv_term_1_0 = null;

        EObject lv_caseTerm_3_0 = null;

        EObject lv_caseBranch_5_0 = null;

        EObject lv_otherwiseBranch_7_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11553:2: ( (otherlv_0= 'switch' ( (lv_term_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) ) )? otherlv_8= 'endswitch' ) )
            // InternalAsmetaL.g:11554:2: (otherlv_0= 'switch' ( (lv_term_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) ) )? otherlv_8= 'endswitch' )
            {
            // InternalAsmetaL.g:11554:2: (otherlv_0= 'switch' ( (lv_term_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) ) )? otherlv_8= 'endswitch' )
            // InternalAsmetaL.g:11555:3: otherlv_0= 'switch' ( (lv_term_1_0= ruleTerm ) ) (otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) ) )+ (otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) ) )? otherlv_8= 'endswitch'
            {
            otherlv_0=(Token)match(input,114,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getCaseRuleAccess().getSwitchKeyword_0());
              		
            }
            // InternalAsmetaL.g:11559:3: ( (lv_term_1_0= ruleTerm ) )
            // InternalAsmetaL.g:11560:4: (lv_term_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:11560:4: (lv_term_1_0= ruleTerm )
            // InternalAsmetaL.g:11561:5: lv_term_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getCaseRuleAccess().getTermTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_82);
            lv_term_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getCaseRuleRule());
              					}
              					set(
              						current,
              						"term",
              						lv_term_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalAsmetaL.g:11578:3: (otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) ) )+
            int cnt179=0;
            loop179:
            do {
                int alt179=2;
                int LA179_0 = input.LA(1);

                if ( (LA179_0==115) ) {
                    alt179=1;
                }


                switch (alt179) {
            	case 1 :
            	    // InternalAsmetaL.g:11579:4: otherlv_2= 'case' ( (lv_caseTerm_3_0= ruleTerm ) ) otherlv_4= ':' ( (lv_caseBranch_5_0= ruleRule ) )
            	    {
            	    otherlv_2=(Token)match(input,115,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getCaseRuleAccess().getCaseKeyword_2_0());
            	      			
            	    }
            	    // InternalAsmetaL.g:11583:4: ( (lv_caseTerm_3_0= ruleTerm ) )
            	    // InternalAsmetaL.g:11584:5: (lv_caseTerm_3_0= ruleTerm )
            	    {
            	    // InternalAsmetaL.g:11584:5: (lv_caseTerm_3_0= ruleTerm )
            	    // InternalAsmetaL.g:11585:6: lv_caseTerm_3_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCaseRuleAccess().getCaseTermTermParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_19);
            	    lv_caseTerm_3_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCaseRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"caseTerm",
            	      							lv_caseTerm_3_0,
            	      							"org.asmeta.xt.AsmetaL.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,35,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getCaseRuleAccess().getColonKeyword_2_2());
            	      			
            	    }
            	    // InternalAsmetaL.g:11606:4: ( (lv_caseBranch_5_0= ruleRule ) )
            	    // InternalAsmetaL.g:11607:5: (lv_caseBranch_5_0= ruleRule )
            	    {
            	    // InternalAsmetaL.g:11607:5: (lv_caseBranch_5_0= ruleRule )
            	    // InternalAsmetaL.g:11608:6: lv_caseBranch_5_0= ruleRule
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCaseRuleAccess().getCaseBranchRuleParserRuleCall_2_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_caseBranch_5_0=ruleRule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCaseRuleRule());
            	      						}
            	      						add(
            	      							current,
            	      							"caseBranch",
            	      							lv_caseBranch_5_0,
            	      							"org.asmeta.xt.AsmetaL.Rule");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt179 >= 1 ) break loop179;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(179, input);
                        throw eee;
                }
                cnt179++;
            } while (true);

            // InternalAsmetaL.g:11626:3: (otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) ) )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==116) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalAsmetaL.g:11627:4: otherlv_6= 'otherwise' ( (lv_otherwiseBranch_7_0= ruleRule ) )
                    {
                    otherlv_6=(Token)match(input,116,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getCaseRuleAccess().getOtherwiseKeyword_3_0());
                      			
                    }
                    // InternalAsmetaL.g:11631:4: ( (lv_otherwiseBranch_7_0= ruleRule ) )
                    // InternalAsmetaL.g:11632:5: (lv_otherwiseBranch_7_0= ruleRule )
                    {
                    // InternalAsmetaL.g:11632:5: (lv_otherwiseBranch_7_0= ruleRule )
                    // InternalAsmetaL.g:11633:6: lv_otherwiseBranch_7_0= ruleRule
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCaseRuleAccess().getOtherwiseBranchRuleParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_84);
                    lv_otherwiseBranch_7_0=ruleRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCaseRuleRule());
                      						}
                      						set(
                      							current,
                      							"otherwiseBranch",
                      							lv_otherwiseBranch_7_0,
                      							"org.asmeta.xt.AsmetaL.Rule");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getCaseRuleAccess().getEndswitchKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCaseRule"


    // $ANTLR start "entryRuleTurboDerivedRule"
    // InternalAsmetaL.g:11659:1: entryRuleTurboDerivedRule returns [EObject current=null] : iv_ruleTurboDerivedRule= ruleTurboDerivedRule EOF ;
    public final EObject entryRuleTurboDerivedRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTurboDerivedRule = null;


        try {
            // InternalAsmetaL.g:11659:57: (iv_ruleTurboDerivedRule= ruleTurboDerivedRule EOF )
            // InternalAsmetaL.g:11660:2: iv_ruleTurboDerivedRule= ruleTurboDerivedRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTurboDerivedRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTurboDerivedRule=ruleTurboDerivedRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTurboDerivedRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTurboDerivedRule"


    // $ANTLR start "ruleTurboDerivedRule"
    // InternalAsmetaL.g:11666:1: ruleTurboDerivedRule returns [EObject current=null] : (this_RecursiveWhileRule_0= ruleRecursiveWhileRule | this_IterativeWhileRule_1= ruleIterativeWhileRule ) ;
    public final EObject ruleTurboDerivedRule() throws RecognitionException {
        EObject current = null;

        EObject this_RecursiveWhileRule_0 = null;

        EObject this_IterativeWhileRule_1 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11672:2: ( (this_RecursiveWhileRule_0= ruleRecursiveWhileRule | this_IterativeWhileRule_1= ruleIterativeWhileRule ) )
            // InternalAsmetaL.g:11673:2: (this_RecursiveWhileRule_0= ruleRecursiveWhileRule | this_IterativeWhileRule_1= ruleIterativeWhileRule )
            {
            // InternalAsmetaL.g:11673:2: (this_RecursiveWhileRule_0= ruleRecursiveWhileRule | this_IterativeWhileRule_1= ruleIterativeWhileRule )
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==141) ) {
                alt181=1;
            }
            else if ( (LA181_0==95) ) {
                alt181=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 181, 0, input);

                throw nvae;
            }
            switch (alt181) {
                case 1 :
                    // InternalAsmetaL.g:11674:3: this_RecursiveWhileRule_0= ruleRecursiveWhileRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTurboDerivedRuleAccess().getRecursiveWhileRuleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RecursiveWhileRule_0=ruleRecursiveWhileRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RecursiveWhileRule_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:11686:3: this_IterativeWhileRule_1= ruleIterativeWhileRule
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTurboDerivedRuleAccess().getIterativeWhileRuleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IterativeWhileRule_1=ruleIterativeWhileRule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IterativeWhileRule_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTurboDerivedRule"


    // $ANTLR start "entryRuleRecursiveWhileRule"
    // InternalAsmetaL.g:11701:1: entryRuleRecursiveWhileRule returns [EObject current=null] : iv_ruleRecursiveWhileRule= ruleRecursiveWhileRule EOF ;
    public final EObject entryRuleRecursiveWhileRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRecursiveWhileRule = null;


        try {
            // InternalAsmetaL.g:11701:59: (iv_ruleRecursiveWhileRule= ruleRecursiveWhileRule EOF )
            // InternalAsmetaL.g:11702:2: iv_ruleRecursiveWhileRule= ruleRecursiveWhileRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRecursiveWhileRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRecursiveWhileRule=ruleRecursiveWhileRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRecursiveWhileRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRecursiveWhileRule"


    // $ANTLR start "ruleRecursiveWhileRule"
    // InternalAsmetaL.g:11708:1: ruleRecursiveWhileRule returns [EObject current=null] : (otherlv_0= 'whilerec' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) ) ;
    public final EObject ruleRecursiveWhileRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_guard_1_0 = null;

        EObject lv_rule_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11714:2: ( (otherlv_0= 'whilerec' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:11715:2: (otherlv_0= 'whilerec' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:11715:2: (otherlv_0= 'whilerec' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) )
            // InternalAsmetaL.g:11716:3: otherlv_0= 'whilerec' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) )
            {
            otherlv_0=(Token)match(input,141,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRecursiveWhileRuleAccess().getWhilerecKeyword_0());
              		
            }
            // InternalAsmetaL.g:11720:3: ( (lv_guard_1_0= ruleTerm ) )
            // InternalAsmetaL.g:11721:4: (lv_guard_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:11721:4: (lv_guard_1_0= ruleTerm )
            // InternalAsmetaL.g:11722:5: lv_guard_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRecursiveWhileRuleAccess().getGuardTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_112);
            lv_guard_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRecursiveWhileRuleRule());
              					}
              					set(
              						current,
              						"guard",
              						lv_guard_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,133,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRecursiveWhileRuleAccess().getDoKeyword_2());
              		
            }
            // InternalAsmetaL.g:11743:3: ( (lv_rule_3_0= ruleRule ) )
            // InternalAsmetaL.g:11744:4: (lv_rule_3_0= ruleRule )
            {
            // InternalAsmetaL.g:11744:4: (lv_rule_3_0= ruleRule )
            // InternalAsmetaL.g:11745:5: lv_rule_3_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRecursiveWhileRuleAccess().getRuleRuleParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_rule_3_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRecursiveWhileRuleRule());
              					}
              					set(
              						current,
              						"rule",
              						lv_rule_3_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRecursiveWhileRule"


    // $ANTLR start "entryRuleIterativeWhileRule"
    // InternalAsmetaL.g:11766:1: entryRuleIterativeWhileRule returns [EObject current=null] : iv_ruleIterativeWhileRule= ruleIterativeWhileRule EOF ;
    public final EObject entryRuleIterativeWhileRule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIterativeWhileRule = null;


        try {
            // InternalAsmetaL.g:11766:59: (iv_ruleIterativeWhileRule= ruleIterativeWhileRule EOF )
            // InternalAsmetaL.g:11767:2: iv_ruleIterativeWhileRule= ruleIterativeWhileRule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIterativeWhileRuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIterativeWhileRule=ruleIterativeWhileRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIterativeWhileRule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIterativeWhileRule"


    // $ANTLR start "ruleIterativeWhileRule"
    // InternalAsmetaL.g:11773:1: ruleIterativeWhileRule returns [EObject current=null] : (otherlv_0= 'while' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) ) ;
    public final EObject ruleIterativeWhileRule() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        EObject lv_guard_1_0 = null;

        EObject lv_rule_3_0 = null;



        	enterRule();

        try {
            // InternalAsmetaL.g:11779:2: ( (otherlv_0= 'while' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) ) )
            // InternalAsmetaL.g:11780:2: (otherlv_0= 'while' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) )
            {
            // InternalAsmetaL.g:11780:2: (otherlv_0= 'while' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) ) )
            // InternalAsmetaL.g:11781:3: otherlv_0= 'while' ( (lv_guard_1_0= ruleTerm ) ) otherlv_2= 'do' ( (lv_rule_3_0= ruleRule ) )
            {
            otherlv_0=(Token)match(input,95,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getIterativeWhileRuleAccess().getWhileKeyword_0());
              		
            }
            // InternalAsmetaL.g:11785:3: ( (lv_guard_1_0= ruleTerm ) )
            // InternalAsmetaL.g:11786:4: (lv_guard_1_0= ruleTerm )
            {
            // InternalAsmetaL.g:11786:4: (lv_guard_1_0= ruleTerm )
            // InternalAsmetaL.g:11787:5: lv_guard_1_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIterativeWhileRuleAccess().getGuardTermParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_112);
            lv_guard_1_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIterativeWhileRuleRule());
              					}
              					set(
              						current,
              						"guard",
              						lv_guard_1_0,
              						"org.asmeta.xt.AsmetaL.Term");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,133,FOLLOW_44); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getIterativeWhileRuleAccess().getDoKeyword_2());
              		
            }
            // InternalAsmetaL.g:11808:3: ( (lv_rule_3_0= ruleRule ) )
            // InternalAsmetaL.g:11809:4: (lv_rule_3_0= ruleRule )
            {
            // InternalAsmetaL.g:11809:4: (lv_rule_3_0= ruleRule )
            // InternalAsmetaL.g:11810:5: lv_rule_3_0= ruleRule
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getIterativeWhileRuleAccess().getRuleRuleParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_rule_3_0=ruleRule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getIterativeWhileRuleRule());
              					}
              					set(
              						current,
              						"rule",
              						lv_rule_3_0,
              						"org.asmeta.xt.AsmetaL.Rule");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIterativeWhileRule"


    // $ANTLR start "entryRulenameofDomain"
    // InternalAsmetaL.g:11831:1: entryRulenameofDomain returns [EObject current=null] : iv_rulenameofDomain= rulenameofDomain EOF ;
    public final EObject entryRulenameofDomain() throws RecognitionException {
        EObject current = null;

        EObject iv_rulenameofDomain = null;


        try {
            // InternalAsmetaL.g:11831:53: (iv_rulenameofDomain= rulenameofDomain EOF )
            // InternalAsmetaL.g:11832:2: iv_rulenameofDomain= rulenameofDomain EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameofDomainRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulenameofDomain=rulenameofDomain();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulenameofDomain; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulenameofDomain"


    // $ANTLR start "rulenameofDomain"
    // InternalAsmetaL.g:11838:1: rulenameofDomain returns [EObject current=null] : ( (lv_name_0_0= RULE_ID ) ) ;
    public final EObject rulenameofDomain() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:11844:2: ( ( (lv_name_0_0= RULE_ID ) ) )
            // InternalAsmetaL.g:11845:2: ( (lv_name_0_0= RULE_ID ) )
            {
            // InternalAsmetaL.g:11845:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalAsmetaL.g:11846:3: (lv_name_0_0= RULE_ID )
            {
            // InternalAsmetaL.g:11846:3: (lv_name_0_0= RULE_ID )
            // InternalAsmetaL.g:11847:4: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_name_0_0, grammarAccess.getNameofDomainAccess().getNameIDTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getNameofDomainRule());
              				}
              				setWithLastConsumed(
              					current,
              					"name",
              					lv_name_0_0,
              					"org.asmeta.xt.AsmetaL.ID");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulenameofDomain"


    // $ANTLR start "entryRuleMODULE_ID"
    // InternalAsmetaL.g:11866:1: entryRuleMODULE_ID returns [String current=null] : iv_ruleMODULE_ID= ruleMODULE_ID EOF ;
    public final String entryRuleMODULE_ID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMODULE_ID = null;


        try {
            // InternalAsmetaL.g:11866:49: (iv_ruleMODULE_ID= ruleMODULE_ID EOF )
            // InternalAsmetaL.g:11867:2: iv_ruleMODULE_ID= ruleMODULE_ID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMODULE_IDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMODULE_ID=ruleMODULE_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMODULE_ID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMODULE_ID"


    // $ANTLR start "ruleMODULE_ID"
    // InternalAsmetaL.g:11873:1: ruleMODULE_ID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (this_ENUM_ID_0= RULE_ENUM_ID | this_ID_1= RULE_ID ) | (kw= '../' )* | (kw= './' )* )? ( (this_ENUM_ID_4= RULE_ENUM_ID | this_ID_5= RULE_ID ) kw= '/' )* (this_ENUM_ID_7= RULE_ENUM_ID | this_ID_8= RULE_ID ) (kw= '.' (this_ENUM_ID_10= RULE_ENUM_ID | this_ID_11= RULE_ID | kw= 'asm' ) )? ) ;
    public final AntlrDatatypeRuleToken ruleMODULE_ID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ENUM_ID_0=null;
        Token this_ID_1=null;
        Token kw=null;
        Token this_ENUM_ID_4=null;
        Token this_ID_5=null;
        Token this_ENUM_ID_7=null;
        Token this_ID_8=null;
        Token this_ENUM_ID_10=null;
        Token this_ID_11=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:11879:2: ( ( ( (this_ENUM_ID_0= RULE_ENUM_ID | this_ID_1= RULE_ID ) | (kw= '../' )* | (kw= './' )* )? ( (this_ENUM_ID_4= RULE_ENUM_ID | this_ID_5= RULE_ID ) kw= '/' )* (this_ENUM_ID_7= RULE_ENUM_ID | this_ID_8= RULE_ID ) (kw= '.' (this_ENUM_ID_10= RULE_ENUM_ID | this_ID_11= RULE_ID | kw= 'asm' ) )? ) )
            // InternalAsmetaL.g:11880:2: ( ( (this_ENUM_ID_0= RULE_ENUM_ID | this_ID_1= RULE_ID ) | (kw= '../' )* | (kw= './' )* )? ( (this_ENUM_ID_4= RULE_ENUM_ID | this_ID_5= RULE_ID ) kw= '/' )* (this_ENUM_ID_7= RULE_ENUM_ID | this_ID_8= RULE_ID ) (kw= '.' (this_ENUM_ID_10= RULE_ENUM_ID | this_ID_11= RULE_ID | kw= 'asm' ) )? )
            {
            // InternalAsmetaL.g:11880:2: ( ( (this_ENUM_ID_0= RULE_ENUM_ID | this_ID_1= RULE_ID ) | (kw= '../' )* | (kw= './' )* )? ( (this_ENUM_ID_4= RULE_ENUM_ID | this_ID_5= RULE_ID ) kw= '/' )* (this_ENUM_ID_7= RULE_ENUM_ID | this_ID_8= RULE_ID ) (kw= '.' (this_ENUM_ID_10= RULE_ENUM_ID | this_ID_11= RULE_ID | kw= 'asm' ) )? )
            // InternalAsmetaL.g:11881:3: ( (this_ENUM_ID_0= RULE_ENUM_ID | this_ID_1= RULE_ID ) | (kw= '../' )* | (kw= './' )* )? ( (this_ENUM_ID_4= RULE_ENUM_ID | this_ID_5= RULE_ID ) kw= '/' )* (this_ENUM_ID_7= RULE_ENUM_ID | this_ID_8= RULE_ID ) (kw= '.' (this_ENUM_ID_10= RULE_ENUM_ID | this_ID_11= RULE_ID | kw= 'asm' ) )?
            {
            // InternalAsmetaL.g:11881:3: ( (this_ENUM_ID_0= RULE_ENUM_ID | this_ID_1= RULE_ID ) | (kw= '../' )* | (kw= './' )* )?
            int alt185=4;
            switch ( input.LA(1) ) {
                case RULE_ENUM_ID:
                    {
                    int LA185_1 = input.LA(2);

                    if ( (LA185_1==RULE_ID||LA185_1==RULE_ENUM_ID) ) {
                        alt185=1;
                    }
                    else if ( (synpred277_InternalAsmetaL()) ) {
                        alt185=2;
                    }
                    else if ( (synpred279_InternalAsmetaL()) ) {
                        alt185=3;
                    }
                    }
                    break;
                case RULE_ID:
                    {
                    int LA185_2 = input.LA(2);

                    if ( (LA185_2==RULE_ID||LA185_2==RULE_ENUM_ID) ) {
                        alt185=1;
                    }
                    else if ( (synpred277_InternalAsmetaL()) ) {
                        alt185=2;
                    }
                    else if ( (synpred279_InternalAsmetaL()) ) {
                        alt185=3;
                    }
                    }
                    break;
                case 142:
                    {
                    alt185=2;
                    }
                    break;
                case 143:
                    {
                    alt185=3;
                    }
                    break;
            }

            switch (alt185) {
                case 1 :
                    // InternalAsmetaL.g:11882:4: (this_ENUM_ID_0= RULE_ENUM_ID | this_ID_1= RULE_ID )
                    {
                    // InternalAsmetaL.g:11882:4: (this_ENUM_ID_0= RULE_ENUM_ID | this_ID_1= RULE_ID )
                    int alt182=2;
                    int LA182_0 = input.LA(1);

                    if ( (LA182_0==RULE_ENUM_ID) ) {
                        alt182=1;
                    }
                    else if ( (LA182_0==RULE_ID) ) {
                        alt182=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 182, 0, input);

                        throw nvae;
                    }
                    switch (alt182) {
                        case 1 :
                            // InternalAsmetaL.g:11883:5: this_ENUM_ID_0= RULE_ENUM_ID
                            {
                            this_ENUM_ID_0=(Token)match(input,RULE_ENUM_ID,FOLLOW_121); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_ENUM_ID_0);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_ENUM_ID_0, grammarAccess.getMODULE_IDAccess().getENUM_IDTerminalRuleCall_0_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:11891:5: this_ID_1= RULE_ID
                            {
                            this_ID_1=(Token)match(input,RULE_ID,FOLLOW_121); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_ID_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_ID_1, grammarAccess.getMODULE_IDAccess().getIDTerminalRuleCall_0_0_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:11900:4: (kw= '../' )*
                    {
                    // InternalAsmetaL.g:11900:4: (kw= '../' )*
                    loop183:
                    do {
                        int alt183=2;
                        int LA183_0 = input.LA(1);

                        if ( (LA183_0==142) ) {
                            alt183=1;
                        }


                        switch (alt183) {
                    	case 1 :
                    	    // InternalAsmetaL.g:11901:5: kw= '../'
                    	    {
                    	    kw=(Token)match(input,142,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current.merge(kw);
                    	      					newLeafNode(kw, grammarAccess.getMODULE_IDAccess().getFullStopFullStopSolidusKeyword_0_1());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop183;
                        }
                    } while (true);


                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:11908:4: (kw= './' )*
                    {
                    // InternalAsmetaL.g:11908:4: (kw= './' )*
                    loop184:
                    do {
                        int alt184=2;
                        int LA184_0 = input.LA(1);

                        if ( (LA184_0==143) ) {
                            alt184=1;
                        }


                        switch (alt184) {
                    	case 1 :
                    	    // InternalAsmetaL.g:11909:5: kw= './'
                    	    {
                    	    kw=(Token)match(input,143,FOLLOW_123); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current.merge(kw);
                    	      					newLeafNode(kw, grammarAccess.getMODULE_IDAccess().getFullStopSolidusKeyword_0_2());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop184;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalAsmetaL.g:11916:3: ( (this_ENUM_ID_4= RULE_ENUM_ID | this_ID_5= RULE_ID ) kw= '/' )*
            loop187:
            do {
                int alt187=2;
                int LA187_0 = input.LA(1);

                if ( (LA187_0==RULE_ENUM_ID) ) {
                    int LA187_1 = input.LA(2);

                    if ( (LA187_1==104) ) {
                        alt187=1;
                    }


                }
                else if ( (LA187_0==RULE_ID) ) {
                    int LA187_2 = input.LA(2);

                    if ( (LA187_2==104) ) {
                        alt187=1;
                    }


                }


                switch (alt187) {
            	case 1 :
            	    // InternalAsmetaL.g:11917:4: (this_ENUM_ID_4= RULE_ENUM_ID | this_ID_5= RULE_ID ) kw= '/'
            	    {
            	    // InternalAsmetaL.g:11917:4: (this_ENUM_ID_4= RULE_ENUM_ID | this_ID_5= RULE_ID )
            	    int alt186=2;
            	    int LA186_0 = input.LA(1);

            	    if ( (LA186_0==RULE_ENUM_ID) ) {
            	        alt186=1;
            	    }
            	    else if ( (LA186_0==RULE_ID) ) {
            	        alt186=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 186, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt186) {
            	        case 1 :
            	            // InternalAsmetaL.g:11918:5: this_ENUM_ID_4= RULE_ENUM_ID
            	            {
            	            this_ENUM_ID_4=(Token)match(input,RULE_ENUM_ID,FOLLOW_124); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_ENUM_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_ENUM_ID_4, grammarAccess.getMODULE_IDAccess().getENUM_IDTerminalRuleCall_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalAsmetaL.g:11926:5: this_ID_5= RULE_ID
            	            {
            	            this_ID_5=(Token)match(input,RULE_ID,FOLLOW_124); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_ID_5, grammarAccess.getMODULE_IDAccess().getIDTerminalRuleCall_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    kw=(Token)match(input,104,FOLLOW_121); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getMODULE_IDAccess().getSolidusKeyword_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop187;
                }
            } while (true);

            // InternalAsmetaL.g:11940:3: (this_ENUM_ID_7= RULE_ENUM_ID | this_ID_8= RULE_ID )
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==RULE_ENUM_ID) ) {
                alt188=1;
            }
            else if ( (LA188_0==RULE_ID) ) {
                alt188=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 188, 0, input);

                throw nvae;
            }
            switch (alt188) {
                case 1 :
                    // InternalAsmetaL.g:11941:4: this_ENUM_ID_7= RULE_ENUM_ID
                    {
                    this_ENUM_ID_7=(Token)match(input,RULE_ENUM_ID,FOLLOW_125); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_ENUM_ID_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ENUM_ID_7, grammarAccess.getMODULE_IDAccess().getENUM_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:11949:4: this_ID_8= RULE_ID
                    {
                    this_ID_8=(Token)match(input,RULE_ID,FOLLOW_125); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_ID_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ID_8, grammarAccess.getMODULE_IDAccess().getIDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalAsmetaL.g:11957:3: (kw= '.' (this_ENUM_ID_10= RULE_ENUM_ID | this_ID_11= RULE_ID | kw= 'asm' ) )?
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==106) ) {
                alt190=1;
            }
            switch (alt190) {
                case 1 :
                    // InternalAsmetaL.g:11958:4: kw= '.' (this_ENUM_ID_10= RULE_ENUM_ID | this_ID_11= RULE_ID | kw= 'asm' )
                    {
                    kw=(Token)match(input,106,FOLLOW_126); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getMODULE_IDAccess().getFullStopKeyword_3_0());
                      			
                    }
                    // InternalAsmetaL.g:11963:4: (this_ENUM_ID_10= RULE_ENUM_ID | this_ID_11= RULE_ID | kw= 'asm' )
                    int alt189=3;
                    switch ( input.LA(1) ) {
                    case RULE_ENUM_ID:
                        {
                        alt189=1;
                        }
                        break;
                    case RULE_ID:
                        {
                        alt189=2;
                        }
                        break;
                    case 24:
                        {
                        alt189=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 189, 0, input);

                        throw nvae;
                    }

                    switch (alt189) {
                        case 1 :
                            // InternalAsmetaL.g:11964:5: this_ENUM_ID_10= RULE_ENUM_ID
                            {
                            this_ENUM_ID_10=(Token)match(input,RULE_ENUM_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_ENUM_ID_10);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_ENUM_ID_10, grammarAccess.getMODULE_IDAccess().getENUM_IDTerminalRuleCall_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalAsmetaL.g:11972:5: this_ID_11= RULE_ID
                            {
                            this_ID_11=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_ID_11);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_ID_11, grammarAccess.getMODULE_IDAccess().getIDTerminalRuleCall_3_1_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalAsmetaL.g:11980:5: kw= 'asm'
                            {
                            kw=(Token)match(input,24,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getMODULE_IDAccess().getAsmKeyword_3_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMODULE_ID"


    // $ANTLR start "entryRuleID_VARIABLE"
    // InternalAsmetaL.g:11991:1: entryRuleID_VARIABLE returns [String current=null] : iv_ruleID_VARIABLE= ruleID_VARIABLE EOF ;
    public final String entryRuleID_VARIABLE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleID_VARIABLE = null;


        try {
            // InternalAsmetaL.g:11991:51: (iv_ruleID_VARIABLE= ruleID_VARIABLE EOF )
            // InternalAsmetaL.g:11992:2: iv_ruleID_VARIABLE= ruleID_VARIABLE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getID_VARIABLERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleID_VARIABLE=ruleID_VARIABLE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleID_VARIABLE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleID_VARIABLE"


    // $ANTLR start "ruleID_VARIABLE"
    // InternalAsmetaL.g:11998:1: ruleID_VARIABLE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '$' (this_ID_1= RULE_ID | kw= 'rule' | kw= 'agent' | kw= 'seq' ) ) ;
    public final AntlrDatatypeRuleToken ruleID_VARIABLE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalAsmetaL.g:12004:2: ( (kw= '$' (this_ID_1= RULE_ID | kw= 'rule' | kw= 'agent' | kw= 'seq' ) ) )
            // InternalAsmetaL.g:12005:2: (kw= '$' (this_ID_1= RULE_ID | kw= 'rule' | kw= 'agent' | kw= 'seq' ) )
            {
            // InternalAsmetaL.g:12005:2: (kw= '$' (this_ID_1= RULE_ID | kw= 'rule' | kw= 'agent' | kw= 'seq' ) )
            // InternalAsmetaL.g:12006:3: kw= '$' (this_ID_1= RULE_ID | kw= 'rule' | kw= 'agent' | kw= 'seq' )
            {
            kw=(Token)match(input,144,FOLLOW_127); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getID_VARIABLEAccess().getDollarSignKeyword_0());
              		
            }
            // InternalAsmetaL.g:12011:3: (this_ID_1= RULE_ID | kw= 'rule' | kw= 'agent' | kw= 'seq' )
            int alt191=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt191=1;
                }
                break;
            case 45:
                {
                alt191=2;
                }
                break;
            case 41:
                {
                alt191=3;
                }
                break;
            case 136:
                {
                alt191=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 191, 0, input);

                throw nvae;
            }

            switch (alt191) {
                case 1 :
                    // InternalAsmetaL.g:12012:4: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_ID_1, grammarAccess.getID_VARIABLEAccess().getIDTerminalRuleCall_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalAsmetaL.g:12020:4: kw= 'rule'
                    {
                    kw=(Token)match(input,45,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getID_VARIABLEAccess().getRuleKeyword_1_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalAsmetaL.g:12026:4: kw= 'agent'
                    {
                    kw=(Token)match(input,41,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getID_VARIABLEAccess().getAgentKeyword_1_2());
                      			
                    }

                    }
                    break;
                case 4 :
                    // InternalAsmetaL.g:12032:4: kw= 'seq'
                    {
                    kw=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getID_VARIABLEAccess().getSeqKeyword_1_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleID_VARIABLE"

    // $ANTLR start synpred88_InternalAsmetaL
    public final void synpred88_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_domain_3_0 = null;


        // InternalAsmetaL.g:4308:4: ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )
        // InternalAsmetaL.g:4308:4: ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->'
        {
        // InternalAsmetaL.g:4308:4: ( (lv_domain_3_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4309:5: (lv_domain_3_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4309:5: (lv_domain_3_0= rulegetDomainByID )
        // InternalAsmetaL.g:4310:6: lv_domain_3_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDerivedFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_3_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,81,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred88_InternalAsmetaL

    // $ANTLR start synpred89_InternalAsmetaL
    public final void synpred89_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_domain_3_0 = null;


        // InternalAsmetaL.g:4398:4: ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )
        // InternalAsmetaL.g:4398:4: ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->'
        {
        // InternalAsmetaL.g:4398:4: ( (lv_domain_3_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4399:5: (lv_domain_3_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4399:5: (lv_domain_3_0= rulegetDomainByID )
        // InternalAsmetaL.g:4400:6: lv_domain_3_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStaticFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_3_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,81,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred89_InternalAsmetaL

    // $ANTLR start synpred95_InternalAsmetaL
    public final void synpred95_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_domain_4_0 = null;


        // InternalAsmetaL.g:4580:4: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )
        // InternalAsmetaL.g:4580:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
        {
        // InternalAsmetaL.g:4580:4: ( (lv_domain_4_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4581:5: (lv_domain_4_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4581:5: (lv_domain_4_0= rulegetDomainByID )
        // InternalAsmetaL.g:4582:6: lv_domain_4_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLocalFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_4_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,81,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred95_InternalAsmetaL

    // $ANTLR start synpred97_InternalAsmetaL
    public final void synpred97_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_domain_4_0 = null;


        // InternalAsmetaL.g:4684:4: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )
        // InternalAsmetaL.g:4684:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
        {
        // InternalAsmetaL.g:4684:4: ( (lv_domain_4_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4685:5: (lv_domain_4_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4685:5: (lv_domain_4_0= rulegetDomainByID )
        // InternalAsmetaL.g:4686:6: lv_domain_4_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getControlledFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_4_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,81,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_InternalAsmetaL

    // $ANTLR start synpred99_InternalAsmetaL
    public final void synpred99_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_domain_4_0 = null;


        // InternalAsmetaL.g:4788:4: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )
        // InternalAsmetaL.g:4788:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
        {
        // InternalAsmetaL.g:4788:4: ( (lv_domain_4_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4789:5: (lv_domain_4_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4789:5: (lv_domain_4_0= rulegetDomainByID )
        // InternalAsmetaL.g:4790:6: lv_domain_4_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getSharedFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_4_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,81,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred99_InternalAsmetaL

    // $ANTLR start synpred101_InternalAsmetaL
    public final void synpred101_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_domain_4_0 = null;


        // InternalAsmetaL.g:4892:4: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )
        // InternalAsmetaL.g:4892:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
        {
        // InternalAsmetaL.g:4892:4: ( (lv_domain_4_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4893:5: (lv_domain_4_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4893:5: (lv_domain_4_0= rulegetDomainByID )
        // InternalAsmetaL.g:4894:6: lv_domain_4_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMonitoredFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_4_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,81,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred101_InternalAsmetaL

    // $ANTLR start synpred103_InternalAsmetaL
    public final void synpred103_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_domain_4_0 = null;


        // InternalAsmetaL.g:4996:4: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )
        // InternalAsmetaL.g:4996:4: ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->'
        {
        // InternalAsmetaL.g:4996:4: ( (lv_domain_4_0= rulegetDomainByID ) )
        // InternalAsmetaL.g:4997:5: (lv_domain_4_0= rulegetDomainByID )
        {
        // InternalAsmetaL.g:4997:5: (lv_domain_4_0= rulegetDomainByID )
        // InternalAsmetaL.g:4998:6: lv_domain_4_0= rulegetDomainByID
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getOutFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_61);
        lv_domain_4_0=rulegetDomainByID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,81,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred103_InternalAsmetaL

    // $ANTLR start synpred117_InternalAsmetaL
    public final void synpred117_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_Expression_0 = null;


        // InternalAsmetaL.g:5220:3: (this_Expression_0= ruleExpression )
        // InternalAsmetaL.g:5220:3: this_Expression_0= ruleExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_Expression_0=ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred117_InternalAsmetaL

    // $ANTLR start synpred118_InternalAsmetaL
    public final void synpred118_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_DomainTerm_1 = null;


        // InternalAsmetaL.g:5232:3: (this_DomainTerm_1= ruleDomainTerm )
        // InternalAsmetaL.g:5232:3: this_DomainTerm_1= ruleDomainTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_DomainTerm_1=ruleDomainTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred118_InternalAsmetaL

    // $ANTLR start synpred122_InternalAsmetaL
    public final void synpred122_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject lv_right_3_0 = null;


        // InternalAsmetaL.g:5342:4: ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )
        // InternalAsmetaL.g:5342:4: ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) )
        {
        // InternalAsmetaL.g:5342:4: ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) )
        // InternalAsmetaL.g:5343:5: ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) )
        {
        // InternalAsmetaL.g:5357:5: ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) )
        // InternalAsmetaL.g:5358:6: () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) )
        {
        // InternalAsmetaL.g:5358:6: ()
        // InternalAsmetaL.g:5359:7: 
        {
        if ( state.backtracking==0 ) {

          							/* */
          						
        }

        }

        // InternalAsmetaL.g:5368:6: ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) )
        // InternalAsmetaL.g:5369:7: ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) )
        {
        // InternalAsmetaL.g:5369:7: ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) )
        // InternalAsmetaL.g:5370:8: (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' )
        {
        // InternalAsmetaL.g:5370:8: (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' )
        int alt210=2;
        int LA210_0 = input.LA(1);

        if ( (LA210_0==94) ) {
            alt210=1;
        }
        else if ( (LA210_0==93) ) {
            alt210=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 210, 0, input);

            throw nvae;
        }
        switch (alt210) {
            case 1 :
                // InternalAsmetaL.g:5371:9: lv_op_2_1= 'implies'
                {
                lv_op_2_1=(Token)match(input,94,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalAsmetaL.g:5382:9: lv_op_2_2= 'iff'
                {
                lv_op_2_2=(Token)match(input,93,FOLLOW_68); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }

        // InternalAsmetaL.g:5397:4: ( (lv_right_3_0= ruleXorOrExpression ) )
        // InternalAsmetaL.g:5398:5: (lv_right_3_0= ruleXorOrExpression )
        {
        // InternalAsmetaL.g:5398:5: (lv_right_3_0= ruleXorOrExpression )
        // InternalAsmetaL.g:5399:6: lv_right_3_0= ruleXorOrExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getImpliesIffExpressionAccess().getRightXorOrExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_right_3_0=ruleXorOrExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred122_InternalAsmetaL

    // $ANTLR start synpred126_InternalAsmetaL
    public final void synpred126_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject lv_right_3_0 = null;


        // InternalAsmetaL.g:5448:4: ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )
        // InternalAsmetaL.g:5448:4: ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) )
        {
        // InternalAsmetaL.g:5448:4: ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) )
        // InternalAsmetaL.g:5449:5: ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) )
        {
        // InternalAsmetaL.g:5463:5: ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) )
        // InternalAsmetaL.g:5464:6: () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) )
        {
        // InternalAsmetaL.g:5464:6: ()
        // InternalAsmetaL.g:5465:7: 
        {
        if ( state.backtracking==0 ) {

          							/* */
          						
        }

        }

        // InternalAsmetaL.g:5474:6: ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) )
        // InternalAsmetaL.g:5475:7: ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) )
        {
        // InternalAsmetaL.g:5475:7: ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) )
        // InternalAsmetaL.g:5476:8: (lv_op_2_1= 'xor' | lv_op_2_2= 'or' )
        {
        // InternalAsmetaL.g:5476:8: (lv_op_2_1= 'xor' | lv_op_2_2= 'or' )
        int alt211=2;
        int LA211_0 = input.LA(1);

        if ( (LA211_0==91) ) {
            alt211=1;
        }
        else if ( (LA211_0==89) ) {
            alt211=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 211, 0, input);

            throw nvae;
        }
        switch (alt211) {
            case 1 :
                // InternalAsmetaL.g:5477:9: lv_op_2_1= 'xor'
                {
                lv_op_2_1=(Token)match(input,91,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalAsmetaL.g:5488:9: lv_op_2_2= 'or'
                {
                lv_op_2_2=(Token)match(input,89,FOLLOW_68); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }

        // InternalAsmetaL.g:5503:4: ( (lv_right_3_0= ruleAndExpression ) )
        // InternalAsmetaL.g:5504:5: (lv_right_3_0= ruleAndExpression )
        {
        // InternalAsmetaL.g:5504:5: (lv_right_3_0= ruleAndExpression )
        // InternalAsmetaL.g:5505:6: lv_right_3_0= ruleAndExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getXorOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_right_3_0=ruleAndExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred126_InternalAsmetaL

    // $ANTLR start synpred128_InternalAsmetaL
    public final void synpred128_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_op_2_0=null;
        EObject lv_right_3_0 = null;


        // InternalAsmetaL.g:5554:4: ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )
        // InternalAsmetaL.g:5554:4: ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) )
        {
        // InternalAsmetaL.g:5554:4: ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) )
        // InternalAsmetaL.g:5555:5: ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) )
        {
        // InternalAsmetaL.g:5565:5: ( () ( (lv_op_2_0= 'and' ) ) )
        // InternalAsmetaL.g:5566:6: () ( (lv_op_2_0= 'and' ) )
        {
        // InternalAsmetaL.g:5566:6: ()
        // InternalAsmetaL.g:5567:7: 
        {
        if ( state.backtracking==0 ) {

          							/* */
          						
        }

        }

        // InternalAsmetaL.g:5576:6: ( (lv_op_2_0= 'and' ) )
        // InternalAsmetaL.g:5577:7: (lv_op_2_0= 'and' )
        {
        // InternalAsmetaL.g:5577:7: (lv_op_2_0= 'and' )
        // InternalAsmetaL.g:5578:8: lv_op_2_0= 'and'
        {
        lv_op_2_0=(Token)match(input,88,FOLLOW_68); if (state.failed) return ;

        }


        }


        }


        }

        // InternalAsmetaL.g:5592:4: ( (lv_right_3_0= ruleEqualityExpression ) )
        // InternalAsmetaL.g:5593:5: (lv_right_3_0= ruleEqualityExpression )
        {
        // InternalAsmetaL.g:5593:5: (lv_right_3_0= ruleEqualityExpression )
        // InternalAsmetaL.g:5594:6: lv_right_3_0= ruleEqualityExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_right_3_0=ruleEqualityExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred128_InternalAsmetaL

    // $ANTLR start synpred140_InternalAsmetaL
    public final void synpred140_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject lv_right_3_0 = null;


        // InternalAsmetaL.g:5749:4: ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )
        // InternalAsmetaL.g:5749:4: ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) )
        {
        // InternalAsmetaL.g:5749:4: ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) )
        // InternalAsmetaL.g:5750:5: ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) )
        {
        // InternalAsmetaL.g:5768:5: ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) )
        // InternalAsmetaL.g:5769:6: () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) )
        {
        // InternalAsmetaL.g:5769:6: ()
        // InternalAsmetaL.g:5770:7: 
        {
        if ( state.backtracking==0 ) {

          							/* */
          						
        }

        }

        // InternalAsmetaL.g:5779:6: ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) )
        // InternalAsmetaL.g:5780:7: ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) )
        {
        // InternalAsmetaL.g:5780:7: ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) )
        // InternalAsmetaL.g:5781:8: (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' )
        {
        // InternalAsmetaL.g:5781:8: (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' )
        int alt213=4;
        switch ( input.LA(1) ) {
        case 98:
            {
            alt213=1;
            }
            break;
        case 99:
            {
            alt213=2;
            }
            break;
        case 100:
            {
            alt213=3;
            }
            break;
        case 101:
            {
            alt213=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 213, 0, input);

            throw nvae;
        }

        switch (alt213) {
            case 1 :
                // InternalAsmetaL.g:5782:9: lv_op_2_1= '>'
                {
                lv_op_2_1=(Token)match(input,98,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalAsmetaL.g:5793:9: lv_op_2_2= '<'
                {
                lv_op_2_2=(Token)match(input,99,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalAsmetaL.g:5804:9: lv_op_2_3= '>='
                {
                lv_op_2_3=(Token)match(input,100,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 4 :
                // InternalAsmetaL.g:5815:9: lv_op_2_4= '<='
                {
                lv_op_2_4=(Token)match(input,101,FOLLOW_68); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }

        // InternalAsmetaL.g:5830:4: ( (lv_right_3_0= ruleAdditiveExpression ) )
        // InternalAsmetaL.g:5831:5: (lv_right_3_0= ruleAdditiveExpression )
        {
        // InternalAsmetaL.g:5831:5: (lv_right_3_0= ruleAdditiveExpression )
        // InternalAsmetaL.g:5832:6: lv_right_3_0= ruleAdditiveExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getCompareExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_right_3_0=ruleAdditiveExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred140_InternalAsmetaL

    // $ANTLR start synpred150_InternalAsmetaL
    public final void synpred150_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        EObject lv_right_3_0 = null;


        // InternalAsmetaL.g:5987:4: ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )
        // InternalAsmetaL.g:5987:4: ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) )
        {
        // InternalAsmetaL.g:5987:4: ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) )
        // InternalAsmetaL.g:5988:5: ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) )
        {
        // InternalAsmetaL.g:6004:5: ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) )
        // InternalAsmetaL.g:6005:6: () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) )
        {
        // InternalAsmetaL.g:6005:6: ()
        // InternalAsmetaL.g:6006:7: 
        {
        if ( state.backtracking==0 ) {

          							/* */
          						
        }

        }

        // InternalAsmetaL.g:6015:6: ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) )
        // InternalAsmetaL.g:6016:7: ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) )
        {
        // InternalAsmetaL.g:6016:7: ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) )
        // InternalAsmetaL.g:6017:8: (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' )
        {
        // InternalAsmetaL.g:6017:8: (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' )
        int alt215=3;
        switch ( input.LA(1) ) {
        case 33:
            {
            alt215=1;
            }
            break;
        case 104:
            {
            alt215=2;
            }
            break;
        case 92:
            {
            alt215=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 215, 0, input);

            throw nvae;
        }

        switch (alt215) {
            case 1 :
                // InternalAsmetaL.g:6018:9: lv_op_2_1= '*'
                {
                lv_op_2_1=(Token)match(input,33,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalAsmetaL.g:6029:9: lv_op_2_2= '/'
                {
                lv_op_2_2=(Token)match(input,104,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalAsmetaL.g:6040:9: lv_op_2_3= 'mod'
                {
                lv_op_2_3=(Token)match(input,92,FOLLOW_68); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }

        // InternalAsmetaL.g:6055:4: ( (lv_right_3_0= rulePowerExpression ) )
        // InternalAsmetaL.g:6056:5: (lv_right_3_0= rulePowerExpression )
        {
        // InternalAsmetaL.g:6056:5: (lv_right_3_0= rulePowerExpression )
        // InternalAsmetaL.g:6057:6: lv_right_3_0= rulePowerExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightPowerExpressionParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_right_3_0=rulePowerExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred150_InternalAsmetaL

    // $ANTLR start synpred155_InternalAsmetaL
    public final void synpred155_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_op_0_1=null;
        Token lv_op_0_2=null;
        Token lv_op_0_3=null;
        EObject lv_operand_1_0 = null;


        // InternalAsmetaL.g:6183:3: ( ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) ) )
        // InternalAsmetaL.g:6183:3: ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) )
        {
        // InternalAsmetaL.g:6183:3: ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) )
        // InternalAsmetaL.g:6184:4: ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) )
        {
        // InternalAsmetaL.g:6184:4: ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) )
        // InternalAsmetaL.g:6185:5: ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) )
        {
        // InternalAsmetaL.g:6185:5: ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) )
        // InternalAsmetaL.g:6186:6: (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' )
        {
        // InternalAsmetaL.g:6186:6: (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' )
        int alt216=3;
        switch ( input.LA(1) ) {
        case 90:
            {
            alt216=1;
            }
            break;
        case 102:
            {
            alt216=2;
            }
            break;
        case 103:
            {
            alt216=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 216, 0, input);

            throw nvae;
        }

        switch (alt216) {
            case 1 :
                // InternalAsmetaL.g:6187:7: lv_op_0_1= 'not'
                {
                lv_op_0_1=(Token)match(input,90,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalAsmetaL.g:6198:7: lv_op_0_2= '+'
                {
                lv_op_0_2=(Token)match(input,102,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalAsmetaL.g:6209:7: lv_op_0_3= '-'
                {
                lv_op_0_3=(Token)match(input,103,FOLLOW_68); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalAsmetaL.g:6222:4: ( (lv_operand_1_0= ruleUnaryOperation ) )
        // InternalAsmetaL.g:6223:5: (lv_operand_1_0= ruleUnaryOperation )
        {
        // InternalAsmetaL.g:6223:5: (lv_operand_1_0= ruleUnaryOperation )
        // InternalAsmetaL.g:6224:6: lv_operand_1_0= ruleUnaryOperation
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getUnaryOperationAccess().getOperandUnaryOperationParserRuleCall_0_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operand_1_0=ruleUnaryOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred155_InternalAsmetaL

    // $ANTLR start synpred156_InternalAsmetaL
    public final void synpred156_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_basicExpr_2 = null;


        // InternalAsmetaL.g:6243:3: (this_basicExpr_2= rulebasicExpr )
        // InternalAsmetaL.g:6243:3: this_basicExpr_2= rulebasicExpr
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_basicExpr_2=rulebasicExpr();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred156_InternalAsmetaL

    // $ANTLR start synpred158_InternalAsmetaL
    public final void synpred158_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_FunctionTerm_0 = null;


        // InternalAsmetaL.g:6365:3: (this_FunctionTerm_0= ruleFunctionTerm )
        // InternalAsmetaL.g:6365:3: this_FunctionTerm_0= ruleFunctionTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_FunctionTerm_0=ruleFunctionTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred158_InternalAsmetaL

    // $ANTLR start synpred174_InternalAsmetaL
    public final void synpred174_InternalAsmetaL_fragment() throws RecognitionException {   
        Token lv_symbol_0_1=null;

        // InternalAsmetaL.g:7075:5: (lv_symbol_0_1= RULE_NUMBER_TOKEN )
        // InternalAsmetaL.g:7075:5: lv_symbol_0_1= RULE_NUMBER_TOKEN
        {
        lv_symbol_0_1=(Token)match(input,RULE_NUMBER_TOKEN,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred174_InternalAsmetaL

    // $ANTLR start synpred181_InternalAsmetaL
    public final void synpred181_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_TupleTerm_2 = null;


        // InternalAsmetaL.g:7228:3: (this_TupleTerm_2= ruleTupleTerm )
        // InternalAsmetaL.g:7228:3: this_TupleTerm_2= ruleTupleTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_TupleTerm_2=ruleTupleTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred181_InternalAsmetaL

    // $ANTLR start synpred182_InternalAsmetaL
    public final void synpred182_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_VariableBindingTerm_3 = null;


        // InternalAsmetaL.g:7240:3: (this_VariableBindingTerm_3= ruleVariableBindingTerm )
        // InternalAsmetaL.g:7240:3: this_VariableBindingTerm_3= ruleVariableBindingTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_VariableBindingTerm_3=ruleVariableBindingTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred182_InternalAsmetaL

    // $ANTLR start synpred183_InternalAsmetaL
    public final void synpred183_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_CollectionTerm_4 = null;


        // InternalAsmetaL.g:7252:3: (this_CollectionTerm_4= ruleCollectionTerm )
        // InternalAsmetaL.g:7252:3: this_CollectionTerm_4= ruleCollectionTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_CollectionTerm_4=ruleCollectionTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred183_InternalAsmetaL

    // $ANTLR start synpred189_InternalAsmetaL
    public final void synpred189_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_MapTerm_1 = null;


        // InternalAsmetaL.g:7590:3: (this_MapTerm_1= ruleMapTerm )
        // InternalAsmetaL.g:7590:3: this_MapTerm_1= ruleMapTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_MapTerm_1=ruleMapTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred189_InternalAsmetaL

    // $ANTLR start synpred190_InternalAsmetaL
    public final void synpred190_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_SetTerm_2 = null;


        // InternalAsmetaL.g:7602:3: (this_SetTerm_2= ruleSetTerm )
        // InternalAsmetaL.g:7602:3: this_SetTerm_2= ruleSetTerm
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_SetTerm_2=ruleSetTerm();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred190_InternalAsmetaL

    // $ANTLR start synpred222_InternalAsmetaL
    public final void synpred222_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_SetCT_0 = null;


        // InternalAsmetaL.g:8895:3: (this_SetCT_0= ruleSetCT )
        // InternalAsmetaL.g:8895:3: this_SetCT_0= ruleSetCT
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_SetCT_0=ruleSetCT();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred222_InternalAsmetaL

    // $ANTLR start synpred223_InternalAsmetaL
    public final void synpred223_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_MapCT_1 = null;


        // InternalAsmetaL.g:8907:3: (this_MapCT_1= ruleMapCT )
        // InternalAsmetaL.g:8907:3: this_MapCT_1= ruleMapCT
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_MapCT_1=ruleMapCT();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred223_InternalAsmetaL

    // $ANTLR start synpred235_InternalAsmetaL
    public final void synpred235_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_UpdateRule_0 = null;


        // InternalAsmetaL.g:9721:3: (this_UpdateRule_0= ruleUpdateRule )
        // InternalAsmetaL.g:9721:3: this_UpdateRule_0= ruleUpdateRule
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_UpdateRule_0=ruleUpdateRule();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred235_InternalAsmetaL

    // $ANTLR start synpred236_InternalAsmetaL
    public final void synpred236_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_TurboReturnRule_1 = null;


        // InternalAsmetaL.g:9733:3: (this_TurboReturnRule_1= ruleTurboReturnRule )
        // InternalAsmetaL.g:9733:3: this_TurboReturnRule_1= ruleTurboReturnRule
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_TurboReturnRule_1=ruleTurboReturnRule();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred236_InternalAsmetaL

    // $ANTLR start synpred237_InternalAsmetaL
    public final void synpred237_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_BasicRule_2 = null;


        // InternalAsmetaL.g:9745:3: (this_BasicRule_2= ruleBasicRule )
        // InternalAsmetaL.g:9745:3: this_BasicRule_2= ruleBasicRule
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_BasicRule_2=ruleBasicRule();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred237_InternalAsmetaL

    // $ANTLR start synpred238_InternalAsmetaL
    public final void synpred238_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_TermAsRule_3 = null;


        // InternalAsmetaL.g:9757:3: (this_TermAsRule_3= ruleTermAsRule )
        // InternalAsmetaL.g:9757:3: this_TermAsRule_3= ruleTermAsRule
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_TermAsRule_3=ruleTermAsRule();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred238_InternalAsmetaL

    // $ANTLR start synpred239_InternalAsmetaL
    public final void synpred239_InternalAsmetaL_fragment() throws RecognitionException {   
        EObject this_TurboRule_4 = null;


        // InternalAsmetaL.g:9769:3: (this_TurboRule_4= ruleTurboRule )
        // InternalAsmetaL.g:9769:3: this_TurboRule_4= ruleTurboRule
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FOLLOW_2);
        this_TurboRule_4=ruleTurboRule();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred239_InternalAsmetaL

    // $ANTLR start synpred255_InternalAsmetaL
    public final void synpred255_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        EObject lv_ifnone_13_0 = null;


        // InternalAsmetaL.g:10449:4: (otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) ) )
        // InternalAsmetaL.g:10449:4: otherlv_12= 'ifnone' ( (lv_ifnone_13_0= ruleRule ) )
        {
        otherlv_12=(Token)match(input,134,FOLLOW_44); if (state.failed) return ;
        // InternalAsmetaL.g:10453:4: ( (lv_ifnone_13_0= ruleRule ) )
        // InternalAsmetaL.g:10454:5: (lv_ifnone_13_0= ruleRule )
        {
        // InternalAsmetaL.g:10454:5: (lv_ifnone_13_0= ruleRule )
        // InternalAsmetaL.g:10455:6: lv_ifnone_13_0= ruleRule
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getChooseRuleAccess().getIfnoneRuleParserRuleCall_8_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_ifnone_13_0=ruleRule();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred255_InternalAsmetaL

    // $ANTLR start synpred269_InternalAsmetaL
    public final void synpred269_InternalAsmetaL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_localFunction_4_0 = null;

        EObject lv_init_6_0 = null;


        // InternalAsmetaL.g:11400:4: ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )
        // InternalAsmetaL.g:11400:4: ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']'
        {
        // InternalAsmetaL.g:11400:4: ( (lv_localFunction_4_0= ruleLocalFunction ) )
        // InternalAsmetaL.g:11401:5: (lv_localFunction_4_0= ruleLocalFunction )
        {
        // InternalAsmetaL.g:11401:5: (lv_localFunction_4_0= ruleLocalFunction )
        // InternalAsmetaL.g:11402:6: lv_localFunction_4_0= ruleLocalFunction
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionLocalFunctionParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_114);
        lv_localFunction_4_0=ruleLocalFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,118,FOLLOW_44); if (state.failed) return ;
        // InternalAsmetaL.g:11423:4: ( (lv_init_6_0= ruleRule ) )
        // InternalAsmetaL.g:11424:5: (lv_init_6_0= ruleRule )
        {
        // InternalAsmetaL.g:11424:5: (lv_init_6_0= ruleRule )
        // InternalAsmetaL.g:11425:6: lv_init_6_0= ruleRule
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getInitRuleParserRuleCall_4_2_0());
          					
        }
        pushFollow(FOLLOW_89);
        lv_init_6_0=ruleRule();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,119,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred269_InternalAsmetaL

    // $ANTLR start synpred277_InternalAsmetaL
    public final void synpred277_InternalAsmetaL_fragment() throws RecognitionException {   
        Token kw=null;

        // InternalAsmetaL.g:11900:4: ( (kw= '../' )* )
        // InternalAsmetaL.g:11900:4: (kw= '../' )*
        {
        // InternalAsmetaL.g:11900:4: (kw= '../' )*
        loop237:
        do {
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==142) ) {
                alt237=1;
            }


            switch (alt237) {
        	case 1 :
        	    // InternalAsmetaL.g:11901:5: kw= '../'
        	    {
        	    kw=(Token)match(input,142,FOLLOW_128); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop237;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred277_InternalAsmetaL

    // $ANTLR start synpred279_InternalAsmetaL
    public final void synpred279_InternalAsmetaL_fragment() throws RecognitionException {   
        Token kw=null;

        // InternalAsmetaL.g:11908:4: ( (kw= './' )* )
        // InternalAsmetaL.g:11908:4: (kw= './' )*
        {
        // InternalAsmetaL.g:11908:4: (kw= './' )*
        loop238:
        do {
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==143) ) {
                alt238=1;
            }


            switch (alt238) {
        	case 1 :
        	    // InternalAsmetaL.g:11909:5: kw= './'
        	    {
        	    kw=(Token)match(input,143,FOLLOW_129); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop238;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred279_InternalAsmetaL

    // Delegated rules

    public final boolean synpred88_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred117_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred117_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred222_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred222_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred277_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred277_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred118_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred118_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred235_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred235_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred269_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred269_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_InternalAsmetaL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_InternalAsmetaL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA70 dfa70 = new DFA70(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA90 dfa90 = new DFA90(this);
    protected DFA91 dfa91 = new DFA91(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA104 dfa104 = new DFA104(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA177 dfa177 = new DFA177(this);
    static final String dfa_1s = "\26\uffff";
    static final String dfa_2s = "\1\5\23\0\2\uffff";
    static final String dfa_3s = "\1\117\23\0\2\uffff";
    static final String dfa_4s = "\24\uffff\1\1\1\2";
    static final String dfa_5s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\2\uffff}>";
    static final String[] dfa_6s = {
            "\1\7\44\uffff\1\22\15\uffff\1\20\3\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\21\1\23\4\uffff\1\1\1\2\1\3\1\4\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA70 extends DFA {

        public DFA70(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 70;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4307:3: ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA70_1 = input.LA(1);

                         
                        int index70_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA70_2 = input.LA(1);

                         
                        int index70_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA70_3 = input.LA(1);

                         
                        int index70_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA70_4 = input.LA(1);

                         
                        int index70_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA70_5 = input.LA(1);

                         
                        int index70_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA70_6 = input.LA(1);

                         
                        int index70_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA70_7 = input.LA(1);

                         
                        int index70_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA70_8 = input.LA(1);

                         
                        int index70_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA70_9 = input.LA(1);

                         
                        int index70_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA70_10 = input.LA(1);

                         
                        int index70_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA70_11 = input.LA(1);

                         
                        int index70_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA70_12 = input.LA(1);

                         
                        int index70_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA70_13 = input.LA(1);

                         
                        int index70_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA70_14 = input.LA(1);

                         
                        int index70_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA70_15 = input.LA(1);

                         
                        int index70_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA70_16 = input.LA(1);

                         
                        int index70_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA70_17 = input.LA(1);

                         
                        int index70_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA70_18 = input.LA(1);

                         
                        int index70_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA70_19 = input.LA(1);

                         
                        int index70_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index70_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 70, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4397:3: ( ( (lv_domain_3_0= rulegetDomainByID ) ) otherlv_4= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_1 = input.LA(1);

                         
                        int index71_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_2 = input.LA(1);

                         
                        int index71_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_3 = input.LA(1);

                         
                        int index71_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA71_4 = input.LA(1);

                         
                        int index71_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA71_5 = input.LA(1);

                         
                        int index71_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA71_6 = input.LA(1);

                         
                        int index71_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA71_7 = input.LA(1);

                         
                        int index71_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA71_8 = input.LA(1);

                         
                        int index71_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA71_9 = input.LA(1);

                         
                        int index71_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA71_10 = input.LA(1);

                         
                        int index71_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA71_11 = input.LA(1);

                         
                        int index71_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA71_12 = input.LA(1);

                         
                        int index71_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA71_13 = input.LA(1);

                         
                        int index71_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA71_14 = input.LA(1);

                         
                        int index71_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA71_15 = input.LA(1);

                         
                        int index71_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA71_16 = input.LA(1);

                         
                        int index71_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA71_17 = input.LA(1);

                         
                        int index71_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA71_18 = input.LA(1);

                         
                        int index71_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA71_19 = input.LA(1);

                         
                        int index71_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred89_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index71_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4579:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_3 = input.LA(1);

                         
                        int index74_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA74_4 = input.LA(1);

                         
                        int index74_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA74_5 = input.LA(1);

                         
                        int index74_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA74_6 = input.LA(1);

                         
                        int index74_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA74_7 = input.LA(1);

                         
                        int index74_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA74_8 = input.LA(1);

                         
                        int index74_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA74_9 = input.LA(1);

                         
                        int index74_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA74_10 = input.LA(1);

                         
                        int index74_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA74_11 = input.LA(1);

                         
                        int index74_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA74_12 = input.LA(1);

                         
                        int index74_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA74_13 = input.LA(1);

                         
                        int index74_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA74_14 = input.LA(1);

                         
                        int index74_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA74_15 = input.LA(1);

                         
                        int index74_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA74_16 = input.LA(1);

                         
                        int index74_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA74_17 = input.LA(1);

                         
                        int index74_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA74_18 = input.LA(1);

                         
                        int index74_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA74_19 = input.LA(1);

                         
                        int index74_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index74_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4683:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_1 = input.LA(1);

                         
                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA76_2 = input.LA(1);

                         
                        int index76_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA76_3 = input.LA(1);

                         
                        int index76_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA76_4 = input.LA(1);

                         
                        int index76_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA76_5 = input.LA(1);

                         
                        int index76_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA76_6 = input.LA(1);

                         
                        int index76_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA76_7 = input.LA(1);

                         
                        int index76_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA76_8 = input.LA(1);

                         
                        int index76_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA76_9 = input.LA(1);

                         
                        int index76_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA76_10 = input.LA(1);

                         
                        int index76_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA76_11 = input.LA(1);

                         
                        int index76_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA76_12 = input.LA(1);

                         
                        int index76_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA76_13 = input.LA(1);

                         
                        int index76_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA76_14 = input.LA(1);

                         
                        int index76_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA76_15 = input.LA(1);

                         
                        int index76_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA76_16 = input.LA(1);

                         
                        int index76_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA76_17 = input.LA(1);

                         
                        int index76_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA76_18 = input.LA(1);

                         
                        int index76_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA76_19 = input.LA(1);

                         
                        int index76_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index76_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4787:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_1 = input.LA(1);

                         
                        int index78_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA78_2 = input.LA(1);

                         
                        int index78_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA78_3 = input.LA(1);

                         
                        int index78_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA78_4 = input.LA(1);

                         
                        int index78_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA78_5 = input.LA(1);

                         
                        int index78_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA78_6 = input.LA(1);

                         
                        int index78_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA78_7 = input.LA(1);

                         
                        int index78_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA78_8 = input.LA(1);

                         
                        int index78_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA78_9 = input.LA(1);

                         
                        int index78_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA78_10 = input.LA(1);

                         
                        int index78_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA78_11 = input.LA(1);

                         
                        int index78_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA78_12 = input.LA(1);

                         
                        int index78_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA78_13 = input.LA(1);

                         
                        int index78_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA78_14 = input.LA(1);

                         
                        int index78_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA78_15 = input.LA(1);

                         
                        int index78_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA78_16 = input.LA(1);

                         
                        int index78_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA78_17 = input.LA(1);

                         
                        int index78_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA78_18 = input.LA(1);

                         
                        int index78_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA78_19 = input.LA(1);

                         
                        int index78_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred99_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index78_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4891:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_1 = input.LA(1);

                         
                        int index80_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA80_2 = input.LA(1);

                         
                        int index80_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA80_3 = input.LA(1);

                         
                        int index80_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA80_4 = input.LA(1);

                         
                        int index80_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA80_5 = input.LA(1);

                         
                        int index80_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA80_6 = input.LA(1);

                         
                        int index80_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA80_7 = input.LA(1);

                         
                        int index80_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA80_8 = input.LA(1);

                         
                        int index80_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA80_9 = input.LA(1);

                         
                        int index80_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA80_10 = input.LA(1);

                         
                        int index80_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA80_11 = input.LA(1);

                         
                        int index80_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA80_12 = input.LA(1);

                         
                        int index80_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA80_13 = input.LA(1);

                         
                        int index80_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA80_14 = input.LA(1);

                         
                        int index80_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA80_15 = input.LA(1);

                         
                        int index80_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA80_16 = input.LA(1);

                         
                        int index80_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA80_17 = input.LA(1);

                         
                        int index80_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA80_18 = input.LA(1);

                         
                        int index80_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA80_19 = input.LA(1);

                         
                        int index80_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index80_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "4995:3: ( ( (lv_domain_4_0= rulegetDomainByID ) ) otherlv_5= '->' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_1 = input.LA(1);

                         
                        int index82_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA82_2 = input.LA(1);

                         
                        int index82_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA82_3 = input.LA(1);

                         
                        int index82_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA82_4 = input.LA(1);

                         
                        int index82_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA82_5 = input.LA(1);

                         
                        int index82_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA82_6 = input.LA(1);

                         
                        int index82_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA82_7 = input.LA(1);

                         
                        int index82_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA82_8 = input.LA(1);

                         
                        int index82_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA82_9 = input.LA(1);

                         
                        int index82_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA82_10 = input.LA(1);

                         
                        int index82_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA82_11 = input.LA(1);

                         
                        int index82_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA82_12 = input.LA(1);

                         
                        int index82_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA82_13 = input.LA(1);

                         
                        int index82_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA82_14 = input.LA(1);

                         
                        int index82_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA82_15 = input.LA(1);

                         
                        int index82_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA82_16 = input.LA(1);

                         
                        int index82_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA82_17 = input.LA(1);

                         
                        int index82_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA82_18 = input.LA(1);

                         
                        int index82_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA82_19 = input.LA(1);

                         
                        int index82_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred103_InternalAsmetaL()) ) {s = 20;}

                        else if ( (true) ) {s = 21;}

                         
                        input.seek(index82_19);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\61\uffff";
    static final String dfa_8s = "\1\5\4\uffff\1\0\21\uffff\1\0\31\uffff";
    static final String dfa_9s = "\1\u0090\4\uffff\1\0\21\uffff\1\0\31\uffff";
    static final String dfa_10s = "\1\uffff\1\1\26\uffff\1\2\21\uffff\1\3\6\uffff";
    static final String dfa_11s = "\5\uffff\1\0\21\uffff\1\1\31\uffff}>";
    static final String[] dfa_12s = {
            "\1\5\10\1\17\uffff\1\27\14\uffff\1\30\15\uffff\1\30\3\uffff\12\30\1\uffff\1\52\2\uffff\6\30\10\uffff\7\1\4\uffff\1\52\2\uffff\2\1\3\uffff\3\1\1\52\3\uffff\1\52\3\uffff\1\52\5\uffff\1\52\1\uffff\1\52\21\uffff\1\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "5219:2: (this_Expression_0= ruleExpression | this_DomainTerm_1= ruleDomainTerm | this_ExtendedTerm_2= ruleExtendedTerm )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_5 = input.LA(1);

                         
                        int index86_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalAsmetaL()) ) {s = 1;}

                        else if ( (synpred118_InternalAsmetaL()) ) {s = 24;}

                         
                        input.seek(index86_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_23 = input.LA(1);

                         
                        int index86_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred117_InternalAsmetaL()) ) {s = 1;}

                        else if ( (true) ) {s = 42;}

                         
                        input.seek(index86_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\102\uffff";
    static final String dfa_14s = "\1\1\101\uffff";
    static final String dfa_15s = "\1\5\52\uffff\2\0\25\uffff";
    static final String dfa_16s = "\1\u0090\52\uffff\2\0\25\uffff";
    static final String dfa_17s = "\1\uffff\1\2\77\uffff\1\1";
    static final String dfa_18s = "\53\uffff\1\0\1\1\25\uffff}>";
    static final String[] dfa_19s = {
            "\3\1\22\uffff\2\1\2\uffff\2\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\10\1\17\uffff\2\1\7\uffff\1\1\1\uffff\1\1\4\uffff\5\1\1\53\1\54\1\1\2\uffff\1\1\13\uffff\10\1\1\uffff\1\1\2\uffff\4\1\2\uffff\1\1\1\uffff\12\1\1\uffff\1\1\2\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "()* loopback of 5341:3: ( ( ( ( () ( ( ( 'implies' | 'iff' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'implies' | lv_op_2_2= 'iff' ) ) ) ) ) ( (lv_right_3_0= ruleXorOrExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA88_43 = input.LA(1);

                         
                        int index88_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalAsmetaL()) ) {s = 65;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index88_43);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA88_44 = input.LA(1);

                         
                        int index88_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalAsmetaL()) ) {s = 65;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index88_44);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 88, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\1\5\50\uffff\1\0\1\uffff\1\0\26\uffff";
    static final String dfa_21s = "\1\u0090\50\uffff\1\0\1\uffff\1\0\26\uffff";
    static final String dfa_22s = "\51\uffff\1\0\1\uffff\1\1\26\uffff}>";
    static final String[] dfa_23s = {
            "\3\1\22\uffff\2\1\2\uffff\2\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\10\1\17\uffff\2\1\7\uffff\1\1\1\uffff\1\1\4\uffff\1\1\1\51\1\1\1\53\4\1\2\uffff\1\1\13\uffff\10\1\1\uffff\1\1\2\uffff\4\1\2\uffff\1\1\1\uffff\12\1\1\uffff\1\1\2\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[][] dfa_23 = unpackEncodedStringArray(dfa_23s);

    class DFA90 extends DFA {

        public DFA90(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 90;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_17;
            this.special = dfa_22;
            this.transition = dfa_23;
        }
        public String getDescription() {
            return "()* loopback of 5447:3: ( ( ( ( () ( ( ( 'xor' | 'or' ) ) ) ) )=> ( () ( ( (lv_op_2_1= 'xor' | lv_op_2_2= 'or' ) ) ) ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA90_41 = input.LA(1);

                         
                        int index90_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalAsmetaL()) ) {s = 65;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index90_41);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA90_43 = input.LA(1);

                         
                        int index90_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalAsmetaL()) ) {s = 65;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index90_43);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 90, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_24s = "\1\5\51\uffff\1\0\27\uffff";
    static final String dfa_25s = "\1\u0090\51\uffff\1\0\27\uffff";
    static final String dfa_26s = "\52\uffff\1\0\27\uffff}>";
    static final String[] dfa_27s = {
            "\3\1\22\uffff\2\1\2\uffff\2\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\10\1\17\uffff\2\1\7\uffff\1\1\1\uffff\1\1\4\uffff\1\52\7\1\2\uffff\1\1\13\uffff\10\1\1\uffff\1\1\2\uffff\4\1\2\uffff\1\1\1\uffff\12\1\1\uffff\1\1\2\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA91 extends DFA {

        public DFA91(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 91;
            this.eot = dfa_13;
            this.eof = dfa_14;
            this.min = dfa_24;
            this.max = dfa_25;
            this.accept = dfa_17;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "()* loopback of 5553:3: ( ( ( ( () ( ( 'and' ) ) ) )=> ( () ( (lv_op_2_0= 'and' ) ) ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA91_42 = input.LA(1);

                         
                        int index91_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalAsmetaL()) ) {s = 65;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index91_42);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 91, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\1\1\1\uffff\1\1\3\uffff\1\3\17\uffff";
    static final String dfa_29s = "\1\5\1\uffff\1\5\1\uffff\1\35\1\0\1\5\7\0\2\5\6\0";
    static final String dfa_30s = "\1\u0090\1\uffff\1\u0090\1\uffff\1\166\1\0\1\u0090\7\0\1\u0088\1\136\6\0";
    static final String dfa_31s = "\1\uffff\1\2\1\uffff\1\1\22\uffff";
    static final String dfa_32s = "\5\uffff\1\2\1\uffff\1\5\1\6\1\15\1\7\1\10\1\11\1\12\2\uffff\1\3\1\14\1\0\1\4\1\1\1\13}>";
    static final String[] dfa_33s = {
            "\3\1\22\uffff\2\1\2\uffff\2\1\3\uffff\5\1\1\uffff\1\1\2\uffff\4\1\1\uffff\10\1\17\uffff\2\1\7\uffff\1\1\1\uffff\1\1\4\uffff\10\1\1\uffff\1\1\1\2\3\3\10\uffff\10\1\1\uffff\1\1\2\uffff\4\1\2\uffff\1\1\1\uffff\12\1\1\uffff\1\1\2\uffff\1\1",
            "",
            "\1\5\1\4\1\6\6\3\14\uffff\2\1\1\uffff\1\3\2\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\10\1\17\uffff\2\1\7\uffff\1\1\1\uffff\1\1\4\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\1\2\uffff\1\1\3\uffff\2\3\3\uffff\3\3\10\1\1\uffff\1\1\2\uffff\4\1\2\uffff\1\1\1\uffff\12\1\1\uffff\1\1\2\uffff\1\16",
            "",
            "\1\1\114\uffff\1\17\13\uffff\1\1",
            "\1\uffff",
            "\3\3\22\uffff\2\3\2\uffff\2\3\1\uffff\1\3\1\uffff\5\3\1\uffff\1\3\2\uffff\4\3\1\uffff\10\3\17\uffff\2\3\7\uffff\1\3\1\uffff\1\3\4\uffff\10\3\1\uffff\11\3\1\17\3\uffff\10\3\1\1\1\3\2\uffff\4\3\2\uffff\1\3\1\uffff\12\3\1\uffff\1\3\2\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\20\43\uffff\1\22\3\uffff\1\21\132\uffff\1\23",
            "\1\24\122\uffff\1\7\1\10\1\25\1\12\1\13\1\14\1\15",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff"
    };
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_1;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 5748:3: ( ( ( ( () ( ( ( '>' | '<' | '>=' | '<=' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '>' | lv_op_2_2= '<' | lv_op_2_3= '>=' | lv_op_2_4= '<=' ) ) ) ) ) ( (lv_right_3_0= ruleAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_18 = input.LA(1);

                         
                        int index95_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_18);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA95_20 = input.LA(1);

                         
                        int index95_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_20);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA95_5 = input.LA(1);

                         
                        int index95_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA95_16 = input.LA(1);

                         
                        int index95_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_16);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA95_19 = input.LA(1);

                         
                        int index95_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_19);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA95_7 = input.LA(1);

                         
                        int index95_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA95_8 = input.LA(1);

                         
                        int index95_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA95_10 = input.LA(1);

                         
                        int index95_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA95_11 = input.LA(1);

                         
                        int index95_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_11);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA95_12 = input.LA(1);

                         
                        int index95_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_12);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA95_13 = input.LA(1);

                         
                        int index95_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_13);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA95_21 = input.LA(1);

                         
                        int index95_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_21);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA95_17 = input.LA(1);

                         
                        int index95_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_17);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA95_9 = input.LA(1);

                         
                        int index95_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalAsmetaL()) ) {s = 3;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index95_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\112\uffff";
    static final String dfa_35s = "\1\1\111\uffff";
    static final String dfa_36s = "\1\5\62\uffff\1\0\26\uffff";
    static final String dfa_37s = "\1\u0090\62\uffff\1\0\26\uffff";
    static final String dfa_38s = "\1\uffff\1\2\106\uffff\1\1\1\uffff";
    static final String dfa_39s = "\63\uffff\1\0\26\uffff}>";
    static final String[] dfa_40s = {
            "\3\1\22\uffff\2\1\2\uffff\2\1\1\uffff\1\110\1\uffff\5\1\1\uffff\1\1\2\uffff\4\1\1\uffff\10\1\17\uffff\2\1\7\uffff\1\1\1\uffff\1\1\4\uffff\4\1\1\63\3\1\1\uffff\7\1\1\110\5\uffff\10\1\1\uffff\1\1\2\uffff\4\1\2\uffff\1\1\1\uffff\12\1\1\uffff\1\1\2\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "()* loopback of 5986:3: ( ( ( ( () ( ( ( '*' | '/' | 'mod' ) ) ) ) )=> ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' | lv_op_2_3= 'mod' ) ) ) ) ) ( (lv_right_3_0= rulePowerExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_51 = input.LA(1);

                         
                        int index99_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred150_InternalAsmetaL()) ) {s = 72;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index99_51);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\32\uffff";
    static final String dfa_42s = "\1\5\3\0\23\uffff\1\0\2\uffff";
    static final String dfa_43s = "\1\u0090\3\0\23\uffff\1\0\2\uffff";
    static final String dfa_44s = "\4\uffff\1\2\23\uffff\1\1\1\3";
    static final String dfa_45s = "\1\uffff\1\0\1\1\1\2\23\uffff\1\3\2\uffff}>";
    static final String[] dfa_46s = {
            "\11\4\17\uffff\1\27\72\uffff\2\4\1\1\4\4\7\uffff\1\2\1\3\3\uffff\3\4\42\uffff\1\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_41;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "6182:2: ( ( ( ( (lv_op_0_1= 'not' | lv_op_0_2= '+' | lv_op_0_3= '-' ) ) ) ( (lv_operand_1_0= ruleUnaryOperation ) ) ) | this_basicExpr_2= rulebasicExpr | this_ParenthesizedExpression_3= ruleParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_1 = input.LA(1);

                         
                        int index102_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalAsmetaL()) ) {s = 24;}

                        else if ( (synpred156_InternalAsmetaL()) ) {s = 4;}

                         
                        input.seek(index102_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA102_2 = input.LA(1);

                         
                        int index102_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalAsmetaL()) ) {s = 24;}

                        else if ( (synpred156_InternalAsmetaL()) ) {s = 4;}

                         
                        input.seek(index102_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA102_3 = input.LA(1);

                         
                        int index102_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred155_InternalAsmetaL()) ) {s = 24;}

                        else if ( (synpred156_InternalAsmetaL()) ) {s = 4;}

                         
                        input.seek(index102_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA102_23 = input.LA(1);

                         
                        int index102_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred156_InternalAsmetaL()) ) {s = 4;}

                        else if ( (true) ) {s = 25;}

                         
                        input.seek(index102_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_47s = "\21\uffff";
    static final String dfa_48s = "\3\uffff\1\13\15\uffff";
    static final String dfa_49s = "\1\5\1\152\1\0\1\5\7\0\2\uffff\1\5\2\uffff\1\0";
    static final String dfa_50s = "\1\u0090\1\152\1\0\1\u0090\7\0\2\uffff\1\136\2\uffff\1\0";
    static final String dfa_51s = "\13\uffff\1\2\1\3\1\uffff\1\1\1\4\1\uffff";
    static final String dfa_52s = "\2\uffff\1\4\1\uffff\1\7\1\5\1\2\1\0\1\10\1\6\1\1\5\uffff\1\3}>";
    static final String[] dfa_53s = {
            "\1\2\1\1\1\3\6\13\112\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\7\uffff\2\13\3\uffff\3\13\42\uffff\1\14",
            "\1\15",
            "\1\uffff",
            "\3\13\22\uffff\2\13\2\uffff\2\13\1\uffff\1\13\1\uffff\5\13\1\uffff\1\13\2\uffff\4\13\1\uffff\10\13\17\uffff\2\13\7\uffff\1\13\1\uffff\1\13\4\uffff\10\13\1\uffff\11\13\1\15\3\uffff\10\13\1\uffff\1\13\2\uffff\4\13\2\uffff\1\13\1\uffff\12\13\1\uffff\1\13\2\uffff\1\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\20\122\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12",
            "",
            "",
            "\1\uffff"
    };

    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = dfa_47;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "6364:2: (this_FunctionTerm_0= ruleFunctionTerm | this_ConstantTerm_1= ruleConstantTerm | this_VariableTerm_2= ruleVariableTerm | this_LocationTerm_3= ruleLocationTerm )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA104_7 = input.LA(1);

                         
                        int index104_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index104_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA104_10 = input.LA(1);

                         
                        int index104_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index104_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA104_6 = input.LA(1);

                         
                        int index104_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index104_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA104_16 = input.LA(1);

                         
                        int index104_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index104_16);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA104_2 = input.LA(1);

                         
                        int index104_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index104_2);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA104_5 = input.LA(1);

                         
                        int index104_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index104_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA104_9 = input.LA(1);

                         
                        int index104_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index104_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA104_4 = input.LA(1);

                         
                        int index104_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index104_4);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA104_8 = input.LA(1);

                         
                        int index104_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred158_InternalAsmetaL()) ) {s = 14;}

                        else if ( (true) ) {s = 15;}

                         
                        input.seek(index104_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\13\uffff";
    static final String dfa_55s = "\1\35\2\uffff\1\0\1\uffff\3\0\3\uffff";
    static final String dfa_56s = "\1\176\2\uffff\1\0\1\uffff\3\0\3\uffff";
    static final String dfa_57s = "\1\uffff\1\1\1\2\1\uffff\1\4\3\uffff\1\6\1\3\1\5";
    static final String dfa_58s = "\3\uffff\1\0\1\uffff\1\1\1\2\1\3\3\uffff}>";
    static final String[] dfa_59s = {
            "\1\3\51\uffff\1\5\33\uffff\1\7\12\uffff\1\1\3\uffff\1\2\3\uffff\1\6\5\uffff\1\4\1\uffff\1\10",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[][] dfa_59 = unpackEncodedStringArray(dfa_59s);

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = dfa_54;
            this.eof = dfa_54;
            this.min = dfa_55;
            this.max = dfa_56;
            this.accept = dfa_57;
            this.special = dfa_58;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "7203:2: (this_ConditionalTerm_0= ruleConditionalTerm | this_CaseTerm_1= ruleCaseTerm | this_TupleTerm_2= ruleTupleTerm | this_VariableBindingTerm_3= ruleVariableBindingTerm | this_CollectionTerm_4= ruleCollectionTerm | this_RuleAsTerm_5= ruleRuleAsTerm )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA115_3 = input.LA(1);

                         
                        int index115_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred181_InternalAsmetaL()) ) {s = 9;}

                        else if ( (synpred182_InternalAsmetaL()) ) {s = 4;}

                         
                        input.seek(index115_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA115_5 = input.LA(1);

                         
                        int index115_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalAsmetaL()) ) {s = 4;}

                        else if ( (synpred183_InternalAsmetaL()) ) {s = 10;}

                         
                        input.seek(index115_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA115_6 = input.LA(1);

                         
                        int index115_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalAsmetaL()) ) {s = 4;}

                        else if ( (synpred183_InternalAsmetaL()) ) {s = 10;}

                         
                        input.seek(index115_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA115_7 = input.LA(1);

                         
                        int index115_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalAsmetaL()) ) {s = 4;}

                        else if ( (synpred183_InternalAsmetaL()) ) {s = 10;}

                         
                        input.seek(index115_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 115, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_60s = "\35\uffff";
    static final String dfa_61s = "\1\5\13\0\21\uffff";
    static final String dfa_62s = "\1\u0090\13\0\21\uffff";
    static final String dfa_63s = "\14\uffff\1\3\6\uffff\1\5\3\uffff\1\6\2\uffff\1\1\1\2\1\4";
    static final String dfa_64s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\21\uffff}>";
    static final String[] dfa_65s = {
            "\1\2\1\1\1\3\60\uffff\1\23\32\uffff\1\23\4\uffff\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\27\16\uffff\1\14\3\uffff\1\27\10\uffff\2\14\3\uffff\1\14\1\uffff\1\14\1\uffff\1\14\2\uffff\1\14\1\23\1\uffff\1\23\2\uffff\1\27\2\uffff\1\13",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_60;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "9720:2: (this_UpdateRule_0= ruleUpdateRule | this_TurboReturnRule_1= ruleTurboReturnRule | this_BasicRule_2= ruleBasicRule | this_TermAsRule_3= ruleTermAsRule | this_TurboRule_4= ruleTurboRule | this_DerivedRule_5= ruleDerivedRule )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA155_1 = input.LA(1);

                         
                        int index155_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 12;}

                        else if ( (synpred238_InternalAsmetaL()) ) {s = 28;}

                        else if ( (synpred239_InternalAsmetaL()) ) {s = 19;}

                         
                        input.seek(index155_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA155_2 = input.LA(1);

                         
                        int index155_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 12;}

                        else if ( (synpred238_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index155_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA155_3 = input.LA(1);

                         
                        int index155_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred237_InternalAsmetaL()) ) {s = 12;}

                        else if ( (synpred238_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index155_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA155_4 = input.LA(1);

                         
                        int index155_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred238_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index155_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA155_5 = input.LA(1);

                         
                        int index155_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred238_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index155_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA155_6 = input.LA(1);

                         
                        int index155_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred238_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index155_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA155_7 = input.LA(1);

                         
                        int index155_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred238_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index155_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA155_8 = input.LA(1);

                         
                        int index155_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred238_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index155_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA155_9 = input.LA(1);

                         
                        int index155_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred238_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index155_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA155_10 = input.LA(1);

                         
                        int index155_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred238_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index155_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA155_11 = input.LA(1);

                         
                        int index155_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalAsmetaL()) ) {s = 26;}

                        else if ( (synpred236_InternalAsmetaL()) ) {s = 27;}

                        else if ( (synpred238_InternalAsmetaL()) ) {s = 28;}

                         
                        input.seek(index155_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 155, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_66s = "\33\uffff";
    static final String dfa_67s = "\1\5\24\uffff\2\0\4\uffff";
    static final String dfa_68s = "\1\u0090\24\uffff\2\0\4\uffff";
    static final String dfa_69s = "\1\uffff\1\2\30\uffff\1\1";
    static final String dfa_70s = "\25\uffff\1\0\1\1\4\uffff}>";
    static final String[] dfa_71s = {
            "\3\1\60\uffff\1\25\32\uffff\1\26\4\uffff\10\1\16\uffff\1\1\3\uffff\1\1\10\uffff\2\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\2\1\1\uffff\1\1\2\uffff\1\1\2\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_66;
            this.eof = dfa_66;
            this.min = dfa_67;
            this.max = dfa_68;
            this.accept = dfa_69;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "()* loopback of 11399:3: ( ( (lv_localFunction_4_0= ruleLocalFunction ) ) otherlv_5= '[' ( (lv_init_6_0= ruleRule ) ) otherlv_7= ']' )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_21 = input.LA(1);

                         
                        int index177_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred269_InternalAsmetaL()) ) {s = 26;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_21);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA177_22 = input.LA(1);

                         
                        int index177_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred269_InternalAsmetaL()) ) {s = 26;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000003000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x00000000040000B0L,0x0000000180000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000510000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x000000100C000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000300000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000001008000002L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000001008000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x00000000000000B0L,0x0000000000000000L,0x000000000000C000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000020000002L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x00000000000000E0L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x00000000C0000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x00000002000000E0L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0D00002000000002L,0x0000000000FDFC50L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0100000000000002L,0x0000000000FD0000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x000002A000000002L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000028000000002L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000020000000002L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0xF100040020003FE0L,0x504478C87F00FCBFL,0x0000000000010000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x00000000000000E0L,0x000000007F000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000004020000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0xF100040000000020L,0x000000000000FC3FL});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000040000000020L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x00FEF0A000000002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x00FEF08000000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x00FEF00000000002L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x00FE800000000002L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x007E800000000002L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x001E800000000002L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000014020000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000014000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0100000000003FE0L,0x180478C0FFFC0000L,0x0000000000012595L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0001000000000020L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0xF000000000000020L,0x000000000000000FL});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000840000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0xF100040080000020L,0x000000000000FC3FL});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000300L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000002L,0x0000000060000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000020003FE0L,0x000038C07F000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000002L,0x000000000A000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000004000000002L,0x0000000200000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000002L,0x0000003C00000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000002L,0x000000C000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000200000002L,0x0000010010000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0003000000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0038000000000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0xF100040020003FE0L,0x50C478C87F00FCBFL,0x0000000000010000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000840000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000040000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000003F80L,0x000038C000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0xF100040020003FE0L,0x504478C87F02FCBFL,0x0000000000010000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0xF100040020003FE0L,0x504478C87F00FEBFL,0x0000000000010000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000840000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000003FE0L,0x000038C47F000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000840000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000003FE0L,0x000038C07F000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000040000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x00000000C0000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000840000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000020000000L,0x8000000000000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x0040000000000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0100000000003FE0L,0x180478C0FFFC0000L,0x000000000001259DL});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000040000000L,0x0400000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0100000000003FE0L,0x180478C0FFFC0000L,0x0000000000012795L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0xF1000400A0003FE0L,0x504478C87F00FCBFL,0x0000000000010000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x00000000000000A0L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x00000000000000A0L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x00000000000000A0L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x00000000010000A0L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000220000000020L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000008000L});

}