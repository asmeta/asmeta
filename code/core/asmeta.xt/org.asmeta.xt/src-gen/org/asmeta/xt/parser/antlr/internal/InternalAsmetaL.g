/*
 * generated by Xtext 2.32.0
 */
grammar InternalAsmetaL;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
}

@lexer::header {
package org.asmeta.xt.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.asmeta.xt.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.asmeta.xt.services.AsmetaLGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/

 	private AsmetaLGrammarAccess grammarAccess;

    public InternalAsmetaLParser(TokenStream input, AsmetaLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Asm";
   	}

   	@Override
   	protected AsmetaLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleAsm
entryRuleAsm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAsmRule()); }
	iv_ruleAsm=ruleAsm
	{ $current=$iv_ruleAsm.current; }
	EOF;

// Rule Asm
ruleAsm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isAsynchr_0_0='asyncr'
				{
					newLeafNode(lv_isAsynchr_0_0, grammarAccess.getAsmAccess().getIsAsynchrAsyncrKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAsmRule());
					}
					setWithLastConsumed($current, "isAsynchr", lv_isAsynchr_0_0 != null, "asyncr");
				}
			)
		)?
		(
			(
				(
					lv_type_1_1='asm'
					{
						newLeafNode(lv_type_1_1, grammarAccess.getAsmAccess().getTypeAsmKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAsmRule());
						}
						setWithLastConsumed($current, "type", lv_type_1_1, null);
					}
					    |
					lv_type_1_2='module'
					{
						newLeafNode(lv_type_1_2, grammarAccess.getAsmAccess().getTypeModuleKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAsmRule());
						}
						setWithLastConsumed($current, "type", lv_type_1_2, null);
					}
				)
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAsmAccess().getNameExtendedNameForAsmParserRuleCall_2_0_0());
					}
					lv_name_2_1=ruleextendedNameForAsm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAsmRule());
						}
						set(
							$current,
							"name",
							lv_name_2_1,
							"org.asmeta.xt.AsmetaL.extendedNameForAsm");
						afterParserOrEnumRuleCall();
					}
					    |
					lv_name_2_2=RULE_STRING
					{
						newLeafNode(lv_name_2_2, grammarAccess.getAsmAccess().getNameSTRINGTerminalRuleCall_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAsmRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_2,
							"org.asmeta.xt.AsmetaL.STRING");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAsmAccess().getHeaderSectionHeaderParserRuleCall_3_0());
				}
				lv_headerSection_3_0=ruleHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAsmRule());
					}
					set(
						$current,
						"headerSection",
						lv_headerSection_3_0,
						"org.asmeta.xt.AsmetaL.Header");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAsmAccess().getBodySectionBodyParserRuleCall_4_0());
				}
				lv_bodySection_4_0=ruleBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAsmRule());
					}
					set(
						$current,
						"bodySection",
						lv_bodySection_4_0,
						"org.asmeta.xt.AsmetaL.Body");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='main'
			{
				newLeafNode(otherlv_5, grammarAccess.getAsmAccess().getMainKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAsmAccess().getMainruleMacroDeclarationParserRuleCall_5_1_0());
					}
					lv_mainrule_6_0=ruleMacroDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAsmRule());
						}
						set(
							$current,
							"mainrule",
							lv_mainrule_6_0,
							"org.asmeta.xt.AsmetaL.MacroDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAsmAccess().getInitialStateInitializationParserRuleCall_6_0_0());
					}
					lv_initialState_7_0=ruleInitialization
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAsmRule());
						}
						add(
							$current,
							"initialState",
							lv_initialState_7_0,
							"org.asmeta.xt.AsmetaL.Initialization");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_8='default'
			{
				newLeafNode(otherlv_8, grammarAccess.getAsmAccess().getDefaultKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAsmAccess().getDefaultInitialStateInitializationParserRuleCall_6_2_0());
					}
					lv_defaultInitialState_9_0=ruleInitialization
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAsmRule());
						}
						set(
							$current,
							"defaultInitialState",
							lv_defaultInitialState_9_0,
							"org.asmeta.xt.AsmetaL.Initialization");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAsmAccess().getInitialStateInitializationParserRuleCall_6_3_0());
					}
					lv_initialState_10_0=ruleInitialization
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAsmRule());
						}
						add(
							$current,
							"initialState",
							lv_initialState_10_0,
							"org.asmeta.xt.AsmetaL.Initialization");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
	)?
;

// Entry rule entryRuleHeader
entryRuleHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeaderRule()); }
	iv_ruleHeader=ruleHeader
	{ $current=$iv_ruleHeader.current; }
	EOF;

// Rule Header
ruleHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getHeaderAccess().getImportClauseImportClauseParserRuleCall_0_0());
				}
				lv_importClause_0_0=ruleImportClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeaderRule());
					}
					add(
						$current,
						"importClause",
						lv_importClause_0_0,
						"org.asmeta.xt.AsmetaL.ImportClause");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getHeaderAccess().getExportClauseExportClauseParserRuleCall_1_0());
				}
				lv_exportClause_1_0=ruleExportClause
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeaderRule());
					}
					set(
						$current,
						"exportClause",
						lv_exportClause_1_0,
						"org.asmeta.xt.AsmetaL.ExportClause");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getHeaderAccess().getSignatureSignatureParserRuleCall_2_0());
				}
				lv_signature_2_0=ruleSignature
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getHeaderRule());
					}
					set(
						$current,
						"signature",
						lv_signature_2_0,
						"org.asmeta.xt.AsmetaL.Signature");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImportClause
entryRuleImportClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportClauseRule()); }
	iv_ruleImportClause=ruleImportClause
	{ $current=$iv_ruleImportClause.current; }
	EOF;

// Rule ImportClause
ruleImportClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getImportClauseAccess().getImportKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImportClauseAccess().getModuleNameMOD_IDParserRuleCall_1_0_0());
					}
					lv_moduleName_1_1=ruleMOD_ID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportClauseRule());
						}
						set(
							$current,
							"moduleName",
							lv_moduleName_1_1,
							"org.asmeta.xt.AsmetaL.MOD_ID");
						afterParserOrEnumRuleCall();
					}
					    |
					lv_moduleName_1_2=RULE_STRING
					{
						newLeafNode(lv_moduleName_1_2, grammarAccess.getImportClauseAccess().getModuleNameSTRINGTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportClauseRule());
						}
						setWithLastConsumed(
							$current,
							"moduleName",
							lv_moduleName_1_2,
							"org.asmeta.xt.AsmetaL.STRING");
					}
				)
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getImportClauseAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getImportClauseAccess().getImportedListImportDataParserRuleCall_2_1_0());
					}
					lv_importedList_3_0=ruleimportData
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportClauseRule());
						}
						add(
							$current,
							"importedList",
							lv_importedList_3_0,
							"org.asmeta.xt.AsmetaL.importData");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getImportClauseAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getImportClauseAccess().getImportedListImportDataParserRuleCall_2_2_1_0());
						}
						lv_importedList_5_0=ruleimportData
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportClauseRule());
							}
							add(
								$current,
								"importedList",
								lv_importedList_5_0,
								"org.asmeta.xt.AsmetaL.importData");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getImportClauseAccess().getRightParenthesisKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRuleimportData
entryRuleimportData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportDataRule()); }
	iv_ruleimportData=ruleimportData
	{ $current=$iv_ruleimportData.current; }
	EOF;

// Rule importData
ruleimportData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getImportDataAccess().getNameExtendedNameParserRuleCall_0());
			}
			lv_name_0_0=ruleextendedName
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getImportDataRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"org.asmeta.xt.AsmetaL.extendedName");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleExportClause
entryRuleExportClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExportClauseRule()); }
	iv_ruleExportClause=ruleExportClause
	{ $current=$iv_ruleExportClause.current; }
	EOF;

// Rule ExportClause
ruleExportClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='export'
		{
			newLeafNode(otherlv_0, grammarAccess.getExportClauseAccess().getExportKeyword_0());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getExportClauseAccess().getExportedListExtendedNameParserRuleCall_1_0_0_0());
						}
						lv_exportedList_1_0=ruleextendedName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExportClauseRule());
							}
							add(
								$current,
								"exportedList",
								lv_exportedList_1_0,
								"org.asmeta.xt.AsmetaL.extendedName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_2=','
					{
						newLeafNode(otherlv_2, grammarAccess.getExportClauseAccess().getCommaKeyword_1_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getExportClauseAccess().getExportedListExtendedNameParserRuleCall_1_0_1_1_0());
							}
							lv_exportedList_3_0=ruleextendedName
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getExportClauseRule());
								}
								add(
									$current,
									"exportedList",
									lv_exportedList_3_0,
									"org.asmeta.xt.AsmetaL.extendedName");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				(
					lv_exportAll_4_0='*'
					{
						newLeafNode(lv_exportAll_4_0, grammarAccess.getExportClauseAccess().getExportAllAsteriskKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExportClauseRule());
						}
						setWithLastConsumed($current, "exportAll", lv_exportAll_4_0 != null, "*");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSignature
entryRuleSignature returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSignatureRule()); }
	iv_ruleSignature=ruleSignature
	{ $current=$iv_ruleSignature.current; }
	EOF;

// Rule Signature
ruleSignature returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSignatureAccess().getSignatureAction_0(),
					$current);
			}
		)
		otherlv_1='signature'
		{
			newLeafNode(otherlv_1, grammarAccess.getSignatureAccess().getSignatureKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSignatureAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSignatureAccess().getDomainDomainParserRuleCall_3_0());
				}
				lv_domain_3_0=ruleDomain
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSignatureRule());
					}
					add(
						$current,
						"domain",
						lv_domain_3_0,
						"org.asmeta.xt.AsmetaL.Domain");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSignatureAccess().getFunctionFunctionParserRuleCall_4_0());
				}
				lv_function_4_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSignatureRule());
					}
					add(
						$current,
						"function",
						lv_function_4_0,
						"org.asmeta.xt.AsmetaL.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleInitialization
entryRuleInitialization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitializationRule()); }
	iv_ruleInitialization=ruleInitialization
	{ $current=$iv_ruleInitialization.current; }
	EOF;

// Rule Initialization
ruleInitialization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='init'
		{
			newLeafNode(otherlv_0, grammarAccess.getInitializationAccess().getInitKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitializationAccess().getNameExtendedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleextendedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitializationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.asmeta.xt.AsmetaL.extendedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getInitializationAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitializationAccess().getDomainInitializationDomainInitializationParserRuleCall_3_0());
				}
				lv_domainInitialization_3_0=ruleDomainInitialization
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitializationRule());
					}
					add(
						$current,
						"domainInitialization",
						lv_domainInitialization_3_0,
						"org.asmeta.xt.AsmetaL.DomainInitialization");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getInitializationAccess().getFunctionInitializationFunctionInitializationParserRuleCall_4_0());
				}
				lv_functionInitialization_4_0=ruleFunctionInitialization
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitializationRule());
					}
					add(
						$current,
						"functionInitialization",
						lv_functionInitialization_4_0,
						"org.asmeta.xt.AsmetaL.FunctionInitialization");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getInitializationAccess().getAgentInitializationAgentInitializationParserRuleCall_5_0());
				}
				lv_agentInitialization_5_0=ruleAgentInitialization
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitializationRule());
					}
					add(
						$current,
						"agentInitialization",
						lv_agentInitialization_5_0,
						"org.asmeta.xt.AsmetaL.AgentInitialization");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDomainInitialization
entryRuleDomainInitialization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainInitializationRule()); }
	iv_ruleDomainInitialization=ruleDomainInitialization
	{ $current=$iv_ruleDomainInitialization.current; }
	EOF;

// Rule DomainInitialization
ruleDomainInitialization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='domain'
		{
			newLeafNode(otherlv_0, grammarAccess.getDomainInitializationAccess().getDomainKeyword_0());
		}
		(
			(
				lv_initializedDomain_1_0=RULE_ID
				{
					newLeafNode(lv_initializedDomain_1_0, grammarAccess.getDomainInitializationAccess().getInitializedDomainIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainInitializationRule());
					}
					setWithLastConsumed(
						$current,
						"initializedDomain",
						lv_initializedDomain_1_0,
						"org.asmeta.xt.AsmetaL.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getDomainInitializationAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainInitializationAccess().getBodyTermParserRuleCall_3_0());
				}
				lv_body_3_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainInitializationRule());
					}
					set(
						$current,
						"body",
						lv_body_3_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionInitialization
entryRuleFunctionInitialization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionInitializationRule()); }
	iv_ruleFunctionInitialization=ruleFunctionInitialization
	{ $current=$iv_ruleFunctionInitialization.current; }
	EOF;

// Rule FunctionInitialization
ruleFunctionInitialization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='function'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionInitializationAccess().getFunctionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionInitializationAccess().getInizializedFunctionNameExtendedNameForFunctionParserRuleCall_1_0());
				}
				lv_inizializedFunctionName_1_0=ruleextendedNameForFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
					}
					set(
						$current,
						"inizializedFunctionName",
						lv_inizializedFunctionName_1_0,
						"org.asmeta.xt.AsmetaL.extendedNameForFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getFunctionInitializationAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionInitializationAccess().getVariablesID_VARIABLEParserRuleCall_2_1_0());
					}
					lv_variables_3_0=ruleID_VARIABLE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
						}
						add(
							$current,
							"variables",
							lv_variables_3_0,
							"org.asmeta.xt.AsmetaL.ID_VARIABLE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='in'
			{
				newLeafNode(otherlv_4, grammarAccess.getFunctionInitializationAccess().getInKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionInitializationAccess().getDomainGetDomainByIDParserRuleCall_2_3_0());
					}
					lv_domain_5_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
						}
						add(
							$current,
							"domain",
							lv_domain_5_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getFunctionInitializationAccess().getCommaKeyword_2_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionInitializationAccess().getVariablesID_VARIABLEParserRuleCall_2_4_1_0());
						}
						lv_variables_7_0=ruleID_VARIABLE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
							}
							add(
								$current,
								"variables",
								lv_variables_7_0,
								"org.asmeta.xt.AsmetaL.ID_VARIABLE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8='in'
				{
					newLeafNode(otherlv_8, grammarAccess.getFunctionInitializationAccess().getInKeyword_2_4_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionInitializationAccess().getDomainGetDomainByIDParserRuleCall_2_4_3_0());
						}
						lv_domain_9_0=rulegetDomainByID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
							}
							add(
								$current,
								"domain",
								lv_domain_9_0,
								"org.asmeta.xt.AsmetaL.getDomainByID");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getFunctionInitializationAccess().getRightParenthesisKeyword_2_5());
			}
		)?
		otherlv_11='='
		{
			newLeafNode(otherlv_11, grammarAccess.getFunctionInitializationAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionInitializationAccess().getBodyTermParserRuleCall_4_0());
				}
				lv_body_12_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionInitializationRule());
					}
					set(
						$current,
						"body",
						lv_body_12_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAgentInitialization
entryRuleAgentInitialization returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAgentInitializationRule()); }
	iv_ruleAgentInitialization=ruleAgentInitialization
	{ $current=$iv_ruleAgentInitialization.current; }
	EOF;

// Rule AgentInitialization
ruleAgentInitialization returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='agent'
		{
			newLeafNode(otherlv_0, grammarAccess.getAgentInitializationAccess().getAgentKeyword_0());
		}
		(
			(
				(
					lv_domainName_1_1=RULE_ID
					{
						newLeafNode(lv_domainName_1_1, grammarAccess.getAgentInitializationAccess().getDomainNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAgentInitializationRule());
						}
						setWithLastConsumed(
							$current,
							"domainName",
							lv_domainName_1_1,
							"org.asmeta.xt.AsmetaL.ID");
					}
					    |
					lv_domainName_1_2='Agent'
					{
						newLeafNode(lv_domainName_1_2, grammarAccess.getAgentInitializationAccess().getDomainNameAgentKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAgentInitializationRule());
						}
						setWithLastConsumed($current, "domainName", lv_domainName_1_2, null);
					}
				)
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getAgentInitializationAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAgentInitializationAccess().getProgramMacroCallRuleParserRuleCall_3_0());
				}
				lv_program_3_0=ruleMacroCallRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAgentInitializationRule());
					}
					set(
						$current,
						"program",
						lv_program_3_0,
						"org.asmeta.xt.AsmetaL.MacroCallRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBody
entryRuleBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBodyRule()); }
	iv_ruleBody=ruleBody
	{ $current=$iv_ruleBody.current; }
	EOF;

// Rule Body
ruleBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBodyAccess().getBodyAction_0(),
					$current);
			}
		)
		otherlv_1='definitions'
		{
			newLeafNode(otherlv_1, grammarAccess.getBodyAccess().getDefinitionsKeyword_1());
		}
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getBodyAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyAccess().getDomainDefinitionDomainDefinitionParserRuleCall_3_0());
				}
				lv_domainDefinition_3_0=ruleDomainDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyRule());
					}
					add(
						$current,
						"domainDefinition",
						lv_domainDefinition_3_0,
						"org.asmeta.xt.AsmetaL.DomainDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyAccess().getFunctionDefinitionFunctionDefinitionParserRuleCall_4_0());
				}
				lv_functionDefinition_4_0=ruleFunctionDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyRule());
					}
					add(
						$current,
						"functionDefinition",
						lv_functionDefinition_4_0,
						"org.asmeta.xt.AsmetaL.FunctionDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyAccess().getRuleDeclarationRuleDeclarationParserRuleCall_5_0());
				}
				lv_ruleDeclaration_5_0=ruleRuleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyRule());
					}
					add(
						$current,
						"ruleDeclaration",
						lv_ruleDeclaration_5_0,
						"org.asmeta.xt.AsmetaL.RuleDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyAccess().getInvariantConstraintInvariantConstraintParserRuleCall_6_0());
				}
				lv_invariantConstraint_6_0=ruleInvariantConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyRule());
					}
					add(
						$current,
						"invariantConstraint",
						lv_invariantConstraint_6_0,
						"org.asmeta.xt.AsmetaL.InvariantConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyAccess().getFairnessConstraintFairnessConstraintParserRuleCall_7_0());
				}
				lv_fairnessConstraint_7_0=ruleFairnessConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyRule());
					}
					add(
						$current,
						"fairnessConstraint",
						lv_fairnessConstraint_7_0,
						"org.asmeta.xt.AsmetaL.FairnessConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getBodyAccess().getPropertyPropertyParserRuleCall_8_0());
				}
				lv_property_8_0=ruleProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBodyRule());
					}
					add(
						$current,
						"property",
						lv_property_8_0,
						"org.asmeta.xt.AsmetaL.Property");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDomainDefinition
entryRuleDomainDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainDefinitionRule()); }
	iv_ruleDomainDefinition=ruleDomainDefinition
	{ $current=$iv_ruleDomainDefinition.current; }
	EOF;

// Rule DomainDefinition
ruleDomainDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='domain'
		{
			newLeafNode(otherlv_0, grammarAccess.getDomainDefinitionAccess().getDomainKeyword_0());
		}
		(
			(
				lv_definedDomainName_1_0=RULE_ID
				{
					newLeafNode(lv_definedDomainName_1_0, grammarAccess.getDomainDefinitionAccess().getDefinedDomainNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDomainDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"definedDomainName",
						lv_definedDomainName_1_0,
						"org.asmeta.xt.AsmetaL.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getDomainDefinitionAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDomainDefinitionAccess().getBodyTermParserRuleCall_3_0());
				}
				lv_body_3_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDomainDefinitionRule());
					}
					set(
						$current,
						"body",
						lv_body_3_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionDefinitionRule()); }
	iv_ruleFunctionDefinition=ruleFunctionDefinition
	{ $current=$iv_ruleFunctionDefinition.current; }
	EOF;

// Rule FunctionDefinition
ruleFunctionDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='function'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionDefinitionAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_definedFunctionName_1_0=RULE_ID
				{
					newLeafNode(lv_definedFunctionName_1_0, grammarAccess.getFunctionDefinitionAccess().getDefinedFunctionNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"definedFunctionName",
						lv_definedFunctionName_1_0,
						"org.asmeta.xt.AsmetaL.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getVariablesID_VARIABLEParserRuleCall_2_1_0());
					}
					lv_variables_3_0=ruleID_VARIABLE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
						}
						add(
							$current,
							"variables",
							lv_variables_3_0,
							"org.asmeta.xt.AsmetaL.ID_VARIABLE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='in'
			{
				newLeafNode(otherlv_4, grammarAccess.getFunctionDefinitionAccess().getInKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getDomainGetDomainByIDParserRuleCall_2_3_0());
					}
					lv_domain_5_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
						}
						add(
							$current,
							"domain",
							lv_domain_5_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_2_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getVariablesID_VARIABLEParserRuleCall_2_4_1_0());
						}
						lv_variables_7_0=ruleID_VARIABLE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
							}
							add(
								$current,
								"variables",
								lv_variables_7_0,
								"org.asmeta.xt.AsmetaL.ID_VARIABLE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8='in'
				{
					newLeafNode(otherlv_8, grammarAccess.getFunctionDefinitionAccess().getInKeyword_2_4_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getDomainGetDomainByIDParserRuleCall_2_4_3_0());
						}
						lv_domain_9_0=rulegetDomainByID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
							}
							add(
								$current,
								"domain",
								lv_domain_9_0,
								"org.asmeta.xt.AsmetaL.getDomainByID");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_2_5());
			}
		)?
		otherlv_11='='
		{
			newLeafNode(otherlv_11, grammarAccess.getFunctionDefinitionAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionDefinitionAccess().getBodyTermParserRuleCall_4_0());
				}
				lv_body_12_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionDefinitionRule());
					}
					set(
						$current,
						"body",
						lv_body_12_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRuleDeclaration
entryRuleRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleDeclarationRule()); }
	iv_ruleRuleDeclaration=ruleRuleDeclaration
	{ $current=$iv_ruleRuleDeclaration.current; }
	EOF;

// Rule RuleDeclaration
ruleRuleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRuleDeclarationAccess().getMacroDeclarationParserRuleCall_0());
		}
		this_MacroDeclaration_0=ruleMacroDeclaration
		{
			$current = $this_MacroDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRuleDeclarationAccess().getTurboDeclarationParserRuleCall_1());
		}
		this_TurboDeclaration_1=ruleTurboDeclaration
		{
			$current = $this_TurboDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMacroDeclaration
entryRuleMacroDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMacroDeclarationRule()); }
	iv_ruleMacroDeclaration=ruleMacroDeclaration
	{ $current=$iv_ruleMacroDeclaration.current; }
	EOF;

// Rule MacroDeclaration
ruleMacroDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='macro'
			{
				newLeafNode(otherlv_0, grammarAccess.getMacroDeclarationAccess().getMacroKeyword_0());
			}
		)?
		otherlv_1='rule'
		{
			newLeafNode(otherlv_1, grammarAccess.getMacroDeclarationAccess().getRuleKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getMacroDeclarationAccess().getNameRULE_IDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMacroDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.asmeta.xt.AsmetaL.RULE_ID");
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getMacroDeclarationAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMacroDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_1_0());
					}
					lv_variables_4_0=ruleID_VARIABLE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
						}
						add(
							$current,
							"variables",
							lv_variables_4_0,
							"org.asmeta.xt.AsmetaL.ID_VARIABLE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='in'
			{
				newLeafNode(otherlv_5, grammarAccess.getMacroDeclarationAccess().getInKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMacroDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_3_0());
					}
					lv_domain_6_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
						}
						add(
							$current,
							"domain",
							lv_domain_6_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getMacroDeclarationAccess().getCommaKeyword_3_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMacroDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_4_1_0());
						}
						lv_variables_8_0=ruleID_VARIABLE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
							}
							add(
								$current,
								"variables",
								lv_variables_8_0,
								"org.asmeta.xt.AsmetaL.ID_VARIABLE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9='in'
				{
					newLeafNode(otherlv_9, grammarAccess.getMacroDeclarationAccess().getInKeyword_3_4_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMacroDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_4_3_0());
						}
						lv_domain_10_0=rulegetDomainByID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
							}
							add(
								$current,
								"domain",
								lv_domain_10_0,
								"org.asmeta.xt.AsmetaL.getDomainByID");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getMacroDeclarationAccess().getRightParenthesisKeyword_3_5());
			}
		)?
		(
			otherlv_12='in'
			{
				newLeafNode(otherlv_12, grammarAccess.getMacroDeclarationAccess().getInKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMacroDeclarationAccess().getReturnedDomainGetDomainByIDParserRuleCall_4_1_0());
					}
					lv_returnedDomain_13_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
						}
						set(
							$current,
							"returnedDomain",
							lv_returnedDomain_13_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_14='='
		{
			newLeafNode(otherlv_14, grammarAccess.getMacroDeclarationAccess().getEqualsSignKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMacroDeclarationAccess().getRuleBodyRuleParserRuleCall_6_0());
				}
				lv_ruleBody_15_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMacroDeclarationRule());
					}
					set(
						$current,
						"ruleBody",
						lv_ruleBody_15_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTurboDeclaration
entryRuleTurboDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurboDeclarationRule()); }
	iv_ruleTurboDeclaration=ruleTurboDeclaration
	{ $current=$iv_ruleTurboDeclaration.current; }
	EOF;

// Rule TurboDeclaration
ruleTurboDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='turbo'
		{
			newLeafNode(otherlv_0, grammarAccess.getTurboDeclarationAccess().getTurboKeyword_0());
		}
		otherlv_1='rule'
		{
			newLeafNode(otherlv_1, grammarAccess.getTurboDeclarationAccess().getRuleKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getTurboDeclarationAccess().getNameRULE_IDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTurboDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.asmeta.xt.AsmetaL.RULE_ID");
				}
			)
		)
		(
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getTurboDeclarationAccess().getLeftParenthesisKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTurboDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_1_0());
					}
					lv_variables_4_0=ruleID_VARIABLE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
						}
						add(
							$current,
							"variables",
							lv_variables_4_0,
							"org.asmeta.xt.AsmetaL.ID_VARIABLE");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='in'
			{
				newLeafNode(otherlv_5, grammarAccess.getTurboDeclarationAccess().getInKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTurboDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_3_0());
					}
					lv_domain_6_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
						}
						add(
							$current,
							"domain",
							lv_domain_6_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getTurboDeclarationAccess().getCommaKeyword_3_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTurboDeclarationAccess().getVariablesID_VARIABLEParserRuleCall_3_4_1_0());
						}
						lv_variables_8_0=ruleID_VARIABLE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
							}
							add(
								$current,
								"variables",
								lv_variables_8_0,
								"org.asmeta.xt.AsmetaL.ID_VARIABLE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_9='in'
				{
					newLeafNode(otherlv_9, grammarAccess.getTurboDeclarationAccess().getInKeyword_3_4_2());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTurboDeclarationAccess().getDomainGetDomainByIDParserRuleCall_3_4_3_0());
						}
						lv_domain_10_0=rulegetDomainByID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
							}
							add(
								$current,
								"domain",
								lv_domain_10_0,
								"org.asmeta.xt.AsmetaL.getDomainByID");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_11=')'
			{
				newLeafNode(otherlv_11, grammarAccess.getTurboDeclarationAccess().getRightParenthesisKeyword_3_5());
			}
		)?
		(
			otherlv_12='in'
			{
				newLeafNode(otherlv_12, grammarAccess.getTurboDeclarationAccess().getInKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTurboDeclarationAccess().getReturnedDomainGetDomainByIDParserRuleCall_4_1_0());
					}
					lv_returnedDomain_13_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
						}
						set(
							$current,
							"returnedDomain",
							lv_returnedDomain_13_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_14='='
		{
			newLeafNode(otherlv_14, grammarAccess.getTurboDeclarationAccess().getEqualsSignKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTurboDeclarationAccess().getRuleBodyRuleParserRuleCall_6_0());
				}
				lv_ruleBody_15_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTurboDeclarationRule());
					}
					set(
						$current,
						"ruleBody",
						lv_ruleBody_15_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getInvariantParserRuleCall_0());
		}
		this_Invariant_0=ruleInvariant
		{
			$current = $this_Invariant_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getTemporalPropertyParserRuleCall_1());
		}
		this_TemporalProperty_1=ruleTemporalProperty
		{
			$current = $this_TemporalProperty_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTemporalProperty
entryRuleTemporalProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTemporalPropertyRule()); }
	iv_ruleTemporalProperty=ruleTemporalProperty
	{ $current=$iv_ruleTemporalProperty.current; }
	EOF;

// Rule TemporalProperty
ruleTemporalProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTemporalPropertyAccess().getCtlSpecParserRuleCall_0());
		}
		this_CtlSpec_0=ruleCtlSpec
		{
			$current = $this_CtlSpec_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTemporalPropertyAccess().getLtlSpecParserRuleCall_1());
		}
		this_LtlSpec_1=ruleLtlSpec
		{
			$current = $this_LtlSpec_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInvariant
entryRuleInvariant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvariantRule()); }
	iv_ruleInvariant=ruleInvariant
	{ $current=$iv_ruleInvariant.current; }
	EOF;

// Rule Invariant
ruleInvariant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='invariant'
		{
			newLeafNode(otherlv_0, grammarAccess.getInvariantAccess().getInvariantKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInvariantAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInvariantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.asmeta.xt.AsmetaL.ID");
				}
			)
		)?
		otherlv_2='over'
		{
			newLeafNode(otherlv_2, grammarAccess.getInvariantAccess().getOverKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInvariantAccess().getInvar_listInvariantElementParserRuleCall_3_0());
				}
				lv_invar_list_3_0=ruleInvariantElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInvariantRule());
					}
					add(
						$current,
						"invar_list",
						lv_invar_list_3_0,
						"org.asmeta.xt.AsmetaL.InvariantElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getInvariantAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInvariantAccess().getInvar_listInvariantElementParserRuleCall_4_1_0());
					}
					lv_invar_list_5_0=ruleInvariantElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInvariantRule());
						}
						add(
							$current,
							"invar_list",
							lv_invar_list_5_0,
							"org.asmeta.xt.AsmetaL.InvariantElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getInvariantAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInvariantAccess().getBodyTermParserRuleCall_6_0());
				}
				lv_body_7_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInvariantRule());
					}
					set(
						$current,
						"body",
						lv_body_7_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInvariantElement
entryRuleInvariantElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvariantElementRule()); }
	iv_ruleInvariantElement=ruleInvariantElement
	{ $current=$iv_ruleInvariantElement.current; }
	EOF;

// Rule InvariantElement
ruleInvariantElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_constrainedName_0_0=RULE_ID
				{
					newLeafNode(lv_constrainedName_0_0, grammarAccess.getInvariantElementAccess().getConstrainedNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInvariantElementRule());
					}
					setWithLastConsumed(
						$current,
						"constrainedName",
						lv_constrainedName_0_0,
						"org.asmeta.xt.AsmetaL.ID");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getInvariantElementAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInvariantElementAccess().getDomainListGetDomainByIDParserRuleCall_1_1_0());
					}
					lv_domainList_2_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInvariantElementRule());
						}
						add(
							$current,
							"domainList",
							lv_domainList_2_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getInvariantElementAccess().getRightParenthesisKeyword_1_2());
			}
		)?
	)
;

// Entry rule entryRuleCtlSpec
entryRuleCtlSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCtlSpecRule()); }
	iv_ruleCtlSpec=ruleCtlSpec
	{ $current=$iv_ruleCtlSpec.current; }
	EOF;

// Rule CtlSpec
ruleCtlSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='CTL'
			{
				newLeafNode(otherlv_0, grammarAccess.getCtlSpecAccess().getCTLKeyword_0_0());
			}
			    |
			otherlv_1='CTLSPEC'
			{
				newLeafNode(otherlv_1, grammarAccess.getCtlSpecAccess().getCTLSPECKeyword_0_1());
			}
		)
		(
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getCtlSpecAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCtlSpecRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.asmeta.xt.AsmetaL.ID");
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getCtlSpecAccess().getColonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getCtlSpecAccess().getBodyTermParserRuleCall_2_0());
				}
				lv_body_4_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCtlSpecRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLtlSpec
entryRuleLtlSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLtlSpecRule()); }
	iv_ruleLtlSpec=ruleLtlSpec
	{ $current=$iv_ruleLtlSpec.current; }
	EOF;

// Rule LtlSpec
ruleLtlSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='LTL'
			{
				newLeafNode(otherlv_0, grammarAccess.getLtlSpecAccess().getLTLKeyword_0_0());
			}
			    |
			otherlv_1='LTLSPEC'
			{
				newLeafNode(otherlv_1, grammarAccess.getLtlSpecAccess().getLTLSPECKeyword_0_1());
			}
		)
		(
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getLtlSpecAccess().getNameIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLtlSpecRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.asmeta.xt.AsmetaL.ID");
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getLtlSpecAccess().getColonKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLtlSpecAccess().getBodyTermParserRuleCall_2_0());
				}
				lv_body_4_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLtlSpecRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFairnessConstraint
entryRuleFairnessConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFairnessConstraintRule()); }
	iv_ruleFairnessConstraint=ruleFairnessConstraint
	{ $current=$iv_ruleFairnessConstraint.current; }
	EOF;

// Rule FairnessConstraint
ruleFairnessConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFairnessConstraintAccess().getJusticeConstraintParserRuleCall_0());
		}
		this_JusticeConstraint_0=ruleJusticeConstraint
		{
			$current = $this_JusticeConstraint_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFairnessConstraintAccess().getCompassionConstraintParserRuleCall_1());
		}
		this_CompassionConstraint_1=ruleCompassionConstraint
		{
			$current = $this_CompassionConstraint_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJusticeConstraint
entryRuleJusticeConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJusticeConstraintRule()); }
	iv_ruleJusticeConstraint=ruleJusticeConstraint
	{ $current=$iv_ruleJusticeConstraint.current; }
	EOF;

// Rule JusticeConstraint
ruleJusticeConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='JUSTICE'
		{
			newLeafNode(otherlv_0, grammarAccess.getJusticeConstraintAccess().getJUSTICEKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJusticeConstraintAccess().getBodyTermParserRuleCall_1_0());
				}
				lv_body_1_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJusticeConstraintRule());
					}
					set(
						$current,
						"body",
						lv_body_1_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCompassionConstraint
entryRuleCompassionConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompassionConstraintRule()); }
	iv_ruleCompassionConstraint=ruleCompassionConstraint
	{ $current=$iv_ruleCompassionConstraint.current; }
	EOF;

// Rule CompassionConstraint
ruleCompassionConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='COMPASSION'
		{
			newLeafNode(otherlv_0, grammarAccess.getCompassionConstraintAccess().getCOMPASSIONKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCompassionConstraintAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompassionConstraintAccess().getPTermParserRuleCall_2_0());
				}
				lv_p_2_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompassionConstraintRule());
					}
					set(
						$current,
						"p",
						lv_p_2_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getCompassionConstraintAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompassionConstraintAccess().getQTermParserRuleCall_4_0());
				}
				lv_q_4_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompassionConstraintRule());
					}
					set(
						$current,
						"q",
						lv_q_4_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getCompassionConstraintAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleInvariantConstraint
entryRuleInvariantConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInvariantConstraintRule()); }
	iv_ruleInvariantConstraint=ruleInvariantConstraint
	{ $current=$iv_ruleInvariantConstraint.current; }
	EOF;

// Rule InvariantConstraint
ruleInvariantConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='INVAR'
		{
			newLeafNode(otherlv_0, grammarAccess.getInvariantConstraintAccess().getINVARKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInvariantConstraintAccess().getBodyTermParserRuleCall_1_0());
				}
				lv_body_1_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInvariantConstraintRule());
					}
					set(
						$current,
						"body",
						lv_body_1_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDomain
entryRuleDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainRule()); }
	iv_ruleDomain=ruleDomain
	{ $current=$iv_ruleDomain.current; }
	EOF;

// Rule Domain
ruleDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDomainAccess().getConcreteDomainParserRuleCall_0());
		}
		this_ConcreteDomain_0=ruleConcreteDomain
		{
			$current = $this_ConcreteDomain_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDomainAccess().getTypeDomainParserRuleCall_1());
		}
		this_TypeDomain_1=ruleTypeDomain
		{
			$current = $this_TypeDomain_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConcreteDomain
entryRuleConcreteDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcreteDomainRule()); }
	iv_ruleConcreteDomain=ruleConcreteDomain
	{ $current=$iv_ruleConcreteDomain.current; }
	EOF;

// Rule ConcreteDomain
ruleConcreteDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_dynamic_0_0='dynamic'
				{
					newLeafNode(lv_dynamic_0_0, grammarAccess.getConcreteDomainAccess().getDynamicDynamicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteDomainRule());
					}
					setWithLastConsumed($current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
				}
			)
		)?
		otherlv_1='domain'
		{
			newLeafNode(otherlv_1, grammarAccess.getConcreteDomainAccess().getDomainKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getConcreteDomainAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConcreteDomainRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.asmeta.xt.AsmetaL.ID");
				}
			)
		)
		otherlv_3='subsetof'
		{
			newLeafNode(otherlv_3, grammarAccess.getConcreteDomainAccess().getSubsetofKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConcreteDomainAccess().getTypeDomainGetDomainByIDParserRuleCall_4_0());
				}
				lv_typeDomain_4_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcreteDomainRule());
					}
					set(
						$current,
						"typeDomain",
						lv_typeDomain_4_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTypeDomain
entryRuleTypeDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDomainRule()); }
	iv_ruleTypeDomain=ruleTypeDomain
	{ $current=$iv_ruleTypeDomain.current; }
	EOF;

// Rule TypeDomain
ruleTypeDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeDomainAccess().getAnyDomainParserRuleCall_0());
		}
		this_AnyDomain_0=ruleAnyDomain
		{
			$current = $this_AnyDomain_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeDomainAccess().getStructuredTDParserRuleCall_1());
		}
		this_StructuredTD_1=ruleStructuredTD
		{
			$current = $this_StructuredTD_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeDomainAccess().getEnumTDParserRuleCall_2());
		}
		this_EnumTD_2=ruleEnumTD
		{
			$current = $this_EnumTD_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeDomainAccess().getAbstractTDParserRuleCall_3());
		}
		this_AbstractTD_3=ruleAbstractTD
		{
			$current = $this_AbstractTD_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTypeDomainAccess().getBasicTDParserRuleCall_4());
		}
		this_BasicTD_4=ruleBasicTD
		{
			$current = $this_BasicTD_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAnyDomain
entryRuleAnyDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAnyDomainRule()); }
	iv_ruleAnyDomain=ruleAnyDomain
	{ $current=$iv_ruleAnyDomain.current; }
	EOF;

// Rule AnyDomain
ruleAnyDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='anydomain'
		{
			newLeafNode(otherlv_0, grammarAccess.getAnyDomainAccess().getAnydomainKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAnyDomainAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAnyDomainRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.asmeta.xt.AsmetaL.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleBasicTD
entryRuleBasicTD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicTDRule()); }
	iv_ruleBasicTD=ruleBasicTD
	{ $current=$iv_ruleBasicTD.current; }
	EOF;

// Rule BasicTD
ruleBasicTD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='basic'
		{
			newLeafNode(otherlv_0, grammarAccess.getBasicTDAccess().getBasicKeyword_0());
		}
		otherlv_1='domain'
		{
			newLeafNode(otherlv_1, grammarAccess.getBasicTDAccess().getDomainKeyword_1());
		}
		(
			(
				(
					lv_name_2_0=RULE_ID
					{
						newLeafNode(lv_name_2_0, grammarAccess.getBasicTDAccess().getNameIDTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBasicTDRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_2_0,
							"org.asmeta.xt.AsmetaL.ID");
					}
				)
			)
			    |
			{
				/* */
			}
			{
				newCompositeNode(grammarAccess.getBasicTDAccess().getStandardDomainParserRuleCall_2_1());
			}
			this_StandardDomain_3=ruleStandardDomain
			{
				$current = $this_StandardDomain_3.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleStandardDomain
entryRuleStandardDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStandardDomainRule()); }
	iv_ruleStandardDomain=ruleStandardDomain
	{ $current=$iv_ruleStandardDomain.current; }
	EOF;

// Rule StandardDomain
ruleStandardDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStandardDomainAccess().getIntegerDomainParserRuleCall_0());
		}
		this_IntegerDomain_0=ruleIntegerDomain
		{
			$current = $this_IntegerDomain_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStandardDomainAccess().getRealDomainParserRuleCall_1());
		}
		this_RealDomain_1=ruleRealDomain
		{
			$current = $this_RealDomain_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStandardDomainAccess().getStringDomainParserRuleCall_2());
		}
		this_StringDomain_2=ruleStringDomain
		{
			$current = $this_StringDomain_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStandardDomainAccess().getNaturalDomainParserRuleCall_3());
		}
		this_NaturalDomain_3=ruleNaturalDomain
		{
			$current = $this_NaturalDomain_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStandardDomainAccess().getCharDomainParserRuleCall_4());
		}
		this_CharDomain_4=ruleCharDomain
		{
			$current = $this_CharDomain_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStandardDomainAccess().getComplexDomainParserRuleCall_5());
		}
		this_ComplexDomain_5=ruleComplexDomain
		{
			$current = $this_ComplexDomain_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStandardDomainAccess().getBooleanDomainParserRuleCall_6());
		}
		this_BooleanDomain_6=ruleBooleanDomain
		{
			$current = $this_BooleanDomain_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStandardDomainAccess().getUndefDomainParserRuleCall_7());
		}
		this_UndefDomain_7=ruleUndefDomain
		{
			$current = $this_UndefDomain_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntegerDomain
entryRuleIntegerDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerDomainRule()); }
	iv_ruleIntegerDomain=ruleIntegerDomain
	{ $current=$iv_ruleIntegerDomain.current; }
	EOF;

// Rule IntegerDomain
ruleIntegerDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='Integer'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getIntegerDomainAccess().getNameIntegerKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntegerDomainRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "Integer");
			}
		)
	)
;

// Entry rule entryRuleRealDomain
entryRuleRealDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRealDomainRule()); }
	iv_ruleRealDomain=ruleRealDomain
	{ $current=$iv_ruleRealDomain.current; }
	EOF;

// Rule RealDomain
ruleRealDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='Real'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getRealDomainAccess().getNameRealKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRealDomainRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "Real");
			}
		)
	)
;

// Entry rule entryRuleStringDomain
entryRuleStringDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringDomainRule()); }
	iv_ruleStringDomain=ruleStringDomain
	{ $current=$iv_ruleStringDomain.current; }
	EOF;

// Rule StringDomain
ruleStringDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='String'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getStringDomainAccess().getNameStringKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringDomainRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "String");
			}
		)
	)
;

// Entry rule entryRuleNaturalDomain
entryRuleNaturalDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNaturalDomainRule()); }
	iv_ruleNaturalDomain=ruleNaturalDomain
	{ $current=$iv_ruleNaturalDomain.current; }
	EOF;

// Rule NaturalDomain
ruleNaturalDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='Natural'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getNaturalDomainAccess().getNameNaturalKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNaturalDomainRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "Natural");
			}
		)
	)
;

// Entry rule entryRuleCharDomain
entryRuleCharDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharDomainRule()); }
	iv_ruleCharDomain=ruleCharDomain
	{ $current=$iv_ruleCharDomain.current; }
	EOF;

// Rule CharDomain
ruleCharDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='Char'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getCharDomainAccess().getNameCharKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCharDomainRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "Char");
			}
		)
	)
;

// Entry rule entryRuleComplexDomain
entryRuleComplexDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexDomainRule()); }
	iv_ruleComplexDomain=ruleComplexDomain
	{ $current=$iv_ruleComplexDomain.current; }
	EOF;

// Rule ComplexDomain
ruleComplexDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='Complex'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getComplexDomainAccess().getNameComplexKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getComplexDomainRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "Complex");
			}
		)
	)
;

// Entry rule entryRuleBooleanDomain
entryRuleBooleanDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanDomainRule()); }
	iv_ruleBooleanDomain=ruleBooleanDomain
	{ $current=$iv_ruleBooleanDomain.current; }
	EOF;

// Rule BooleanDomain
ruleBooleanDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='Boolean'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getBooleanDomainAccess().getNameBooleanKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBooleanDomainRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "Boolean");
			}
		)
	)
;

// Entry rule entryRuleUndefDomain
entryRuleUndefDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUndefDomainRule()); }
	iv_ruleUndefDomain=ruleUndefDomain
	{ $current=$iv_ruleUndefDomain.current; }
	EOF;

// Rule UndefDomain
ruleUndefDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='Undef'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getUndefDomainAccess().getNameUndefKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getUndefDomainRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "Undef");
			}
		)
	)
;

// Entry rule entryRuleAbstractTD
entryRuleAbstractTD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractTDRule()); }
	iv_ruleAbstractTD=ruleAbstractTD
	{ $current=$iv_ruleAbstractTD.current; }
	EOF;

// Rule AbstractTD
ruleAbstractTD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAbstractTDAccess().getGenericAbstractTDParserRuleCall_0());
		}
		this_GenericAbstractTD_0=ruleGenericAbstractTD
		{
			$current = $this_GenericAbstractTD_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAbstractTDAccess().getAgentDomainParserRuleCall_1());
		}
		this_AgentDomain_1=ruleAgentDomain
		{
			$current = $this_AgentDomain_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAbstractTDAccess().getReserveDomainParserRuleCall_2());
		}
		this_ReserveDomain_2=ruleReserveDomain
		{
			$current = $this_ReserveDomain_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGenericAbstractTD
entryRuleGenericAbstractTD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenericAbstractTDRule()); }
	iv_ruleGenericAbstractTD=ruleGenericAbstractTD
	{ $current=$iv_ruleGenericAbstractTD.current; }
	EOF;

// Rule GenericAbstractTD
ruleGenericAbstractTD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_dynamic_0_0='dynamic'
				{
					newLeafNode(lv_dynamic_0_0, grammarAccess.getGenericAbstractTDAccess().getDynamicDynamicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGenericAbstractTDRule());
					}
					setWithLastConsumed($current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
				}
			)
		)?
		otherlv_1='abstract'
		{
			newLeafNode(otherlv_1, grammarAccess.getGenericAbstractTDAccess().getAbstractKeyword_1());
		}
		otherlv_2='domain'
		{
			newLeafNode(otherlv_2, grammarAccess.getGenericAbstractTDAccess().getDomainKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getGenericAbstractTDAccess().getNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGenericAbstractTDRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.asmeta.xt.AsmetaL.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAgentDomain
entryRuleAgentDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAgentDomainRule()); }
	iv_ruleAgentDomain=ruleAgentDomain
	{ $current=$iv_ruleAgentDomain.current; }
	EOF;

// Rule AgentDomain
ruleAgentDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_dynamic_0_0='dynamic'
				{
					newLeafNode(lv_dynamic_0_0, grammarAccess.getAgentDomainAccess().getDynamicDynamicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAgentDomainRule());
					}
					setWithLastConsumed($current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
				}
			)
		)?
		otherlv_1='abstract'
		{
			newLeafNode(otherlv_1, grammarAccess.getAgentDomainAccess().getAbstractKeyword_1());
		}
		otherlv_2='domain'
		{
			newLeafNode(otherlv_2, grammarAccess.getAgentDomainAccess().getDomainKeyword_2());
		}
		(
			(
				lv_name_3_0='Agent'
				{
					newLeafNode(lv_name_3_0, grammarAccess.getAgentDomainAccess().getNameAgentKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAgentDomainRule());
					}
					setWithLastConsumed($current, "name", lv_name_3_0, "Agent");
				}
			)
		)
	)
;

// Entry rule entryRuleReserveDomain
entryRuleReserveDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReserveDomainRule()); }
	iv_ruleReserveDomain=ruleReserveDomain
	{ $current=$iv_ruleReserveDomain.current; }
	EOF;

// Rule ReserveDomain
ruleReserveDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_dynamic_0_0='dynamic'
				{
					newLeafNode(lv_dynamic_0_0, grammarAccess.getReserveDomainAccess().getDynamicDynamicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReserveDomainRule());
					}
					setWithLastConsumed($current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
				}
			)
		)?
		otherlv_1='abstract'
		{
			newLeafNode(otherlv_1, grammarAccess.getReserveDomainAccess().getAbstractKeyword_1());
		}
		otherlv_2='domain'
		{
			newLeafNode(otherlv_2, grammarAccess.getReserveDomainAccess().getDomainKeyword_2());
		}
		(
			(
				lv_name_3_0='Reserve'
				{
					newLeafNode(lv_name_3_0, grammarAccess.getReserveDomainAccess().getNameReserveKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReserveDomainRule());
					}
					setWithLastConsumed($current, "name", lv_name_3_0, "Reserve");
				}
			)
		)
	)
;

// Entry rule entryRuleEnumTD
entryRuleEnumTD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumTDRule()); }
	iv_ruleEnumTD=ruleEnumTD
	{ $current=$iv_ruleEnumTD.current; }
	EOF;

// Rule EnumTD
ruleEnumTD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumTDAccess().getEnumKeyword_0());
		}
		otherlv_1='domain'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumTDAccess().getDomainKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEnumTDAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumTDRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.asmeta.xt.AsmetaL.ID");
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumTDAccess().getEqualsSignKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getEnumTDAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumTDAccess().getElementEnumElementParserRuleCall_5_0());
				}
				lv_element_5_0=ruleEnumElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumTDRule());
					}
					add(
						$current,
						"element",
						lv_element_5_0,
						"org.asmeta.xt.AsmetaL.EnumElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				otherlv_6='|'
				{
					newLeafNode(otherlv_6, grammarAccess.getEnumTDAccess().getVerticalLineKeyword_6_0_0());
				}
				    |
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getEnumTDAccess().getCommaKeyword_6_0_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEnumTDAccess().getElementEnumElementParserRuleCall_6_1_0());
					}
					lv_element_8_0=ruleEnumElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEnumTDRule());
						}
						add(
							$current,
							"element",
							lv_element_8_0,
							"org.asmeta.xt.AsmetaL.EnumElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getEnumTDAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleEnumElement
entryRuleEnumElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumElementRule()); }
	iv_ruleEnumElement=ruleEnumElement
	{ $current=$iv_ruleEnumElement.current; }
	EOF;

// Rule EnumElement
ruleEnumElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_symbol_0_0=RULE_ENUM_ID
			{
				newLeafNode(lv_symbol_0_0, grammarAccess.getEnumElementAccess().getSymbolENUM_IDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEnumElementRule());
				}
				setWithLastConsumed(
					$current,
					"symbol",
					lv_symbol_0_0,
					"org.asmeta.xt.AsmetaL.ENUM_ID");
			}
		)
	)
;

// Entry rule entryRuleStructuredTD
entryRuleStructuredTD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructuredTDRule()); }
	iv_ruleStructuredTD=ruleStructuredTD
	{ $current=$iv_ruleStructuredTD.current; }
	EOF;

// Rule StructuredTD
ruleStructuredTD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStructuredTDAccess().getRuleDomainParserRuleCall_0());
		}
		this_RuleDomain_0=ruleRuleDomain
		{
			$current = $this_RuleDomain_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStructuredTDAccess().getProductDomainParserRuleCall_1());
		}
		this_ProductDomain_1=ruleProductDomain
		{
			$current = $this_ProductDomain_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStructuredTDAccess().getSequenceDomainParserRuleCall_2());
		}
		this_SequenceDomain_2=ruleSequenceDomain
		{
			$current = $this_SequenceDomain_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStructuredTDAccess().getPowersetDomainParserRuleCall_3());
		}
		this_PowersetDomain_3=rulePowersetDomain
		{
			$current = $this_PowersetDomain_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStructuredTDAccess().getBagDomainParserRuleCall_4());
		}
		this_BagDomain_4=ruleBagDomain
		{
			$current = $this_BagDomain_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getStructuredTDAccess().getMapDomainParserRuleCall_5());
		}
		this_MapDomain_5=ruleMapDomain
		{
			$current = $this_MapDomain_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRuleDomain
entryRuleRuleDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleDomainRule()); }
	iv_ruleRuleDomain=ruleRuleDomain
	{ $current=$iv_ruleRuleDomain.current; }
	EOF;

// Rule RuleDomain
ruleRuleDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getRuleDomainAccess().getRuleDomainAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0='Rule'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRuleDomainAccess().getNameRuleKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleDomainRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "Rule");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getRuleDomainAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_1_0());
					}
					lv_domains_3_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleDomainRule());
						}
						add(
							$current,
							"domains",
							lv_domains_3_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getRuleDomainAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRuleDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_2_1_0());
						}
						lv_domains_5_0=rulegetDomainByID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRuleDomainRule());
							}
							add(
								$current,
								"domains",
								lv_domains_5_0,
								"org.asmeta.xt.AsmetaL.getDomainByID");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getRuleDomainAccess().getRightParenthesisKeyword_2_3());
			}
		)?
	)
;

// Entry rule entryRuleProductDomain
entryRuleProductDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProductDomainRule()); }
	iv_ruleProductDomain=ruleProductDomain
	{ $current=$iv_ruleProductDomain.current; }
	EOF;

// Rule ProductDomain
ruleProductDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Prod'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getProductDomainAccess().getNameProdKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProductDomainRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Prod");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getProductDomainAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProductDomainAccess().getDomainsGetDomainByIDParserRuleCall_2_0());
				}
				lv_domains_2_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProductDomainRule());
					}
					add(
						$current,
						"domains",
						lv_domains_2_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getProductDomainAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getProductDomainAccess().getDomainsGetDomainByIDParserRuleCall_3_1_0());
					}
					lv_domains_4_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProductDomainRule());
						}
						add(
							$current,
							"domains",
							lv_domains_4_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getProductDomainAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleSequenceDomain
entryRuleSequenceDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceDomainRule()); }
	iv_ruleSequenceDomain=ruleSequenceDomain
	{ $current=$iv_ruleSequenceDomain.current; }
	EOF;

// Rule SequenceDomain
ruleSequenceDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Seq'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSequenceDomainAccess().getNameSeqKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSequenceDomainRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Seq");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSequenceDomainAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSequenceDomainAccess().getDomainGetDomainByIDParserRuleCall_2_0());
				}
				lv_domain_2_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSequenceDomainRule());
					}
					set(
						$current,
						"domain",
						lv_domain_2_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSequenceDomainAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulePowersetDomain
entryRulePowersetDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPowersetDomainRule()); }
	iv_rulePowersetDomain=rulePowersetDomain
	{ $current=$iv_rulePowersetDomain.current; }
	EOF;

// Rule PowersetDomain
rulePowersetDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Powerset'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getPowersetDomainAccess().getNamePowersetKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPowersetDomainRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Powerset");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPowersetDomainAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPowersetDomainAccess().getBaseDomainGetDomainByIDParserRuleCall_2_0());
				}
				lv_baseDomain_2_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPowersetDomainRule());
					}
					set(
						$current,
						"baseDomain",
						lv_baseDomain_2_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getPowersetDomainAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleBagDomain
entryRuleBagDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBagDomainRule()); }
	iv_ruleBagDomain=ruleBagDomain
	{ $current=$iv_ruleBagDomain.current; }
	EOF;

// Rule BagDomain
ruleBagDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Bag'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getBagDomainAccess().getNameBagKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBagDomainRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Bag");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBagDomainAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBagDomainAccess().getDomainGetDomainByIDParserRuleCall_2_0());
				}
				lv_domain_2_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBagDomainRule());
					}
					set(
						$current,
						"domain",
						lv_domain_2_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getBagDomainAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleMapDomain
entryRuleMapDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapDomainRule()); }
	iv_ruleMapDomain=ruleMapDomain
	{ $current=$iv_ruleMapDomain.current; }
	EOF;

// Rule MapDomain
ruleMapDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='Map'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMapDomainAccess().getNameMapKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMapDomainRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "Map");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMapDomainAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapDomainAccess().getSourceDomainGetDomainByIDParserRuleCall_2_0());
				}
				lv_sourceDomain_2_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapDomainRule());
					}
					set(
						$current,
						"sourceDomain",
						lv_sourceDomain_2_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getMapDomainAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapDomainAccess().getTargetDomainGetDomainByIDParserRuleCall_4_0());
				}
				lv_targetDomain_4_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapDomainRule());
					}
					set(
						$current,
						"targetDomain",
						lv_targetDomain_4_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getMapDomainAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRulegetDomainByID
entryRulegetDomainByID returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGetDomainByIDRule()); }
	iv_rulegetDomainByID=rulegetDomainByID
	{ $current=$iv_rulegetDomainByID.current; }
	EOF;

// Rule getDomainByID
rulegetDomainByID returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getGetDomainByIDAccess().getStructuredTDParserRuleCall_0());
		}
		this_StructuredTD_0=ruleStructuredTD
		{
			$current = $this_StructuredTD_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getGetDomainByIDAccess().getNameofDomainParserRuleCall_1());
		}
		this_nameofDomain_1=rulenameofDomain
		{
			$current = $this_nameofDomain_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getGetDomainByIDAccess().getStandardDomainParserRuleCall_2());
		}
		this_StandardDomain_2=ruleStandardDomain
		{
			$current = $this_StandardDomain_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getGetDomainByIDAccess().getAbstractTDParserRuleCall_3());
		}
		this_AbstractTD_3=ruleAbstractTD
		{
			$current = $this_AbstractTD_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				lv_name_4_0='Agent'
				{
					newLeafNode(lv_name_4_0, grammarAccess.getGetDomainByIDAccess().getNameAgentKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGetDomainByIDRule());
					}
					setWithLastConsumed($current, "name", lv_name_4_0, "Agent");
				}
			)
		)
		    |
		(
			(
				lv_name_5_0='Reserve'
				{
					newLeafNode(lv_name_5_0, grammarAccess.getGetDomainByIDAccess().getNameReserveKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGetDomainByIDRule());
					}
					setWithLastConsumed($current, "name", lv_name_5_0, "Reserve");
				}
			)
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getBasicFunctionParserRuleCall_0());
		}
		this_BasicFunction_0=ruleBasicFunction
		{
			$current = $this_BasicFunction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getDerivedFunctionParserRuleCall_1());
		}
		this_DerivedFunction_1=ruleDerivedFunction
		{
			$current = $this_DerivedFunction_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicFunction
entryRuleBasicFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicFunctionRule()); }
	iv_ruleBasicFunction=ruleBasicFunction
	{ $current=$iv_ruleBasicFunction.current; }
	EOF;

// Rule BasicFunction
ruleBasicFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicFunctionAccess().getStaticFunctionParserRuleCall_0());
		}
		this_StaticFunction_0=ruleStaticFunction
		{
			$current = $this_StaticFunction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicFunctionAccess().getDynamicFunctionParserRuleCall_1());
		}
		this_DynamicFunction_1=ruleDynamicFunction
		{
			$current = $this_DynamicFunction_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDerivedFunction
entryRuleDerivedFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDerivedFunctionRule()); }
	iv_ruleDerivedFunction=ruleDerivedFunction
	{ $current=$iv_ruleDerivedFunction.current; }
	EOF;

// Rule DerivedFunction
ruleDerivedFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='derived'
		{
			newLeafNode(otherlv_0, grammarAccess.getDerivedFunctionAccess().getDerivedKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDerivedFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDerivedFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.asmeta.xt.AsmetaL.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDerivedFunctionAccess().getColonKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDerivedFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0());
					}
					lv_domain_3_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDerivedFunctionRule());
						}
						set(
							$current,
							"domain",
							lv_domain_3_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='->'
			{
				newLeafNode(otherlv_4, grammarAccess.getDerivedFunctionAccess().getHyphenMinusGreaterThanSignKeyword_3_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDerivedFunctionAccess().getCodomainGetDomainByIDParserRuleCall_4_0());
				}
				lv_codomain_5_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDerivedFunctionRule());
					}
					set(
						$current,
						"codomain",
						lv_codomain_5_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStaticFunction
entryRuleStaticFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStaticFunctionRule()); }
	iv_ruleStaticFunction=ruleStaticFunction
	{ $current=$iv_ruleStaticFunction.current; }
	EOF;

// Rule StaticFunction
ruleStaticFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='static'
		{
			newLeafNode(otherlv_0, grammarAccess.getStaticFunctionAccess().getStaticKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStaticFunctionAccess().getNameExtendedNameForFunctionParserRuleCall_1_0());
				}
				lv_name_1_0=ruleextendedNameForFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStaticFunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.asmeta.xt.AsmetaL.extendedNameForFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getStaticFunctionAccess().getColonKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getStaticFunctionAccess().getDomainGetDomainByIDParserRuleCall_3_0_0());
					}
					lv_domain_3_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getStaticFunctionRule());
						}
						set(
							$current,
							"domain",
							lv_domain_3_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4='->'
			{
				newLeafNode(otherlv_4, grammarAccess.getStaticFunctionAccess().getHyphenMinusGreaterThanSignKeyword_3_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getStaticFunctionAccess().getCodomainGetDomainByIDParserRuleCall_4_0());
				}
				lv_codomain_5_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStaticFunctionRule());
					}
					set(
						$current,
						"codomain",
						lv_codomain_5_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDynamicFunction
entryRuleDynamicFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDynamicFunctionRule()); }
	iv_ruleDynamicFunction=ruleDynamicFunction
	{ $current=$iv_ruleDynamicFunction.current; }
	EOF;

// Rule DynamicFunction
ruleDynamicFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getOutFunctionParserRuleCall_0());
		}
		this_OutFunction_0=ruleOutFunction
		{
			$current = $this_OutFunction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getMonitoredFunctionParserRuleCall_1());
		}
		this_MonitoredFunction_1=ruleMonitoredFunction
		{
			$current = $this_MonitoredFunction_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getSharedFunctionParserRuleCall_2());
		}
		this_SharedFunction_2=ruleSharedFunction
		{
			$current = $this_SharedFunction_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getControlledFunctionParserRuleCall_3());
		}
		this_ControlledFunction_3=ruleControlledFunction
		{
			$current = $this_ControlledFunction_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDynamicFunctionAccess().getLocalFunctionParserRuleCall_4());
		}
		this_LocalFunction_4=ruleLocalFunction
		{
			$current = $this_LocalFunction_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLocalFunction
entryRuleLocalFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalFunctionRule()); }
	iv_ruleLocalFunction=ruleLocalFunction
	{ $current=$iv_ruleLocalFunction.current; }
	EOF;

// Rule LocalFunction
ruleLocalFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_dynamic_0_0='dynamic'
				{
					newLeafNode(lv_dynamic_0_0, grammarAccess.getLocalFunctionAccess().getDynamicDynamicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLocalFunctionRule());
					}
					setWithLastConsumed($current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
				}
			)
		)?
		otherlv_1='local'
		{
			newLeafNode(otherlv_1, grammarAccess.getLocalFunctionAccess().getLocalKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleextendedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalFunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.asmeta.xt.AsmetaL.extendedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getLocalFunctionAccess().getColonKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLocalFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
					}
					lv_domain_4_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLocalFunctionRule());
						}
						set(
							$current,
							"domain",
							lv_domain_4_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='->'
			{
				newLeafNode(otherlv_5, grammarAccess.getLocalFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
				}
				lv_codomain_6_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalFunctionRule());
					}
					set(
						$current,
						"codomain",
						lv_codomain_6_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleControlledFunction
entryRuleControlledFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlledFunctionRule()); }
	iv_ruleControlledFunction=ruleControlledFunction
	{ $current=$iv_ruleControlledFunction.current; }
	EOF;

// Rule ControlledFunction
ruleControlledFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_dynamic_0_0='dynamic'
				{
					newLeafNode(lv_dynamic_0_0, grammarAccess.getControlledFunctionAccess().getDynamicDynamicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlledFunctionRule());
					}
					setWithLastConsumed($current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
				}
			)
		)?
		otherlv_1='controlled'
		{
			newLeafNode(otherlv_1, grammarAccess.getControlledFunctionAccess().getControlledKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getControlledFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleextendedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControlledFunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.asmeta.xt.AsmetaL.extendedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getControlledFunctionAccess().getColonKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getControlledFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
					}
					lv_domain_4_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getControlledFunctionRule());
						}
						set(
							$current,
							"domain",
							lv_domain_4_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='->'
			{
				newLeafNode(otherlv_5, grammarAccess.getControlledFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getControlledFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
				}
				lv_codomain_6_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControlledFunctionRule());
					}
					set(
						$current,
						"codomain",
						lv_codomain_6_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSharedFunction
entryRuleSharedFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSharedFunctionRule()); }
	iv_ruleSharedFunction=ruleSharedFunction
	{ $current=$iv_ruleSharedFunction.current; }
	EOF;

// Rule SharedFunction
ruleSharedFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_dynamic_0_0='dynamic'
				{
					newLeafNode(lv_dynamic_0_0, grammarAccess.getSharedFunctionAccess().getDynamicDynamicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSharedFunctionRule());
					}
					setWithLastConsumed($current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
				}
			)
		)?
		otherlv_1='shared'
		{
			newLeafNode(otherlv_1, grammarAccess.getSharedFunctionAccess().getSharedKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSharedFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleextendedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSharedFunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.asmeta.xt.AsmetaL.extendedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getSharedFunctionAccess().getColonKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSharedFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
					}
					lv_domain_4_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSharedFunctionRule());
						}
						set(
							$current,
							"domain",
							lv_domain_4_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='->'
			{
				newLeafNode(otherlv_5, grammarAccess.getSharedFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSharedFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
				}
				lv_codomain_6_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSharedFunctionRule());
					}
					set(
						$current,
						"codomain",
						lv_codomain_6_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleMonitoredFunction
entryRuleMonitoredFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMonitoredFunctionRule()); }
	iv_ruleMonitoredFunction=ruleMonitoredFunction
	{ $current=$iv_ruleMonitoredFunction.current; }
	EOF;

// Rule MonitoredFunction
ruleMonitoredFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_dynamic_0_0='dynamic'
				{
					newLeafNode(lv_dynamic_0_0, grammarAccess.getMonitoredFunctionAccess().getDynamicDynamicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMonitoredFunctionRule());
					}
					setWithLastConsumed($current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
				}
			)
		)?
		otherlv_1='monitored'
		{
			newLeafNode(otherlv_1, grammarAccess.getMonitoredFunctionAccess().getMonitoredKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMonitoredFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleextendedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMonitoredFunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.asmeta.xt.AsmetaL.extendedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getMonitoredFunctionAccess().getColonKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMonitoredFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
					}
					lv_domain_4_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMonitoredFunctionRule());
						}
						set(
							$current,
							"domain",
							lv_domain_4_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='->'
			{
				newLeafNode(otherlv_5, grammarAccess.getMonitoredFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMonitoredFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
				}
				lv_codomain_6_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMonitoredFunctionRule());
					}
					set(
						$current,
						"codomain",
						lv_codomain_6_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOutFunction
entryRuleOutFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutFunctionRule()); }
	iv_ruleOutFunction=ruleOutFunction
	{ $current=$iv_ruleOutFunction.current; }
	EOF;

// Rule OutFunction
ruleOutFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_dynamic_0_0='dynamic'
				{
					newLeafNode(lv_dynamic_0_0, grammarAccess.getOutFunctionAccess().getDynamicDynamicKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutFunctionRule());
					}
					setWithLastConsumed($current, "dynamic", lv_dynamic_0_0 != null, "dynamic");
				}
			)
		)?
		otherlv_1='out'
		{
			newLeafNode(otherlv_1, grammarAccess.getOutFunctionAccess().getOutKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOutFunctionAccess().getNameExtendedNameParserRuleCall_2_0());
				}
				lv_name_2_0=ruleextendedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutFunctionRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.asmeta.xt.AsmetaL.extendedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getOutFunctionAccess().getColonKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getOutFunctionAccess().getDomainGetDomainByIDParserRuleCall_4_0_0());
					}
					lv_domain_4_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutFunctionRule());
						}
						set(
							$current,
							"domain",
							lv_domain_4_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='->'
			{
				newLeafNode(otherlv_5, grammarAccess.getOutFunctionAccess().getHyphenMinusGreaterThanSignKeyword_4_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOutFunctionAccess().getCodomainGetDomainByIDParserRuleCall_5_0());
				}
				lv_codomain_6_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutFunctionRule());
					}
					set(
						$current,
						"codomain",
						lv_codomain_6_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleextendedNameForFunction
entryRuleextendedNameForFunction returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExtendedNameForFunctionRule()); }
	iv_ruleextendedNameForFunction=ruleextendedNameForFunction
	{ $current=$iv_ruleextendedNameForFunction.current.getText(); }
	EOF;

// Rule extendedNameForFunction
ruleextendedNameForFunction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getExtendedNameForFunctionAccess().getIDTerminalRuleCall_0());
		}
		    |
		kw='and'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getAndKeyword_1());
		}
		    |
		kw='or'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getOrKeyword_2());
		}
		    |
		kw='not'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getNotKeyword_3());
		}
		    |
		kw='xor'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getXorKeyword_4());
		}
		    |
		kw='mod'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getModKeyword_5());
		}
		    |
		kw='iff'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getIffKeyword_6());
		}
		    |
		kw='implies'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtendedNameForFunctionAccess().getImpliesKeyword_7());
		}
	)
;

// Entry rule entryRuleextendedNameForAsm
entryRuleextendedNameForAsm returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExtendedNameForAsmRule()); }
	iv_ruleextendedNameForAsm=ruleextendedNameForAsm
	{ $current=$iv_ruleextendedNameForAsm.current.getText(); }
	EOF;

// Rule extendedNameForAsm
ruleextendedNameForAsm returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getExtendedNameForAsmAccess().getIDTerminalRuleCall_0());
		}
		    |
		this_ENUM_ID_1=RULE_ENUM_ID
		{
			$current.merge(this_ENUM_ID_1);
		}
		{
			newLeafNode(this_ENUM_ID_1, grammarAccess.getExtendedNameForAsmAccess().getENUM_IDTerminalRuleCall_1());
		}
		    |
		kw='while'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtendedNameForAsmAccess().getWhileKeyword_2());
		}
		    |
		kw='for'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtendedNameForAsmAccess().getForKeyword_3());
		}
		    |
		kw='main'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getExtendedNameForAsmAccess().getMainKeyword_4());
		}
	)
;

// Entry rule entryRuleextendedName
entryRuleextendedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExtendedNameRule()); }
	iv_ruleextendedName=ruleextendedName
	{ $current=$iv_ruleextendedName.current.getText(); }
	EOF;

// Rule extendedName
ruleextendedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_RULE_ID_0=RULE_RULE_ID
		{
			$current.merge(this_RULE_ID_0);
		}
		{
			newLeafNode(this_RULE_ID_0, grammarAccess.getExtendedNameAccess().getRULE_IDTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getExtendedNameAccess().getIDTerminalRuleCall_1());
		}
		    |
		this_ENUM_ID_2=RULE_ENUM_ID
		{
			$current.merge(this_ENUM_ID_2);
		}
		{
			newLeafNode(this_ENUM_ID_2, grammarAccess.getExtendedNameAccess().getENUM_IDTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTermAccess().getExpressionParserRuleCall_0());
		}
		this_Expression_0=ruleExpression
		{
			$current = $this_Expression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTermAccess().getDomainTermParserRuleCall_1());
		}
		this_DomainTerm_1=ruleDomainTerm
		{
			$current = $this_DomainTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTermAccess().getExtendedTermParserRuleCall_2());
		}
		this_ExtendedTerm_2=ruleExtendedTerm
		{
			$current = $this_ExtendedTerm_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDomainTerm
entryRuleDomainTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDomainTermRule()); }
	iv_ruleDomainTerm=ruleDomainTerm
	{ $current=$iv_ruleDomainTerm.current; }
	EOF;

// Rule DomainTerm
ruleDomainTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getDomainTermAccess().getGetDomainByIDParserRuleCall());
	}
	this_getDomainByID_0=rulegetDomainByID
	{
		$current = $this_getDomainByID_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getImpliesIffExpressionParserRuleCall());
	}
	this_ImpliesIffExpression_0=ruleImpliesIffExpression
	{
		$current = $this_ImpliesIffExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleImpliesIffExpression
entryRuleImpliesIffExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImpliesIffExpressionRule()); }
	iv_ruleImpliesIffExpression=ruleImpliesIffExpression
	{ $current=$iv_ruleImpliesIffExpression.current; }
	EOF;

// Rule ImpliesIffExpression
ruleImpliesIffExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getImpliesIffExpressionAccess().getXorOrExpressionParserRuleCall_0());
		}
		this_XorOrExpression_0=ruleXorOrExpression
		{
			$current = $this_XorOrExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							(
								'implies'
								    |
								'iff'
							)
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getImpliesIffExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_op_2_1='implies'
								{
									newLeafNode(lv_op_2_1, grammarAccess.getImpliesIffExpressionAccess().getOpImpliesKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getImpliesIffExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_1, null);
								}
								    |
								lv_op_2_2='iff'
								{
									newLeafNode(lv_op_2_2, grammarAccess.getImpliesIffExpressionAccess().getOpIffKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getImpliesIffExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_2, null);
								}
							)
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getImpliesIffExpressionAccess().getRightXorOrExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleXorOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImpliesIffExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.asmeta.xt.AsmetaL.XorOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleXorOrExpression
entryRuleXorOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getXorOrExpressionRule()); }
	iv_ruleXorOrExpression=ruleXorOrExpression
	{ $current=$iv_ruleXorOrExpression.current; }
	EOF;

// Rule XorOrExpression
ruleXorOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getXorOrExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=ruleAndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							(
								'xor'
								    |
								'or'
							)
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getXorOrExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_op_2_1='xor'
								{
									newLeafNode(lv_op_2_1, grammarAccess.getXorOrExpressionAccess().getOpXorKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getXorOrExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_1, null);
								}
								    |
								lv_op_2_2='or'
								{
									newLeafNode(lv_op_2_2, grammarAccess.getXorOrExpressionAccess().getOpOrKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getXorOrExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_2, null);
								}
							)
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getXorOrExpressionAccess().getRightAndExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getXorOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.asmeta.xt.AsmetaL.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=ruleEqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							'and'
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							lv_op_2_0='and'
							{
								newLeafNode(lv_op_2_0, grammarAccess.getAndExpressionAccess().getOpAndKeyword_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAndExpressionRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_0, "and");
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.asmeta.xt.AsmetaL.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getCompareExpressionParserRuleCall_0());
		}
		this_CompareExpression_0=ruleCompareExpression
		{
			$current = $this_CompareExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							(
								'='
								    |
								'!='
							)
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_op_2_1='='
								{
									newLeafNode(lv_op_2_1, grammarAccess.getEqualityExpressionAccess().getOpEqualsSignKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getEqualityExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_1, null);
								}
								    |
								lv_op_2_2='!='
								{
									newLeafNode(lv_op_2_2, grammarAccess.getEqualityExpressionAccess().getOpExclamationMarkEqualsSignKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getEqualityExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_2, null);
								}
							)
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightCompareExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleCompareExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.asmeta.xt.AsmetaL.CompareExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCompareExpression
entryRuleCompareExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareExpressionRule()); }
	iv_ruleCompareExpression=ruleCompareExpression
	{ $current=$iv_ruleCompareExpression.current; }
	EOF;

// Rule CompareExpression
ruleCompareExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCompareExpressionAccess().getAdditiveExpressionParserRuleCall_0());
		}
		this_AdditiveExpression_0=ruleAdditiveExpression
		{
			$current = $this_AdditiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							(
								'>'
								    |
								'<'
								    |
								'>='
								    |
								'<='
							)
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getCompareExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_op_2_1='>'
								{
									newLeafNode(lv_op_2_1, grammarAccess.getCompareExpressionAccess().getOpGreaterThanSignKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getCompareExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_1, null);
								}
								    |
								lv_op_2_2='<'
								{
									newLeafNode(lv_op_2_2, grammarAccess.getCompareExpressionAccess().getOpLessThanSignKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getCompareExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_2, null);
								}
								    |
								lv_op_2_3='>='
								{
									newLeafNode(lv_op_2_3, grammarAccess.getCompareExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_0_1_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getCompareExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_3, null);
								}
								    |
								lv_op_2_4='<='
								{
									newLeafNode(lv_op_2_4, grammarAccess.getCompareExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_0_1_0_3());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getCompareExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_4, null);
								}
							)
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleAdditiveExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.asmeta.xt.AsmetaL.AdditiveExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	iv_ruleAdditiveExpression=ruleAdditiveExpression
	{ $current=$iv_ruleAdditiveExpression.current; }
	EOF;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
		}
		this_MultiplicativeExpression_0=ruleMultiplicativeExpression
		{
			$current = $this_MultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							(
								'+'
								    |
								'-'
							)
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAdditiveExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_op_2_1='+'
								{
									newLeafNode(lv_op_2_1, grammarAccess.getAdditiveExpressionAccess().getOpPlusSignKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getAdditiveExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_1, null);
								}
								    |
								lv_op_2_2='-'
								{
									newLeafNode(lv_op_2_2, grammarAccess.getAdditiveExpressionAccess().getOpHyphenMinusKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getAdditiveExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_2, null);
								}
							)
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.asmeta.xt.AsmetaL.MultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression
	{ $current=$iv_ruleMultiplicativeExpression.current; }
	EOF;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getPowerExpressionParserRuleCall_0());
		}
		this_PowerExpression_0=rulePowerExpression
		{
			$current = $this_PowerExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							(
								'*'
								    |
								'/'
								    |
								'mod'
							)
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultiplicativeExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_op_2_1='*'
								{
									newLeafNode(lv_op_2_1, grammarAccess.getMultiplicativeExpressionAccess().getOpAsteriskKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_1, null);
								}
								    |
								lv_op_2_2='/'
								{
									newLeafNode(lv_op_2_2, grammarAccess.getMultiplicativeExpressionAccess().getOpSolidusKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_2, null);
								}
								    |
								lv_op_2_3='mod'
								{
									newLeafNode(lv_op_2_3, grammarAccess.getMultiplicativeExpressionAccess().getOpModKeyword_1_0_0_1_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
									}
									setWithLastConsumed($current, "op", lv_op_2_3, null);
								}
							)
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightPowerExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=rulePowerExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.asmeta.xt.AsmetaL.PowerExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePowerExpression
entryRulePowerExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPowerExpressionRule()); }
	iv_rulePowerExpression=rulePowerExpression
	{ $current=$iv_rulePowerExpression.current; }
	EOF;

// Rule PowerExpression
rulePowerExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getPowerExpressionAccess().getUnaryOperationParserRuleCall_0());
		}
		this_UnaryOperation_0=ruleUnaryOperation
		{
			$current = $this_UnaryOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							'^'
						)
					)
				)
				)=>
				(
					(
						{
							/* */
						}
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPowerExpressionAccess().getBinaryOperationLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							lv_op_2_0='^'
							{
								newLeafNode(lv_op_2_0, grammarAccess.getPowerExpressionAccess().getOpCircumflexAccentKeyword_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPowerExpressionRule());
								}
								setWithLastConsumed($current, "op", lv_op_2_0, "^");
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPowerExpressionAccess().getRightUnaryOperationParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPowerExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.asmeta.xt.AsmetaL.UnaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnaryOperation
entryRuleUnaryOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryOperationRule()); }
	iv_ruleUnaryOperation=ruleUnaryOperation
	{ $current=$iv_ruleUnaryOperation.current; }
	EOF;

// Rule UnaryOperation
ruleUnaryOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_op_0_1='not'
						{
							newLeafNode(lv_op_0_1, grammarAccess.getUnaryOperationAccess().getOpNotKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryOperationRule());
							}
							setWithLastConsumed($current, "op", lv_op_0_1, null);
						}
						    |
						lv_op_0_2='+'
						{
							newLeafNode(lv_op_0_2, grammarAccess.getUnaryOperationAccess().getOpPlusSignKeyword_0_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryOperationRule());
							}
							setWithLastConsumed($current, "op", lv_op_0_2, null);
						}
						    |
						lv_op_0_3='-'
						{
							newLeafNode(lv_op_0_3, grammarAccess.getUnaryOperationAccess().getOpHyphenMinusKeyword_0_0_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryOperationRule());
							}
							setWithLastConsumed($current, "op", lv_op_0_3, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryOperationAccess().getOperandUnaryOperationParserRuleCall_0_1_0());
					}
					lv_operand_1_0=ruleUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryOperationRule());
						}
						set(
							$current,
							"operand",
							lv_operand_1_0,
							"org.asmeta.xt.AsmetaL.UnaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUnaryOperationAccess().getBasicExprParserRuleCall_1());
		}
		this_basicExpr_2=rulebasicExpr
		{
			$current = $this_basicExpr_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getUnaryOperationAccess().getParenthesizedExpressionParserRuleCall_2());
		}
		this_ParenthesizedExpression_3=ruleParenthesizedExpression
		{
			$current = $this_ParenthesizedExpression_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenthesizedExpressionRule()); }
	iv_ruleParenthesizedExpression=ruleParenthesizedExpression
	{ $current=$iv_ruleParenthesizedExpression.current; }
	EOF;

// Rule ParenthesizedExpression
ruleParenthesizedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
		}
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1());
		}
		this_Expression_1=ruleExpression
		{
			$current = $this_Expression_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRulebasicExpr
entryRulebasicExpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicExprRule()); }
	iv_rulebasicExpr=rulebasicExpr
	{ $current=$iv_rulebasicExpr.current; }
	EOF;

// Rule basicExpr
rulebasicExpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicExprAccess().getBasicTermParserRuleCall_0());
		}
		this_BasicTerm_0=ruleBasicTerm
		{
			$current = $this_BasicTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicExprAccess().getFiniteQuantificationTermParserRuleCall_1());
		}
		this_FiniteQuantificationTerm_1=ruleFiniteQuantificationTerm
		{
			$current = $this_FiniteQuantificationTerm_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicTerm
entryRuleBasicTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicTermRule()); }
	iv_ruleBasicTerm=ruleBasicTerm
	{ $current=$iv_ruleBasicTerm.current; }
	EOF;

// Rule BasicTerm
ruleBasicTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getFunctionTermParserRuleCall_0());
		}
		this_FunctionTerm_0=ruleFunctionTerm
		{
			$current = $this_FunctionTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getConstantTermParserRuleCall_1());
		}
		this_ConstantTerm_1=ruleConstantTerm
		{
			$current = $this_ConstantTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getVariableTermParserRuleCall_2());
		}
		this_VariableTerm_2=ruleVariableTerm
		{
			$current = $this_VariableTerm_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicTermAccess().getLocationTermParserRuleCall_3());
		}
		this_LocationTerm_3=ruleLocationTerm
		{
			$current = $this_LocationTerm_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFunctionTerm
entryRuleFunctionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionTermRule()); }
	iv_ruleFunctionTerm=ruleFunctionTerm
	{ $current=$iv_ruleFunctionTerm.current; }
	EOF;

// Rule FunctionTerm
ruleFunctionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionTermAccess().getAgentExtendedNameParserRuleCall_0_0_0());
					}
					lv_agent_0_0=ruleextendedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionTermRule());
						}
						set(
							$current,
							"agent",
							lv_agent_0_0,
							"org.asmeta.xt.AsmetaL.extendedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getFunctionTermAccess().getFullStopKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionTermAccess().getFunctionNameExtendedNameForFunctionParserRuleCall_1_0());
				}
				lv_functionName_2_0=ruleextendedNameForFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionTermRule());
					}
					set(
						$current,
						"functionName",
						lv_functionName_2_0,
						"org.asmeta.xt.AsmetaL.extendedNameForFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionTermAccess().getArgumentsTupleTermParserRuleCall_2_0());
				}
				lv_arguments_3_0=ruleTupleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionTermRule());
					}
					set(
						$current,
						"arguments",
						lv_arguments_3_0,
						"org.asmeta.xt.AsmetaL.TupleTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleLocationTerm
entryRuleLocationTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocationTermRule()); }
	iv_ruleLocationTerm=ruleLocationTerm
	{ $current=$iv_ruleLocationTerm.current; }
	EOF;

// Rule LocationTerm
ruleLocationTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLocationTermAccess().getAgentExtendedNameParserRuleCall_0_0_0());
					}
					lv_agent_0_0=ruleextendedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLocationTermRule());
						}
						set(
							$current,
							"agent",
							lv_agent_0_0,
							"org.asmeta.xt.AsmetaL.extendedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getLocationTermAccess().getFullStopKeyword_0_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLocationTermAccess().getFunctionNameExtendedNameForFunctionParserRuleCall_1_0());
				}
				lv_functionName_2_0=ruleextendedNameForFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocationTermRule());
					}
					set(
						$current,
						"functionName",
						lv_functionName_2_0,
						"org.asmeta.xt.AsmetaL.extendedNameForFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLocationTermAccess().getArgumentsTupleTermParserRuleCall_2_0());
				}
				lv_arguments_3_0=ruleTupleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocationTermRule());
					}
					set(
						$current,
						"arguments",
						lv_arguments_3_0,
						"org.asmeta.xt.AsmetaL.TupleTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleVariableTerm
entryRuleVariableTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableTermRule()); }
	iv_ruleVariableTerm=ruleVariableTerm
	{ $current=$iv_ruleVariableTerm.current; }
	EOF;

// Rule VariableTerm
ruleVariableTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getVariableTermAccess().getNameID_VARIABLEParserRuleCall_0());
			}
			lv_name_0_0=ruleID_VARIABLE
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getVariableTermRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"org.asmeta.xt.AsmetaL.ID_VARIABLE");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleConstantTerm
entryRuleConstantTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantTermRule()); }
	iv_ruleConstantTerm=ruleConstantTerm
	{ $current=$iv_ruleConstantTerm.current; }
	EOF;

// Rule ConstantTerm
ruleConstantTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConstantTermAccess().getNumberTermParserRuleCall_0());
		}
		this_NumberTerm_0=ruleNumberTerm
		{
			$current = $this_NumberTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConstantTermAccess().getComplexTermParserRuleCall_1());
		}
		this_ComplexTerm_1=ruleComplexTerm
		{
			$current = $this_ComplexTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConstantTermAccess().getNaturalTermParserRuleCall_2());
		}
		this_NaturalTerm_2=ruleNaturalTerm
		{
			$current = $this_NaturalTerm_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConstantTermAccess().getCharTermParserRuleCall_3());
		}
		this_CharTerm_3=ruleCharTerm
		{
			$current = $this_CharTerm_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConstantTermAccess().getStringTermParserRuleCall_4());
		}
		this_StringTerm_4=ruleStringTerm
		{
			$current = $this_StringTerm_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConstantTermAccess().getBooleanTermParserRuleCall_5());
		}
		this_BooleanTerm_5=ruleBooleanTerm
		{
			$current = $this_BooleanTerm_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConstantTermAccess().getUndefTermParserRuleCall_6());
		}
		this_UndefTerm_6=ruleUndefTerm
		{
			$current = $this_UndefTerm_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getConstantTermAccess().getEnumTermParserRuleCall_7());
		}
		this_EnumTerm_7=ruleEnumTerm
		{
			$current = $this_EnumTerm_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNumberTerm
entryRuleNumberTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberTermRule()); }
	iv_ruleNumberTerm=ruleNumberTerm
	{ $current=$iv_ruleNumberTerm.current; }
	EOF;

// Rule NumberTerm
ruleNumberTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNumberTermAccess().getIntegerTermParserRuleCall_0());
		}
		this_IntegerTerm_0=ruleIntegerTerm
		{
			$current = $this_IntegerTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getNumberTermAccess().getRealTermParserRuleCall_1());
		}
		this_RealTerm_1=ruleRealTerm
		{
			$current = $this_RealTerm_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanTerm
entryRuleBooleanTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanTermRule()); }
	iv_ruleBooleanTerm=ruleBooleanTerm
	{ $current=$iv_ruleBooleanTerm.current; }
	EOF;

// Rule BooleanTerm
ruleBooleanTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_symbol_0_1='true'
				{
					newLeafNode(lv_symbol_0_1, grammarAccess.getBooleanTermAccess().getSymbolTrueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanTermRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_0_1, null);
				}
				    |
				lv_symbol_0_2='false'
				{
					newLeafNode(lv_symbol_0_2, grammarAccess.getBooleanTermAccess().getSymbolFalseKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBooleanTermRule());
					}
					setWithLastConsumed($current, "symbol", lv_symbol_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleUndefTerm
entryRuleUndefTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUndefTermRule()); }
	iv_ruleUndefTerm=ruleUndefTerm
	{ $current=$iv_ruleUndefTerm.current; }
	EOF;

// Rule UndefTerm
ruleUndefTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_symbol_0_0='undef'
			{
				newLeafNode(lv_symbol_0_0, grammarAccess.getUndefTermAccess().getSymbolUndefKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getUndefTermRule());
				}
				setWithLastConsumed($current, "symbol", lv_symbol_0_0, "undef");
			}
		)
	)
;

// Entry rule entryRuleComplexTerm
entryRuleComplexTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexTermRule()); }
	iv_ruleComplexTerm=ruleComplexTerm
	{ $current=$iv_ruleComplexTerm.current; }
	EOF;

// Rule ComplexTerm
ruleComplexTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_symbol_0_0=RULE_COMPLEX_NUMBER
			{
				newLeafNode(lv_symbol_0_0, grammarAccess.getComplexTermAccess().getSymbolCOMPLEX_NUMBERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getComplexTermRule());
				}
				setWithLastConsumed(
					$current,
					"symbol",
					lv_symbol_0_0,
					"org.asmeta.xt.AsmetaL.COMPLEX_NUMBER");
			}
		)
	)
;

// Entry rule entryRuleNaturalTerm
entryRuleNaturalTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNaturalTermRule()); }
	iv_ruleNaturalTerm=ruleNaturalTerm
	{ $current=$iv_ruleNaturalTerm.current; }
	EOF;

// Rule NaturalTerm
ruleNaturalTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_symbol_0_0=RULE_NATNUMBER
			{
				newLeafNode(lv_symbol_0_0, grammarAccess.getNaturalTermAccess().getSymbolNATNUMBERTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNaturalTermRule());
				}
				setWithLastConsumed(
					$current,
					"symbol",
					lv_symbol_0_0,
					"org.asmeta.xt.AsmetaL.NATNUMBER");
			}
		)
	)
;

// Entry rule entryRuleCharTerm
entryRuleCharTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCharTermRule()); }
	iv_ruleCharTerm=ruleCharTerm
	{ $current=$iv_ruleCharTerm.current; }
	EOF;

// Rule CharTerm
ruleCharTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_symbol_0_0=RULE_CHAR_LITERAL
			{
				newLeafNode(lv_symbol_0_0, grammarAccess.getCharTermAccess().getSymbolCHAR_LITERALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCharTermRule());
				}
				setWithLastConsumed(
					$current,
					"symbol",
					lv_symbol_0_0,
					"org.asmeta.xt.AsmetaL.CHAR_LITERAL");
			}
		)
	)
;

// Entry rule entryRuleStringTerm
entryRuleStringTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringTermRule()); }
	iv_ruleStringTerm=ruleStringTerm
	{ $current=$iv_ruleStringTerm.current; }
	EOF;

// Rule StringTerm
ruleStringTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_symbol_0_0=RULE_STRING_LITERAL
			{
				newLeafNode(lv_symbol_0_0, grammarAccess.getStringTermAccess().getSymbolSTRING_LITERALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringTermRule());
				}
				setWithLastConsumed(
					$current,
					"symbol",
					lv_symbol_0_0,
					"org.asmeta.xt.AsmetaL.STRING_LITERAL");
			}
		)
	)
;

// Entry rule entryRuleEnumTerm
entryRuleEnumTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumTermRule()); }
	iv_ruleEnumTerm=ruleEnumTerm
	{ $current=$iv_ruleEnumTerm.current; }
	EOF;

// Rule EnumTerm
ruleEnumTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_symbol_0_0=RULE_ENUM_ID
			{
				newLeafNode(lv_symbol_0_0, grammarAccess.getEnumTermAccess().getSymbolENUM_IDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEnumTermRule());
				}
				setWithLastConsumed(
					$current,
					"symbol",
					lv_symbol_0_0,
					"org.asmeta.xt.AsmetaL.ENUM_ID");
			}
		)
	)
;

// Entry rule entryRuleRealTerm
entryRuleRealTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRealTermRule()); }
	iv_ruleRealTerm=ruleRealTerm
	{ $current=$iv_ruleRealTerm.current; }
	EOF;

// Rule RealTerm
ruleRealTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRealTermAccess().getSymbolRealNumberWithSignParserRuleCall_0());
			}
			lv_symbol_0_0=ruleRealNumberWithSign
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getRealTermRule());
				}
				set(
					$current,
					"symbol",
					lv_symbol_0_0,
					"org.asmeta.xt.AsmetaL.RealNumberWithSign");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleIntegerTerm
entryRuleIntegerTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerTermRule()); }
	iv_ruleIntegerTerm=ruleIntegerTerm
	{ $current=$iv_ruleIntegerTerm.current; }
	EOF;

// Rule IntegerTerm
ruleIntegerTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_symbol_0_1=RULE_NUMBER_TOKEN
				{
					newLeafNode(lv_symbol_0_1, grammarAccess.getIntegerTermAccess().getSymbolNUMBER_TOKENTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntegerTermRule());
					}
					setWithLastConsumed(
						$current,
						"symbol",
						lv_symbol_0_1,
						"org.asmeta.xt.AsmetaL.NUMBER_TOKEN");
				}
				    |
				{
					newCompositeNode(grammarAccess.getIntegerTermAccess().getSymbolNumberWithSignParserRuleCall_0_1());
				}
				lv_symbol_0_2=ruleNumberWithSign
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntegerTermRule());
					}
					set(
						$current,
						"symbol",
						lv_symbol_0_2,
						"org.asmeta.xt.AsmetaL.NumberWithSign");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRealNumberWithSign
entryRuleRealNumberWithSign returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRealNumberWithSignRule()); }
	iv_ruleRealNumberWithSign=ruleRealNumberWithSign
	{ $current=$iv_ruleRealNumberWithSign.current.getText(); }
	EOF;

// Rule RealNumberWithSign
ruleRealNumberWithSign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='+'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getRealNumberWithSignAccess().getPlusSignKeyword_0_0());
			}
			    |
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getRealNumberWithSignAccess().getHyphenMinusKeyword_0_1());
			}
		)?
		this_REAL_NUMBER_2=RULE_REAL_NUMBER
		{
			$current.merge(this_REAL_NUMBER_2);
		}
		{
			newLeafNode(this_REAL_NUMBER_2, grammarAccess.getRealNumberWithSignAccess().getREAL_NUMBERTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleNumberWithSign
entryRuleNumberWithSign returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNumberWithSignRule()); }
	iv_ruleNumberWithSign=ruleNumberWithSign
	{ $current=$iv_ruleNumberWithSign.current.getText(); }
	EOF;

// Rule NumberWithSign
ruleNumberWithSign returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='+'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNumberWithSignAccess().getPlusSignKeyword_0_0());
			}
			    |
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getNumberWithSignAccess().getHyphenMinusKeyword_0_1());
			}
		)?
		this_NUMBER_TOKEN_2=RULE_NUMBER_TOKEN
		{
			$current.merge(this_NUMBER_TOKEN_2);
		}
		{
			newLeafNode(this_NUMBER_TOKEN_2, grammarAccess.getNumberWithSignAccess().getNUMBER_TOKENTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleExtendedTerm
entryRuleExtendedTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtendedTermRule()); }
	iv_ruleExtendedTerm=ruleExtendedTerm
	{ $current=$iv_ruleExtendedTerm.current; }
	EOF;

// Rule ExtendedTerm
ruleExtendedTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExtendedTermAccess().getConditionalTermParserRuleCall_0());
		}
		this_ConditionalTerm_0=ruleConditionalTerm
		{
			$current = $this_ConditionalTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExtendedTermAccess().getCaseTermParserRuleCall_1());
		}
		this_CaseTerm_1=ruleCaseTerm
		{
			$current = $this_CaseTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExtendedTermAccess().getTupleTermParserRuleCall_2());
		}
		this_TupleTerm_2=ruleTupleTerm
		{
			$current = $this_TupleTerm_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExtendedTermAccess().getVariableBindingTermParserRuleCall_3());
		}
		this_VariableBindingTerm_3=ruleVariableBindingTerm
		{
			$current = $this_VariableBindingTerm_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExtendedTermAccess().getCollectionTermParserRuleCall_4());
		}
		this_CollectionTerm_4=ruleCollectionTerm
		{
			$current = $this_CollectionTerm_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getExtendedTermAccess().getRuleAsTermParserRuleCall_5());
		}
		this_RuleAsTerm_5=ruleRuleAsTerm
		{
			$current = $this_RuleAsTerm_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConditionalTerm
entryRuleConditionalTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalTermRule()); }
	iv_ruleConditionalTerm=ruleConditionalTerm
	{ $current=$iv_ruleConditionalTerm.current; }
	EOF;

// Rule ConditionalTerm
ruleConditionalTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionalTermAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalTermAccess().getGuardTermParserRuleCall_1_0());
				}
				lv_guard_1_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalTermRule());
					}
					set(
						$current,
						"guard",
						lv_guard_1_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionalTermAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalTermAccess().getThenTermTermParserRuleCall_3_0());
				}
				lv_thenTerm_3_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalTermRule());
					}
					set(
						$current,
						"thenTerm",
						lv_thenTerm_3_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='else'
			{
				newLeafNode(otherlv_4, grammarAccess.getConditionalTermAccess().getElseKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalTermAccess().getElseTermTermParserRuleCall_4_1_0());
					}
					lv_elseTerm_5_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalTermRule());
						}
						set(
							$current,
							"elseTerm",
							lv_elseTerm_5_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='endif'
		{
			newLeafNode(otherlv_6, grammarAccess.getConditionalTermAccess().getEndifKeyword_5());
		}
	)
;

// Entry rule entryRuleCaseTerm
entryRuleCaseTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseTermRule()); }
	iv_ruleCaseTerm=ruleCaseTerm
	{ $current=$iv_ruleCaseTerm.current; }
	EOF;

// Rule CaseTerm
ruleCaseTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='switch'
		{
			newLeafNode(otherlv_0, grammarAccess.getCaseTermAccess().getSwitchKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseTermAccess().getComparedTermTermParserRuleCall_1_0());
				}
				lv_comparedTerm_1_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseTermRule());
					}
					set(
						$current,
						"comparedTerm",
						lv_comparedTerm_1_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='case'
			{
				newLeafNode(otherlv_2, grammarAccess.getCaseTermAccess().getCaseKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseTermAccess().getComparingTermTermParserRuleCall_2_1_0());
					}
					lv_comparingTerm_3_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseTermRule());
						}
						add(
							$current,
							"comparingTerm",
							lv_comparingTerm_3_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getCaseTermAccess().getColonKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseTermAccess().getResultTermsTermParserRuleCall_2_3_0());
					}
					lv_resultTerms_5_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseTermRule());
						}
						add(
							$current,
							"resultTerms",
							lv_resultTerms_5_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		(
			otherlv_6='otherwise'
			{
				newLeafNode(otherlv_6, grammarAccess.getCaseTermAccess().getOtherwiseKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseTermAccess().getOtherwiseTermTermParserRuleCall_3_1_0());
					}
					lv_otherwiseTerm_7_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseTermRule());
						}
						set(
							$current,
							"otherwiseTerm",
							lv_otherwiseTerm_7_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='endswitch'
		{
			newLeafNode(otherlv_8, grammarAccess.getCaseTermAccess().getEndswitchKeyword_4());
		}
	)
;

// Entry rule entryRuleTupleTerm
entryRuleTupleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTupleTermRule()); }
	iv_ruleTupleTerm=ruleTupleTerm
	{ $current=$iv_ruleTupleTerm.current; }
	EOF;

// Rule TupleTerm
ruleTupleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getTupleTermAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTupleTermAccess().getTermsTermParserRuleCall_1_0());
				}
				lv_terms_1_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTupleTermRule());
					}
					add(
						$current,
						"terms",
						lv_terms_1_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getTupleTermAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTupleTermAccess().getTermsTermParserRuleCall_2_1_0());
					}
					lv_terms_3_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTupleTermRule());
						}
						add(
							$current,
							"terms",
							lv_terms_3_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getTupleTermAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleCollectionTerm
entryRuleCollectionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCollectionTermRule()); }
	iv_ruleCollectionTerm=ruleCollectionTerm
	{ $current=$iv_ruleCollectionTerm.current; }
	EOF;

// Rule CollectionTerm
ruleCollectionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCollectionTermAccess().getSequenceTermParserRuleCall_0());
		}
		this_SequenceTerm_0=ruleSequenceTerm
		{
			$current = $this_SequenceTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCollectionTermAccess().getMapTermParserRuleCall_1());
		}
		this_MapTerm_1=ruleMapTerm
		{
			$current = $this_MapTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCollectionTermAccess().getSetTermParserRuleCall_2());
		}
		this_SetTerm_2=ruleSetTerm
		{
			$current = $this_SetTerm_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getCollectionTermAccess().getBagTermParserRuleCall_3());
		}
		this_BagTerm_3=ruleBagTerm
		{
			$current = $this_BagTerm_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSequenceTerm
entryRuleSequenceTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceTermRule()); }
	iv_ruleSequenceTerm=ruleSequenceTerm
	{ $current=$iv_ruleSequenceTerm.current; }
	EOF;

// Rule SequenceTerm
ruleSequenceTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSequenceTermAccess().getSequenceTermAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getSequenceTermAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceTermAccess().getStart_termTermParserRuleCall_2_0_0());
					}
					lv_start_term_2_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceTermRule());
						}
						set(
							$current,
							"start_term",
							lv_start_term_2_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getSequenceTermAccess().getCommaKeyword_2_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSequenceTermAccess().getOther_termsTermParserRuleCall_2_1_0_1_0());
							}
							lv_other_terms_4_0=ruleTerm
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSequenceTermRule());
								}
								add(
									$current,
									"other_terms",
									lv_other_terms_4_0,
									"org.asmeta.xt.AsmetaL.Term");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)+
				    |
				(
					(
						(':')=>
						otherlv_5=':'
						{
							newLeafNode(otherlv_5, grammarAccess.getSequenceTermAccess().getColonKeyword_2_1_1_0());
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getSequenceTermAccess().getEnd_termTermParserRuleCall_2_1_1_1_0());
							}
							lv_end_term_6_0=ruleTerm
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSequenceTermRule());
								}
								set(
									$current,
									"end_term",
									lv_end_term_6_0,
									"org.asmeta.xt.AsmetaL.Term");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_7=','
						{
							newLeafNode(otherlv_7, grammarAccess.getSequenceTermAccess().getCommaKeyword_2_1_1_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getSequenceTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0());
								}
								lv_step_8_0=ruleConstantTerm
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSequenceTermRule());
									}
									set(
										$current,
										"step",
										lv_step_8_0,
										"org.asmeta.xt.AsmetaL.ConstantTerm");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
				)
			)?
		)?
		otherlv_9=']'
		{
			newLeafNode(otherlv_9, grammarAccess.getSequenceTermAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMapTerm
entryRuleMapTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapTermRule()); }
	iv_ruleMapTerm=ruleMapTerm
	{ $current=$iv_ruleMapTerm.current; }
	EOF;

// Rule MapTerm
ruleMapTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getMapTermAccess().getMapTermAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMapTermAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='->'
			{
				newLeafNode(otherlv_2, grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_0());
			}
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_0_0());
						}
						lv_term_3_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapTermRule());
							}
							add(
								$current,
								"term",
								lv_term_3_0,
								"org.asmeta.xt.AsmetaL.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_4='->'
				{
					newLeafNode(otherlv_4, grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_2_0());
						}
						lv_term_5_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapTermRule());
							}
							add(
								$current,
								"term",
								lv_term_5_0,
								"org.asmeta.xt.AsmetaL.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_6=','
					{
						newLeafNode(otherlv_6, grammarAccess.getMapTermAccess().getCommaKeyword_2_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_3_1_0());
							}
							lv_term_7_0=ruleTerm
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMapTermRule());
								}
								add(
									$current,
									"term",
									lv_term_7_0,
									"org.asmeta.xt.AsmetaL.Term");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_8='->'
					{
						newLeafNode(otherlv_8, grammarAccess.getMapTermAccess().getHyphenMinusGreaterThanSignKeyword_2_1_3_2());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMapTermAccess().getTermTermParserRuleCall_2_1_3_3_0());
							}
							lv_term_9_0=ruleTerm
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMapTermRule());
								}
								add(
									$current,
									"term",
									lv_term_9_0,
									"org.asmeta.xt.AsmetaL.Term");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getMapTermAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleSetTerm
entryRuleSetTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetTermRule()); }
	iv_ruleSetTerm=ruleSetTerm
	{ $current=$iv_ruleSetTerm.current; }
	EOF;

// Rule SetTerm
ruleSetTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSetTermAccess().getSetTermAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSetTermAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSetTermAccess().getStart_termTermParserRuleCall_2_0_0());
					}
					lv_start_term_2_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetTermRule());
						}
						set(
							$current,
							"start_term",
							lv_start_term_2_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getSetTermAccess().getCommaKeyword_2_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSetTermAccess().getOther_termsTermParserRuleCall_2_1_0_1_0());
							}
							lv_other_terms_4_0=ruleTerm
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSetTermRule());
								}
								add(
									$current,
									"other_terms",
									lv_other_terms_4_0,
									"org.asmeta.xt.AsmetaL.Term");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)+
				    |
				(
					(
						(':')=>
						otherlv_5=':'
						{
							newLeafNode(otherlv_5, grammarAccess.getSetTermAccess().getColonKeyword_2_1_1_0());
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getSetTermAccess().getEnd_termTermParserRuleCall_2_1_1_1_0());
							}
							lv_end_term_6_0=ruleTerm
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSetTermRule());
								}
								set(
									$current,
									"end_term",
									lv_end_term_6_0,
									"org.asmeta.xt.AsmetaL.Term");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_7=','
						{
							newLeafNode(otherlv_7, grammarAccess.getSetTermAccess().getCommaKeyword_2_1_1_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getSetTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0());
								}
								lv_step_8_0=ruleConstantTerm
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSetTermRule());
									}
									set(
										$current,
										"step",
										lv_step_8_0,
										"org.asmeta.xt.AsmetaL.ConstantTerm");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
				)
			)?
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getSetTermAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleBagTerm
entryRuleBagTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBagTermRule()); }
	iv_ruleBagTerm=ruleBagTerm
	{ $current=$iv_ruleBagTerm.current; }
	EOF;

// Rule BagTerm
ruleBagTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getBagTermAccess().getBagTermAction_0(),
					$current);
			}
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getBagTermAccess().getLessThanSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBagTermAccess().getStart_termBasicTermParserRuleCall_2_0_0());
					}
					lv_start_term_2_0=ruleBasicTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBagTermRule());
						}
						set(
							$current,
							"start_term",
							lv_start_term_2_0,
							"org.asmeta.xt.AsmetaL.BasicTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getBagTermAccess().getCommaKeyword_2_1_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getBagTermAccess().getOther_termsBasicTermParserRuleCall_2_1_0_1_0());
							}
							lv_other_terms_4_0=ruleBasicTerm
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBagTermRule());
								}
								add(
									$current,
									"other_terms",
									lv_other_terms_4_0,
									"org.asmeta.xt.AsmetaL.BasicTerm");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)+
				    |
				(
					(
						(':')=>
						otherlv_5=':'
						{
							newLeafNode(otherlv_5, grammarAccess.getBagTermAccess().getColonKeyword_2_1_1_0());
						}
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getBagTermAccess().getEnd_termConstantTermParserRuleCall_2_1_1_1_0());
							}
							lv_end_term_6_0=ruleConstantTerm
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getBagTermRule());
								}
								set(
									$current,
									"end_term",
									lv_end_term_6_0,
									"org.asmeta.xt.AsmetaL.ConstantTerm");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_7=','
						{
							newLeafNode(otherlv_7, grammarAccess.getBagTermAccess().getCommaKeyword_2_1_1_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getBagTermAccess().getStepConstantTermParserRuleCall_2_1_1_2_1_0());
								}
								lv_step_8_0=ruleConstantTerm
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getBagTermRule());
									}
									set(
										$current,
										"step",
										lv_step_8_0,
										"org.asmeta.xt.AsmetaL.ConstantTerm");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)?
				)
			)?
		)?
		otherlv_9='>'
		{
			newLeafNode(otherlv_9, grammarAccess.getBagTermAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleVariableBindingTerm
entryRuleVariableBindingTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableBindingTermRule()); }
	iv_ruleVariableBindingTerm=ruleVariableBindingTerm
	{ $current=$iv_ruleVariableBindingTerm.current; }
	EOF;

// Rule VariableBindingTerm
ruleVariableBindingTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVariableBindingTermAccess().getLetTermParserRuleCall_0());
		}
		this_LetTerm_0=ruleLetTerm
		{
			$current = $this_LetTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVariableBindingTermAccess().getFiniteQuantificationTermParserRuleCall_1());
		}
		this_FiniteQuantificationTerm_1=ruleFiniteQuantificationTerm
		{
			$current = $this_FiniteQuantificationTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getVariableBindingTermAccess().getComprehensionTermParserRuleCall_2());
		}
		this_ComprehensionTerm_2=ruleComprehensionTerm
		{
			$current = $this_ComprehensionTerm_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFiniteQuantificationTerm
entryRuleFiniteQuantificationTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFiniteQuantificationTermRule()); }
	iv_ruleFiniteQuantificationTerm=ruleFiniteQuantificationTerm
	{ $current=$iv_ruleFiniteQuantificationTerm.current; }
	EOF;

// Rule FiniteQuantificationTerm
ruleFiniteQuantificationTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFiniteQuantificationTermAccess().getForallTermParserRuleCall_0());
		}
		this_ForallTerm_0=ruleForallTerm
		{
			$current = $this_ForallTerm_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFiniteQuantificationTermAccess().getExistUniqueTermParserRuleCall_1());
		}
		this_ExistUniqueTerm_1=ruleExistUniqueTerm
		{
			$current = $this_ExistUniqueTerm_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getFiniteQuantificationTermAccess().getExistTermParserRuleCall_2());
		}
		this_ExistTerm_2=ruleExistTerm
		{
			$current = $this_ExistTerm_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExistUniqueTerm
entryRuleExistUniqueTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistUniqueTermRule()); }
	iv_ruleExistUniqueTerm=ruleExistUniqueTerm
	{ $current=$iv_ruleExistUniqueTerm.current; }
	EOF;

// Rule ExistUniqueTerm
ruleExistUniqueTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getExistUniqueTermAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='exist'
		{
			newLeafNode(otherlv_1, grammarAccess.getExistUniqueTermAccess().getExistKeyword_1());
		}
		otherlv_2='unique'
		{
			newLeafNode(otherlv_2, grammarAccess.getExistUniqueTermAccess().getUniqueKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistUniqueTermAccess().getVariableVariableTermParserRuleCall_3_0());
				}
				lv_variable_3_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
					}
					add(
						$current,
						"variable",
						lv_variable_3_0,
						"org.asmeta.xt.AsmetaL.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='in'
		{
			newLeafNode(otherlv_4, grammarAccess.getExistUniqueTermAccess().getInKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistUniqueTermAccess().getRangesTermParserRuleCall_5_0());
				}
				lv_ranges_5_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
					}
					add(
						$current,
						"ranges",
						lv_ranges_5_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getExistUniqueTermAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExistUniqueTermAccess().getVariableVariableTermParserRuleCall_6_1_0());
					}
					lv_variable_7_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
						}
						add(
							$current,
							"variable",
							lv_variable_7_0,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_8='in'
			{
				newLeafNode(otherlv_8, grammarAccess.getExistUniqueTermAccess().getInKeyword_6_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExistUniqueTermAccess().getRangesTermParserRuleCall_6_3_0());
					}
					lv_ranges_9_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
						}
						add(
							$current,
							"ranges",
							lv_ranges_9_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_10='with'
			{
				newLeafNode(otherlv_10, grammarAccess.getExistUniqueTermAccess().getWithKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExistUniqueTermAccess().getGuardTermParserRuleCall_7_1_0());
					}
					lv_guard_11_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistUniqueTermRule());
						}
						set(
							$current,
							"guard",
							lv_guard_11_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_12=')'
		{
			newLeafNode(otherlv_12, grammarAccess.getExistUniqueTermAccess().getRightParenthesisKeyword_8());
		}
	)
;

// Entry rule entryRuleExistTerm
entryRuleExistTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistTermRule()); }
	iv_ruleExistTerm=ruleExistTerm
	{ $current=$iv_ruleExistTerm.current; }
	EOF;

// Rule ExistTerm
ruleExistTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getExistTermAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='exist'
		{
			newLeafNode(otherlv_1, grammarAccess.getExistTermAccess().getExistKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistTermAccess().getVariableVariableTermParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistTermRule());
					}
					add(
						$current,
						"variable",
						lv_variable_2_0,
						"org.asmeta.xt.AsmetaL.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='in'
		{
			newLeafNode(otherlv_3, grammarAccess.getExistTermAccess().getInKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExistTermAccess().getRangesTermParserRuleCall_4_0());
				}
				lv_ranges_4_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistTermRule());
					}
					add(
						$current,
						"ranges",
						lv_ranges_4_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getExistTermAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExistTermAccess().getVariableVariableTermParserRuleCall_5_1_0());
					}
					lv_variable_6_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistTermRule());
						}
						add(
							$current,
							"variable",
							lv_variable_6_0,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='in'
			{
				newLeafNode(otherlv_7, grammarAccess.getExistTermAccess().getInKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExistTermAccess().getRangesTermParserRuleCall_5_3_0());
					}
					lv_ranges_8_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistTermRule());
						}
						add(
							$current,
							"ranges",
							lv_ranges_8_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_9='with'
			{
				newLeafNode(otherlv_9, grammarAccess.getExistTermAccess().getWithKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExistTermAccess().getGuardTermParserRuleCall_6_1_0());
					}
					lv_guard_10_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExistTermRule());
						}
						set(
							$current,
							"guard",
							lv_guard_10_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getExistTermAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleForallTerm
entryRuleForallTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForallTermRule()); }
	iv_ruleForallTerm=ruleForallTerm
	{ $current=$iv_ruleForallTerm.current; }
	EOF;

// Rule ForallTerm
ruleForallTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getForallTermAccess().getLeftParenthesisKeyword_0());
		}
		otherlv_1='forall'
		{
			newLeafNode(otherlv_1, grammarAccess.getForallTermAccess().getForallKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForallTermAccess().getVariableVariableTermParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForallTermRule());
					}
					add(
						$current,
						"variable",
						lv_variable_2_0,
						"org.asmeta.xt.AsmetaL.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='in'
		{
			newLeafNode(otherlv_3, grammarAccess.getForallTermAccess().getInKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForallTermAccess().getRangesTermParserRuleCall_4_0());
				}
				lv_ranges_4_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForallTermRule());
					}
					add(
						$current,
						"ranges",
						lv_ranges_4_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getForallTermAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForallTermAccess().getVariableVariableTermParserRuleCall_5_1_0());
					}
					lv_variable_6_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForallTermRule());
						}
						add(
							$current,
							"variable",
							lv_variable_6_0,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='in'
			{
				newLeafNode(otherlv_7, grammarAccess.getForallTermAccess().getInKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForallTermAccess().getRangesTermParserRuleCall_5_3_0());
					}
					lv_ranges_8_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForallTermRule());
						}
						add(
							$current,
							"ranges",
							lv_ranges_8_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_9='with'
			{
				newLeafNode(otherlv_9, grammarAccess.getForallTermAccess().getWithKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForallTermAccess().getGuardTermParserRuleCall_6_1_0());
					}
					lv_guard_10_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForallTermRule());
						}
						set(
							$current,
							"guard",
							lv_guard_10_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getForallTermAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleLetTerm
entryRuleLetTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLetTermRule()); }
	iv_ruleLetTerm=ruleLetTerm
	{ $current=$iv_ruleLetTerm.current; }
	EOF;

// Rule LetTerm
ruleLetTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='let'
		{
			newLeafNode(otherlv_0, grammarAccess.getLetTermAccess().getLetKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLetTermAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetTermAccess().getVariableVariableTermParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetTermRule());
					}
					add(
						$current,
						"variable",
						lv_variable_2_0,
						"org.asmeta.xt.AsmetaL.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getLetTermAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetTermAccess().getAssignmentTermTermParserRuleCall_4_0());
				}
				lv_assignmentTerm_4_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetTermRule());
					}
					add(
						$current,
						"assignmentTerm",
						lv_assignmentTerm_4_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getLetTermAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLetTermAccess().getVariableVariableTermParserRuleCall_5_1_0());
					}
					lv_variable_6_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLetTermRule());
						}
						add(
							$current,
							"variable",
							lv_variable_6_0,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getLetTermAccess().getEqualsSignKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLetTermAccess().getAssignmentTermTermParserRuleCall_5_3_0());
					}
					lv_assignmentTerm_8_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLetTermRule());
						}
						add(
							$current,
							"assignmentTerm",
							lv_assignmentTerm_8_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getLetTermAccess().getRightParenthesisKeyword_6());
		}
		otherlv_10='in'
		{
			newLeafNode(otherlv_10, grammarAccess.getLetTermAccess().getInKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetTermAccess().getBodyTermParserRuleCall_8_0());
				}
				lv_body_11_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetTermRule());
					}
					set(
						$current,
						"body",
						lv_body_11_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='endlet'
		{
			newLeafNode(otherlv_12, grammarAccess.getLetTermAccess().getEndletKeyword_9());
		}
	)
;

// Entry rule entryRuleComprehensionTerm
entryRuleComprehensionTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComprehensionTermRule()); }
	iv_ruleComprehensionTerm=ruleComprehensionTerm
	{ $current=$iv_ruleComprehensionTerm.current; }
	EOF;

// Rule ComprehensionTerm
ruleComprehensionTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComprehensionTermAccess().getSetCTParserRuleCall_0());
		}
		this_SetCT_0=ruleSetCT
		{
			$current = $this_SetCT_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComprehensionTermAccess().getMapCTParserRuleCall_1());
		}
		this_MapCT_1=ruleMapCT
		{
			$current = $this_MapCT_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComprehensionTermAccess().getSequenceCTParserRuleCall_2());
		}
		this_SequenceCT_2=ruleSequenceCT
		{
			$current = $this_SequenceCT_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getComprehensionTermAccess().getBagCTParserRuleCall_3());
		}
		this_BagCT_3=ruleBagCT
		{
			$current = $this_BagCT_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSetCT
entryRuleSetCT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSetCTRule()); }
	iv_ruleSetCT=ruleSetCT
	{ $current=$iv_ruleSetCT.current; }
	EOF;

// Rule SetCT
ruleSetCT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getSetCTAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetCTAccess().getVariableVariableTermParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetCTRule());
					}
					add(
						$current,
						"variable",
						lv_variable_1_0,
						"org.asmeta.xt.AsmetaL.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getSetCTAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetCTAccess().getRangesTermParserRuleCall_3_0());
				}
				lv_ranges_3_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetCTRule());
					}
					add(
						$current,
						"ranges",
						lv_ranges_3_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getSetCTAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetCTAccess().getVariableVariableTermParserRuleCall_4_1_0());
					}
					lv_variable_5_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetCTRule());
						}
						add(
							$current,
							"variable",
							lv_variable_5_0,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='in'
			{
				newLeafNode(otherlv_6, grammarAccess.getSetCTAccess().getInKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetCTAccess().getRangesTermParserRuleCall_4_3_0());
					}
					lv_ranges_7_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetCTRule());
						}
						add(
							$current,
							"ranges",
							lv_ranges_7_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_8='|'
			{
				newLeafNode(otherlv_8, grammarAccess.getSetCTAccess().getVerticalLineKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSetCTAccess().getGuardTermParserRuleCall_5_1_0());
					}
					lv_guard_9_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSetCTRule());
						}
						set(
							$current,
							"guard",
							lv_guard_9_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getSetCTAccess().getColonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSetCTAccess().getTermTermParserRuleCall_7_0());
				}
				lv_term_11_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSetCTRule());
					}
					set(
						$current,
						"term",
						lv_term_11_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getSetCTAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleMapCT
entryRuleMapCT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapCTRule()); }
	iv_ruleMapCT=ruleMapCT
	{ $current=$iv_ruleMapCT.current; }
	EOF;

// Rule MapCT
ruleMapCT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getMapCTAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapCTAccess().getVariableVariableTermParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapCTRule());
					}
					add(
						$current,
						"variable",
						lv_variable_1_0,
						"org.asmeta.xt.AsmetaL.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getMapCTAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapCTAccess().getRangesTermParserRuleCall_3_0());
				}
				lv_ranges_3_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapCTRule());
					}
					add(
						$current,
						"ranges",
						lv_ranges_3_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getMapCTAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapCTAccess().getVariableVariableTermParserRuleCall_4_1_0());
					}
					lv_variable_5_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapCTRule());
						}
						add(
							$current,
							"variable",
							lv_variable_5_0,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='in'
			{
				newLeafNode(otherlv_6, grammarAccess.getMapCTAccess().getInKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapCTAccess().getRangesTermParserRuleCall_4_3_0());
					}
					lv_ranges_7_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapCTRule());
						}
						add(
							$current,
							"ranges",
							lv_ranges_7_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_8='|'
			{
				newLeafNode(otherlv_8, grammarAccess.getMapCTAccess().getVerticalLineKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMapCTAccess().getGuardTermParserRuleCall_5_1_0());
					}
					lv_guard_9_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMapCTRule());
						}
						set(
							$current,
							"guard",
							lv_guard_9_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getMapCTAccess().getColonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapCTAccess().getTermTermParserRuleCall_7_0());
				}
				lv_term_11_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapCTRule());
					}
					set(
						$current,
						"term",
						lv_term_11_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getMapCTAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleSequenceCT
entryRuleSequenceCT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceCTRule()); }
	iv_ruleSequenceCT=ruleSequenceCT
	{ $current=$iv_ruleSequenceCT.current; }
	EOF;

// Rule SequenceCT
ruleSequenceCT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getSequenceCTAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSequenceCTAccess().getVariableVariableTermParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSequenceCTRule());
					}
					add(
						$current,
						"variable",
						lv_variable_1_0,
						"org.asmeta.xt.AsmetaL.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getSequenceCTAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSequenceCTAccess().getRangesTermParserRuleCall_3_0());
				}
				lv_ranges_3_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSequenceCTRule());
					}
					add(
						$current,
						"ranges",
						lv_ranges_3_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getSequenceCTAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceCTAccess().getVariableVariableTermParserRuleCall_4_1_0());
					}
					lv_variable_5_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceCTRule());
						}
						add(
							$current,
							"variable",
							lv_variable_5_0,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='in'
			{
				newLeafNode(otherlv_6, grammarAccess.getSequenceCTAccess().getInKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceCTAccess().getRangesTermParserRuleCall_4_3_0());
					}
					lv_ranges_7_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceCTRule());
						}
						add(
							$current,
							"ranges",
							lv_ranges_7_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_8='|'
			{
				newLeafNode(otherlv_8, grammarAccess.getSequenceCTAccess().getVerticalLineKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSequenceCTAccess().getGuardTermParserRuleCall_5_1_0());
					}
					lv_guard_9_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSequenceCTRule());
						}
						set(
							$current,
							"guard",
							lv_guard_9_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getSequenceCTAccess().getColonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSequenceCTAccess().getTermTermParserRuleCall_7_0());
				}
				lv_term_11_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSequenceCTRule());
					}
					set(
						$current,
						"term",
						lv_term_11_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12=']'
		{
			newLeafNode(otherlv_12, grammarAccess.getSequenceCTAccess().getRightSquareBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleBagCT
entryRuleBagCT returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBagCTRule()); }
	iv_ruleBagCT=ruleBagCT
	{ $current=$iv_ruleBagCT.current; }
	EOF;

// Rule BagCT
ruleBagCT returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<'
		{
			newLeafNode(otherlv_0, grammarAccess.getBagCTAccess().getLessThanSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBagCTAccess().getVariableVariableTermParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBagCTRule());
					}
					add(
						$current,
						"variable",
						lv_variable_1_0,
						"org.asmeta.xt.AsmetaL.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getBagCTAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBagCTAccess().getRangesTermParserRuleCall_3_0());
				}
				lv_ranges_3_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBagCTRule());
					}
					add(
						$current,
						"ranges",
						lv_ranges_3_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getBagCTAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBagCTAccess().getVariableVariableTermParserRuleCall_4_1_0());
					}
					lv_variable_5_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBagCTRule());
						}
						add(
							$current,
							"variable",
							lv_variable_5_0,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='in'
			{
				newLeafNode(otherlv_6, grammarAccess.getBagCTAccess().getInKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBagCTAccess().getRangesTermParserRuleCall_4_3_0());
					}
					lv_ranges_7_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBagCTRule());
						}
						add(
							$current,
							"ranges",
							lv_ranges_7_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_8='|'
			{
				newLeafNode(otherlv_8, grammarAccess.getBagCTAccess().getVerticalLineKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBagCTAccess().getGuardTermParserRuleCall_5_1_0());
					}
					lv_guard_9_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBagCTRule());
						}
						set(
							$current,
							"guard",
							lv_guard_9_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getBagCTAccess().getColonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBagCTAccess().getTermTermParserRuleCall_7_0());
				}
				lv_term_11_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBagCTRule());
					}
					set(
						$current,
						"term",
						lv_term_11_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='>'
		{
			newLeafNode(otherlv_12, grammarAccess.getBagCTAccess().getGreaterThanSignKeyword_8());
		}
	)
;

// Entry rule entryRuleRuleAsTerm
entryRuleRuleAsTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleAsTermRule()); }
	iv_ruleRuleAsTerm=ruleRuleAsTerm
	{ $current=$iv_ruleRuleAsTerm.current; }
	EOF;

// Rule RuleAsTerm
ruleRuleAsTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<<'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleAsTermAccess().getLessThanSignLessThanSignKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAsTermAccess().getNameExtendedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleextendedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleAsTermRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.asmeta.xt.AsmetaL.extendedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getRuleAsTermAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAsTermAccess().getDomainsGetDomainByIDParserRuleCall_2_1_0());
					}
					lv_domains_3_0=rulegetDomainByID
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleAsTermRule());
						}
						add(
							$current,
							"domains",
							lv_domains_3_0,
							"org.asmeta.xt.AsmetaL.getDomainByID");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getRuleAsTermAccess().getCommaKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRuleAsTermAccess().getDomainsGetDomainByIDParserRuleCall_2_2_1_0());
						}
						lv_domains_5_0=rulegetDomainByID
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRuleAsTermRule());
							}
							add(
								$current,
								"domains",
								lv_domains_5_0,
								"org.asmeta.xt.AsmetaL.getDomainByID");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getRuleAsTermAccess().getRightParenthesisKeyword_2_3());
			}
		)?
		otherlv_7='>>'
		{
			newLeafNode(otherlv_7, grammarAccess.getRuleAsTermAccess().getGreaterThanSignGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRuleAccess().getUpdateRuleParserRuleCall_0());
		}
		this_UpdateRule_0=ruleUpdateRule
		{
			$current = $this_UpdateRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRuleAccess().getTurboReturnRuleParserRuleCall_1());
		}
		this_TurboReturnRule_1=ruleTurboReturnRule
		{
			$current = $this_TurboReturnRule_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRuleAccess().getBasicRuleParserRuleCall_2());
		}
		this_BasicRule_2=ruleBasicRule
		{
			$current = $this_BasicRule_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRuleAccess().getTermAsRuleParserRuleCall_3());
		}
		this_TermAsRule_3=ruleTermAsRule
		{
			$current = $this_TermAsRule_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRuleAccess().getTurboRuleParserRuleCall_4());
		}
		this_TurboRule_4=ruleTurboRule
		{
			$current = $this_TurboRule_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getRuleAccess().getDerivedRuleParserRuleCall_5());
		}
		this_DerivedRule_5=ruleDerivedRule
		{
			$current = $this_DerivedRule_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTermAsRule
entryRuleTermAsRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermAsRuleRule()); }
	iv_ruleTermAsRule=ruleTermAsRule
	{ $current=$iv_ruleTermAsRule.current; }
	EOF;

// Rule TermAsRule
ruleTermAsRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTermAsRuleAccess().getTermFunctionTermParserRuleCall_0_0_0());
					}
					lv_term_0_1=ruleFunctionTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTermAsRuleRule());
						}
						set(
							$current,
							"term",
							lv_term_0_1,
							"org.asmeta.xt.AsmetaL.FunctionTerm");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getTermAsRuleAccess().getTermVariableTermParserRuleCall_0_0_1());
					}
					lv_term_0_2=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTermAsRuleRule());
						}
						set(
							$current,
							"term",
							lv_term_0_2,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getTermAsRuleAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTermAsRuleAccess().getParametersTermParserRuleCall_1_1_0());
					}
					lv_parameters_2_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTermAsRuleRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_2_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getTermAsRuleAccess().getCommaKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTermAsRuleAccess().getParametersTermParserRuleCall_1_2_1_0());
						}
						lv_parameters_4_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTermAsRuleRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_4_0,
								"org.asmeta.xt.AsmetaL.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_5=']'
			{
				newLeafNode(otherlv_5, grammarAccess.getTermAsRuleAccess().getRightSquareBracketKeyword_1_3());
			}
		)?
	)
;

// Entry rule entryRuleBasicRule
entryRuleBasicRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicRuleRule()); }
	iv_ruleBasicRule=ruleBasicRule
	{ $current=$iv_ruleBasicRule.current; }
	EOF;

// Rule BasicRule
ruleBasicRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicRuleAccess().getSkipRuleParserRuleCall_0());
		}
		this_SkipRule_0=ruleSkipRule
		{
			$current = $this_SkipRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicRuleAccess().getMacroCallRuleParserRuleCall_1());
		}
		this_MacroCallRule_1=ruleMacroCallRule
		{
			$current = $this_MacroCallRule_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicRuleAccess().getBlockRuleParserRuleCall_2());
		}
		this_BlockRule_2=ruleBlockRule
		{
			$current = $this_BlockRule_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicRuleAccess().getConditionalRuleParserRuleCall_3());
		}
		this_ConditionalRule_3=ruleConditionalRule
		{
			$current = $this_ConditionalRule_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicRuleAccess().getChooseRuleParserRuleCall_4());
		}
		this_ChooseRule_4=ruleChooseRule
		{
			$current = $this_ChooseRule_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicRuleAccess().getForallRuleParserRuleCall_5());
		}
		this_ForallRule_5=ruleForallRule
		{
			$current = $this_ForallRule_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicRuleAccess().getLetRuleParserRuleCall_6());
		}
		this_LetRule_6=ruleLetRule
		{
			$current = $this_LetRule_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getBasicRuleAccess().getExtendRuleParserRuleCall_7());
		}
		this_ExtendRule_7=ruleExtendRule
		{
			$current = $this_ExtendRule_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSkipRule
entryRuleSkipRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSkipRuleRule()); }
	iv_ruleSkipRule=ruleSkipRule
	{ $current=$iv_ruleSkipRule.current; }
	EOF;

// Rule SkipRule
ruleSkipRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				/* */
			}
			{
				$current = forceCreateModelElement(
					grammarAccess.getSkipRuleAccess().getSkipRuleAction_0(),
					$current);
			}
		)
		otherlv_1='skip'
		{
			newLeafNode(otherlv_1, grammarAccess.getSkipRuleAccess().getSkipKeyword_1());
		}
	)
;

// Entry rule entryRuleUpdateRule
entryRuleUpdateRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateRuleRule()); }
	iv_ruleUpdateRule=ruleUpdateRule
	{ $current=$iv_ruleUpdateRule.current; }
	EOF;

// Rule UpdateRule
ruleUpdateRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateRuleAccess().getLocationLocationTermParserRuleCall_0_0_0());
					}
					lv_location_0_1=ruleLocationTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRuleRule());
						}
						set(
							$current,
							"location",
							lv_location_0_1,
							"org.asmeta.xt.AsmetaL.LocationTerm");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getUpdateRuleAccess().getLocationVariableTermParserRuleCall_0_0_1());
					}
					lv_location_0_2=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRuleRule());
						}
						set(
							$current,
							"location",
							lv_location_0_2,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getUpdateRuleAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateRuleAccess().getUpdatingTermTermParserRuleCall_2_0());
				}
				lv_updatingTerm_2_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRuleRule());
					}
					set(
						$current,
						"updatingTerm",
						lv_updatingTerm_2_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBlockRule
entryRuleBlockRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRuleRule()); }
	iv_ruleBlockRule=ruleBlockRule
	{ $current=$iv_ruleBlockRule.current; }
	EOF;

// Rule BlockRule
ruleBlockRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='par'
		{
			newLeafNode(otherlv_0, grammarAccess.getBlockRuleAccess().getParKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockRuleAccess().getRulesRuleParserRuleCall_1_0());
				}
				lv_rules_1_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRuleRule());
					}
					add(
						$current,
						"rules",
						lv_rules_1_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockRuleAccess().getRulesRuleParserRuleCall_2_0());
				}
				lv_rules_2_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRuleRule());
					}
					add(
						$current,
						"rules",
						lv_rules_2_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='endpar'
		{
			newLeafNode(otherlv_3, grammarAccess.getBlockRuleAccess().getEndparKeyword_3());
		}
	)
;

// Entry rule entryRuleConditionalRule
entryRuleConditionalRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalRuleRule()); }
	iv_ruleConditionalRule=ruleConditionalRule
	{ $current=$iv_ruleConditionalRule.current; }
	EOF;

// Rule ConditionalRule
ruleConditionalRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getConditionalRuleAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalRuleAccess().getGuardTermParserRuleCall_1_0());
				}
				lv_guard_1_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalRuleRule());
					}
					set(
						$current,
						"guard",
						lv_guard_1_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getConditionalRuleAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalRuleAccess().getThenRuleRuleParserRuleCall_3_0());
				}
				lv_thenRule_3_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalRuleRule());
					}
					set(
						$current,
						"thenRule",
						lv_thenRule_3_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='else'
			{
				newLeafNode(otherlv_4, grammarAccess.getConditionalRuleAccess().getElseKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalRuleAccess().getElseRuleRuleParserRuleCall_4_1_0());
					}
					lv_elseRule_5_0=ruleRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalRuleRule());
						}
						set(
							$current,
							"elseRule",
							lv_elseRule_5_0,
							"org.asmeta.xt.AsmetaL.Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='endif'
		{
			newLeafNode(otherlv_6, grammarAccess.getConditionalRuleAccess().getEndifKeyword_5());
		}
	)
;

// Entry rule entryRuleChooseRule
entryRuleChooseRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChooseRuleRule()); }
	iv_ruleChooseRule=ruleChooseRule
	{ $current=$iv_ruleChooseRule.current; }
	EOF;

// Rule ChooseRule
ruleChooseRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='choose'
		{
			newLeafNode(otherlv_0, grammarAccess.getChooseRuleAccess().getChooseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChooseRuleAccess().getVariableVariableTermParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChooseRuleRule());
					}
					add(
						$current,
						"variable",
						lv_variable_1_0,
						"org.asmeta.xt.AsmetaL.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getChooseRuleAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChooseRuleAccess().getRangesTermParserRuleCall_3_0());
				}
				lv_ranges_3_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChooseRuleRule());
					}
					add(
						$current,
						"ranges",
						lv_ranges_3_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getChooseRuleAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChooseRuleAccess().getVariableVariableTermParserRuleCall_4_1_0());
					}
					lv_variable_5_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChooseRuleRule());
						}
						add(
							$current,
							"variable",
							lv_variable_5_0,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='in'
			{
				newLeafNode(otherlv_6, grammarAccess.getChooseRuleAccess().getInKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChooseRuleAccess().getRangesTermParserRuleCall_4_3_0());
					}
					lv_ranges_7_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChooseRuleRule());
						}
						add(
							$current,
							"ranges",
							lv_ranges_7_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8='with'
		{
			newLeafNode(otherlv_8, grammarAccess.getChooseRuleAccess().getWithKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChooseRuleAccess().getGuardTermParserRuleCall_6_0());
				}
				lv_guard_9_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChooseRuleRule());
					}
					set(
						$current,
						"guard",
						lv_guard_9_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='do'
		{
			newLeafNode(otherlv_10, grammarAccess.getChooseRuleAccess().getDoKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChooseRuleAccess().getDoRuleRuleParserRuleCall_8_0());
				}
				lv_doRule_11_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChooseRuleRule());
					}
					set(
						$current,
						"doRule",
						lv_doRule_11_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12='ifnone'
			{
				newLeafNode(otherlv_12, grammarAccess.getChooseRuleAccess().getIfnoneKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChooseRuleAccess().getIfnoneRuleParserRuleCall_9_1_0());
					}
					lv_ifnone_13_0=ruleRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChooseRuleRule());
						}
						set(
							$current,
							"ifnone",
							lv_ifnone_13_0,
							"org.asmeta.xt.AsmetaL.Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleForallRule
entryRuleForallRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForallRuleRule()); }
	iv_ruleForallRule=ruleForallRule
	{ $current=$iv_ruleForallRule.current; }
	EOF;

// Rule ForallRule
ruleForallRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='forall'
		{
			newLeafNode(otherlv_0, grammarAccess.getForallRuleAccess().getForallKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForallRuleAccess().getVariableVariableTermParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForallRuleRule());
					}
					add(
						$current,
						"variable",
						lv_variable_1_0,
						"org.asmeta.xt.AsmetaL.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getForallRuleAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForallRuleAccess().getRangesTermParserRuleCall_3_0());
				}
				lv_ranges_3_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForallRuleRule());
					}
					add(
						$current,
						"ranges",
						lv_ranges_3_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getForallRuleAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForallRuleAccess().getVariableVariableTermParserRuleCall_4_1_0());
					}
					lv_variable_5_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForallRuleRule());
						}
						add(
							$current,
							"variable",
							lv_variable_5_0,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='in'
			{
				newLeafNode(otherlv_6, grammarAccess.getForallRuleAccess().getInKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForallRuleAccess().getRangesTermParserRuleCall_4_3_0());
					}
					lv_ranges_7_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForallRuleRule());
						}
						add(
							$current,
							"ranges",
							lv_ranges_7_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_8='with'
			{
				newLeafNode(otherlv_8, grammarAccess.getForallRuleAccess().getWithKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getForallRuleAccess().getGuardTermParserRuleCall_5_1_0());
					}
					lv_guard_9_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForallRuleRule());
						}
						set(
							$current,
							"guard",
							lv_guard_9_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='do'
		{
			newLeafNode(otherlv_10, grammarAccess.getForallRuleAccess().getDoKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForallRuleAccess().getDoRuleRuleParserRuleCall_7_0());
				}
				lv_doRule_11_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForallRuleRule());
					}
					set(
						$current,
						"doRule",
						lv_doRule_11_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLetRule
entryRuleLetRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLetRuleRule()); }
	iv_ruleLetRule=ruleLetRule
	{ $current=$iv_ruleLetRule.current; }
	EOF;

// Rule LetRule
ruleLetRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='let'
		{
			newLeafNode(otherlv_0, grammarAccess.getLetRuleAccess().getLetKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLetRuleAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetRuleAccess().getVariableVariableTermParserRuleCall_2_0());
				}
				lv_variable_2_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetRuleRule());
					}
					add(
						$current,
						"variable",
						lv_variable_2_0,
						"org.asmeta.xt.AsmetaL.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getLetRuleAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetRuleAccess().getInitExpressionTermParserRuleCall_4_0());
				}
				lv_initExpression_4_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetRuleRule());
					}
					add(
						$current,
						"initExpression",
						lv_initExpression_4_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getLetRuleAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLetRuleAccess().getVariableVariableTermParserRuleCall_5_1_0());
					}
					lv_variable_6_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLetRuleRule());
						}
						add(
							$current,
							"variable",
							lv_variable_6_0,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='='
			{
				newLeafNode(otherlv_7, grammarAccess.getLetRuleAccess().getEqualsSignKeyword_5_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLetRuleAccess().getInitExpressionTermParserRuleCall_5_3_0());
					}
					lv_initExpression_8_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLetRuleRule());
						}
						add(
							$current,
							"initExpression",
							lv_initExpression_8_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getLetRuleAccess().getRightParenthesisKeyword_6());
		}
		otherlv_10='in'
		{
			newLeafNode(otherlv_10, grammarAccess.getLetRuleAccess().getInKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetRuleAccess().getInRuleRuleParserRuleCall_8_0());
				}
				lv_inRule_11_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetRuleRule());
					}
					set(
						$current,
						"inRule",
						lv_inRule_11_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='endlet'
		{
			newLeafNode(otherlv_12, grammarAccess.getLetRuleAccess().getEndletKeyword_9());
		}
	)
;

// Entry rule entryRuleMacroCallRule
entryRuleMacroCallRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMacroCallRuleRule()); }
	iv_ruleMacroCallRule=ruleMacroCallRule
	{ $current=$iv_ruleMacroCallRule.current; }
	EOF;

// Rule MacroCallRule
ruleMacroCallRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMacroCallRuleAccess().getNameExtendedNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleextendedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMacroCallRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.asmeta.xt.AsmetaL.extendedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getMacroCallRuleAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMacroCallRuleAccess().getParametersTermParserRuleCall_2_0_0());
					}
					lv_parameters_2_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMacroCallRuleRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_2_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getMacroCallRuleAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMacroCallRuleAccess().getParametersTermParserRuleCall_2_1_1_0());
						}
						lv_parameters_4_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMacroCallRuleRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_4_0,
								"org.asmeta.xt.AsmetaL.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getMacroCallRuleAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleExtendRule
entryRuleExtendRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtendRuleRule()); }
	iv_ruleExtendRule=ruleExtendRule
	{ $current=$iv_ruleExtendRule.current; }
	EOF;

// Rule ExtendRule
ruleExtendRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='extend'
		{
			newLeafNode(otherlv_0, grammarAccess.getExtendRuleAccess().getExtendKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendRuleAccess().getExtendedDomainGetDomainByIDParserRuleCall_1_0());
				}
				lv_extendedDomain_1_0=rulegetDomainByID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendRuleRule());
					}
					set(
						$current,
						"extendedDomain",
						lv_extendedDomain_1_0,
						"org.asmeta.xt.AsmetaL.getDomainByID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getExtendRuleAccess().getWithKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendRuleAccess().getBoundVarVariableTermParserRuleCall_3_0());
				}
				lv_boundVar_3_0=ruleVariableTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendRuleRule());
					}
					add(
						$current,
						"boundVar",
						lv_boundVar_3_0,
						"org.asmeta.xt.AsmetaL.VariableTerm");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getExtendRuleAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExtendRuleAccess().getBoundVarVariableTermParserRuleCall_4_1_0());
					}
					lv_boundVar_5_0=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtendRuleRule());
						}
						add(
							$current,
							"boundVar",
							lv_boundVar_5_0,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='do'
		{
			newLeafNode(otherlv_6, grammarAccess.getExtendRuleAccess().getDoKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendRuleAccess().getDoRuleRuleParserRuleCall_6_0());
				}
				lv_doRule_7_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendRuleRule());
					}
					set(
						$current,
						"doRule",
						lv_doRule_7_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTurboRule
entryRuleTurboRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurboRuleRule()); }
	iv_ruleTurboRule=ruleTurboRule
	{ $current=$iv_ruleTurboRule.current; }
	EOF;

// Rule TurboRule
ruleTurboRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTurboRuleAccess().getSeqRuleParserRuleCall_0());
		}
		this_SeqRule_0=ruleSeqRule
		{
			$current = $this_SeqRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTurboRuleAccess().getIterateRuleParserRuleCall_1());
		}
		this_IterateRule_1=ruleIterateRule
		{
			$current = $this_IterateRule_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTurboRuleAccess().getTurboCallRuleParserRuleCall_2());
		}
		this_TurboCallRule_2=ruleTurboCallRule
		{
			$current = $this_TurboCallRule_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTurboRuleAccess().getTurboLocalStateRuleParserRuleCall_3());
		}
		this_TurboLocalStateRule_3=ruleTurboLocalStateRule
		{
			$current = $this_TurboLocalStateRule_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSeqRule
entryRuleSeqRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSeqRuleRule()); }
	iv_ruleSeqRule=ruleSeqRule
	{ $current=$iv_ruleSeqRule.current; }
	EOF;

// Rule SeqRule
ruleSeqRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='seq'
		{
			newLeafNode(otherlv_0, grammarAccess.getSeqRuleAccess().getSeqKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSeqRuleAccess().getRulesRuleParserRuleCall_1_0());
				}
				lv_rules_1_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSeqRuleRule());
					}
					add(
						$current,
						"rules",
						lv_rules_1_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSeqRuleAccess().getRulesRuleParserRuleCall_2_0());
				}
				lv_rules_2_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSeqRuleRule());
					}
					add(
						$current,
						"rules",
						lv_rules_2_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3='endseq'
		{
			newLeafNode(otherlv_3, grammarAccess.getSeqRuleAccess().getEndseqKeyword_3());
		}
	)
;

// Entry rule entryRuleIterateRule
entryRuleIterateRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIterateRuleRule()); }
	iv_ruleIterateRule=ruleIterateRule
	{ $current=$iv_ruleIterateRule.current; }
	EOF;

// Rule IterateRule
ruleIterateRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='iterate'
		{
			newLeafNode(otherlv_0, grammarAccess.getIterateRuleAccess().getIterateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIterateRuleAccess().getRuleRuleParserRuleCall_1_0());
				}
				lv_rule_1_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIterateRuleRule());
					}
					set(
						$current,
						"rule",
						lv_rule_1_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='enditerate'
		{
			newLeafNode(otherlv_2, grammarAccess.getIterateRuleAccess().getEnditerateKeyword_2());
		}
	)
;

// Entry rule entryRuleTurboCallRule
entryRuleTurboCallRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurboCallRuleRule()); }
	iv_ruleTurboCallRule=ruleTurboCallRule
	{ $current=$iv_ruleTurboCallRule.current; }
	EOF;

// Rule TurboCallRule
ruleTurboCallRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_calledRuleName_0_0=RULE_RULE_ID
				{
					newLeafNode(lv_calledRuleName_0_0, grammarAccess.getTurboCallRuleAccess().getCalledRuleNameRULE_IDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTurboCallRuleRule());
					}
					setWithLastConsumed(
						$current,
						"calledRuleName",
						lv_calledRuleName_0_0,
						"org.asmeta.xt.AsmetaL.RULE_ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getTurboCallRuleAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTurboCallRuleAccess().getParametersTermParserRuleCall_2_0_0());
					}
					lv_parameters_2_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTurboCallRuleRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_2_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getTurboCallRuleAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTurboCallRuleAccess().getParametersTermParserRuleCall_2_1_1_0());
						}
						lv_parameters_4_0=ruleTerm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTurboCallRuleRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_4_0,
								"org.asmeta.xt.AsmetaL.Term");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getTurboCallRuleAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleTurboReturnRule
entryRuleTurboReturnRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurboReturnRuleRule()); }
	iv_ruleTurboReturnRule=ruleTurboReturnRule
	{ $current=$iv_ruleTurboReturnRule.current; }
	EOF;

// Rule TurboReturnRule
ruleTurboReturnRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTurboReturnRuleAccess().getLocationFunctionTermParserRuleCall_0_0_0());
					}
					lv_location_0_1=ruleFunctionTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTurboReturnRuleRule());
						}
						set(
							$current,
							"location",
							lv_location_0_1,
							"org.asmeta.xt.AsmetaL.FunctionTerm");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getTurboReturnRuleAccess().getLocationVariableTermParserRuleCall_0_0_1());
					}
					lv_location_0_2=ruleVariableTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTurboReturnRuleRule());
						}
						set(
							$current,
							"location",
							lv_location_0_2,
							"org.asmeta.xt.AsmetaL.VariableTerm");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_1='<-'
		{
			newLeafNode(otherlv_1, grammarAccess.getTurboReturnRuleAccess().getLessThanSignHyphenMinusKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTurboReturnRuleAccess().getUpdateRuleTurboCallRuleParserRuleCall_2_0());
				}
				lv_updateRule_2_0=ruleTurboCallRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTurboReturnRuleRule());
					}
					set(
						$current,
						"updateRule",
						lv_updateRule_2_0,
						"org.asmeta.xt.AsmetaL.TurboCallRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTurboLocalStateRule
entryRuleTurboLocalStateRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurboLocalStateRuleRule()); }
	iv_ruleTurboLocalStateRule=ruleTurboLocalStateRule
	{ $current=$iv_ruleTurboLocalStateRule.current; }
	EOF;

// Rule TurboLocalStateRule
ruleTurboLocalStateRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionLocalFunctionParserRuleCall_0_0());
				}
				lv_localFunction_0_0=ruleLocalFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
					}
					add(
						$current,
						"localFunction",
						lv_localFunction_0_0,
						"org.asmeta.xt.AsmetaL.LocalFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getTurboLocalStateRuleAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getInitRuleParserRuleCall_2_0());
				}
				lv_init_2_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
					}
					add(
						$current,
						"init",
						lv_init_2_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getTurboLocalStateRuleAccess().getRightSquareBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getLocalFunctionLocalFunctionParserRuleCall_4_0_0());
					}
					lv_localFunction_4_0=ruleLocalFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
						}
						add(
							$current,
							"localFunction",
							lv_localFunction_4_0,
							"org.asmeta.xt.AsmetaL.LocalFunction");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5='['
			{
				newLeafNode(otherlv_5, grammarAccess.getTurboLocalStateRuleAccess().getLeftSquareBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getInitRuleParserRuleCall_4_2_0());
					}
					lv_init_6_0=ruleRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
						}
						add(
							$current,
							"init",
							lv_init_6_0,
							"org.asmeta.xt.AsmetaL.Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7=']'
			{
				newLeafNode(otherlv_7, grammarAccess.getTurboLocalStateRuleAccess().getRightSquareBracketKeyword_4_3());
			}
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getTurboLocalStateRuleAccess().getBodyRuleParserRuleCall_5_0());
				}
				lv_body_8_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTurboLocalStateRuleRule());
					}
					set(
						$current,
						"body",
						lv_body_8_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDerivedRule
entryRuleDerivedRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDerivedRuleRule()); }
	iv_ruleDerivedRule=ruleDerivedRule
	{ $current=$iv_ruleDerivedRule.current; }
	EOF;

// Rule DerivedRule
ruleDerivedRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDerivedRuleAccess().getBasicDerivedRuleParserRuleCall_0());
		}
		this_BasicDerivedRule_0=ruleBasicDerivedRule
		{
			$current = $this_BasicDerivedRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getDerivedRuleAccess().getTurboDerivedRuleParserRuleCall_1());
		}
		this_TurboDerivedRule_1=ruleTurboDerivedRule
		{
			$current = $this_TurboDerivedRule_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicDerivedRule
entryRuleBasicDerivedRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicDerivedRuleRule()); }
	iv_ruleBasicDerivedRule=ruleBasicDerivedRule
	{ $current=$iv_ruleBasicDerivedRule.current; }
	EOF;

// Rule BasicDerivedRule
ruleBasicDerivedRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		/* */
	}
	{
		newCompositeNode(grammarAccess.getBasicDerivedRuleAccess().getCaseRuleParserRuleCall());
	}
	this_CaseRule_0=ruleCaseRule
	{
		$current = $this_CaseRule_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleCaseRule
entryRuleCaseRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCaseRuleRule()); }
	iv_ruleCaseRule=ruleCaseRule
	{ $current=$iv_ruleCaseRule.current; }
	EOF;

// Rule CaseRule
ruleCaseRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='switch'
		{
			newLeafNode(otherlv_0, grammarAccess.getCaseRuleAccess().getSwitchKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCaseRuleAccess().getTermTermParserRuleCall_1_0());
				}
				lv_term_1_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCaseRuleRule());
					}
					set(
						$current,
						"term",
						lv_term_1_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='case'
			{
				newLeafNode(otherlv_2, grammarAccess.getCaseRuleAccess().getCaseKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseRuleAccess().getCaseTermTermParserRuleCall_2_1_0());
					}
					lv_caseTerm_3_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseRuleRule());
						}
						add(
							$current,
							"caseTerm",
							lv_caseTerm_3_0,
							"org.asmeta.xt.AsmetaL.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getCaseRuleAccess().getColonKeyword_2_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseRuleAccess().getCaseBranchRuleParserRuleCall_2_3_0());
					}
					lv_caseBranch_5_0=ruleRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseRuleRule());
						}
						add(
							$current,
							"caseBranch",
							lv_caseBranch_5_0,
							"org.asmeta.xt.AsmetaL.Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		(
			otherlv_6='otherwise'
			{
				newLeafNode(otherlv_6, grammarAccess.getCaseRuleAccess().getOtherwiseKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCaseRuleAccess().getOtherwiseBranchRuleParserRuleCall_3_1_0());
					}
					lv_otherwiseBranch_7_0=ruleRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCaseRuleRule());
						}
						set(
							$current,
							"otherwiseBranch",
							lv_otherwiseBranch_7_0,
							"org.asmeta.xt.AsmetaL.Rule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8='endswitch'
		{
			newLeafNode(otherlv_8, grammarAccess.getCaseRuleAccess().getEndswitchKeyword_4());
		}
	)
;

// Entry rule entryRuleTurboDerivedRule
entryRuleTurboDerivedRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurboDerivedRuleRule()); }
	iv_ruleTurboDerivedRule=ruleTurboDerivedRule
	{ $current=$iv_ruleTurboDerivedRule.current; }
	EOF;

// Rule TurboDerivedRule
ruleTurboDerivedRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTurboDerivedRuleAccess().getRecursiveWhileRuleParserRuleCall_0());
		}
		this_RecursiveWhileRule_0=ruleRecursiveWhileRule
		{
			$current = $this_RecursiveWhileRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			/* */
		}
		{
			newCompositeNode(grammarAccess.getTurboDerivedRuleAccess().getIterativeWhileRuleParserRuleCall_1());
		}
		this_IterativeWhileRule_1=ruleIterativeWhileRule
		{
			$current = $this_IterativeWhileRule_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRecursiveWhileRule
entryRuleRecursiveWhileRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRecursiveWhileRuleRule()); }
	iv_ruleRecursiveWhileRule=ruleRecursiveWhileRule
	{ $current=$iv_ruleRecursiveWhileRule.current; }
	EOF;

// Rule RecursiveWhileRule
ruleRecursiveWhileRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='whilerec'
		{
			newLeafNode(otherlv_0, grammarAccess.getRecursiveWhileRuleAccess().getWhilerecKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRecursiveWhileRuleAccess().getGuardTermParserRuleCall_1_0());
				}
				lv_guard_1_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecursiveWhileRuleRule());
					}
					set(
						$current,
						"guard",
						lv_guard_1_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='do'
		{
			newLeafNode(otherlv_2, grammarAccess.getRecursiveWhileRuleAccess().getDoKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRecursiveWhileRuleAccess().getRuleRuleParserRuleCall_3_0());
				}
				lv_rule_3_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRecursiveWhileRuleRule());
					}
					set(
						$current,
						"rule",
						lv_rule_3_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIterativeWhileRule
entryRuleIterativeWhileRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIterativeWhileRuleRule()); }
	iv_ruleIterativeWhileRule=ruleIterativeWhileRule
	{ $current=$iv_ruleIterativeWhileRule.current; }
	EOF;

// Rule IterativeWhileRule
ruleIterativeWhileRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getIterativeWhileRuleAccess().getWhileKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIterativeWhileRuleAccess().getGuardTermParserRuleCall_1_0());
				}
				lv_guard_1_0=ruleTerm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIterativeWhileRuleRule());
					}
					set(
						$current,
						"guard",
						lv_guard_1_0,
						"org.asmeta.xt.AsmetaL.Term");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='do'
		{
			newLeafNode(otherlv_2, grammarAccess.getIterativeWhileRuleAccess().getDoKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIterativeWhileRuleAccess().getRuleRuleParserRuleCall_3_0());
				}
				lv_rule_3_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIterativeWhileRuleRule());
					}
					set(
						$current,
						"rule",
						lv_rule_3_0,
						"org.asmeta.xt.AsmetaL.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulenameofDomain
entryRulenameofDomain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameofDomainRule()); }
	iv_rulenameofDomain=rulenameofDomain
	{ $current=$iv_rulenameofDomain.current; }
	EOF;

// Rule nameofDomain
rulenameofDomain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getNameofDomainAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNameofDomainRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.asmeta.xt.AsmetaL.ID");
			}
		)
	)
;

// Entry rule entryRuleMOD_ID
entryRuleMOD_ID returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMOD_IDRule()); }
	iv_ruleMOD_ID=ruleMOD_ID
	{ $current=$iv_ruleMOD_ID.current.getText(); }
	EOF;

// Rule MOD_ID
ruleMOD_ID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				this_ENUM_ID_0=RULE_ENUM_ID
				{
					$current.merge(this_ENUM_ID_0);
				}
				{
					newLeafNode(this_ENUM_ID_0, grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_0_0_0());
				}
				    |
				this_ID_1=RULE_ID
				{
					$current.merge(this_ID_1);
				}
				{
					newLeafNode(this_ID_1, grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_0_0_1());
				}
			)
			    |
			(
				kw='../'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getMOD_IDAccess().getFullStopFullStopSolidusKeyword_0_1());
				}
			)*
			    |
			(
				kw='./'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getMOD_IDAccess().getFullStopSolidusKeyword_0_2());
				}
			)*
		)?
		(
			(
				this_ENUM_ID_4=RULE_ENUM_ID
				{
					$current.merge(this_ENUM_ID_4);
				}
				{
					newLeafNode(this_ENUM_ID_4, grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_1_0_0());
				}
				    |
				this_ID_5=RULE_ID
				{
					$current.merge(this_ID_5);
				}
				{
					newLeafNode(this_ID_5, grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_1_0_1());
				}
			)
			kw='/'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getMOD_IDAccess().getSolidusKeyword_1_1());
			}
		)*
		(
			this_ENUM_ID_7=RULE_ENUM_ID
			{
				$current.merge(this_ENUM_ID_7);
			}
			{
				newLeafNode(this_ENUM_ID_7, grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_2_0());
			}
			    |
			this_ID_8=RULE_ID
			{
				$current.merge(this_ID_8);
			}
			{
				newLeafNode(this_ID_8, grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_2_1());
			}
		)
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getMOD_IDAccess().getFullStopKeyword_3_0());
			}
			(
				this_ENUM_ID_10=RULE_ENUM_ID
				{
					$current.merge(this_ENUM_ID_10);
				}
				{
					newLeafNode(this_ENUM_ID_10, grammarAccess.getMOD_IDAccess().getENUM_IDTerminalRuleCall_3_1_0());
				}
				    |
				this_ID_11=RULE_ID
				{
					$current.merge(this_ID_11);
				}
				{
					newLeafNode(this_ID_11, grammarAccess.getMOD_IDAccess().getIDTerminalRuleCall_3_1_1());
				}
				    |
				kw='asm'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getMOD_IDAccess().getAsmKeyword_3_1_2());
				}
			)
		)?
	)
;

// Entry rule entryRuleID_VARIABLE
entryRuleID_VARIABLE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getID_VARIABLERule()); }
	iv_ruleID_VARIABLE=ruleID_VARIABLE
	{ $current=$iv_ruleID_VARIABLE.current.getText(); }
	EOF;

// Rule ID_VARIABLE
ruleID_VARIABLE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='$'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getID_VARIABLEAccess().getDollarSignKeyword_0());
		}
		(
			this_ID_1=RULE_ID
			{
				$current.merge(this_ID_1);
			}
			{
				newLeafNode(this_ID_1, grammarAccess.getID_VARIABLEAccess().getIDTerminalRuleCall_1_0());
			}
			    |
			kw='rule'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getID_VARIABLEAccess().getRuleKeyword_1_1());
			}
			    |
			kw='agent'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getID_VARIABLEAccess().getAgentKeyword_1_2());
			}
			    |
			kw='seq'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getID_VARIABLEAccess().getSeqKeyword_1_3());
			}
		)
	)
;

fragment RULE_DIGIT : '0'..'9';

RULE_NUMBER_TOKEN : RULE_DIGIT+;

RULE_NATNUMBER : RULE_NUMBER_TOKEN 'n';

RULE_REAL_NUMBER : RULE_NUMBER_TOKEN '.' RULE_NUMBER_TOKEN;

fragment RULE_MAIUSC_ID : 'A'..'Z';

fragment RULE_MIN_ID : 'a'..'z';

fragment RULE_ACCENT_CHR : ('\u00E0'|'\u00E8'|'\u00E9'|'\u00F2'|'\u00EC'|'\u00F9'|'\u00C3');

RULE_ENUM_ID : '^'? RULE_MAIUSC_ID RULE_MAIUSC_ID (RULE_MAIUSC_ID|RULE_DIGIT|'_')*;

fragment RULE_SPECIAL_CHAR : ('!'|'.'|','|':'|'-'|'+'|'$'|'%'|'('|')'|'['|']'|'='|'?'|'^'|'_'|';'|'\u00A8'|'@'|'>'|'<'|'|'|'\\'|'/');

RULE_RULE_ID : 'r_' (RULE_MAIUSC_ID|RULE_MIN_ID|RULE_DIGIT|'_')*;

RULE_ID : '^'? (RULE_MAIUSC_ID|RULE_MIN_ID|'_') (RULE_MAIUSC_ID|RULE_MIN_ID|RULE_DIGIT|'_')*;

RULE_CHAR_LITERAL : '\'' (RULE_MAIUSC_ID|RULE_MIN_ID|RULE_DIGIT|RULE_SPECIAL_CHAR|RULE_ACCENT_CHR)? '\'';

RULE_STRING_LITERAL : '"' (RULE_MAIUSC_ID|RULE_MIN_ID|RULE_DIGIT|RULE_WS|'\''|RULE_SPECIAL_CHAR|RULE_ACCENT_CHR)* '"';

RULE_STRING : '"' ~('"')* '"';

RULE_COMPLEX_NUMBER : RULE_IMMAGINARY_NUMBER;

fragment RULE_IMMAGINARY_NUMBER : 'i' RULE_DIGIT+ ('.' RULE_DIGIT+)?;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'* '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;
